/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./node_modules/@near-js/accounts/lib/account.js":
/*!*******************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/account.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"./node_modules/@near-js/accounts/lib/utils.js\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey, stake, transfer, } = transactions_1.actionCreators;\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_NONCE_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;\n/**\n * This class provides common account related RPC calls including signing transactions with a {@link \"@near-js/crypto\".key_pair.KeyPair | KeyPair}.\n */\nclass Account {\n    constructor(connection, accountId) {\n        /** @hidden */\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    getConnection() {\n        return this.connection;\n    }\n    /**\n     * Returns basic NEAR account information via the `view_account` RPC query method\n     * @see [https://docs.near.org/api/rpc/contracts#view-account](https://docs.near.org/api/rpc/contracts#view-account)\n     */\n    state() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.connection.provider.query({\n                request_type: 'view_account',\n                account_id: this.accountId,\n                finality: 'optimistic'\n            });\n        });\n    }\n    /**\n     * Create a signed transaction which can be broadcast to the network\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions list of actions to perform as part of the transaction\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     */\n    signTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeyInfo = yield this.findAccessKey(receiverId, actions);\n            if (!accessKeyInfo) {\n                throw new types_1.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair exists for this account`, 'KeyNotFound');\n            }\n            const { accessKey } = accessKeyInfo;\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = block.header.hash;\n            const nonce = accessKey.nonce + BigInt(1);\n            return yield (0, transactions_1.signTransaction)(receiverId, nonce, actions, (0, utils_1.baseDecode)(blockHash), this.connection.signer, this.accountId, this.connection.networkId);\n        });\n    }\n    /**\n     * Sign a transaction to perform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider }\n     *\n     * @param options The options for signing and sending the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be performed in the transaction.\n     * @param options.returnError Whether to return an error if the transaction fails.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions, returnError }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let txHash, signedTx;\n            // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n            const result = yield (0, providers_1.exponentialBackoff)(TX_NONCE_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_NONCE_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                [txHash, signedTx] = yield this.signTransaction(receiverId, actions);\n                const publicKey = signedTx.transaction.publicKey;\n                try {\n                    return yield this.connection.provider.sendTransaction(signedTx);\n                }\n                catch (error) {\n                    if (error.type === 'InvalidNonce') {\n                        utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} with new nonce.`);\n                        delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                        return null;\n                    }\n                    if (error.type === 'Expired') {\n                        utils_1.Logger.warn(`Retrying transaction ${receiverId}:${(0, utils_1.baseEncode)(txHash)} due to expired block hash`);\n                        return null;\n                    }\n                    error.context = new types_1.ErrorContext((0, utils_1.baseEncode)(txHash));\n                    throw error;\n                }\n            }));\n            if (!result) {\n                // TODO: This should have different code actually, as means \"transaction not submitted for sure\"\n                throw new types_1.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n            }\n            (0, utils_1.printTxOutcomeLogsAndFailures)({ contractId: signedTx.transaction.receiverId, outcome: result });\n            // Should be falsy if result.status.Failure is null\n            if (!returnError && typeof result.status === 'object' && typeof result.status.Failure === 'object' && result.status.Failure !== null) {\n                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                    throw new types_1.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n                }\n                else {\n                    throw (0, utils_1.parseResultError)(result);\n                }\n            }\n            // TODO: if Tx is Unknown or Started.\n            return result;\n        });\n    }\n    /**\n     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link \"@near-js/keystores\".keystore.KeyStore | Keystore}.\n     *\n     * @todo Find matching access key based on transaction (i.e. receiverId and actions)\n     *\n     * @param receiverId currently unused (see todo)\n     * @param actions currently unused (see todo)\n     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    findAccessKey(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Find matching access key based on transaction (i.e. receiverId and actions)\n            const publicKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            if (!publicKey) {\n                throw new types_1.TypedError(`no matching key pair found in ${this.connection.signer}`, 'PublicKeyNotFound');\n            }\n            const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n            if (cachedAccessKey !== undefined) {\n                return { publicKey, accessKey: cachedAccessKey };\n            }\n            try {\n                const rawAccessKey = yield this.connection.provider.query({\n                    request_type: 'view_access_key',\n                    account_id: this.accountId,\n                    public_key: publicKey.toString(),\n                    finality: 'optimistic'\n                });\n                // store nonce as BigInt to preserve precision on big number\n                const accessKey = Object.assign(Object.assign({}, rawAccessKey), { nonce: BigInt(rawAccessKey.nonce || 0) });\n                // this function can be called multiple times and retrieve the same access key\n                // this checks to see if the access key was already retrieved and cached while\n                // the above network call was in flight. To keep nonce values in line, we return\n                // the cached access key.\n                if (this.accessKeyByPublicKeyCache[publicKey.toString()]) {\n                    return { publicKey, accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()] };\n                }\n                this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n                return { publicKey, accessKey };\n            }\n            catch (e) {\n                if (e.type == 'AccessKeyDoesNotExist') {\n                    return null;\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Create a new account and deploy a contract to it\n     *\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add to the created contract account\n     * @param data The compiled contract code\n     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking\n     */\n    createAndDeployContract(contractId, publicKey, data, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            yield this.signAndSendTransaction({\n                receiverId: contractId,\n                actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey), deployContract(data)]\n            });\n            const contractAccount = new Account(this.connection, contractId);\n            return contractAccount;\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     */\n    sendMoney(receiverId, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId,\n                actions: [transfer(amount)]\n            });\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     */\n    createAccount(newAccountId, publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            return this.signAndSendTransaction({\n                receiverId: newAccountId,\n                actions: [createAccount(), transfer(amount), addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n            });\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     */\n    deleteAccount(beneficiaryId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            utils_1.Logger.log('Deleting an account does not automatically transfer NFTs and FTs to the beneficiary address. Ensure to transfer assets before deleting.');\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deleteAccount(beneficiaryId)]\n            });\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     */\n    deployContract(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deployContract(data)]\n            });\n        });\n    }\n    /** @hidden */\n    encodeJSContractArgs(contractId, method, args) {\n        return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n    }\n    /**\n      * Execute a function call.\n      * @param options The options for the function call.\n      * @param options.contractId The NEAR account ID of the smart contract.\n      * @param options.methodName The name of the method to be called on the smart contract.\n      * @param options.args The arguments to be passed to the method.\n      * @param options.gas The maximum amount of gas to be used for the function call.\n      * @param options.attachedDeposit The amount of NEAR tokens to be attached to the function call.\n      * @param options.walletMeta Metadata for wallet integration.\n      * @param options.walletCallbackUrl The callback URL for wallet integration.\n      * @param options.stringify A function to convert input arguments into bytes array\n      * @param options.jsContract Whether the contract is from JS SDK, automatically encodes args from JS SDK to binary.\n      * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the function call.\n      */\n    functionCall({ contractId, methodName, args = {}, gas = utils_1.DEFAULT_FUNCTION_CALL_GAS, attachedDeposit, walletMeta, walletCallbackUrl, stringify, jsContract }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.validateArgs(args);\n            let functionCallArgs;\n            if (jsContract) {\n                const encodedArgs = this.encodeJSContractArgs(contractId, methodName, JSON.stringify(args));\n                functionCallArgs = ['call_js_contract', encodedArgs, gas, attachedDeposit, null, true];\n            }\n            else {\n                const stringifyArg = stringify === undefined ? transactions_1.stringifyJsonOrBytes : stringify;\n                functionCallArgs = [methodName, args, gas, attachedDeposit, stringifyArg, false];\n            }\n            return this.signAndSendTransaction({\n                receiverId: jsContract ? this.connection.jsvmAccountId : contractId,\n                // eslint-disable-next-line prefer-spread\n                actions: [functionCall.apply(void 0, functionCallArgs)],\n                walletMeta,\n                walletCallbackUrl\n            });\n        });\n    }\n    /**\n     * @see [https://docs.near.org/concepts/basics/accounts/access-keys](https://docs.near.org/concepts/basics/accounts/access-keys)\n     * @todo expand this API to support more options.\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     */\n    addKey(publicKey, contractId, methodNames, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!methodNames) {\n                methodNames = [];\n            }\n            if (!Array.isArray(methodNames)) {\n                methodNames = [methodNames];\n            }\n            let accessKey;\n            if (!contractId) {\n                accessKey = fullAccessKey();\n            }\n            else {\n                accessKey = functionCallAccessKey(contractId, methodNames, amount);\n            }\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [addKey(crypto_1.PublicKey.from(publicKey), accessKey)]\n            });\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deleteKey(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [deleteKey(crypto_1.PublicKey.from(publicKey))]\n            });\n        });\n    }\n    /**\n     * @see [https://near-nodes.io/validator/staking-and-delegation](https://near-nodes.io/validator/staking-and-delegation)\n     *\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     */\n    stake(publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions: [stake(amount, crypto_1.PublicKey.from(publicKey))]\n            });\n        });\n    }\n    /**\n     * Compose and sign a SignedDelegate action to be executed in a transaction on behalf of this Account instance\n     *\n     * @param options Options for the transaction.\n     * @param options.actions Actions to be included in the meta transaction\n     * @param options.blockHeightTtl Number of blocks past the current block height for which the SignedDelegate action may be included in a meta transaction\n     * @param options.receiverId Receiver account of the meta transaction\n     */\n    signedDelegate({ actions, blockHeightTtl, receiverId, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { provider, signer } = this.connection;\n            const { header } = yield provider.block({ finality: 'final' });\n            const { accessKey, publicKey } = yield this.findAccessKey(null, null);\n            const delegateAction = (0, transactions_1.buildDelegateAction)({\n                actions,\n                maxBlockHeight: BigInt(header.height) + BigInt(blockHeightTtl),\n                nonce: BigInt(accessKey.nonce) + BigInt(1),\n                publicKey,\n                receiverId,\n                senderId: this.accountId,\n            });\n            const { signedDelegateAction } = yield (0, transactions_1.signDelegateAction)({\n                delegateAction,\n                signer: {\n                    sign: (message) => __awaiter(this, void 0, void 0, function* () {\n                        const { signature } = yield signer.signMessage(message, delegateAction.senderId, this.connection.networkId);\n                        return signature;\n                    }),\n                }\n            });\n            return signedDelegateAction;\n        });\n    }\n    /** @hidden */\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new types_1.PositionalArgsError();\n        }\n    }\n    /**\n     * Invoke a contract view function using the RPC API.\n     * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n     *\n     * @param options Function call options.\n     * @param options.contractId NEAR account where the contract is deployed\n     * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param options.args Any arguments to the view contract method, wrapped in JSON\n     * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n     * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n     * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n     * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     * @returns {Promise<any>}\n     */\n    viewFunction(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_2.viewFunction)(this.connection, options);\n        });\n    }\n    /**\n     * Returns the state (key value pairs) of this account's contract based on the key prefix.\n     * Pass an empty string for prefix if you would like to return the entire state.\n     * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n     *\n     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n     * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n     */\n    viewState(prefix, blockQuery = { finality: 'optimistic' }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, utils_2.viewState)(this.connection, this.accountId, prefix, blockQuery);\n        });\n    }\n    /**\n     * Get all access keys for the account\n     * @see [https://docs.near.org/api/rpc/access-keys#view-access-key-list](https://docs.near.org/api/rpc/access-keys#view-access-key-list)\n     */\n    getAccessKeys() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connection.provider.query({\n                request_type: 'view_access_key_list',\n                account_id: this.accountId,\n                finality: 'optimistic'\n            });\n            // Replace raw nonce into a new BigInt\n            return (_a = response === null || response === void 0 ? void 0 : response.keys) === null || _a === void 0 ? void 0 : _a.map((key) => (Object.assign(Object.assign({}, key), { access_key: Object.assign(Object.assign({}, key.access_key), { nonce: BigInt(key.access_key.nonce) }) })));\n        });\n    }\n    /**\n     * Returns a list of authorized apps\n     * @todo update the response value to return all the different keys, not just app keys.\n     */\n    getAccountDetails() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: update the response value to return all the different keys, not just app keys.\n            // Also if we need this function, or getAccessKeys is good enough.\n            const accessKeys = yield this.getAccessKeys();\n            const authorizedApps = accessKeys\n                .filter(item => item.access_key.permission !== 'FullAccess')\n                .map(item => {\n                const perm = item.access_key.permission;\n                return {\n                    contractId: perm.FunctionCall.receiver_id,\n                    amount: perm.FunctionCall.allowance,\n                    publicKey: item.public_key,\n                };\n            });\n            return { authorizedApps };\n        });\n    }\n    /**\n     * Returns calculated account balance\n     */\n    getAccountBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const protocolConfig = yield this.connection.provider.experimental_protocolConfig({ finality: 'final' });\n            const state = yield this.state();\n            const costPerByte = BigInt(protocolConfig.runtime_config.storage_amount_per_byte);\n            const stateStaked = BigInt(state.storage_usage) * costPerByte;\n            const staked = BigInt(state.locked);\n            const totalBalance = BigInt(state.amount) + staked;\n            const availableBalance = totalBalance - (staked > stateStaked ? staked : stateStaked);\n            return {\n                total: totalBalance.toString(),\n                stateStaked: stateStaked.toString(),\n                staked: staked.toString(),\n                available: availableBalance.toString()\n            };\n        });\n    }\n    /**\n     * Returns the NEAR tokens balance and validators of a given account that is delegated to the staking pools that are part of the validators set in the current epoch.\n     *\n     * NOTE: If the tokens are delegated to a staking pool that is currently on pause or does not have enough tokens to participate in validation, they won't be accounted for.\n     * @returns {Promise<ActiveDelegatedStakeBalance>}\n     */\n    getActiveDelegatedStakeBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = block.header.hash;\n            const epochId = block.header.epoch_id;\n            const { current_validators, next_validators, current_proposals } = yield this.connection.provider.validators(epochId);\n            const pools = new Set();\n            [...current_validators, ...next_validators, ...current_proposals]\n                .forEach((validator) => pools.add(validator.account_id));\n            const uniquePools = [...pools];\n            const promises = uniquePools\n                .map((validator) => (this.viewFunction({\n                contractId: validator,\n                methodName: 'get_account_total_balance',\n                args: { account_id: this.accountId },\n                blockQuery: { blockId: blockHash }\n            })));\n            const results = yield Promise.allSettled(promises);\n            const hasTimeoutError = results.some((result) => {\n                if (result.status === 'rejected' && result.reason.type === 'TimeoutError') {\n                    return true;\n                }\n                return false;\n            });\n            // When RPC is down and return timeout error, throw error\n            if (hasTimeoutError) {\n                throw new Error('Failed to get delegated stake balance');\n            }\n            const summary = results.reduce((result, state, index) => {\n                const validatorId = uniquePools[index];\n                if (state.status === 'fulfilled') {\n                    const currentBN = BigInt(state.value);\n                    if (currentBN !== BigInt(0)) {\n                        return Object.assign(Object.assign({}, result), { stakedValidators: [...result.stakedValidators, { validatorId, amount: currentBN.toString() }], total: result.total + currentBN });\n                    }\n                }\n                if (state.status === 'rejected') {\n                    return Object.assign(Object.assign({}, result), { failedValidators: [...result.failedValidators, { validatorId, error: state.reason }] });\n                }\n                return result;\n            }, { stakedValidators: [], failedValidators: [], total: BigInt(0) });\n            return Object.assign(Object.assign({}, summary), { total: summary.total.toString() });\n        });\n    }\n}\nexports.Account = Account;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/account.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/account_2fa.js":
/*!***********************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/account_2fa.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account2FA = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst account_multisig_1 = __webpack_require__(/*! ./account_multisig */ \"./node_modules/@near-js/accounts/lib/account_multisig.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/lib/constants.js\");\nconst types_2 = __webpack_require__(/*! ./types */ \"./node_modules/@near-js/accounts/lib/types.js\");\nconst { addKey, deleteKey, deployContract, fullAccessKey, functionCall, functionCallAccessKey } = transactions_1.actionCreators;\nclass Account2FA extends account_multisig_1.AccountMultisig {\n    constructor(connection, accountId, options) {\n        super(connection, accountId, options);\n        this.helperUrl = 'https://helper.testnet.near.org';\n        this.helperUrl = options.helperUrl || this.helperUrl;\n        this.storage = options.storage;\n        this.sendCode = options.sendCode || this.sendCodeDefault;\n        this.getCode = options.getCode || this.getCodeDefault;\n        this.verifyCode = options.verifyCode || this.verifyCodeDefault;\n        this.onConfirmResult = options.onConfirmResult;\n    }\n    /**\n     * Sign a transaction to preform a list of actions and broadcast it using the RPC API.\n     * @see {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider.sendTransaction | JsonRpcProvider.sendTransaction}\n     *\n     * @param options Options for the transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.signAndSendTransaction.call(this, { receiverId, actions });\n            // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?\n            yield this.sendCode();\n            const result = yield this.promptAndVerify();\n            if (this.onConfirmResult) {\n                yield this.onConfirmResult(result);\n            }\n            return result;\n        });\n    }\n    // default helpers for CH deployments of multisig\n    /**\n     * Deploy a multisig contract with 2FA and handle the deployment process.\n     * @param contractBytes - The bytecode of the multisig contract.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deployment.\n     */\n    deployMultisig(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransactionWithAccount: { get: () => super.signAndSendTransactionWithAccount }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const seedOrLedgerKey = (yield this.getRecoveryMethods()).data\n                .filter(({ kind, publicKey }) => (kind === 'phrase' || kind === 'ledger') && publicKey !== null)\n                .map((rm) => rm.publicKey);\n            const fak2lak = (yield this.getAccessKeys())\n                .filter(({ public_key, access_key: { permission } }) => permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key))\n                .map((ak) => ak.public_key)\n                .map(toPK);\n            const confirmOnlyKey = toPK((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            const newArgs = Buffer.from(JSON.stringify({ 'num_confirmations': 2 }));\n            const actions = [\n                ...fak2lak.map((pk) => deleteKey(pk)),\n                ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, constants_1.MULTISIG_CHANGE_METHODS, null))),\n                addKey(confirmOnlyKey, functionCallAccessKey(accountId, constants_1.MULTISIG_CONFIRM_METHODS, null)),\n                deployContract(contractBytes),\n            ];\n            const newFunctionCallActionBatch = actions.concat(functionCall('new', newArgs, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT));\n            utils_1.Logger.log('deploying multisig contract for', accountId);\n            const { stateStatus: multisigStateStatus } = yield this.checkMultisigCodeAndStateStatus(contractBytes);\n            switch (multisigStateStatus) {\n                case types_2.MultisigStateStatus.STATE_NOT_INITIALIZED:\n                    return yield _super.signAndSendTransactionWithAccount.call(this, accountId, newFunctionCallActionBatch);\n                case types_2.MultisigStateStatus.VALID_STATE:\n                    return yield _super.signAndSendTransactionWithAccount.call(this, accountId, actions);\n                case types_2.MultisigStateStatus.INVALID_STATE:\n                    throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState');\n                default:\n                    throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n            }\n        });\n    }\n    /**\n     * Disable 2FA with the option to clean up contract state.\n     * @param options Options for disabling 2FA.\n     * @param options.contractBytes The bytecode of the contract to deploy.\n     * @param options.cleanupContractBytes The bytecode of the cleanup contract (optional).\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    disableWithFAK({ contractBytes, cleanupContractBytes }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let cleanupActions = [];\n            if (cleanupContractBytes) {\n                yield this.deleteAllRequests().catch(e => e);\n                cleanupActions = yield this.get2faDisableCleanupActions(cleanupContractBytes);\n            }\n            const keyConversionActions = yield this.get2faDisableKeyConversionActions();\n            const actions = [\n                ...cleanupActions,\n                ...keyConversionActions,\n                deployContract(contractBytes)\n            ];\n            const accessKeyInfo = yield this.findAccessKey(this.accountId, actions);\n            if (accessKeyInfo && accessKeyInfo.accessKey && accessKeyInfo.accessKey.permission !== 'FullAccess') {\n                throw new types_1.TypedError('No full access key found in keystore. Unable to bypass multisig', 'NoFAKFound');\n            }\n            return this.signAndSendTransactionWithAccount(this.accountId, actions);\n        });\n    }\n    /**\n     * Retrieves cleanup actions for disabling 2FA.\n     * @param cleanupContractBytes - The bytecode of the cleanup contract.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of cleanup actions.\n     */\n    get2faDisableCleanupActions(cleanupContractBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentAccountState = yield this.viewState('').catch(error => {\n                const cause = error.cause && error.cause.name;\n                if (cause == 'NO_CONTRACT_CODE') {\n                    return [];\n                }\n                throw cause == 'TOO_LARGE_CONTRACT_STATE'\n                    ? new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account has existing state.`, 'ContractHasExistingState')\n                    : error;\n            });\n            const currentAccountStateKeys = currentAccountState.map(({ key }) => key.toString('base64'));\n            return currentAccountState.length ? [\n                deployContract(cleanupContractBytes),\n                functionCall('clean', { keys: currentAccountStateKeys }, constants_1.MULTISIG_GAS, BigInt('0'))\n            ] : [];\n        });\n    }\n    /**\n     * Retrieves key conversion actions for disabling 2FA.\n     * @returns {Promise<Action[]>} - A promise that resolves to an array of key conversion actions.\n     */\n    get2faDisableKeyConversionActions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const accessKeys = yield this.getAccessKeys();\n            const lak2fak = accessKeys\n                .filter(({ access_key }) => access_key.permission !== 'FullAccess')\n                .filter(({ access_key }) => {\n                const perm = access_key.permission.FunctionCall;\n                return perm.receiver_id === accountId &&\n                    perm.method_names.length === 4 &&\n                    perm.method_names.includes('add_request_and_confirm');\n            });\n            const confirmOnlyKey = crypto_1.PublicKey.from((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            return [\n                deleteKey(confirmOnlyKey),\n                ...lak2fak.map(({ public_key }) => deleteKey(crypto_1.PublicKey.from(public_key))),\n                ...lak2fak.map(({ public_key }) => addKey(crypto_1.PublicKey.from(public_key), fullAccessKey()))\n            ];\n        });\n    }\n    /**\n     * This method converts LAKs back to FAKs, clears state and deploys an 'empty' contract (contractBytes param)\n     * @param [contractBytes]{@link https://github.com/near/near-wallet/blob/master/packages/frontend/src/wasm/main.wasm?raw=true}\n     * @param [cleanupContractBytes]{@link https://github.com/near/core-contracts/blob/master/state-manipulation/res/state_cleanup.wasm?raw=true}\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the operation.\n     */\n    disable(contractBytes, cleanupContractBytes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { stateStatus } = yield this.checkMultisigCodeAndStateStatus();\n            if (stateStatus !== types_2.MultisigStateStatus.VALID_STATE && stateStatus !== types_2.MultisigStateStatus.STATE_NOT_INITIALIZED) {\n                throw new types_1.TypedError(`Can not deploy a contract to account ${this.accountId} on network ${this.connection.networkId}, the account state could not be verified.`, 'ContractStateUnknown');\n            }\n            let deleteAllRequestsError;\n            yield this.deleteAllRequests().catch(e => deleteAllRequestsError = e);\n            const cleanupActions = yield this.get2faDisableCleanupActions(cleanupContractBytes).catch(e => {\n                if (e.type === 'ContractHasExistingState') {\n                    throw deleteAllRequestsError || e;\n                }\n                throw e;\n            });\n            const actions = [\n                ...cleanupActions,\n                ...(yield this.get2faDisableKeyConversionActions()),\n                deployContract(contractBytes),\n            ];\n            utils_1.Logger.log('disabling 2fa for', this.accountId);\n            return yield this.signAndSendTransaction({\n                receiverId: this.accountId,\n                actions\n            });\n        });\n    }\n    /**\n     * Default implementation for sending the 2FA code.\n     * @returns {Promise<string>} - A promise that resolves to the request ID.\n     */\n    sendCodeDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const { requestId } = this.getRequest();\n            const method = yield this.get2faMethod();\n            yield this.postSignedJson('/2fa/send', {\n                accountId,\n                method,\n                requestId,\n            });\n            return requestId;\n        });\n    }\n    getCodeDefault() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is \"email\" or \"phone\".');\n        });\n    }\n    /**\n     * Prompts the user to enter and verify the 2FA code.\n     * @returns {Promise<any>} - A promise that resolves to the verification result.\n     */\n    promptAndVerify() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const method = yield this.get2faMethod();\n            const securityCode = yield this.getCode(method);\n            try {\n                const result = yield this.verifyCode(securityCode);\n                // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)\n                return result;\n            }\n            catch (e) {\n                utils_1.Logger.warn('Error validating security code:', e);\n                if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) {\n                    return yield this.promptAndVerify();\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Verify the 2FA code using the default method.\n     * @param securityCode - The security code to verify.\n     * @returns {Promise<any>} A promise that resolves to the verification result.\n     */\n    verifyCodeDefault(securityCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const request = this.getRequest();\n            if (!request) {\n                throw new Error('no request pending');\n            }\n            const { requestId } = request;\n            return yield this.postSignedJson('/2fa/verify', {\n                accountId,\n                securityCode,\n                requestId\n            });\n        });\n    }\n    /**\n     * Retrieves recovery methods for the account.\n     * @returns {Promise<{ accountId: string, data: any }>} - A promise that resolves to recovery methods data.\n     */\n    getRecoveryMethods() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            return {\n                accountId,\n                data: yield this.postSignedJson('/account/recoveryMethods', { accountId })\n            };\n        });\n    }\n    /**\n     * Gets the 2FA method (kind and detail).\n     * @returns {Promise<{ kind: string, detail: string }>} A promise that resolves to the 2FA method.\n     */\n    get2faMethod() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { data } = yield this.getRecoveryMethods();\n            if (data && data.length) {\n                data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n            }\n            if (!data)\n                return null;\n            const { kind, detail } = data;\n            return { kind, detail };\n        });\n    }\n    /**\n    * Generates a signature for the latest finalized block.\n    * @returns {Promise<{ blockNumber: string, blockNumberSignature: string }>} - A promise that resolves to the signature information.\n    */\n    signatureFor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockNumber = block.header.height.toString();\n            const signed = yield this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, this.connection.networkId);\n            const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n            return { blockNumber, blockNumberSignature };\n        });\n    }\n    /**\n    * Sends a signed JSON request to a specified path.\n    * @param path - The path for the request.\n    * @param body - The request body.\n    * @returns {Promise<any>} - A promise that resolves to the response from the helper.\n    */\n    postSignedJson(path, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield (0, providers_1.fetchJson)(this.helperUrl + path, JSON.stringify(Object.assign(Object.assign({}, body), (yield this.signatureFor()))));\n        });\n    }\n}\nexports.Account2FA = Account2FA;\n// helpers\nconst toPK = (pk) => crypto_1.PublicKey.from(pk);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/account_2fa.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/account_creator.js":
/*!***************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/account_creator.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js\");\n/**\n * Account creator provides an interface for implementations to actually create accounts\n */\nclass AccountCreator {\n}\nexports.AccountCreator = AccountCreator;\nclass LocalAccountCreator extends AccountCreator {\n    constructor(masterAccount, initialBalance) {\n        super();\n        this.masterAccount = masterAccount;\n        this.initialBalance = initialBalance;\n    }\n    /**\n     * Creates an account using a masterAccount, meaning the new account is created from an existing account\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    createAccount(newAccountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);\n        });\n    }\n}\nexports.LocalAccountCreator = LocalAccountCreator;\nclass UrlAccountCreator extends AccountCreator {\n    constructor(connection, helperUrl) {\n        super();\n        this.connection = connection;\n        this.helperUrl = helperUrl;\n    }\n    /**\n     * Creates an account using a helperUrl\n     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository\n     * @param newAccountId The name of the NEAR account to be created\n     * @param publicKey The public key from the masterAccount used to create this account\n     * @returns {Promise<void>}\n     */\n    createAccount(newAccountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield (0, providers_1.fetchJson)(`${this.helperUrl}/account`, JSON.stringify({ newAccountId, newAccountPublicKey: publicKey.toString() }));\n        });\n    }\n}\nexports.UrlAccountCreator = UrlAccountCreator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2FjY291bnRfY3JlYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCLEdBQUcsMkJBQTJCLEdBQUcsc0JBQXNCO0FBQ2hGLG9CQUFvQixtQkFBTyxDQUFDLHlHQUFvQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsZUFBZSw0QkFBNEIseURBQXlEO0FBQ3BKLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUJBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvYWNjb3VudF9jcmVhdG9yLmpzP2JlNTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVXJsQWNjb3VudENyZWF0b3IgPSBleHBvcnRzLkxvY2FsQWNjb3VudENyZWF0b3IgPSBleHBvcnRzLkFjY291bnRDcmVhdG9yID0gdm9pZCAwO1xuY29uc3QgcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvcHJvdmlkZXJzXCIpO1xuLyoqXG4gKiBBY2NvdW50IGNyZWF0b3IgcHJvdmlkZXMgYW4gaW50ZXJmYWNlIGZvciBpbXBsZW1lbnRhdGlvbnMgdG8gYWN0dWFsbHkgY3JlYXRlIGFjY291bnRzXG4gKi9cbmNsYXNzIEFjY291bnRDcmVhdG9yIHtcbn1cbmV4cG9ydHMuQWNjb3VudENyZWF0b3IgPSBBY2NvdW50Q3JlYXRvcjtcbmNsYXNzIExvY2FsQWNjb3VudENyZWF0b3IgZXh0ZW5kcyBBY2NvdW50Q3JlYXRvciB7XG4gICAgY29uc3RydWN0b3IobWFzdGVyQWNjb3VudCwgaW5pdGlhbEJhbGFuY2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5tYXN0ZXJBY2NvdW50ID0gbWFzdGVyQWNjb3VudDtcbiAgICAgICAgdGhpcy5pbml0aWFsQmFsYW5jZSA9IGluaXRpYWxCYWxhbmNlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGFjY291bnQgdXNpbmcgYSBtYXN0ZXJBY2NvdW50LCBtZWFuaW5nIHRoZSBuZXcgYWNjb3VudCBpcyBjcmVhdGVkIGZyb20gYW4gZXhpc3RpbmcgYWNjb3VudFxuICAgICAqIEBwYXJhbSBuZXdBY2NvdW50SWQgVGhlIG5hbWUgb2YgdGhlIE5FQVIgYWNjb3VudCB0byBiZSBjcmVhdGVkXG4gICAgICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSBmcm9tIHRoZSBtYXN0ZXJBY2NvdW50IHVzZWQgdG8gY3JlYXRlIHRoaXMgYWNjb3VudFxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICAgICAqL1xuICAgIGNyZWF0ZUFjY291bnQobmV3QWNjb3VudElkLCBwdWJsaWNLZXkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHlpZWxkIHRoaXMubWFzdGVyQWNjb3VudC5jcmVhdGVBY2NvdW50KG5ld0FjY291bnRJZCwgcHVibGljS2V5LCB0aGlzLmluaXRpYWxCYWxhbmNlKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Mb2NhbEFjY291bnRDcmVhdG9yID0gTG9jYWxBY2NvdW50Q3JlYXRvcjtcbmNsYXNzIFVybEFjY291bnRDcmVhdG9yIGV4dGVuZHMgQWNjb3VudENyZWF0b3Ige1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rpb24sIGhlbHBlclVybCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb24gPSBjb25uZWN0aW9uO1xuICAgICAgICB0aGlzLmhlbHBlclVybCA9IGhlbHBlclVybDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBhY2NvdW50IHVzaW5nIGEgaGVscGVyVXJsXG4gICAgICogVGhpcyBpcyBbaG9zdGVkIGhlcmVdKGh0dHBzOi8vaGVscGVyLm5lYXJwcm90b2NvbC5jb20pIG9yIHNldCB1cCBsb2NhbGx5IHdpdGggdGhlIFtuZWFyLWNvbnRyYWN0LWhlbHBlcl0oaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9uZWFyLWNvbnRyYWN0LWhlbHBlcikgcmVwb3NpdG9yeVxuICAgICAqIEBwYXJhbSBuZXdBY2NvdW50SWQgVGhlIG5hbWUgb2YgdGhlIE5FQVIgYWNjb3VudCB0byBiZSBjcmVhdGVkXG4gICAgICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSBmcm9tIHRoZSBtYXN0ZXJBY2NvdW50IHVzZWQgdG8gY3JlYXRlIHRoaXMgYWNjb3VudFxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxuICAgICAqL1xuICAgIGNyZWF0ZUFjY291bnQobmV3QWNjb3VudElkLCBwdWJsaWNLZXkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHlpZWxkICgwLCBwcm92aWRlcnNfMS5mZXRjaEpzb24pKGAke3RoaXMuaGVscGVyVXJsfS9hY2NvdW50YCwgSlNPTi5zdHJpbmdpZnkoeyBuZXdBY2NvdW50SWQsIG5ld0FjY291bnRQdWJsaWNLZXk6IHB1YmxpY0tleS50b1N0cmluZygpIH0pKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5VcmxBY2NvdW50Q3JlYXRvciA9IFVybEFjY291bnRDcmVhdG9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/account_creator.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/account_multisig.js":
/*!****************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/account_multisig.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountMultisig = void 0;\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"./node_modules/@near-js/accounts/lib/account.js\");\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@near-js/accounts/lib/types.js\");\nconst { deployContract, functionCall } = transactions_1.actionCreators;\nvar MultisigCodeStatus;\n(function (MultisigCodeStatus) {\n    MultisigCodeStatus[MultisigCodeStatus[\"INVALID_CODE\"] = 0] = \"INVALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"VALID_CODE\"] = 1] = \"VALID_CODE\";\n    MultisigCodeStatus[MultisigCodeStatus[\"UNKNOWN_CODE\"] = 2] = \"UNKNOWN_CODE\";\n})(MultisigCodeStatus || (MultisigCodeStatus = {}));\n// in memory request cache for node w/o localStorage\nconst storageFallback = {\n    [constants_1.MULTISIG_STORAGE_KEY]: null\n};\nclass AccountMultisig extends account_1.Account {\n    /**\n     * Constructs an instance of the `AccountMultisig` class.\n     * @param connection The NEAR connection object.\n     * @param accountId The NEAR account ID.\n     * @param options Additional options for the multisig account.\n     * @param options.storage Storage to store data related to multisig operations.\n     * @param options.onAddRequestResult Callback function to handle the result of adding a request.\n     */\n    constructor(connection, accountId, options) {\n        super(connection, accountId);\n        this.storage = options.storage;\n        this.onAddRequestResult = options.onAddRequestResult;\n    }\n    /**\n     * Sign and send a transaction with the multisig account as the sender.\n     * @param receiverId - The NEAR account ID of the transaction receiver.\n     * @param actions - The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransactionWithAccount(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            return _super.signAndSendTransaction.call(this, { receiverId, actions });\n        });\n    }\n    /**\n     * Sign and send a multisig transaction to add a request and confirm it.\n     * @param options Options for the multisig transaction.\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions The list of actions to be included in the transaction.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the transaction.\n     */\n    signAndSendTransaction({ receiverId, actions }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const args = Buffer.from(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            }));\n            let result;\n            try {\n                result = yield _super.signAndSendTransaction.call(this, {\n                    receiverId: accountId,\n                    actions: [\n                        functionCall('add_request_and_confirm', args, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                    ]\n                });\n            }\n            catch (e) {\n                if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {\n                    yield this.deleteUnconfirmedRequests();\n                    return yield this.signAndSendTransaction({ receiverId, actions });\n                }\n                throw e;\n            }\n            // TODO: Are following even needed? Seems like it throws on error already\n            if (!result.status) {\n                throw new Error('Request failed');\n            }\n            const status = Object.assign({}, result.status);\n            if (!status.SuccessValue || typeof status.SuccessValue !== 'string') {\n                throw new Error('Request failed');\n            }\n            this.setRequest({\n                accountId,\n                actions,\n                requestId: parseInt(Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)\n            });\n            if (this.onAddRequestResult) {\n                yield this.onAddRequestResult(result);\n            }\n            // NOTE there is no await on purpose to avoid blocking for 2fa\n            this.deleteUnconfirmedRequests();\n            return result;\n        });\n    }\n    /**\n     * This method submits a canary transaction that is expected to always fail in order to determine whether the contract currently has valid multisig state\n     * and whether it is initialized. The canary transaction attempts to delete a request at index u32_max and will go through if a request exists at that index.\n     * a u32_max + 1 and -1 value cannot be used for the canary due to expected u32 error thrown before deserialization attempt.\n     * @param contractBytes The bytecode of the multisig contract.\n     * @returns {Promise<{ codeStatus: MultisigCodeStatus; stateStatus: MultisigStateStatus }>} A promise that resolves to the status of the code and state.\n     */\n    checkMultisigCodeAndStateStatus(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const u32_max = 4294967295;\n            const validCodeStatusIfNoDeploy = contractBytes ? MultisigCodeStatus.UNKNOWN_CODE : MultisigCodeStatus.VALID_CODE;\n            try {\n                if (contractBytes) {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId, actions: [\n                            deployContract(contractBytes),\n                            functionCall('delete_request', { request_id: u32_max }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)\n                        ]\n                    });\n                }\n                else {\n                    yield this.deleteRequest(u32_max);\n                }\n                return { codeStatus: MultisigCodeStatus.VALID_CODE, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n            }\n            catch (e) {\n                if (new RegExp(types_1.MultisigDeleteRequestRejectionError.CANNOT_DESERIALIZE_STATE).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.INVALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.MULTISIG_NOT_INITIALIZED).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.STATE_NOT_INITIALIZED };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.NO_SUCH_REQUEST).test(e && e.kind && e.kind.ExecutionError)) {\n                    return { codeStatus: validCodeStatusIfNoDeploy, stateStatus: types_1.MultisigStateStatus.VALID_STATE };\n                }\n                else if (new RegExp(types_1.MultisigDeleteRequestRejectionError.METHOD_NOT_FOUND).test(e && e.message)) {\n                    // not reachable if transaction included a deploy\n                    return { codeStatus: MultisigCodeStatus.INVALID_CODE, stateStatus: types_1.MultisigStateStatus.UNKNOWN_STATE };\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * Delete a multisig request by its ID.\n     * @param request_id The ID of the multisig request to be deleted.\n     * @returns {Promise<FinalExecutionOutcome>} A promise that resolves to the final execution outcome of the deletion.\n     */\n    deleteRequest(request_id) {\n        return super.signAndSendTransaction({\n            receiverId: this.accountId,\n            actions: [functionCall('delete_request', { request_id }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n        });\n    }\n    /**\n     * Delete all multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when all requests are deleted.\n     */\n    deleteAllRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request_ids = yield this.getRequestIds();\n            if (request_ids.length) {\n                yield Promise.all(request_ids.map((id) => this.deleteRequest(id)));\n            }\n        });\n    }\n    /**\n     * Delete unconfirmed multisig requests associated with the account.\n     * @returns {Promise<void>} A promise that resolves when unconfirmed requests are deleted.\n     */\n    deleteUnconfirmedRequests() {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Delete in batch, don't delete unexpired\n            // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)\n            const request_ids = yield this.getRequestIds();\n            const { requestId } = this.getRequest();\n            for (const requestIdToDelete of request_ids) {\n                if (requestIdToDelete == requestId) {\n                    continue;\n                }\n                try {\n                    yield _super.signAndSendTransaction.call(this, {\n                        receiverId: this.accountId,\n                        actions: [functionCall('delete_request', { request_id: requestIdToDelete }, constants_1.MULTISIG_GAS, constants_1.MULTISIG_DEPOSIT)]\n                    });\n                }\n                catch (e) {\n                    utils_1.Logger.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Read requests from state to allow filtering by expiration time\n            // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84\n            return this.viewFunction({\n                contractId: this.accountId,\n                methodName: 'list_request_ids',\n            });\n        });\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(constants_1.MULTISIG_STORAGE_KEY) || '{}');\n        }\n        return storageFallback[constants_1.MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(constants_1.MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[constants_1.MULTISIG_STORAGE_KEY] = data;\n    }\n}\nexports.AccountMultisig = AccountMultisig;\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: constants_1.MULTISIG_ALLOWANCE.toString(),\n                method_names: constants_1.MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/account_multisig.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/connection.js":
/*!**********************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/connection.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\nconst signers_1 = __webpack_require__(/*! @near-js/signers */ \"./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/index.js\");\nconst providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js\");\n/**\n * @param config Contains connection info details\n * @returns {Provider}\n */\nfunction getProvider(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'JsonRpcProvider': return new providers_1.JsonRpcProvider(Object.assign({}, config.args));\n        case 'FailoverRpcProvider': {\n            const providers = ((config === null || config === void 0 ? void 0 : config.args) || []).map((arg) => new providers_1.JsonRpcProvider(arg));\n            return new providers_1.FailoverRpcProvider(providers);\n        }\n        default: throw new Error(`Unknown provider type ${config.type}`);\n    }\n}\n/**\n * @param config Contains connection info details\n * @returns {Signer}\n */\nfunction getSigner(config) {\n    switch (config.type) {\n        case undefined:\n            return config;\n        case 'InMemorySigner': {\n            return new signers_1.InMemorySigner(config.keyStore);\n        }\n        default: throw new Error(`Unknown signer type ${config.type}`);\n    }\n}\n/**\n * Connects an account to a given network via a given provider\n */\nclass Connection {\n    constructor(networkId, provider, signer, jsvmAccountId) {\n        this.networkId = networkId;\n        this.provider = provider;\n        this.signer = signer;\n        this.jsvmAccountId = jsvmAccountId;\n    }\n    getConnection() {\n        return this;\n    }\n    /**\n     * @param config Contains connection info details\n     */\n    static fromConfig(config) {\n        const provider = getProvider(config.provider);\n        const signer = getSigner(config.signer);\n        return new Connection(config.networkId, provider, signer, config.jsvmAccountId);\n    }\n}\nexports.Connection = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLGtCQUFrQixtQkFBTyxDQUFDLHFHQUFrQjtBQUM1QyxvQkFBb0IsbUJBQU8sQ0FBQyx5R0FBb0I7QUFDaEQ7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUZBQXVGO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELFlBQVk7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2Nvbm5lY3Rpb24uanM/MWRmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29ubmVjdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHNpZ25lcnNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9zaWduZXJzXCIpO1xuY29uc3QgcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvcHJvdmlkZXJzXCIpO1xuLyoqXG4gKiBAcGFyYW0gY29uZmlnIENvbnRhaW5zIGNvbm5lY3Rpb24gaW5mbyBkZXRhaWxzXG4gKiBAcmV0dXJucyB7UHJvdmlkZXJ9XG4gKi9cbmZ1bmN0aW9uIGdldFByb3ZpZGVyKGNvbmZpZykge1xuICAgIHN3aXRjaCAoY29uZmlnLnR5cGUpIHtcbiAgICAgICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICBjYXNlICdKc29uUnBjUHJvdmlkZXInOiByZXR1cm4gbmV3IHByb3ZpZGVyc18xLkpzb25ScGNQcm92aWRlcihPYmplY3QuYXNzaWduKHt9LCBjb25maWcuYXJncykpO1xuICAgICAgICBjYXNlICdGYWlsb3ZlclJwY1Byb3ZpZGVyJzoge1xuICAgICAgICAgICAgY29uc3QgcHJvdmlkZXJzID0gKChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuYXJncykgfHwgW10pLm1hcCgoYXJnKSA9PiBuZXcgcHJvdmlkZXJzXzEuSnNvblJwY1Byb3ZpZGVyKGFyZykpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBwcm92aWRlcnNfMS5GYWlsb3ZlclJwY1Byb3ZpZGVyKHByb3ZpZGVycyk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDogdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIHByb3ZpZGVyIHR5cGUgJHtjb25maWcudHlwZX1gKTtcbiAgICB9XG59XG4vKipcbiAqIEBwYXJhbSBjb25maWcgQ29udGFpbnMgY29ubmVjdGlvbiBpbmZvIGRldGFpbHNcbiAqIEByZXR1cm5zIHtTaWduZXJ9XG4gKi9cbmZ1bmN0aW9uIGdldFNpZ25lcihjb25maWcpIHtcbiAgICBzd2l0Y2ggKGNvbmZpZy50eXBlKSB7XG4gICAgICAgIGNhc2UgdW5kZWZpbmVkOlxuICAgICAgICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICAgICAgY2FzZSAnSW5NZW1vcnlTaWduZXInOiB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IHNpZ25lcnNfMS5Jbk1lbW9yeVNpZ25lcihjb25maWcua2V5U3RvcmUpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcihgVW5rbm93biBzaWduZXIgdHlwZSAke2NvbmZpZy50eXBlfWApO1xuICAgIH1cbn1cbi8qKlxuICogQ29ubmVjdHMgYW4gYWNjb3VudCB0byBhIGdpdmVuIG5ldHdvcmsgdmlhIGEgZ2l2ZW4gcHJvdmlkZXJcbiAqL1xuY2xhc3MgQ29ubmVjdGlvbiB7XG4gICAgY29uc3RydWN0b3IobmV0d29ya0lkLCBwcm92aWRlciwgc2lnbmVyLCBqc3ZtQWNjb3VudElkKSB7XG4gICAgICAgIHRoaXMubmV0d29ya0lkID0gbmV0d29ya0lkO1xuICAgICAgICB0aGlzLnByb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgICAgIHRoaXMuc2lnbmVyID0gc2lnbmVyO1xuICAgICAgICB0aGlzLmpzdm1BY2NvdW50SWQgPSBqc3ZtQWNjb3VudElkO1xuICAgIH1cbiAgICBnZXRDb25uZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGNvbmZpZyBDb250YWlucyBjb25uZWN0aW9uIGluZm8gZGV0YWlsc1xuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tQ29uZmlnKGNvbmZpZykge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IGdldFByb3ZpZGVyKGNvbmZpZy5wcm92aWRlcik7XG4gICAgICAgIGNvbnN0IHNpZ25lciA9IGdldFNpZ25lcihjb25maWcuc2lnbmVyKTtcbiAgICAgICAgcmV0dXJuIG5ldyBDb25uZWN0aW9uKGNvbmZpZy5uZXR3b3JrSWQsIHByb3ZpZGVyLCBzaWduZXIsIGNvbmZpZy5qc3ZtQWNjb3VudElkKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbm5lY3Rpb24gPSBDb25uZWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/connection.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/constants.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nexports.MULTISIG_STORAGE_KEY = '__multisigRequest';\nexports.MULTISIG_ALLOWANCE = BigInt((0, utils_1.parseNearAmount)('1'));\n// TODO: Different gas value for different requests (can reduce gas usage dramatically)\nexports.MULTISIG_GAS = BigInt('100000000000000');\nexports.MULTISIG_DEPOSIT = BigInt('0');\nexports.MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexports.MULTISIG_CONFIRM_METHODS = ['confirm'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQ0FBZ0MsR0FBRywrQkFBK0IsR0FBRyx3QkFBd0IsR0FBRyxvQkFBb0IsR0FBRywwQkFBMEIsR0FBRyw0QkFBNEI7QUFDaEwsZ0JBQWdCLG1CQUFPLENBQUMsaUdBQWdCO0FBQ3hDLDRCQUE0QjtBQUM1QiwwQkFBMEI7QUFDMUI7QUFDQSxvQkFBb0I7QUFDcEIsd0JBQXdCO0FBQ3hCLCtCQUErQjtBQUMvQixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9jb25zdGFudHMuanM/MWJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19DSEFOR0VfTUVUSE9EUyA9IGV4cG9ydHMuTVVMVElTSUdfREVQT1NJVCA9IGV4cG9ydHMuTVVMVElTSUdfR0FTID0gZXhwb3J0cy5NVUxUSVNJR19BTExPV0FOQ0UgPSBleHBvcnRzLk1VTFRJU0lHX1NUT1JBR0VfS0VZID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmV4cG9ydHMuTVVMVElTSUdfU1RPUkFHRV9LRVkgPSAnX19tdWx0aXNpZ1JlcXVlc3QnO1xuZXhwb3J0cy5NVUxUSVNJR19BTExPV0FOQ0UgPSBCaWdJbnQoKDAsIHV0aWxzXzEucGFyc2VOZWFyQW1vdW50KSgnMScpKTtcbi8vIFRPRE86IERpZmZlcmVudCBnYXMgdmFsdWUgZm9yIGRpZmZlcmVudCByZXF1ZXN0cyAoY2FuIHJlZHVjZSBnYXMgdXNhZ2UgZHJhbWF0aWNhbGx5KVxuZXhwb3J0cy5NVUxUSVNJR19HQVMgPSBCaWdJbnQoJzEwMDAwMDAwMDAwMDAwMCcpO1xuZXhwb3J0cy5NVUxUSVNJR19ERVBPU0lUID0gQmlnSW50KCcwJyk7XG5leHBvcnRzLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTID0gWydhZGRfcmVxdWVzdCcsICdhZGRfcmVxdWVzdF9hbmRfY29uZmlybScsICdkZWxldGVfcmVxdWVzdCcsICdjb25maXJtJ107XG5leHBvcnRzLk1VTFRJU0lHX0NPTkZJUk1fTUVUSE9EUyA9IFsnY29uZmlybSddO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/contract.js":
/*!********************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/contract.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contract = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst local_view_execution_1 = __webpack_require__(/*! ./local-view-execution */ \"./node_modules/@near-js/accounts/lib/local-view-execution/index.js\");\nconst is_my_json_valid_1 = __importDefault(__webpack_require__(/*! is-my-json-valid */ \"./node_modules/is-my-json-valid/index.js\"));\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"./node_modules/depd/lib/browser/index.js\"));\nconst near_abi_1 = __webpack_require__(/*! near-abi */ \"./node_modules/near-abi/lib/index.js\");\nconst account_1 = __webpack_require__(/*! ./account */ \"./node_modules/@near-js/accounts/lib/account.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/accounts/lib/errors.js\");\nconst utils_2 = __webpack_require__(/*! ./utils */ \"./node_modules/@near-js/accounts/lib/utils.js\");\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        },\n    }[name];\n}\nfunction validateArguments(args, abiFunction, abiRoot) {\n    var _a;\n    if (!isObject(args))\n        return;\n    if (abiFunction.params &&\n        abiFunction.params.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.params.serialization_type);\n    }\n    if (abiFunction.result &&\n        abiFunction.result.serialization_type !== near_abi_1.AbiSerializationType.Json) {\n        throw new errors_1.UnsupportedSerializationError(abiFunction.name, abiFunction.result.serialization_type);\n    }\n    const params = ((_a = abiFunction.params) === null || _a === void 0 ? void 0 : _a.args) || [];\n    for (const p of params) {\n        const arg = args[p.name];\n        const typeSchema = p.type_schema;\n        typeSchema.definitions = abiRoot.body.root_schema.definitions;\n        const validate = (0, is_my_json_valid_1.default)(typeSchema);\n        const valid = validate(arg);\n        if (!valid) {\n            throw new errors_1.ArgumentSchemaError(p.name, validate.errors);\n        }\n    }\n    // Check there are no extra unknown arguments passed\n    for (const argName of Object.keys(args)) {\n        const param = params.find((p) => p.name === argName);\n        if (!param) {\n            throw new errors_1.UnknownArgumentError(argName, params.map((p) => p.name));\n        }\n    }\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === \"[object Object]\";\n/**\n * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#contract](https://docs.near.org/tools/near-api-js/quick-reference#contract)\n * @example\n * ```js\n * import { Contract } from 'near-api-js';\n *\n * async function contractExample() {\n *   const methodOptions = {\n *     viewMethods: ['getMessageByAccountId'],\n *     changeMethods: ['addMessage']\n *   };\n *   const contract = new Contract(\n *     wallet.account(),\n *     'contract-id.testnet',\n *     methodOptions\n *   );\n *\n *   // use a contract view method\n *   const messages = await contract.getMessages({\n *     accountId: 'example-account.testnet'\n *   });\n *\n *   // use a contract change method\n *   await contract.addMessage({\n *      meta: 'some info',\n *      callbackUrl: 'https://example.com/callback',\n *      args: { text: 'my message' },\n *      amount: 1\n *   })\n * }\n * ```\n */\nclass Contract {\n    /**\n     * @param account NEAR account to sign change method transactions\n     * @param contractId NEAR account id where the contract is deployed\n     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`\n     */\n    constructor(connection, contractId, options) {\n        this.connection = connection.getConnection();\n        if (connection instanceof account_1.Account) {\n            const deprecate = (0, depd_1.default)(\"new Contract(account, contractId, options)\");\n            deprecate(\"use `new Contract(connection, contractId, options)` instead\");\n            this.account = connection;\n        }\n        this.contractId = contractId;\n        this.lve = new local_view_execution_1.LocalViewExecution(connection);\n        const { viewMethods = [], changeMethods = [], abi: abiRoot, useLocalViewExecution, } = options;\n        let viewMethodsWithAbi = viewMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        let changeMethodsWithAbi = changeMethods.map((name) => ({\n            name,\n            abi: null,\n        }));\n        if (abiRoot) {\n            if (viewMethodsWithAbi.length > 0 ||\n                changeMethodsWithAbi.length > 0) {\n                throw new errors_1.ConflictingOptions();\n            }\n            viewMethodsWithAbi = abiRoot.body.functions\n                .filter((m) => m.kind === near_abi_1.AbiFunctionKind.View)\n                .map((m) => ({ name: m.name, abi: m }));\n            changeMethodsWithAbi = abiRoot.body.functions\n                .filter((methodAbi) => methodAbi.kind === near_abi_1.AbiFunctionKind.Call)\n                .map((methodAbi) => ({ name: methodAbi.name, abi: methodAbi }));\n        }\n        viewMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length ||\n                        !(isObject(args) || isUint8Array(args)) ||\n                        !isObject(options)) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (abi) {\n                        validateArguments(args, abi, abiRoot);\n                    }\n                    if (useLocalViewExecution) {\n                        try {\n                            return yield this.lve.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                        }\n                        catch (error) {\n                            utils_1.Logger.warn(`Local view execution failed with: \"${error.message}\"`);\n                            utils_1.Logger.warn(`Fallback to normal RPC call`);\n                        }\n                    }\n                    if (this.account) {\n                        return this.account.viewFunction(Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                    }\n                    return (0, utils_2.viewFunction)(this.connection, Object.assign({ contractId: this.contractId, methodName: name, args }, options));\n                })),\n            });\n        });\n        changeMethodsWithAbi.forEach(({ name, abi }) => {\n            Object.defineProperty(this, name, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(name, (...args) => __awaiter(this, void 0, void 0, function* () {\n                    if (args.length &&\n                        (args.length > 3 ||\n                            !(isObject(args[0]) || isUint8Array(args[0])))) {\n                        throw new types_1.PositionalArgsError();\n                    }\n                    if (args.length > 1 || !(args[0] && args[0].args)) {\n                        const deprecate = (0, depd_1.default)(\"contract.methodName(args, gas, amount)\");\n                        deprecate(\"use `contract.methodName({ signerAccount, args, gas?, amount?, callbackUrl?, meta? })` instead\");\n                        args[0] = {\n                            args: args[0],\n                            gas: args[1],\n                            amount: args[2],\n                        };\n                    }\n                    if (abi) {\n                        validateArguments(args[0].args, abi, abiRoot);\n                    }\n                    return this._changeMethod(Object.assign({ methodName: name }, args[0]));\n                })),\n            });\n        });\n    }\n    _changeMethod({ signerAccount, args, methodName, gas, amount, meta, callbackUrl, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            validateBNLike({ gas, amount });\n            const account = this.account || signerAccount;\n            if (!account)\n                throw new Error(`signerAccount must be specified`);\n            const rawResult = yield account.functionCall({\n                contractId: this.contractId,\n                methodName,\n                args,\n                gas,\n                attachedDeposit: amount,\n                walletMeta: meta,\n                walletCallbackUrl: callbackUrl,\n            });\n            return (0, utils_1.getTransactionLastResult)(rawResult);\n        });\n    }\n}\nexports.Contract = Contract;\n/**\n * Throws if an argument is not in BigInt format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = \"number, decimal string or BigInt\";\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && typeof argValue !== \"bigint\" && isNaN(argValue)) {\n            throw new types_1.ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/contract.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/errors.js":
/*!******************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/errors.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConflictingOptions = exports.ArgumentSchemaError = exports.UnknownArgumentError = exports.UnsupportedSerializationError = void 0;\nclass UnsupportedSerializationError extends Error {\n    constructor(methodName, serializationType) {\n        super(`Contract method '${methodName}' is using an unsupported serialization type ${serializationType}`);\n    }\n}\nexports.UnsupportedSerializationError = UnsupportedSerializationError;\nclass UnknownArgumentError extends Error {\n    constructor(actualArgName, expectedArgNames) {\n        super(`Unrecognized argument '${actualArgName}', expected '${JSON.stringify(expectedArgNames)}'`);\n    }\n}\nexports.UnknownArgumentError = UnknownArgumentError;\nclass ArgumentSchemaError extends Error {\n    constructor(argName, errors) {\n        super(`Argument '${argName}' does not conform to the specified ABI schema: '${JSON.stringify(errors)}'`);\n    }\n}\nexports.ArgumentSchemaError = ArgumentSchemaError;\nclass ConflictingOptions extends Error {\n    constructor() {\n        super('Conflicting contract method options have been passed. You can either specify ABI or a list of view/call methods.');\n    }\n}\nexports.ConflictingOptions = ConflictingOptions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEIsR0FBRywyQkFBMkIsR0FBRyw0QkFBNEIsR0FBRyxxQ0FBcUM7QUFDL0g7QUFDQTtBQUNBLGtDQUFrQyxXQUFXLCtDQUErQyxrQkFBa0I7QUFDOUc7QUFDQTtBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0Esd0NBQXdDLGNBQWMsZUFBZSxpQ0FBaUM7QUFDdEc7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0EsMkJBQTJCLFFBQVEsbURBQW1ELHVCQUF1QjtBQUM3RztBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9lcnJvcnMuanM/ZWE0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29uZmxpY3RpbmdPcHRpb25zID0gZXhwb3J0cy5Bcmd1bWVudFNjaGVtYUVycm9yID0gZXhwb3J0cy5Vbmtub3duQXJndW1lbnRFcnJvciA9IGV4cG9ydHMuVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3IgPSB2b2lkIDA7XG5jbGFzcyBVbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXRob2ROYW1lLCBzZXJpYWxpemF0aW9uVHlwZSkge1xuICAgICAgICBzdXBlcihgQ29udHJhY3QgbWV0aG9kICcke21ldGhvZE5hbWV9JyBpcyB1c2luZyBhbiB1bnN1cHBvcnRlZCBzZXJpYWxpemF0aW9uIHR5cGUgJHtzZXJpYWxpemF0aW9uVHlwZX1gKTtcbiAgICB9XG59XG5leHBvcnRzLlVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yID0gVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3I7XG5jbGFzcyBVbmtub3duQXJndW1lbnRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhY3R1YWxBcmdOYW1lLCBleHBlY3RlZEFyZ05hbWVzKSB7XG4gICAgICAgIHN1cGVyKGBVbnJlY29nbml6ZWQgYXJndW1lbnQgJyR7YWN0dWFsQXJnTmFtZX0nLCBleHBlY3RlZCAnJHtKU09OLnN0cmluZ2lmeShleHBlY3RlZEFyZ05hbWVzKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Vbmtub3duQXJndW1lbnRFcnJvciA9IFVua25vd25Bcmd1bWVudEVycm9yO1xuY2xhc3MgQXJndW1lbnRTY2hlbWFFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBlcnJvcnMpIHtcbiAgICAgICAgc3VwZXIoYEFyZ3VtZW50ICcke2FyZ05hbWV9JyBkb2VzIG5vdCBjb25mb3JtIHRvIHRoZSBzcGVjaWZpZWQgQUJJIHNjaGVtYTogJyR7SlNPTi5zdHJpbmdpZnkoZXJyb3JzKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFNjaGVtYUVycm9yID0gQXJndW1lbnRTY2hlbWFFcnJvcjtcbmNsYXNzIENvbmZsaWN0aW5nT3B0aW9ucyBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0NvbmZsaWN0aW5nIGNvbnRyYWN0IG1ldGhvZCBvcHRpb25zIGhhdmUgYmVlbiBwYXNzZWQuIFlvdSBjYW4gZWl0aGVyIHNwZWNpZnkgQUJJIG9yIGEgbGlzdCBvZiB2aWV3L2NhbGwgbWV0aG9kcy4nKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbmZsaWN0aW5nT3B0aW9ucyA9IENvbmZsaWN0aW5nT3B0aW9ucztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.UnsupportedSerializationError = exports.UnknownArgumentError = exports.ConflictingOptions = exports.ArgumentSchemaError = exports.Contract = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.Connection = exports.AccountMultisig = exports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = exports.Account2FA = exports.Account = void 0;\nvar account_1 = __webpack_require__(/*! ./account */ \"./node_modules/@near-js/accounts/lib/account.js\");\nObject.defineProperty(exports, \"Account\", ({ enumerable: true, get: function () { return account_1.Account; } }));\nvar account_2fa_1 = __webpack_require__(/*! ./account_2fa */ \"./node_modules/@near-js/accounts/lib/account_2fa.js\");\nObject.defineProperty(exports, \"Account2FA\", ({ enumerable: true, get: function () { return account_2fa_1.Account2FA; } }));\nvar account_creator_1 = __webpack_require__(/*! ./account_creator */ \"./node_modules/@near-js/accounts/lib/account_creator.js\");\nObject.defineProperty(exports, \"AccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.AccountCreator; } }));\nObject.defineProperty(exports, \"LocalAccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.LocalAccountCreator; } }));\nObject.defineProperty(exports, \"UrlAccountCreator\", ({ enumerable: true, get: function () { return account_creator_1.UrlAccountCreator; } }));\nvar account_multisig_1 = __webpack_require__(/*! ./account_multisig */ \"./node_modules/@near-js/accounts/lib/account_multisig.js\");\nObject.defineProperty(exports, \"AccountMultisig\", ({ enumerable: true, get: function () { return account_multisig_1.AccountMultisig; } }));\nvar connection_1 = __webpack_require__(/*! ./connection */ \"./node_modules/@near-js/accounts/lib/connection.js\");\nObject.defineProperty(exports, \"Connection\", ({ enumerable: true, get: function () { return connection_1.Connection; } }));\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/lib/constants.js\");\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_STORAGE_KEY; } }));\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_ALLOWANCE; } }));\nObject.defineProperty(exports, \"MULTISIG_GAS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_GAS; } }));\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_DEPOSIT; } }));\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_CHANGE_METHODS; } }));\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", ({ enumerable: true, get: function () { return constants_1.MULTISIG_CONFIRM_METHODS; } }));\nvar contract_1 = __webpack_require__(/*! ./contract */ \"./node_modules/@near-js/accounts/lib/contract.js\");\nObject.defineProperty(exports, \"Contract\", ({ enumerable: true, get: function () { return contract_1.Contract; } }));\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/accounts/lib/errors.js\");\nObject.defineProperty(exports, \"ArgumentSchemaError\", ({ enumerable: true, get: function () { return errors_1.ArgumentSchemaError; } }));\nObject.defineProperty(exports, \"ConflictingOptions\", ({ enumerable: true, get: function () { return errors_1.ConflictingOptions; } }));\nObject.defineProperty(exports, \"UnknownArgumentError\", ({ enumerable: true, get: function () { return errors_1.UnknownArgumentError; } }));\nObject.defineProperty(exports, \"UnsupportedSerializationError\", ({ enumerable: true, get: function () { return errors_1.UnsupportedSerializationError; } }));\nvar types_1 = __webpack_require__(/*! ./types */ \"./node_modules/@near-js/accounts/lib/types.js\");\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", ({ enumerable: true, get: function () { return types_1.MultisigDeleteRequestRejectionError; } }));\nObject.defineProperty(exports, \"MultisigStateStatus\", ({ enumerable: true, get: function () { return types_1.MultisigStateStatus; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLDJDQUEyQyxHQUFHLHFDQUFxQyxHQUFHLDRCQUE0QixHQUFHLDBCQUEwQixHQUFHLDJCQUEyQixHQUFHLGdCQUFnQixHQUFHLGdDQUFnQyxHQUFHLCtCQUErQixHQUFHLHdCQUF3QixHQUFHLG9CQUFvQixHQUFHLDBCQUEwQixHQUFHLDRCQUE0QixHQUFHLGtCQUFrQixHQUFHLHVCQUF1QixHQUFHLHlCQUF5QixHQUFHLDJCQUEyQixHQUFHLHNCQUFzQixHQUFHLGtCQUFrQixHQUFHLGVBQWU7QUFDMWpCLGdCQUFnQixtQkFBTyxDQUFDLGtFQUFXO0FBQ25DLDJDQUEwQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUMvRyxvQkFBb0IsbUJBQU8sQ0FBQywwRUFBZTtBQUMzQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDekgsd0JBQXdCLG1CQUFPLENBQUMsa0ZBQW1CO0FBQ25ELGtEQUFpRCxFQUFFLHFDQUFxQyw0Q0FBNEMsRUFBQztBQUNySSx1REFBc0QsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDL0kscURBQW9ELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQzNJLHlCQUF5QixtQkFBTyxDQUFDLG9GQUFvQjtBQUNyRCxtREFBa0QsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDeEksbUJBQW1CLG1CQUFPLENBQUMsd0VBQWM7QUFDekMsOENBQTZDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQ3hILGtCQUFrQixtQkFBTyxDQUFDLHNFQUFhO0FBQ3ZDLHdEQUF1RCxFQUFFLHFDQUFxQyw0Q0FBNEMsRUFBQztBQUMzSSxzREFBcUQsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDdkksZ0RBQStDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzNILG9EQUFtRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUNuSSwyREFBMEQsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDakosNERBQTJELEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQ25KLGlCQUFpQixtQkFBTyxDQUFDLG9FQUFZO0FBQ3JDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCxlQUFlLG1CQUFPLENBQUMsZ0VBQVU7QUFDakMsdURBQXNELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ3RJLHNEQUFxRCxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUNwSSx3REFBdUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDeEksaUVBQWdFLEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQzFKLGNBQWMsbUJBQU8sQ0FBQyw4REFBUztBQUMvQix1RUFBc0UsRUFBRSxxQ0FBcUMsdURBQXVELEVBQUM7QUFDckssdURBQXNELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvaW5kZXguanM/MzY4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlzaWdTdGF0ZVN0YXR1cyA9IGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSBleHBvcnRzLlVuc3VwcG9ydGVkU2VyaWFsaXphdGlvbkVycm9yID0gZXhwb3J0cy5Vbmtub3duQXJndW1lbnRFcnJvciA9IGV4cG9ydHMuQ29uZmxpY3RpbmdPcHRpb25zID0gZXhwb3J0cy5Bcmd1bWVudFNjaGVtYUVycm9yID0gZXhwb3J0cy5Db250cmFjdCA9IGV4cG9ydHMuTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19DSEFOR0VfTUVUSE9EUyA9IGV4cG9ydHMuTVVMVElTSUdfREVQT1NJVCA9IGV4cG9ydHMuTVVMVElTSUdfR0FTID0gZXhwb3J0cy5NVUxUSVNJR19BTExPV0FOQ0UgPSBleHBvcnRzLk1VTFRJU0lHX1NUT1JBR0VfS0VZID0gZXhwb3J0cy5Db25uZWN0aW9uID0gZXhwb3J0cy5BY2NvdW50TXVsdGlzaWcgPSBleHBvcnRzLlVybEFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5Mb2NhbEFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5BY2NvdW50Q3JlYXRvciA9IGV4cG9ydHMuQWNjb3VudDJGQSA9IGV4cG9ydHMuQWNjb3VudCA9IHZvaWQgMDtcbnZhciBhY2NvdW50XzEgPSByZXF1aXJlKFwiLi9hY2NvdW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF8xLkFjY291bnQ7IH0gfSk7XG52YXIgYWNjb3VudF8yZmFfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRfMmZhXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudDJGQVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF8yZmFfMS5BY2NvdW50MkZBOyB9IH0pO1xudmFyIGFjY291bnRfY3JlYXRvcl8xID0gcmVxdWlyZShcIi4vYWNjb3VudF9jcmVhdG9yXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudENyZWF0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfY3JlYXRvcl8xLkFjY291bnRDcmVhdG9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTG9jYWxBY2NvdW50Q3JlYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudF9jcmVhdG9yXzEuTG9jYWxBY2NvdW50Q3JlYXRvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVybEFjY291bnRDcmVhdG9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50X2NyZWF0b3JfMS5VcmxBY2NvdW50Q3JlYXRvcjsgfSB9KTtcbnZhciBhY2NvdW50X211bHRpc2lnXzEgPSByZXF1aXJlKFwiLi9hY2NvdW50X211bHRpc2lnXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudE11bHRpc2lnXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50X211bHRpc2lnXzEuQWNjb3VudE11bHRpc2lnOyB9IH0pO1xudmFyIGNvbm5lY3Rpb25fMSA9IHJlcXVpcmUoXCIuL2Nvbm5lY3Rpb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb25uZWN0aW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25uZWN0aW9uXzEuQ29ubmVjdGlvbjsgfSB9KTtcbnZhciBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX1NUT1JBR0VfS0VZXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19TVE9SQUdFX0tFWTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX0FMTE9XQU5DRVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuTVVMVElTSUdfQUxMT1dBTkNFOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfR0FTXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19HQVM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19ERVBPU0lUXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19ERVBPU0lUOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfQ0hBTkdFX01FVEhPRFNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnN0YW50c18xLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfQ09ORklSTV9NRVRIT0RTXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb25zdGFudHNfMS5NVUxUSVNJR19DT05GSVJNX01FVEhPRFM7IH0gfSk7XG52YXIgY29udHJhY3RfMSA9IHJlcXVpcmUoXCIuL2NvbnRyYWN0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29udHJhY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbnRyYWN0XzEuQ29udHJhY3Q7IH0gfSk7XG52YXIgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBcmd1bWVudFNjaGVtYUVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5Bcmd1bWVudFNjaGVtYUVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29uZmxpY3RpbmdPcHRpb25zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5Db25mbGljdGluZ09wdGlvbnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVbmtub3duQXJndW1lbnRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuVW5rbm93bkFyZ3VtZW50RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3I7IH0gfSk7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCIuL3R5cGVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVzXzEuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNdWx0aXNpZ1N0YXRlU3RhdHVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLk11bHRpc2lnU3RhdGVTdGF0dXM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/local-view-execution/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/local-view-execution/index.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LocalViewExecution = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst storage_1 = __webpack_require__(/*! ./storage */ \"./node_modules/@near-js/accounts/lib/local-view-execution/storage.js\");\nconst runtime_1 = __webpack_require__(/*! ./runtime */ \"./node_modules/@near-js/accounts/lib/local-view-execution/runtime.js\");\nconst utils_2 = __webpack_require__(/*! ../utils */ \"./node_modules/@near-js/accounts/lib/utils.js\");\nclass LocalViewExecution {\n    constructor(connection) {\n        this.connection = connection.getConnection();\n        this.storage = new storage_1.Storage();\n    }\n    fetchContractCode(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.connection.provider.query(Object.assign({ request_type: 'view_code', account_id: contractId }, blockQuery));\n            return result.code_base64;\n        });\n    }\n    fetchContractState(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (0, utils_2.viewState)(this.connection, contractId, '', blockQuery);\n        });\n    }\n    fetch(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const block = yield this.connection.provider.block(blockQuery);\n            const blockHash = block.header.hash;\n            const blockHeight = block.header.height;\n            const blockTimestamp = block.header.timestamp;\n            const contractCode = yield this.fetchContractCode(contractId, blockQuery);\n            const contractState = yield this.fetchContractState(contractId, blockQuery);\n            return {\n                blockHash,\n                blockHeight,\n                blockTimestamp,\n                contractCode,\n                contractState,\n            };\n        });\n    }\n    loadOrFetch(contractId, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const stored = this.storage.load(blockQuery);\n            if (stored) {\n                return stored;\n            }\n            const _a = yield this.fetch(contractId, blockQuery), { blockHash } = _a, fetched = __rest(_a, [\"blockHash\"]);\n            this.storage.save(blockHash, fetched);\n            return fetched;\n        });\n    }\n    /**\n     * Calls a view function on a contract, fetching the contract code and state if needed.\n     * @param options Options for calling the view function.\n     * @param options.contractId The contract account ID.\n     * @param options.methodName The name of the view function to call.\n     * @param options.args The arguments to pass to the view function.\n     * @param options.blockQuery The block query options.\n     * @returns {Promise<any>} - A promise that resolves to the result of the view function.\n     */\n    viewFunction(_a) {\n        var { contractId, methodName, args = {}, blockQuery = { finality: 'optimistic' } } = _a, ignored = __rest(_a, [\"contractId\", \"methodName\", \"args\", \"blockQuery\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const methodArgs = JSON.stringify(args);\n            const { contractCode, contractState, blockHeight, blockTimestamp } = yield this.loadOrFetch(contractId, blockQuery);\n            const runtime = new runtime_1.Runtime({ contractId, contractCode, contractState, blockHeight, blockTimestamp, methodArgs });\n            const { result, logs } = yield runtime.execute(methodName);\n            if (logs) {\n                (0, utils_1.printTxOutcomeLogs)({ contractId, logs });\n            }\n            return JSON.parse(Buffer.from(result).toString());\n        });\n    }\n}\nexports.LocalViewExecution = LocalViewExecution;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2xvY2FsLXZpZXctZXhlY3V0aW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGNBQWM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsZ0JBQWdCLG1CQUFPLENBQUMsaUdBQWdCO0FBQ3hDLGtCQUFrQixtQkFBTyxDQUFDLHVGQUFXO0FBQ3JDLGtCQUFrQixtQkFBTyxDQUFDLHVGQUFXO0FBQ3JDLGdCQUFnQixtQkFBTyxDQUFDLCtEQUFVO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLG1EQUFtRDtBQUNuSTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxZQUFZO0FBQy9FO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQSxjQUFjLGlDQUFpQyxpQkFBaUIsMkJBQTJCO0FBQzNGO0FBQ0E7QUFDQSxvQkFBb0IsMkRBQTJEO0FBQy9FLG9EQUFvRCxrRkFBa0Y7QUFDdEksb0JBQW9CLGVBQWU7QUFDbkM7QUFDQSxrREFBa0Qsa0JBQWtCO0FBQ3BFO0FBQ0EsOEJBQThCLE1BQU07QUFDcEMsU0FBUztBQUNUO0FBQ0E7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL2xpYi9sb2NhbC12aWV3LWV4ZWN1dGlvbi9pbmRleC5qcz9jOTY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvY2FsVmlld0V4ZWN1dGlvbiA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5jb25zdCBzdG9yYWdlXzEgPSByZXF1aXJlKFwiLi9zdG9yYWdlXCIpO1xuY29uc3QgcnVudGltZV8xID0gcmVxdWlyZShcIi4vcnVudGltZVwiKTtcbmNvbnN0IHV0aWxzXzIgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG5jbGFzcyBMb2NhbFZpZXdFeGVjdXRpb24ge1xuICAgIGNvbnN0cnVjdG9yKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uID0gY29ubmVjdGlvbi5nZXRDb25uZWN0aW9uKCk7XG4gICAgICAgIHRoaXMuc3RvcmFnZSA9IG5ldyBzdG9yYWdlXzEuU3RvcmFnZSgpO1xuICAgIH1cbiAgICBmZXRjaENvbnRyYWN0Q29kZShjb250cmFjdElkLCBibG9ja1F1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB5aWVsZCB0aGlzLmNvbm5lY3Rpb24ucHJvdmlkZXIucXVlcnkoT2JqZWN0LmFzc2lnbih7IHJlcXVlc3RfdHlwZTogJ3ZpZXdfY29kZScsIGFjY291bnRfaWQ6IGNvbnRyYWN0SWQgfSwgYmxvY2tRdWVyeSkpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC5jb2RlX2Jhc2U2NDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZldGNoQ29udHJhY3RTdGF0ZShjb250cmFjdElkLCBibG9ja1F1ZXJ5KSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzIudmlld1N0YXRlKSh0aGlzLmNvbm5lY3Rpb24sIGNvbnRyYWN0SWQsICcnLCBibG9ja1F1ZXJ5KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGZldGNoKGNvbnRyYWN0SWQsIGJsb2NrUXVlcnkpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrID0geWllbGQgdGhpcy5jb25uZWN0aW9uLnByb3ZpZGVyLmJsb2NrKGJsb2NrUXVlcnkpO1xuICAgICAgICAgICAgY29uc3QgYmxvY2tIYXNoID0gYmxvY2suaGVhZGVyLmhhc2g7XG4gICAgICAgICAgICBjb25zdCBibG9ja0hlaWdodCA9IGJsb2NrLmhlYWRlci5oZWlnaHQ7XG4gICAgICAgICAgICBjb25zdCBibG9ja1RpbWVzdGFtcCA9IGJsb2NrLmhlYWRlci50aW1lc3RhbXA7XG4gICAgICAgICAgICBjb25zdCBjb250cmFjdENvZGUgPSB5aWVsZCB0aGlzLmZldGNoQ29udHJhY3RDb2RlKGNvbnRyYWN0SWQsIGJsb2NrUXVlcnkpO1xuICAgICAgICAgICAgY29uc3QgY29udHJhY3RTdGF0ZSA9IHlpZWxkIHRoaXMuZmV0Y2hDb250cmFjdFN0YXRlKGNvbnRyYWN0SWQsIGJsb2NrUXVlcnkpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBibG9ja0hhc2gsXG4gICAgICAgICAgICAgICAgYmxvY2tIZWlnaHQsXG4gICAgICAgICAgICAgICAgYmxvY2tUaW1lc3RhbXAsXG4gICAgICAgICAgICAgICAgY29udHJhY3RDb2RlLFxuICAgICAgICAgICAgICAgIGNvbnRyYWN0U3RhdGUsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgbG9hZE9yRmV0Y2goY29udHJhY3RJZCwgYmxvY2tRdWVyeSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qgc3RvcmVkID0gdGhpcy5zdG9yYWdlLmxvYWQoYmxvY2tRdWVyeSk7XG4gICAgICAgICAgICBpZiAoc3RvcmVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0b3JlZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IF9hID0geWllbGQgdGhpcy5mZXRjaChjb250cmFjdElkLCBibG9ja1F1ZXJ5KSwgeyBibG9ja0hhc2ggfSA9IF9hLCBmZXRjaGVkID0gX19yZXN0KF9hLCBbXCJibG9ja0hhc2hcIl0pO1xuICAgICAgICAgICAgdGhpcy5zdG9yYWdlLnNhdmUoYmxvY2tIYXNoLCBmZXRjaGVkKTtcbiAgICAgICAgICAgIHJldHVybiBmZXRjaGVkO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FsbHMgYSB2aWV3IGZ1bmN0aW9uIG9uIGEgY29udHJhY3QsIGZldGNoaW5nIHRoZSBjb250cmFjdCBjb2RlIGFuZCBzdGF0ZSBpZiBuZWVkZWQuXG4gICAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyBmb3IgY2FsbGluZyB0aGUgdmlldyBmdW5jdGlvbi5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5jb250cmFjdElkIFRoZSBjb250cmFjdCBhY2NvdW50IElELlxuICAgICAqIEBwYXJhbSBvcHRpb25zLm1ldGhvZE5hbWUgVGhlIG5hbWUgb2YgdGhlIHZpZXcgZnVuY3Rpb24gdG8gY2FsbC5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5hcmdzIFRoZSBhcmd1bWVudHMgdG8gcGFzcyB0byB0aGUgdmlldyBmdW5jdGlvbi5cbiAgICAgKiBAcGFyYW0gb3B0aW9ucy5ibG9ja1F1ZXJ5IFRoZSBibG9jayBxdWVyeSBvcHRpb25zLlxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IC0gQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIHJlc3VsdCBvZiB0aGUgdmlldyBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICB2aWV3RnVuY3Rpb24oX2EpIHtcbiAgICAgICAgdmFyIHsgY29udHJhY3RJZCwgbWV0aG9kTmFtZSwgYXJncyA9IHt9LCBibG9ja1F1ZXJ5ID0geyBmaW5hbGl0eTogJ29wdGltaXN0aWMnIH0gfSA9IF9hLCBpZ25vcmVkID0gX19yZXN0KF9hLCBbXCJjb250cmFjdElkXCIsIFwibWV0aG9kTmFtZVwiLCBcImFyZ3NcIiwgXCJibG9ja1F1ZXJ5XCJdKTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IG1ldGhvZEFyZ3MgPSBKU09OLnN0cmluZ2lmeShhcmdzKTtcbiAgICAgICAgICAgIGNvbnN0IHsgY29udHJhY3RDb2RlLCBjb250cmFjdFN0YXRlLCBibG9ja0hlaWdodCwgYmxvY2tUaW1lc3RhbXAgfSA9IHlpZWxkIHRoaXMubG9hZE9yRmV0Y2goY29udHJhY3RJZCwgYmxvY2tRdWVyeSk7XG4gICAgICAgICAgICBjb25zdCBydW50aW1lID0gbmV3IHJ1bnRpbWVfMS5SdW50aW1lKHsgY29udHJhY3RJZCwgY29udHJhY3RDb2RlLCBjb250cmFjdFN0YXRlLCBibG9ja0hlaWdodCwgYmxvY2tUaW1lc3RhbXAsIG1ldGhvZEFyZ3MgfSk7XG4gICAgICAgICAgICBjb25zdCB7IHJlc3VsdCwgbG9ncyB9ID0geWllbGQgcnVudGltZS5leGVjdXRlKG1ldGhvZE5hbWUpO1xuICAgICAgICAgICAgaWYgKGxvZ3MpIHtcbiAgICAgICAgICAgICAgICAoMCwgdXRpbHNfMS5wcmludFR4T3V0Y29tZUxvZ3MpKHsgY29udHJhY3RJZCwgbG9ncyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKEJ1ZmZlci5mcm9tKHJlc3VsdCkudG9TdHJpbmcoKSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuTG9jYWxWaWV3RXhlY3V0aW9uID0gTG9jYWxWaWV3RXhlY3V0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/local-view-execution/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/local-view-execution/runtime.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/local-view-execution/runtime.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Runtime = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"./node_modules/next/dist/compiled/crypto-browserify/index.js\");\nconst notImplemented = (name) => () => {\n    throw new Error('method not implemented: ' + name);\n};\nconst prohibitedInView = (name) => () => {\n    throw new Error('method not available for view calls: ' + name);\n};\nclass Runtime {\n    constructor(_a) {\n        var { contractCode } = _a, context = __rest(_a, [\"contractCode\"]);\n        this.context = context;\n        this.wasm = this.prepareWASM(Buffer.from(contractCode, 'base64'));\n        this.memory = new WebAssembly.Memory({ initial: 1024, maximum: 2048 });\n        this.registers = {};\n        this.logs = [];\n        this.result = Buffer.from([]);\n    }\n    readUTF16CStr(ptr) {\n        const arr = [];\n        const mem = new Uint16Array(this.memory.buffer);\n        let key = Number(ptr) / 2;\n        while (mem[key] != 0) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(Uint16Array.from(arr).buffer).toString('ucs2');\n    }\n    readUTF8CStr(len, ptr) {\n        const arr = [];\n        const mem = new Uint8Array(this.memory.buffer);\n        let key = Number(ptr);\n        for (let i = 0; i < len && mem[key] != 0; i++) {\n            arr.push(mem[key]);\n            key++;\n        }\n        return Buffer.from(arr).toString('utf8');\n    }\n    storageRead(keyLen, keyPtr) {\n        const storageKey = Buffer.from(new Uint8Array(this.memory.buffer, Number(keyPtr), Number(keyLen)));\n        const stateVal = this.context.contractState.filter((obj) => Buffer.compare(obj.key, storageKey) === 0).map((obj) => obj.value);\n        if (stateVal.length === 0)\n            return null;\n        return stateVal.length > 1 ? stateVal : stateVal[0];\n    }\n    prepareWASM(input) {\n        const parts = [];\n        const magic = input.subarray(0, 4);\n        if (magic.toString('utf8') !== '\\0asm') {\n            throw new Error('Invalid magic number');\n        }\n        const version = input.readUInt32LE(4);\n        if (version != 1) {\n            throw new Error('Invalid version: ' + version);\n        }\n        let offset = 8;\n        parts.push(input.subarray(0, offset));\n        function decodeLEB128() {\n            let result = 0;\n            let shift = 0;\n            let byte;\n            do {\n                byte = input[offset++];\n                result |= (byte & 0x7f) << shift;\n                shift += 7;\n            } while (byte & 0x80);\n            return result;\n        }\n        function decodeLimits() {\n            const flags = input[offset++];\n            const hasMax = flags & 0x1;\n            const initial = decodeLEB128();\n            const max = hasMax ? decodeLEB128() : null;\n            return { initial, max };\n        }\n        function decodeString() {\n            const length = decodeLEB128();\n            const result = input.subarray(offset, offset + length);\n            offset += length;\n            return result.toString('utf8');\n        }\n        function encodeLEB128(value) {\n            const result = [];\n            do {\n                let byte = value & 0x7f;\n                value >>= 7;\n                if (value !== 0) {\n                    byte |= 0x80;\n                }\n                result.push(byte);\n            } while (value !== 0);\n            return Buffer.from(result);\n        }\n        function encodeString(value) {\n            const result = Buffer.from(value, 'utf8');\n            return Buffer.concat([encodeLEB128(result.length), result]);\n        }\n        do {\n            const sectionStart = offset;\n            const sectionId = input.readUInt8(offset);\n            offset++;\n            const sectionSize = decodeLEB128();\n            const sectionEnd = offset + sectionSize;\n            if (sectionId == 5) {\n                // Memory section\n                // Make sure it's empty and only imported memory is used\n                parts.push(Buffer.from([5, 1, 0]));\n            }\n            else if (sectionId == 2) {\n                // Import section\n                const sectionParts = [];\n                const numImports = decodeLEB128();\n                for (let i = 0; i < numImports; i++) {\n                    const importStart = offset;\n                    decodeString();\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    let skipImport = false;\n                    switch (kind) {\n                        case 0:\n                            // Function import\n                            decodeLEB128(); // index\n                            break;\n                        case 1:\n                            // Table import\n                            offset++; // type\n                            decodeLimits();\n                            break;\n                        case 2:\n                            // Memory import\n                            decodeLimits();\n                            // NOTE: existing memory import is removed (so no need to add it to sectionParts)\n                            skipImport = true;\n                            break;\n                        case 3:\n                            // Global import\n                            offset++; // type\n                            offset++; // mutability\n                            break;\n                        default:\n                            throw new Error('Invalid import kind: ' + kind);\n                    }\n                    if (!skipImport) {\n                        sectionParts.push(input.subarray(importStart, offset));\n                    }\n                }\n                const importMemory = Buffer.concat([\n                    encodeString('env'),\n                    encodeString('memory'),\n                    Buffer.from([2]),\n                    Buffer.from([0]),\n                    encodeLEB128(1),\n                ]);\n                sectionParts.push(importMemory);\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([2]),\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else if (sectionId == 7) {\n                // Export section\n                const sectionParts = [];\n                const numExports = decodeLEB128();\n                for (let i = 0; i < numExports; i++) {\n                    const exportStart = offset;\n                    decodeString();\n                    const kind = input.readUInt8(offset);\n                    offset++;\n                    decodeLEB128();\n                    if (kind !== 2) {\n                        // Pass through all exports except memory\n                        sectionParts.push(input.subarray(exportStart, offset));\n                    }\n                }\n                const sectionData = Buffer.concat([\n                    encodeLEB128(sectionParts.length),\n                    ...sectionParts,\n                ]);\n                parts.push(Buffer.concat([\n                    Buffer.from([7]),\n                    encodeLEB128(sectionData.length),\n                    sectionData\n                ]));\n            }\n            else {\n                parts.push(input.subarray(sectionStart, sectionEnd));\n            }\n            offset = sectionEnd;\n        } while (offset < input.length);\n        return Buffer.concat(parts);\n    }\n    // Host functions\n    getRegisterLength(registerId) {\n        return BigInt(this.registers[registerId.toString()] ? this.registers[registerId.toString()].length : Number.MAX_SAFE_INTEGER);\n    }\n    readFromRegister(registerId, ptr) {\n        const mem = new Uint8Array(this.memory.buffer);\n        mem.set(this.registers[registerId.toString()] || Buffer.from([]), Number(ptr));\n    }\n    getCurrentAccountId(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.contractId);\n    }\n    inputMethodArgs(registerId) {\n        this.registers[registerId.toString()] = Buffer.from(this.context.methodArgs);\n    }\n    getBlockHeight() {\n        return BigInt(this.context.blockHeight);\n    }\n    getBlockTimestamp() {\n        return BigInt(this.context.blockTimestamp);\n    }\n    sha256(valueLen, valuePtr, registerId) {\n        const value = new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen));\n        const hash = (0, crypto_1.createHash)('sha256');\n        hash.update(value);\n        this.registers[registerId.toString()] = hash.digest();\n    }\n    returnValue(valueLen, valuePtr) {\n        this.result = Buffer.from(new Uint8Array(this.memory.buffer, Number(valuePtr), Number(valueLen)));\n    }\n    panic(message) {\n        throw new Error('panic: ' + message);\n    }\n    abort(msg_ptr, filename_ptr, line, col) {\n        const msg = this.readUTF16CStr(msg_ptr);\n        const filename = this.readUTF16CStr(filename_ptr);\n        const message = `${msg} ${filename}:${line}:${col}`;\n        if (!msg || !filename) {\n            throw new Error('abort: ' + 'String encoding is bad UTF-16 sequence.');\n        }\n        throw new Error('abort: ' + message);\n    }\n    appendToLog(len, ptr) {\n        this.logs.push(this.readUTF8CStr(len, ptr));\n    }\n    readStorage(key_len, key_ptr, register_id) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return BigInt(0);\n        }\n        this.registers[register_id] = result;\n        return BigInt(1);\n    }\n    hasStorageKey(key_len, key_ptr) {\n        const result = this.storageRead(key_len, key_ptr);\n        if (result == null) {\n            return BigInt(0);\n        }\n        return BigInt(1);\n    }\n    getHostImports() {\n        return {\n            register_len: this.getRegisterLength.bind(this),\n            read_register: this.readFromRegister.bind(this),\n            current_account_id: this.getCurrentAccountId.bind(this),\n            input: this.inputMethodArgs.bind(this),\n            block_index: this.getBlockHeight.bind(this),\n            block_timestamp: this.getBlockTimestamp.bind(this),\n            sha256: this.sha256.bind(this),\n            value_return: this.returnValue.bind(this),\n            abort: this.abort.bind(this),\n            log_utf8: this.appendToLog.bind(this),\n            log_utf16: this.appendToLog.bind(this),\n            storage_read: this.readStorage.bind(this),\n            storage_has_key: this.hasStorageKey.bind(this),\n            panic: () => this.panic('explicit guest panic'),\n            panic_utf8: (len, ptr) => this.panic(this.readUTF8CStr(len, ptr)),\n            // Not implemented\n            epoch_height: notImplemented('epoch_height'),\n            storage_usage: notImplemented('storage_usage'),\n            account_balance: notImplemented('account_balance'),\n            account_locked_balance: notImplemented('account_locked_balance'),\n            random_seed: notImplemented('random_seed'),\n            ripemd160: notImplemented('ripemd160'),\n            keccak256: notImplemented('keccak256'),\n            keccak512: notImplemented('keccak512'),\n            ecrecover: notImplemented('ecrecover'),\n            validator_stake: notImplemented('validator_stake'),\n            validator_total_stake: notImplemented('validator_total_stake'),\n            // Prohibited\n            write_register: prohibitedInView('write_register'),\n            signer_account_id: prohibitedInView('signer_account_id'),\n            signer_account_pk: prohibitedInView('signer_account_pk'),\n            predecessor_account_id: prohibitedInView('predecessor_account_id'),\n            attached_deposit: prohibitedInView('attached_deposit'),\n            prepaid_gas: prohibitedInView('prepaid_gas'),\n            used_gas: prohibitedInView('used_gas'),\n            promise_create: prohibitedInView('promise_create'),\n            promise_then: prohibitedInView('promise_then'),\n            promise_and: prohibitedInView('promise_and'),\n            promise_batch_create: prohibitedInView('promise_batch_create'),\n            promise_batch_then: prohibitedInView('promise_batch_then'),\n            promise_batch_action_create_account: prohibitedInView('promise_batch_action_create_account'),\n            promise_batch_action_deploy_contract: prohibitedInView('promise_batch_action_deploy_contract'),\n            promise_batch_action_function_call: prohibitedInView('promise_batch_action_function_call'),\n            promise_batch_action_function_call_weight: prohibitedInView('promise_batch_action_function_call_weight'),\n            promise_batch_action_transfer: prohibitedInView('promise_batch_action_transfer'),\n            promise_batch_action_stake: prohibitedInView('promise_batch_action_stake'),\n            promise_batch_action_add_key_with_full_access: prohibitedInView('promise_batch_action_add_key_with_full_access'),\n            promise_batch_action_add_key_with_function_call: prohibitedInView('promise_batch_action_add_key_with_function_call'),\n            promise_batch_action_delete_key: prohibitedInView('promise_batch_action_delete_key'),\n            promise_batch_action_delete_account: prohibitedInView('promise_batch_action_delete_account'),\n            promise_results_count: prohibitedInView('promise_results_count'),\n            promise_result: prohibitedInView('promise_result'),\n            promise_return: prohibitedInView('promise_return'),\n            storage_write: prohibitedInView('storage_write'),\n            storage_remove: prohibitedInView('storage_remove'),\n        };\n    }\n    execute(methodName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const module = yield WebAssembly.compile(this.wasm);\n            const instance = yield WebAssembly.instantiate(module, { env: Object.assign(Object.assign({}, this.getHostImports()), { memory: this.memory }) });\n            const callMethod = instance.exports[methodName];\n            if (callMethod == undefined) {\n                throw new Error(`Contract method '${methodName}' does not exists in contract ${this.context.contractId} for block id ${this.context.blockHeight}`);\n            }\n            callMethod();\n            return {\n                result: this.result,\n                logs: this.logs\n            };\n        });\n    }\n}\nexports.Runtime = Runtime;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/local-view-execution/runtime.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/local-view-execution/storage.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/local-view-execution/storage.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Storage = void 0;\nconst lru_map_1 = __webpack_require__(/*! lru_map */ \"./node_modules/lru_map/dist/lru.js\");\nclass Storage {\n    constructor(options = { max: Storage.MAX_ELEMENTS }) {\n        this.cache = new lru_map_1.LRUMap(options.max);\n        this.blockHeights = new Map();\n    }\n    load(blockRef) {\n        const noBlockId = !('blockId' in blockRef);\n        if (noBlockId)\n            return undefined;\n        let blockId = blockRef.blockId;\n        // block hash is passed, so get its corresponding block height\n        if (blockId.toString().length == 44) {\n            blockId = this.blockHeights.get(blockId.toString());\n        }\n        // get cached values for the given block height\n        return this.cache.get(blockId);\n    }\n    save(blockHash, { blockHeight, blockTimestamp, contractCode, contractState }) {\n        this.blockHeights.set(blockHash, blockHeight);\n        this.cache.set(blockHeight, { blockHeight, blockTimestamp, contractCode, contractState });\n    }\n}\nexports.Storage = Storage;\nStorage.MAX_ELEMENTS = 100;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL2xvY2FsLXZpZXctZXhlY3V0aW9uL3N0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGtCQUFrQixtQkFBTyxDQUFDLG1EQUFTO0FBQ25DO0FBQ0EsNEJBQTRCLDJCQUEyQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQTBEO0FBQ2hGO0FBQ0Esc0NBQXNDLDBEQUEwRDtBQUNoRztBQUNBO0FBQ0EsZUFBZTtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvbG9jYWwtdmlldy1leGVjdXRpb24vc3RvcmFnZS5qcz85ZmM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdG9yYWdlID0gdm9pZCAwO1xuY29uc3QgbHJ1X21hcF8xID0gcmVxdWlyZShcImxydV9tYXBcIik7XG5jbGFzcyBTdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zID0geyBtYXg6IFN0b3JhZ2UuTUFYX0VMRU1FTlRTIH0pIHtcbiAgICAgICAgdGhpcy5jYWNoZSA9IG5ldyBscnVfbWFwXzEuTFJVTWFwKG9wdGlvbnMubWF4KTtcbiAgICAgICAgdGhpcy5ibG9ja0hlaWdodHMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIGxvYWQoYmxvY2tSZWYpIHtcbiAgICAgICAgY29uc3Qgbm9CbG9ja0lkID0gISgnYmxvY2tJZCcgaW4gYmxvY2tSZWYpO1xuICAgICAgICBpZiAobm9CbG9ja0lkKVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgbGV0IGJsb2NrSWQgPSBibG9ja1JlZi5ibG9ja0lkO1xuICAgICAgICAvLyBibG9jayBoYXNoIGlzIHBhc3NlZCwgc28gZ2V0IGl0cyBjb3JyZXNwb25kaW5nIGJsb2NrIGhlaWdodFxuICAgICAgICBpZiAoYmxvY2tJZC50b1N0cmluZygpLmxlbmd0aCA9PSA0NCkge1xuICAgICAgICAgICAgYmxvY2tJZCA9IHRoaXMuYmxvY2tIZWlnaHRzLmdldChibG9ja0lkLnRvU3RyaW5nKCkpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGdldCBjYWNoZWQgdmFsdWVzIGZvciB0aGUgZ2l2ZW4gYmxvY2sgaGVpZ2h0XG4gICAgICAgIHJldHVybiB0aGlzLmNhY2hlLmdldChibG9ja0lkKTtcbiAgICB9XG4gICAgc2F2ZShibG9ja0hhc2gsIHsgYmxvY2tIZWlnaHQsIGJsb2NrVGltZXN0YW1wLCBjb250cmFjdENvZGUsIGNvbnRyYWN0U3RhdGUgfSkge1xuICAgICAgICB0aGlzLmJsb2NrSGVpZ2h0cy5zZXQoYmxvY2tIYXNoLCBibG9ja0hlaWdodCk7XG4gICAgICAgIHRoaXMuY2FjaGUuc2V0KGJsb2NrSGVpZ2h0LCB7IGJsb2NrSGVpZ2h0LCBibG9ja1RpbWVzdGFtcCwgY29udHJhY3RDb2RlLCBjb250cmFjdFN0YXRlIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RvcmFnZSA9IFN0b3JhZ2U7XG5TdG9yYWdlLk1BWF9FTEVNRU5UUyA9IDEwMDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/local-view-execution/storage.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/types.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = void 0;\nvar MultisigDeleteRequestRejectionError;\n(function (MultisigDeleteRequestRejectionError) {\n    MultisigDeleteRequestRejectionError[\"CANNOT_DESERIALIZE_STATE\"] = \"Cannot deserialize the contract state\";\n    MultisigDeleteRequestRejectionError[\"MULTISIG_NOT_INITIALIZED\"] = \"Smart contract panicked: Multisig contract should be initialized before usage\";\n    MultisigDeleteRequestRejectionError[\"NO_SUCH_REQUEST\"] = \"Smart contract panicked: panicked at 'No such request: either wrong number or already confirmed'\";\n    MultisigDeleteRequestRejectionError[\"REQUEST_COOLDOWN_ERROR\"] = \"Request cannot be deleted immediately after creation.\";\n    MultisigDeleteRequestRejectionError[\"METHOD_NOT_FOUND\"] = \"Contract method is not found\";\n})(MultisigDeleteRequestRejectionError = exports.MultisigDeleteRequestRejectionError || (exports.MultisigDeleteRequestRejectionError = {}));\nvar MultisigStateStatus;\n(function (MultisigStateStatus) {\n    MultisigStateStatus[MultisigStateStatus[\"INVALID_STATE\"] = 0] = \"INVALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"STATE_NOT_INITIALIZED\"] = 1] = \"STATE_NOT_INITIALIZED\";\n    MultisigStateStatus[MultisigStateStatus[\"VALID_STATE\"] = 2] = \"VALID_STATE\";\n    MultisigStateStatus[MultisigStateStatus[\"UNKNOWN_STATE\"] = 3] = \"UNKNOWN_STATE\";\n})(MultisigStateStatus = exports.MultisigStateStatus || (exports.MultisigStateStatus = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbGliL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLDJDQUEyQztBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0ZBQXdGLDJDQUEyQyxLQUFLO0FBQ3pJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0RBQXdELDJCQUEyQixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9saWIvdHlwZXMuanM/YTNiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlzaWdTdGF0ZVN0YXR1cyA9IGV4cG9ydHMuTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSB2b2lkIDA7XG52YXIgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3I7XG4oZnVuY3Rpb24gKE11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yKSB7XG4gICAgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JbXCJDQU5OT1RfREVTRVJJQUxJWkVfU1RBVEVcIl0gPSBcIkNhbm5vdCBkZXNlcmlhbGl6ZSB0aGUgY29udHJhY3Qgc3RhdGVcIjtcbiAgICBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcltcIk1VTFRJU0lHX05PVF9JTklUSUFMSVpFRFwiXSA9IFwiU21hcnQgY29udHJhY3QgcGFuaWNrZWQ6IE11bHRpc2lnIGNvbnRyYWN0IHNob3VsZCBiZSBpbml0aWFsaXplZCBiZWZvcmUgdXNhZ2VcIjtcbiAgICBNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcltcIk5PX1NVQ0hfUkVRVUVTVFwiXSA9IFwiU21hcnQgY29udHJhY3QgcGFuaWNrZWQ6IHBhbmlja2VkIGF0ICdObyBzdWNoIHJlcXVlc3Q6IGVpdGhlciB3cm9uZyBudW1iZXIgb3IgYWxyZWFkeSBjb25maXJtZWQnXCI7XG4gICAgTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3JbXCJSRVFVRVNUX0NPT0xET1dOX0VSUk9SXCJdID0gXCJSZXF1ZXN0IGNhbm5vdCBiZSBkZWxldGVkIGltbWVkaWF0ZWx5IGFmdGVyIGNyZWF0aW9uLlwiO1xuICAgIE11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yW1wiTUVUSE9EX05PVF9GT1VORFwiXSA9IFwiQ29udHJhY3QgbWV0aG9kIGlzIG5vdCBmb3VuZFwiO1xufSkoTXVsdGlzaWdEZWxldGVSZXF1ZXN0UmVqZWN0aW9uRXJyb3IgPSBleHBvcnRzLk11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yIHx8IChleHBvcnRzLk11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yID0ge30pKTtcbnZhciBNdWx0aXNpZ1N0YXRlU3RhdHVzO1xuKGZ1bmN0aW9uIChNdWx0aXNpZ1N0YXRlU3RhdHVzKSB7XG4gICAgTXVsdGlzaWdTdGF0ZVN0YXR1c1tNdWx0aXNpZ1N0YXRlU3RhdHVzW1wiSU5WQUxJRF9TVEFURVwiXSA9IDBdID0gXCJJTlZBTElEX1NUQVRFXCI7XG4gICAgTXVsdGlzaWdTdGF0ZVN0YXR1c1tNdWx0aXNpZ1N0YXRlU3RhdHVzW1wiU1RBVEVfTk9UX0lOSVRJQUxJWkVEXCJdID0gMV0gPSBcIlNUQVRFX05PVF9JTklUSUFMSVpFRFwiO1xuICAgIE11bHRpc2lnU3RhdGVTdGF0dXNbTXVsdGlzaWdTdGF0ZVN0YXR1c1tcIlZBTElEX1NUQVRFXCJdID0gMl0gPSBcIlZBTElEX1NUQVRFXCI7XG4gICAgTXVsdGlzaWdTdGF0ZVN0YXR1c1tNdWx0aXNpZ1N0YXRlU3RhdHVzW1wiVU5LTk9XTl9TVEFURVwiXSA9IDNdID0gXCJVTktOT1dOX1NUQVRFXCI7XG59KShNdWx0aXNpZ1N0YXRlU3RhdHVzID0gZXhwb3J0cy5NdWx0aXNpZ1N0YXRlU3RhdHVzIHx8IChleHBvcnRzLk11bHRpc2lnU3RhdGVTdGF0dXMgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/types.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/lib/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/@near-js/accounts/lib/utils.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.viewFunction = exports.viewState = exports.encodeJSContractArgs = exports.validateArgs = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\nfunction bytesJsonStringify(input) {\n    return Buffer.from(JSON.stringify(input));\n}\nfunction validateArgs(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    if (isUint8Array) {\n        return;\n    }\n    if (Array.isArray(args) || typeof args !== 'object') {\n        throw new types_1.PositionalArgsError();\n    }\n}\nexports.validateArgs = validateArgs;\nfunction encodeJSContractArgs(contractId, method, args) {\n    return Buffer.concat([Buffer.from(contractId), Buffer.from([0]), Buffer.from(method), Buffer.from([0]), Buffer.from(args)]);\n}\nexports.encodeJSContractArgs = encodeJSContractArgs;\n/**\n * Returns the state (key value pairs) of account's contract based on the key prefix.\n * Pass an empty string for prefix if you would like to return the entire state.\n * @see [https://docs.near.org/api/rpc/contracts#view-contract-state](https://docs.near.org/api/rpc/contracts#view-contract-state)\n *\n * @param connection connection to query state from\n * @param accountId account whose state is viewed\n * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.\n * @param blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n */\nfunction viewState(connection, accountId, prefix, blockQuery = { finality: 'optimistic' }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { values } = yield connection.provider.query(Object.assign(Object.assign({ request_type: 'view_state' }, blockQuery), { account_id: accountId, prefix_base64: Buffer.from(prefix).toString('base64') }));\n        return values.map(({ key, value }) => ({\n            key: Buffer.from(key, 'base64'),\n            value: Buffer.from(value, 'base64')\n        }));\n    });\n}\nexports.viewState = viewState;\n/**\n * Invoke a contract view function using the RPC API.\n * @see [https://docs.near.org/api/rpc/contracts#call-a-contract-function](https://docs.near.org/api/rpc/contracts#call-a-contract-function)\n *\n * @param options Function call options.\n * @param options.contractId NEAR account where the contract is deployed\n * @param options.methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n * @param options.args Any arguments to the view contract method, wrapped in JSON\n * @param options.parse Parse the result of the call. Receives a Buffer (bytes array) and converts it to any object. By default result will be treated as json.\n * @param options.stringify Convert input arguments into a bytes array. By default the input is treated as a JSON.\n * @param options.jsContract Is contract from JS SDK, automatically encodes args from JS SDK to binary.\n * @param options.blockQuery specifies which block to query state at. By default returns last \"optimistic\" block (i.e. not necessarily finalized).\n * @returns {Promise<any>}\n */\nfunction viewFunction(connection, { contractId, methodName, args = {}, parse = parseJsonFromRawResponse, stringify = bytesJsonStringify, jsContract = false, blockQuery = { finality: 'optimistic' } }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let encodedArgs;\n        validateArgs(args);\n        if (jsContract) {\n            encodedArgs = encodeJSContractArgs(contractId, methodName, Object.keys(args).length > 0 ? JSON.stringify(args) : '');\n        }\n        else {\n            encodedArgs = stringify(args);\n        }\n        const result = yield connection.provider.query(Object.assign(Object.assign({ request_type: 'call_function' }, blockQuery), { account_id: jsContract ? connection.jsvmAccountId : contractId, method_name: jsContract ? 'view_js_contract' : methodName, args_base64: encodedArgs.toString('base64') }));\n        if (result.logs) {\n            (0, utils_1.printTxOutcomeLogs)({ contractId, logs: result.logs });\n        }\n        return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n    });\n}\nexports.viewFunction = viewFunction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzP2UzNDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsbUdBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLGlHQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQyxpSEFBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLHFIQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMscUdBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz9kNmNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLDJHQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQyxpSEFBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMscUhBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/ZTMzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz84YmUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_base.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyxpR0FBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDBEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLG1HQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLDJHQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxxR0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzPzEwNzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLG1HQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLDJHQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyxxR0FBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQyx1REFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQywwREFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQyxpR0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/ZmFhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/public_key.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/public_key.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/public_key.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/in_memory_key_store.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/in_memory_key_store.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\");\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/keystore.js\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/in_memory_key_store.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLDBIQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMsb0dBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILHdCQUF3QixtQkFBTyxDQUFDLGtIQUFtQjtBQUNuRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsa0lBQTJCO0FBQ25FLHlEQUF3RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanM/MGFmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlDb250cmFjdEtleVN0b3JlID0gZXhwb3J0cy5NZXJnZUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IGV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X2tleV9zdG9yZV8xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG52YXIga2V5c3RvcmVfMSA9IHJlcXVpcmUoXCIuL2tleXN0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZXJnZV9rZXlfc3RvcmVfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xudmFyIG11bHRpX2NvbnRyYWN0X2tleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3Rfa2V5c3RvcmVfMS5NdWx0aUNvbnRyYWN0S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/keystore.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/keystore.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2tleXN0b3JlLmpzP2NhYzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/keystore.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/merge_key_store.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/merge_key_store.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/keystore.js\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                const keyPair = yield keyStore.getKey(networkId, accountId);\n                if (keyPair) {\n                    return keyPair;\n                }\n            }\n            return null;\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.removeKey(networkId, accountId);\n            }\n        });\n    }\n    /**\n     * Removes all items from each key store\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.clear();\n            }\n        });\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const network of yield keyStore.getNetworks()) {\n                    result.add(network);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const account of yield keyStore.getAccounts(networkId)) {\n                    result.add(account);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsbUJBQW1CLG1CQUFPLENBQUMsb0dBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVCQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMEJBQTBCO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL21lcmdlX2tleV9zdG9yZS5qcz84NDE3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZXNbdGhpcy5vcHRpb25zLndyaXRlS2V5U3RvcmVJbmRleF0uc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCBrZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gZWFjaCBrZXkgc3RvcmVcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBrZXlTdG9yZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIHlpZWxkIGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChuZXR3b3JrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYWNjb3VudChzKSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICovXG4gICAgZ2V0QWNjb3VudHMobmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhY2NvdW50IG9mIHlpZWxkIGtleVN0b3JlLmdldEFjY291bnRzKG5ldHdvcmtJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBNZXJnZUtleVN0b3JlKCR7dGhpcy5rZXlTdG9yZXMuam9pbignLCAnKX0pYDtcbiAgICB9XG59XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSBNZXJnZUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/merge_key_store.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/multi_contract_keystore.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/multi_contract_keystore.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5qcz84YzNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/exponential-backoff.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/exponential-backoff.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponentialBackoff = void 0;\nfunction exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: jitter?\n        let waitTime = startWaitTime;\n        for (let i = 0; i < retryNumber; i++) {\n            const result = yield getResult();\n            if (result) {\n                return result;\n            }\n            yield sleep(waitTime);\n            waitTime *= waitBackoff;\n        }\n        return null;\n    });\n}\nexports.exponentialBackoff = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvZXhwb25lbnRpYWwtYmFja29mZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9leHBvbmVudGlhbC1iYWNrb2ZmLmpzP2YyZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xuZnVuY3Rpb24gZXhwb25lbnRpYWxCYWNrb2ZmKHN0YXJ0V2FpdFRpbWUsIHJldHJ5TnVtYmVyLCB3YWl0QmFja29mZiwgZ2V0UmVzdWx0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgLy8gVE9ETzogaml0dGVyP1xuICAgICAgICBsZXQgd2FpdFRpbWUgPSBzdGFydFdhaXRUaW1lO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJldHJ5TnVtYmVyOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIGdldFJlc3VsdCgpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCBzbGVlcCh3YWl0VGltZSk7XG4gICAgICAgICAgICB3YWl0VGltZSAqPSB3YWl0QmFja29mZjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gZXhwb25lbnRpYWxCYWNrb2ZmO1xuLy8gU2xlZXAgZ2l2ZW4gbnVtYmVyIG9mIG1pbGxpcy5cbmZ1bmN0aW9uIHNsZWVwKG1pbGxpcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbWlsbGlzKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/exponential-backoff.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/failover-rpc-provider.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/failover-rpc-provider.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FailoverRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link FailoverRpcProvider} client class\n * which can be used to interact with multiple [NEAR RPC APIs](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/provider.js\");\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass FailoverRpcProvider extends provider_1.Provider {\n    /**\n     * @param providers list of providers\n     */\n    constructor(providers) {\n        super();\n        if (providers.length === 0) {\n            throw new Error('At least one provider must be specified');\n        }\n        this.providers = providers;\n        this.currentProviderIndex = 0;\n    }\n    switchToNextProvider() {\n        if (this.providers.length === 1)\n            return;\n        if (this.providers.length - 1 <= this.currentProviderIndex) {\n            this.currentProviderIndex = 0;\n        }\n        else {\n            this.currentProviderIndex += 1;\n        }\n        utils_1.Logger.debug(`Switched to provider at the index ${this.currentProviderIndex}`);\n    }\n    get currentProvider() {\n        const provider = this.providers[this.currentProviderIndex];\n        if (!provider)\n            throw new Error(`Provider wasn't found at index ${this.currentProviderIndex}`);\n        return provider;\n    }\n    withBackoff(getResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i < this.providers.length; i++) {\n                try {\n                    // each provider implements own retry logic\n                    const result = yield getResult(this.currentProvider);\n                    if (result)\n                        return result;\n                }\n                catch (_a) {\n                    this.switchToNextProvider();\n                }\n            }\n            throw new types_1.TypedError(`Exceeded ${this.providers.length} providers to execute request`, 'RetriesExceeded');\n        });\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.status());\n        });\n    }\n    sendTransactionUntil(signedTransaction, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransactionUntil(signedTransaction, waitUntil));\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransaction(signedTransaction));\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransactionAsync(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransactionAsync(signedTransaction));\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    txStatus(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.txStatus(txHash, accountId, waitUntil));\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatusReceipts(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.txStatusReceipts(txHash, accountId, waitUntil));\n        });\n    }\n    query(paramsOrPath, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (data) {\n                return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath, data));\n            }\n            return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath));\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.block(blockQuery));\n        });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    blockChanges(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.blockChanges(blockQuery));\n        });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.chunk(chunkId));\n        });\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.validators(blockId));\n        });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    experimental_protocolConfig(blockReference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.experimental_protocolConfig(blockReference));\n        });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.lightClientProof(request));\n        });\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    nextLightClientBlock(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.nextLightClientBlock(request));\n        });\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    accessKeyChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.accessKeyChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.singleAccessKeyChanges(accessKeyArray, blockQuery));\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    accountChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.accountChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.contractStateChanges(accountIdArray, blockQuery, keyPrefix));\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractCodeChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.contractCodeChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    gasPrice(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.gasPrice(blockId));\n        });\n    }\n}\nexports.FailoverRpcProvider = FailoverRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/failover-rpc-provider.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/browser.js\"));\nconst http_1 = __importDefault(__webpack_require__(/*! http */ \"./node_modules/next/dist/compiled/stream-http/index.js\"));\nconst https_1 = __importDefault(__webpack_require__(/*! https */ \"./node_modules/next/dist/compiled/https-browserify/index.js\"));\nconst httpAgent = new http_1.default.Agent({ keepAlive: true });\nconst httpsAgent = new https_1.default.Agent({ keepAlive: true });\nfunction agent(_parsedURL) {\n    if (_parsedURL.protocol === 'http:') {\n        return httpAgent;\n    }\n    else {\n        return httpsAgent;\n    }\n}\nfunction default_1(resource, init) {\n    return (0, node_fetch_1.default)(resource, Object.assign({ agent: agent(new URL(resource.toString())) }, init));\n}\nexports[\"default\"] = default_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsbUJBQU8sQ0FBQyx3REFBWTtBQUN6RCwrQkFBK0IsbUJBQU8sQ0FBQyxvRUFBTTtBQUM3QyxnQ0FBZ0MsbUJBQU8sQ0FBQywwRUFBTztBQUMvQyw2Q0FBNkMsaUJBQWlCO0FBQzlELCtDQUErQyxpQkFBaUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELDRDQUE0QztBQUMzRztBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9mZXRjaC5qcz8zNjhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgbm9kZV9mZXRjaF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJub2RlLWZldGNoXCIpKTtcbmNvbnN0IGh0dHBfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaHR0cFwiKSk7XG5jb25zdCBodHRwc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJodHRwc1wiKSk7XG5jb25zdCBodHRwQWdlbnQgPSBuZXcgaHR0cF8xLmRlZmF1bHQuQWdlbnQoeyBrZWVwQWxpdmU6IHRydWUgfSk7XG5jb25zdCBodHRwc0FnZW50ID0gbmV3IGh0dHBzXzEuZGVmYXVsdC5BZ2VudCh7IGtlZXBBbGl2ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGFnZW50KF9wYXJzZWRVUkwpIHtcbiAgICBpZiAoX3BhcnNlZFVSTC5wcm90b2NvbCA9PT0gJ2h0dHA6Jykge1xuICAgICAgICByZXR1cm4gaHR0cEFnZW50O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGh0dHBzQWdlbnQ7XG4gICAgfVxufVxuZnVuY3Rpb24gZGVmYXVsdF8xKHJlc291cmNlLCBpbml0KSB7XG4gICAgcmV0dXJuICgwLCBub2RlX2ZldGNoXzEuZGVmYXVsdCkocmVzb3VyY2UsIE9iamVjdC5hc3NpZ24oeyBhZ2VudDogYWdlbnQobmV3IFVSTChyZXNvdXJjZS50b1N0cmluZygpKSkgfSwgaW5pdCkpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZGVmYXVsdF8xO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch_json.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch_json.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst http_errors_1 = __importDefault(__webpack_require__(/*! http-errors */ \"./node_modules/http-errors/index.js\"));\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nconst START_WAIT_TIME_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\n/**\n * Performs an HTTP request to a specified URL or connection and returns the parsed JSON response.\n * @param connectionInfoOrUrl The connection information or URL for the HTTP request.\n * @param json The JSON payload to be included in the request body for POST requests.\n * @returns A Promise that resolves to the parsed JSON response from the HTTP request.\n */\nfunction fetchJson(connectionInfoOrUrl, json) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let connectionInfo = { url: null };\n        if (typeof (connectionInfoOrUrl) === 'string') {\n            connectionInfo.url = connectionInfoOrUrl;\n        }\n        else {\n            connectionInfo = connectionInfoOrUrl;\n        }\n        const response = yield (0, exponential_backoff_1.exponentialBackoff)(START_WAIT_TIME_MS, RETRY_NUMBER, BACKOFF_MULTIPLIER, () => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                const response = yield ((_a = __webpack_require__.g.fetch) !== null && _a !== void 0 ? _a : (yield Promise.resolve().then(() => __importStar(__webpack_require__(/*! ./fetch */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch.js\")))).default)(connectionInfo.url, {\n                    method: json ? 'POST' : 'GET',\n                    body: json ? json : undefined,\n                    headers: Object.assign(Object.assign({}, connectionInfo.headers), { 'Content-Type': 'application/json' })\n                });\n                if (!response.ok) {\n                    if (response.status === 503) {\n                        utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} as it's not available now`);\n                        return null;\n                    }\n                    else if (response.status === 408) {\n                        utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} as the previous connection was unused for some time`);\n                        return null;\n                    }\n                    throw (0, http_errors_1.default)(response.status, yield response.text());\n                }\n                return response;\n            }\n            catch (error) {\n                if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {\n                    utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} because of error: ${error}`);\n                    return null;\n                }\n                throw error;\n            }\n        }));\n        if (!response) {\n            throw new types_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${connectionInfo.url}.`, 'RetriesExceeded');\n        }\n        return yield response.json();\n    });\n}\nexports.fetchJson = fetchJson;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch_json.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = exports.Provider = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.exponentialBackoff = void 0;\nvar exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nObject.defineProperty(exports, \"exponentialBackoff\", ({ enumerable: true, get: function () { return exponential_backoff_1.exponentialBackoff; } }));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/json-rpc-provider.js\");\nObject.defineProperty(exports, \"JsonRpcProvider\", ({ enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } }));\nvar failover_rpc_provider_1 = __webpack_require__(/*! ./failover-rpc-provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/failover-rpc-provider.js\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", ({ enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } }));\nvar provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/provider.js\");\nObject.defineProperty(exports, \"Provider\", ({ enumerable: true, get: function () { return provider_1.Provider; } }));\nvar fetch_json_1 = __webpack_require__(/*! ./fetch_json */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch_json.js\");\nObject.defineProperty(exports, \"fetchJson\", ({ enumerable: true, get: function () { return fetch_json_1.fetchJson; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsZ0JBQWdCLEdBQUcsMkJBQTJCLEdBQUcsdUJBQXVCLEdBQUcsMEJBQTBCO0FBQ3pILDRCQUE0QixtQkFBTyxDQUFDLDBIQUF1QjtBQUMzRCxzREFBcUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDakosMEJBQTBCLG1CQUFPLENBQUMsc0hBQXFCO0FBQ3ZELG1EQUFrRCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUN6SSw4QkFBOEIsbUJBQU8sQ0FBQyw4SEFBeUI7QUFDL0QsdURBQXNELEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3JKLGlCQUFpQixtQkFBTyxDQUFDLG9HQUFZO0FBQ3JDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCxtQkFBbUIsbUJBQU8sQ0FBQyx3R0FBYztBQUN6Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9wcm92aWRlcnMvbGliL2luZGV4LmpzPzMwNTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZldGNoSnNvbiA9IGV4cG9ydHMuUHJvdmlkZXIgPSBleHBvcnRzLkZhaWxvdmVyUnBjUHJvdmlkZXIgPSBleHBvcnRzLkpzb25ScGNQcm92aWRlciA9IGV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xudmFyIGV4cG9uZW50aWFsX2JhY2tvZmZfMSA9IHJlcXVpcmUoXCIuL2V4cG9uZW50aWFsLWJhY2tvZmZcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHBvbmVudGlhbEJhY2tvZmZcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGV4cG9uZW50aWFsX2JhY2tvZmZfMS5leHBvbmVudGlhbEJhY2tvZmY7IH0gfSk7XG52YXIganNvbl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2pzb24tcnBjLXByb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSnNvblJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uX3JwY19wcm92aWRlcl8xLkpzb25ScGNQcm92aWRlcjsgfSB9KTtcbnZhciBmYWlsb3Zlcl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2ZhaWxvdmVyLXJwYy1wcm92aWRlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZhaWxvdmVyUnBjUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhaWxvdmVyX3JwY19wcm92aWRlcl8xLkZhaWxvdmVyUnBjUHJvdmlkZXI7IH0gfSk7XG52YXIgcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL3Byb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3ZpZGVyXzEuUHJvdmlkZXI7IH0gfSk7XG52YXIgZmV0Y2hfanNvbl8xID0gcmVxdWlyZShcIi4vZmV0Y2hfanNvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZldGNoSnNvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmV0Y2hfanNvbl8xLmZldGNoSnNvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/json-rpc-provider.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/json-rpc-provider.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js\");\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/provider.js\");\nconst fetch_json_1 = __webpack_require__(/*! ./fetch_json */ \"./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/fetch_json.js\");\n/** @hidden */\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param connectionInfo Connection info\n     */\n    constructor(connectionInfo, options) {\n        super();\n        this.connection = connectionInfo || { url: '' };\n        const defaultOptions = {\n            retries: REQUEST_RETRY_NUMBER,\n            wait: REQUEST_RETRY_WAIT,\n            backoff: REQUEST_RETRY_WAIT_BACKOFF\n        };\n        this.options = Object.assign({}, defaultOptions, options);\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('status', []);\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     *\n     * @param signedTransaction The signed transaction being sent\n     * @param waitUntil\n     */\n    sendTransactionUntil(signedTransaction, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = (0, transactions_1.encodeTransaction)(signedTransaction);\n            return this.sendJsonRpc('send_tx', { signed_tx_base64: Buffer.from(bytes).toString('base64'), wait_until: waitUntil });\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionUntil(signedTransaction, 'EXECUTED_OPTIMISTIC');\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransactionAsync(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionUntil(signedTransaction, 'NONE');\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     */\n    txStatus(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof txHash === 'string') {\n                return this.txStatusString(txHash, accountId, waitUntil);\n            }\n            else {\n                return this.txStatusUint8Array(txHash, accountId, waitUntil);\n            }\n        });\n    }\n    txStatusUint8Array(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n        });\n    }\n    txStatusString(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatusReceipts(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof txHash === 'string') {\n                return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n            }\n            else {\n                return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n            }\n        });\n    }\n    /**\n     * Query the RPC by passing an {@link \"@near-js/types\".provider/request.RpcQueryRequest | RpcQueryRequest }\n     * @see [https://docs.near.org/api/rpc/contracts](https://docs.near.org/api/rpc/contracts)\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    query(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            if (args.length === 1) {\n                const _a = args[0], { block_id, blockId } = _a, otherParams = __rest(_a, [\"block_id\", \"blockId\"]);\n                result = yield this.sendJsonRpc('query', Object.assign(Object.assign({}, otherParams), { block_id: block_id || blockId }));\n            }\n            else {\n                const [path, data] = args;\n                result = yield this.sendJsonRpc('query', [path, data]);\n            }\n            if (result && result.error) {\n                throw new types_1.TypedError(`Querying failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, (0, utils_1.getErrorTypeFromErrorMessage)(result.error, result.error.name));\n            }\n            return result;\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    blockChanges(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('chunk', [chunkId]);\n        });\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('validators', [blockId]);\n        });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    experimental_protocolConfig(blockReference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _a = blockReference, { blockId } = _a, otherParams = __rest(_a, [\"blockId\"]);\n            return yield this.sendJsonRpc('EXPERIMENTAL_protocol_config', Object.assign(Object.assign({}, otherParams), { block_id: blockId }));\n        });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n        });\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    nextLightClientBlock(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('next_light_client_block', request);\n        });\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    accessKeyChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'all_access_key_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'single_access_key_changes',\n                keys: accessKeyArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    accountChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'account_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'data_changes',\n                account_ids: accountIdArray,\n                key_prefix_base64: keyPrefix,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractCodeChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'contract_code_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    gasPrice(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('gas_price', [blockId]);\n        });\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    sendJsonRpc(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield (0, exponential_backoff_1.exponentialBackoff)(this.options.wait, this.options.retries, this.options.backoff, () => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                try {\n                    const request = {\n                        method,\n                        params,\n                        id: (_nextId++),\n                        jsonrpc: '2.0'\n                    };\n                    const response = yield (0, fetch_json_1.fetchJson)(this.connection, JSON.stringify(request));\n                    if (response.error) {\n                        if (typeof response.error.data === 'object') {\n                            if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                                throw new types_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                            }\n                            throw (0, utils_1.parseRpcError)(response.error.data);\n                        }\n                        else {\n                            const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                            // NOTE: All this hackery is happening because structured errors not implemented\n                            // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                            if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                                || errorMessage.includes('query has timed out')) {\n                                throw new types_1.TypedError(errorMessage, 'TimeoutError');\n                            }\n                            const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.error.data, '');\n                            if (errorType) {\n                                throw new types_1.TypedError((0, utils_1.formatError)(errorType, params), errorType);\n                            }\n                            throw new types_1.TypedError(errorMessage, response.error.name);\n                        }\n                    }\n                    else if (typeof ((_a = response.result) === null || _a === void 0 ? void 0 : _a.error) === 'string') {\n                        const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.result.error, '');\n                        if (errorType) {\n                            throw new utils_1.ServerError((0, utils_1.formatError)(errorType, params), errorType);\n                        }\n                    }\n                    // Success when response.error is not exist\n                    return response;\n                }\n                catch (error) {\n                    if (error.type === 'TimeoutError') {\n                        utils_1.Logger.warn(`Retrying request to ${method} as it has timed out`, params);\n                        return null;\n                    }\n                    throw error;\n                }\n            }));\n            const { result } = response;\n            // From jsonrpc spec:\n            // result\n            //   This member is REQUIRED on success.\n            //   This member MUST NOT exist if there was an error invoking the method.\n            if (typeof result === 'undefined') {\n                throw new types_1.TypedError(`Exceeded ${this.options.retries} attempts for request to ${method}.`, 'RetriesExceeded');\n            }\n            return result;\n        });\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/json-rpc-provider.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/provider.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/provider.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Provider = void 0;\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9wcm92aWRlci5qcz81NTkwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBORUFSIFJQQyBBUEkgcmVxdWVzdCB0eXBlcyBhbmQgcmVzcG9uc2VzXG4gKiBAbW9kdWxlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvdmlkZXIgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgUHJvdmlkZXIge1xufVxuZXhwb3J0cy5Qcm92aWRlciA9IFByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/providers/lib/provider.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/in_memory_signer.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/in_memory_signer.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemorySigner = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/@near-js/accounts/node_modules/@near-js/keystores/lib/index.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"./node_modules/@noble/hashes/sha256.js\");\nconst signer_1 = __webpack_require__(/*! ./signer */ \"./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/signer.js\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static fromKeyPair(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyStore = new keystores_1.InMemoryKeyStore();\n            yield keyStore.setKey(networkId, accountId, keyPair);\n            return new InMemorySigner(keyStore);\n        });\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    createKey(accountId, networkId, keyType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = keyType === crypto_1.KeyType.SECP256K1 ? crypto_1.KeyPair.fromRandom('secp256k1') : crypto_1.KeyPair.fromRandom('ed25519');\n            yield this.keyStore.setKey(networkId, accountId, keyPair);\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    getPublicKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                return null;\n            }\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    signMessage(message, accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = new Uint8Array((0, sha256_1.sha256)(message));\n            if (!accountId) {\n                throw new Error('InMemorySigner requires provided account id');\n            }\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                throw new Error(`Key for ${accountId} not found in ${networkId}`);\n            }\n            return keyPair.sign(hash);\n        });\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2luX21lbW9yeV9zaWduZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixpQkFBaUIsbUJBQU8sQ0FBQyxtR0FBaUI7QUFDMUMsb0JBQW9CLG1CQUFPLENBQUMseUdBQW9CO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLG9FQUFzQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyw4RkFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFdBQVcsZUFBZSxVQUFVO0FBQy9FO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQSxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9pbl9tZW1vcnlfc2lnbmVyLmpzPzk3MzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlTaWduZXIgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHNpZ25lcl8xID0gcmVxdWlyZShcIi4vc2lnbmVyXCIpO1xuLyoqXG4gKiBTaWducyB1c2luZyBpbiBtZW1vcnkga2V5IHN0b3JlLlxuICovXG5jbGFzcyBJbk1lbW9yeVNpZ25lciBleHRlbmRzIHNpZ25lcl8xLlNpZ25lciB7XG4gICAgY29uc3RydWN0b3Ioa2V5U3RvcmUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5rZXlTdG9yZSA9IGtleVN0b3JlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2luZ2xlIGFjY291bnQgU2lnbmVyIGluc3RhbmNlIHdpdGggYWNjb3VudCwgbmV0d29yayBhbmQga2V5UGFpciBwcm92aWRlZC5cbiAgICAgKlxuICAgICAqIEludGVuZGVkIHRvIGJlIHVzZWZ1bCBmb3IgdGVtcG9yYXJ5IGtleXMgKGUuZy4gY2xhaW1pbmcgYSBMaW5rZHJvcCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIHRoZSBrZXkgcGFpciB0b1xuICAgICAqIEBwYXJhbSBrZXlQYWlyIFRoZSBrZXlQYWlyIHRvIHVzZSBmb3Igc2lnbmluZ1xuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tS2V5UGFpcihuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5c3RvcmVzXzEuSW5NZW1vcnlLZXlTdG9yZSgpO1xuICAgICAgICAgICAgeWllbGQga2V5U3RvcmUuc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSW5NZW1vcnlTaWduZXIoa2V5U3RvcmUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHB1YmxpYyBrZXkgZm9yIHRoZSBhY2NvdW50IGdpdmVuXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRvIGFzc2lnbiBhIHB1YmxpYyBrZXkgdG9cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxQdWJsaWNLZXk+fVxuICAgICAqL1xuICAgIGNyZWF0ZUtleShhY2NvdW50SWQsIG5ldHdvcmtJZCwga2V5VHlwZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qga2V5UGFpciA9IGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxID8gY3J5cHRvXzEuS2V5UGFpci5mcm9tUmFuZG9tKCdzZWNwMjU2azEnKSA6IGNyeXB0b18xLktleVBhaXIuZnJvbVJhbmRvbSgnZWQyNTUxOScpO1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZS5zZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpO1xuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBleGlzdGluZyBwdWJsaWMga2V5IGZvciBhIGdpdmVuIGFjY291bnRcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIGEgcHVibGljIGtleSB0b1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFB1YmxpY0tleT59IFJldHVybnMgdGhlIHB1YmxpYyBrZXkgb3IgbnVsbCBpZiBub3QgZm91bmRcbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoYWNjb3VudElkLCBuZXR3b3JrSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBBIG1lc3NhZ2UgdG8gYmUgc2lnbmVkLCB0eXBpY2FsbHkgYSBzZXJpYWxpemVkIHRyYW5zYWN0aW9uXG4gICAgICogQHBhcmFtIGFjY291bnRJZCB0aGUgTkVBUiBhY2NvdW50IHNpZ25pbmcgdGhlIG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxTaWduYXR1cmU+fVxuICAgICAqL1xuICAgIHNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBoYXNoID0gbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpO1xuICAgICAgICAgICAgaWYgKCFhY2NvdW50SWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luTWVtb3J5U2lnbmVyIHJlcXVpcmVzIHByb3ZpZGVkIGFjY291bnQgaWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5IGZvciAke2FjY291bnRJZH0gbm90IGZvdW5kIGluICR7bmV0d29ya0lkfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuc2lnbihoYXNoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYEluTWVtb3J5U2lnbmVyKCR7dGhpcy5rZXlTdG9yZX0pYDtcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5U2lnbmVyID0gSW5NZW1vcnlTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/in_memory_signer.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/index.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = exports.InMemorySigner = void 0;\nvar in_memory_signer_1 = __webpack_require__(/*! ./in_memory_signer */ \"./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/in_memory_signer.js\");\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return in_memory_signer_1.InMemorySigner; } }));\nvar signer_1 = __webpack_require__(/*! ./signer */ \"./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/signer.js\");\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signer_1.Signer; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxzQkFBc0I7QUFDdkMseUJBQXlCLG1CQUFPLENBQUMsa0hBQW9CO0FBQ3JELGtEQUFpRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN0SSxlQUFlLG1CQUFPLENBQUMsOEZBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvaW5kZXguanM/MjVmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfc2lnbmVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlTaWduZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluX21lbW9yeV9zaWduZXJfMS5Jbk1lbW9yeVNpZ25lcjsgfSB9KTtcbnZhciBzaWduZXJfMSA9IHJlcXVpcmUoXCIuL3NpZ25lclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmVyXzEuU2lnbmVyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/signer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/signer.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = void 0;\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9zaWduZXIuanM/YTEzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gdm9pZCAwO1xuLyoqXG4gKiBHZW5lcmFsIHNpZ25pbmcgaW50ZXJmYWNlLCBjYW4gYmUgdXNlZCBmb3IgaW4gbWVtb3J5IHNpZ25pbmcsIFJQQyBzaW5naW5nLCBleHRlcm5hbCB3YWxsZXQsIEhTTSwgZXRjLlxuICovXG5jbGFzcyBTaWduZXIge1xufVxuZXhwb3J0cy5TaWduZXIgPSBTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/signers/lib/signer.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/action_creators.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/action_creators.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.actionCreators = exports.stringifyJsonOrBytes = void 0;\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/actions.js\");\n/**\n * Creates a full access key with full access permissions.\n * @returns A new full access key.\n */\nfunction fullAccessKey() {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            fullAccess: new actions_1.FullAccessPermission({}),\n        }),\n    });\n}\n/**\n * Creates an access key with function call permission for a specific receiver and method names.\n * @param receiverId The NEAR account ID of the function call receiver.\n * @param methodNames An array of method names allowed for function calls.\n * @param allowance An optional allowance (maximum amount) for the function call. Default: Unlimited.\n * @returns A new access key with function call permission.\n */\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            functionCall: new actions_1.FunctionCallPermission({\n                receiverId,\n                allowance,\n                methodNames,\n            }),\n        }),\n    });\n}\n/**\n * Creates a new action for creating a new NEAR account.\n * @returns A new action for creating a new account.\n */\nfunction createAccount() {\n    return new actions_1.Action({ createAccount: new actions_1.CreateAccount({}) });\n}\n/**\n * Creates a new action for deploying a contract with the provided code.\n * @param code The Uint8Array representing the code of the contract.\n * @returns A new action for deploying a contract.\n */\nfunction deployContract(code) {\n    return new actions_1.Action({ deployContract: new actions_1.DeployContract({ code }) });\n}\n/**\n * Converts an input argument to a Buffer, handling cases for both JSON and Uint8Array.\n * @param args The input argument, either JSON object or Uint8Array.\n * @returns A Buffer representation of the input argument.\n */\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    return isUint8Array ? args : Buffer.from(JSON.stringify(args));\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n * @param jsContract  Is contract from JS SDK, skips stringification of arguments.\n */\nfunction functionCall(methodName, args, gas = BigInt(0), deposit = BigInt(0), stringify = stringifyJsonOrBytes, jsContract = false) {\n    if (jsContract) {\n        return new actions_1.Action({\n            functionCall: new actions_1.FunctionCall({ methodName, args, gas, deposit }),\n        });\n    }\n    return new actions_1.Action({\n        functionCall: new actions_1.FunctionCall({\n            methodName,\n            args: stringify(args),\n            gas,\n            deposit,\n        }),\n    });\n}\n/**\n * Creates a new action for transferring funds, optionally specifying a deposit amount.\n * @param deposit The amount to be deposited along with the transfer. Default: 0.\n * @returns A new action for transferring funds.\n */\nfunction transfer(deposit = BigInt(0)) {\n    return new actions_1.Action({ transfer: new actions_1.Transfer({ deposit }) });\n}\n/**\n * Creates a new action for staking tokens, specifying the stake amount and public key.\n * @param stake The amount to be staked. Default: 0.\n * @param publicKey The public key associated with the staking action.\n * @returns A new action for staking tokens.\n */\nfunction stake(stake = BigInt(0), publicKey) {\n    return new actions_1.Action({ stake: new actions_1.Stake({ stake, publicKey }) });\n}\n/**\n * Creates a new action for adding a public key with a specified access key.\n * @param publicKey The public key to be added.\n * @param accessKey The access key associated with the added public key.\n * @returns A new action for adding a public key.\n */\nfunction addKey(publicKey, accessKey) {\n    return new actions_1.Action({ addKey: new actions_1.AddKey({ publicKey, accessKey }) });\n}\n/**\n * Creates a new action for deleting a public key.\n * @param publicKey The public key to be deleted.\n * @returns A new action for deleting a public key.\n */\nfunction deleteKey(publicKey) {\n    return new actions_1.Action({ deleteKey: new actions_1.DeleteKey({ publicKey }) });\n}\n/**\n * Creates a new action for deleting an account with the specified beneficiary ID.\n * @param beneficiaryId The NEAR account ID of the beneficiary.\n * @returns A new action for deleting an account.\n */\nfunction deleteAccount(beneficiaryId) {\n    return new actions_1.Action({ deleteAccount: new actions_1.DeleteAccount({ beneficiaryId }) });\n}\n/**\n * Creates a new action for a signed delegation, specifying the delegate action and signature.\n * @param delegateAction The delegate action to be performed.\n * @param signature The signature associated with the delegate action.\n * @returns A new action for a signed delegation.\n */\nfunction signedDelegate({ delegateAction, signature, }) {\n    return new actions_1.Action({\n        signedDelegate: new actions_1.SignedDelegate({ delegateAction, signature }),\n    });\n}\nexports.actionCreators = {\n    addKey,\n    createAccount,\n    deleteAccount,\n    deleteKey,\n    deployContract,\n    fullAccessKey,\n    functionCall,\n    functionCallAccessKey,\n    signedDelegate,\n    stake,\n    transfer,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/action_creators.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/actions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/actions.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Action = exports.SignedDelegate = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nclass FunctionCallPermission extends types_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends types_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends types_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nclass IAction extends types_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nclass SignedDelegate extends IAction {\n}\nexports.SignedDelegate = SignedDelegate;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends Enum {\n}\nexports.Action = Action;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxvQkFBb0IsR0FBRyxzQkFBc0IsR0FBRyxxQkFBcUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCO0FBQ25WLGdCQUFnQixtQkFBTyxDQUFDLGlHQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9hY3Rpb25zLmpzPzI4MTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjdGlvbiA9IGV4cG9ydHMuU2lnbmVkRGVsZWdhdGUgPSBleHBvcnRzLkRlbGV0ZUFjY291bnQgPSBleHBvcnRzLkRlbGV0ZUtleSA9IGV4cG9ydHMuQWRkS2V5ID0gZXhwb3J0cy5TdGFrZSA9IGV4cG9ydHMuVHJhbnNmZXIgPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbCA9IGV4cG9ydHMuRGVwbG95Q29udHJhY3QgPSBleHBvcnRzLkNyZWF0ZUFjY291bnQgPSBleHBvcnRzLklBY3Rpb24gPSBleHBvcnRzLkFjY2Vzc0tleSA9IGV4cG9ydHMuQWNjZXNzS2V5UGVybWlzc2lvbiA9IGV4cG9ydHMuRnVsbEFjY2Vzc1Blcm1pc3Npb24gPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbFBlcm1pc3Npb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY2xhc3MgRW51bSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcGVydGllcykubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VudW0gY2FuIG9ubHkgdGFrZSBzaW5nbGUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICAgICAgdGhpcy5lbnVtID0ga2V5O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5jbGFzcyBGdW5jdGlvbkNhbGxQZXJtaXNzaW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsUGVybWlzc2lvbiA9IEZ1bmN0aW9uQ2FsbFBlcm1pc3Npb247XG5jbGFzcyBGdWxsQWNjZXNzUGVybWlzc2lvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLkZ1bGxBY2Nlc3NQZXJtaXNzaW9uID0gRnVsbEFjY2Vzc1Blcm1pc3Npb247XG5jbGFzcyBBY2Nlc3NLZXlQZXJtaXNzaW9uIGV4dGVuZHMgRW51bSB7XG59XG5leHBvcnRzLkFjY2Vzc0tleVBlcm1pc3Npb24gPSBBY2Nlc3NLZXlQZXJtaXNzaW9uO1xuY2xhc3MgQWNjZXNzS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuQWNjZXNzS2V5ID0gQWNjZXNzS2V5O1xuY2xhc3MgSUFjdGlvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLklBY3Rpb24gPSBJQWN0aW9uO1xuY2xhc3MgQ3JlYXRlQWNjb3VudCBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5DcmVhdGVBY2NvdW50ID0gQ3JlYXRlQWNjb3VudDtcbmNsYXNzIERlcGxveUNvbnRyYWN0IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlcGxveUNvbnRyYWN0ID0gRGVwbG95Q29udHJhY3Q7XG5jbGFzcyBGdW5jdGlvbkNhbGwgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsID0gRnVuY3Rpb25DYWxsO1xuY2xhc3MgVHJhbnNmZXIgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuVHJhbnNmZXIgPSBUcmFuc2ZlcjtcbmNsYXNzIFN0YWtlIGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLlN0YWtlID0gU3Rha2U7XG5jbGFzcyBBZGRLZXkgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuQWRkS2V5ID0gQWRkS2V5O1xuY2xhc3MgRGVsZXRlS2V5IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlbGV0ZUtleSA9IERlbGV0ZUtleTtcbmNsYXNzIERlbGV0ZUFjY291bnQgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRGVsZXRlQWNjb3VudCA9IERlbGV0ZUFjY291bnQ7XG5jbGFzcyBTaWduZWREZWxlZ2F0ZSBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5TaWduZWREZWxlZ2F0ZSA9IFNpZ25lZERlbGVnYXRlO1xuLyoqXG4gKiBDb250YWlucyBhIGxpc3Qgb2YgdGhlIHZhbGlkIHRyYW5zYWN0aW9uIEFjdGlvbnMgYXZhaWxhYmxlIHdpdGggdGhpcyBBUElcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vbm9taWNvbi5pby9SdW50aW1lU3BlYy9BY3Rpb25zLmh0bWwgfCBBY3Rpb25zIFNwZWN9XG4gKi9cbmNsYXNzIEFjdGlvbiBleHRlbmRzIEVudW0ge1xufVxuZXhwb3J0cy5BY3Rpb24gPSBBY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/actions.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/create_transaction.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/create_transaction.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransaction = void 0;\nconst schema_1 = __webpack_require__(/*! ./schema */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/schema.js\");\n/**\n * Creates a new transaction object with the provided parameters.\n * @param signerId The NEAR account ID of the transaction signer.\n * @param publicKey The public key associated with the signer.\n * @param receiverId The NEAR account ID of the transaction receiver.\n * @param nonce The nonce value for the transaction, represented as a BN, string, or number.\n * @param actions An array of transaction actions to be performed.\n * @param blockHash The hash of the block where the transaction will be included.\n * @returns A new transaction object initialized with the provided parameters.\n */\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    const txNonce = typeof nonce === 'bigint' ? nonce : BigInt(nonce);\n    return new schema_1.Transaction({\n        signerId,\n        publicKey,\n        nonce: txNonce,\n        receiverId,\n        actions,\n        blockHash,\n    });\n}\nexports.createTransaction = createTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQyxtR0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzPzUzZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgdHJhbnNhY3Rpb24gb2JqZWN0IHdpdGggdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gc2lnbmVySWQgVGhlIE5FQVIgYWNjb3VudCBJRCBvZiB0aGUgdHJhbnNhY3Rpb24gc2lnbmVyLlxuICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSBhc3NvY2lhdGVkIHdpdGggdGhlIHNpZ25lci5cbiAqIEBwYXJhbSByZWNlaXZlcklkIFRoZSBORUFSIGFjY291bnQgSUQgb2YgdGhlIHRyYW5zYWN0aW9uIHJlY2VpdmVyLlxuICogQHBhcmFtIG5vbmNlIFRoZSBub25jZSB2YWx1ZSBmb3IgdGhlIHRyYW5zYWN0aW9uLCByZXByZXNlbnRlZCBhcyBhIEJOLCBzdHJpbmcsIG9yIG51bWJlci5cbiAqIEBwYXJhbSBhY3Rpb25zIEFuIGFycmF5IG9mIHRyYW5zYWN0aW9uIGFjdGlvbnMgdG8gYmUgcGVyZm9ybWVkLlxuICogQHBhcmFtIGJsb2NrSGFzaCBUaGUgaGFzaCBvZiB0aGUgYmxvY2sgd2hlcmUgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgaW5jbHVkZWQuXG4gKiBAcmV0dXJucyBBIG5ldyB0cmFuc2FjdGlvbiBvYmplY3QgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVHJhbnNhY3Rpb24oc2lnbmVySWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCkge1xuICAgIGNvbnN0IHR4Tm9uY2UgPSB0eXBlb2Ygbm9uY2UgPT09ICdiaWdpbnQnID8gbm9uY2UgOiBCaWdJbnQobm9uY2UpO1xuICAgIHJldHVybiBuZXcgc2NoZW1hXzEuVHJhbnNhY3Rpb24oe1xuICAgICAgICBzaWduZXJJZCxcbiAgICAgICAgcHVibGljS2V5LFxuICAgICAgICBub25jZTogdHhOb25jZSxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgYmxvY2tIYXNoLFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVUcmFuc2FjdGlvbiA9IGNyZWF0ZVRyYW5zYWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/create_transaction.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/delegate.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/delegate.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildDelegateAction = exports.DelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst action_creators_1 = __webpack_require__(/*! ./action_creators */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/action_creators.js\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, functionCall, stake, transfer, } = action_creators_1.actionCreators;\nclass DelegateAction extends types_1.Assignable {\n}\nexports.DelegateAction = DelegateAction;\n/**\n * Compose a delegate action for inclusion with a meta transaction signed on the sender's behalf\n * @param actions The set of actions to be included in the meta transaction\n * @param maxBlockHeight The maximum block height for which this action can be executed as part of a transaction\n * @param nonce Current nonce on the access key used to sign the delegate action\n * @param publicKey Public key for the access key used to sign the delegate action\n * @param receiverId Account ID for the intended receiver of the meta transaction\n * @param senderId Account ID for the intended signer of the delegate action\n */\nfunction buildDelegateAction({ actions, maxBlockHeight, nonce, publicKey, receiverId, senderId, }) {\n    return new DelegateAction({\n        senderId,\n        receiverId,\n        actions: actions.map((a) => {\n            // @ts-expect-error type workaround\n            if (!a.type && !a.params) {\n                return a;\n            }\n            // @ts-expect-error type workaround\n            switch (a.type) {\n                case 'AddKey': {\n                    // @ts-expect-error type workaround\n                    const { publicKey, accessKey } = a.params;\n                    return addKey(publicKey, accessKey);\n                }\n                case 'CreateAccount': {\n                    // @ts-expect-error type workaround\n                    return createAccount(a.params.createAccount);\n                }\n                case 'DeleteAccount': {\n                    // @ts-expect-error type workaround\n                    return deleteAccount(a.params.deleteAccount);\n                }\n                case 'DeleteKey': {\n                    // @ts-expect-error type workaround\n                    return deleteKey(a.params.publicKey);\n                }\n                case 'DeployContract': {\n                    // @ts-expect-error type workaround\n                    return deployContract(a.params.code);\n                }\n                case 'FunctionCall': {\n                    // @ts-expect-error type workaround\n                    const { methodName, args, gas, deposit } = a.params;\n                    return functionCall(methodName, args, gas, deposit);\n                }\n                case 'Stake': {\n                    // @ts-expect-error type workaround\n                    return stake(a.params.stake, a.params.publicKey);\n                }\n                case 'Transfer': {\n                    // @ts-expect-error type workaround\n                    const { deposit } = a.params;\n                    return transfer(deposit);\n                }\n            }\n            throw new Error('Unrecognized action');\n        }),\n        nonce,\n        maxBlockHeight,\n        publicKey,\n    });\n}\nexports.buildDelegateAction = buildDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCO0FBQ3BELGdCQUFnQixtQkFBTyxDQUFDLGlHQUFnQjtBQUN4QywwQkFBMEIsbUJBQU8sQ0FBQyxxSEFBbUI7QUFDckQsUUFBUSxrR0FBa0c7QUFDMUc7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQWtFO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQ0FBaUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanM/MzgzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGREZWxlZ2F0ZUFjdGlvbiA9IGV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY29uc3QgYWN0aW9uX2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIik7XG5jb25zdCB7IGFkZEtleSwgY3JlYXRlQWNjb3VudCwgZGVsZXRlQWNjb3VudCwgZGVsZXRlS2V5LCBkZXBsb3lDb250cmFjdCwgZnVuY3Rpb25DYWxsLCBzdGFrZSwgdHJhbnNmZXIsIH0gPSBhY3Rpb25fY3JlYXRvcnNfMS5hY3Rpb25DcmVhdG9ycztcbmNsYXNzIERlbGVnYXRlQWN0aW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSBEZWxlZ2F0ZUFjdGlvbjtcbi8qKlxuICogQ29tcG9zZSBhIGRlbGVnYXRlIGFjdGlvbiBmb3IgaW5jbHVzaW9uIHdpdGggYSBtZXRhIHRyYW5zYWN0aW9uIHNpZ25lZCBvbiB0aGUgc2VuZGVyJ3MgYmVoYWxmXG4gKiBAcGFyYW0gYWN0aW9ucyBUaGUgc2V0IG9mIGFjdGlvbnMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBtYXhCbG9ja0hlaWdodCBUaGUgbWF4aW11bSBibG9jayBoZWlnaHQgZm9yIHdoaWNoIHRoaXMgYWN0aW9uIGNhbiBiZSBleGVjdXRlZCBhcyBwYXJ0IG9mIGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBub25jZSBDdXJyZW50IG5vbmNlIG9uIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcHVibGljS2V5IFB1YmxpYyBrZXkgZm9yIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcmVjZWl2ZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgcmVjZWl2ZXIgb2YgdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBzZW5kZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgc2lnbmVyIG9mIHRoZSBkZWxlZ2F0ZSBhY3Rpb25cbiAqL1xuZnVuY3Rpb24gYnVpbGREZWxlZ2F0ZUFjdGlvbih7IGFjdGlvbnMsIG1heEJsb2NrSGVpZ2h0LCBub25jZSwgcHVibGljS2V5LCByZWNlaXZlcklkLCBzZW5kZXJJZCwgfSkge1xuICAgIHJldHVybiBuZXcgRGVsZWdhdGVBY3Rpb24oe1xuICAgICAgICBzZW5kZXJJZCxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9uczogYWN0aW9ucy5tYXAoKGEpID0+IHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBpZiAoIWEudHlwZSAmJiAhYS5wYXJhbXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBzd2l0Y2ggKGEudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0FkZEtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwdWJsaWNLZXksIGFjY2Vzc0tleSB9ID0gYS5wYXJhbXM7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRLZXkocHVibGljS2V5LCBhY2Nlc3NLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdDcmVhdGVBY2NvdW50Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQWNjb3VudChhLnBhcmFtcy5jcmVhdGVBY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSAnRGVsZXRlQWNjb3VudCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUFjY291bnQoYS5wYXJhbXMuZGVsZXRlQWNjb3VudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0RlbGV0ZUtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUtleShhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdEZXBsb3lDb250cmFjdCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlcGxveUNvbnRyYWN0KGEucGFyYW1zLmNvZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdGdW5jdGlvbkNhbGwnOiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgbWV0aG9kTmFtZSwgYXJncywgZ2FzLCBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uQ2FsbChtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdTdGFrZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0YWtlKGEucGFyYW1zLnN0YWtlLCBhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdUcmFuc2Zlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZmVyKGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGFjdGlvbicpO1xuICAgICAgICB9KSxcbiAgICAgICAgbm9uY2UsXG4gICAgICAgIG1heEJsb2NrSGVpZ2h0LFxuICAgICAgICBwdWJsaWNLZXksXG4gICAgfSk7XG59XG5leHBvcnRzLmJ1aWxkRGVsZWdhdGVBY3Rpb24gPSBidWlsZERlbGVnYXRlQWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/delegate.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./action_creators */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/action_creators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./actions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/actions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./create_transaction */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/create_transaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./delegate */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/delegate.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schema */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/schema.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sign */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/sign.js\"), exports);\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/signature.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLHFIQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMscUdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLDJIQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsdUdBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLG1HQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywrRkFBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMseUdBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL2luZGV4LmpzP2RiM2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvbnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZV90cmFuc2FjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGVsZWdhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbmF0dXJlXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/prefix.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/prefix.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DelegateActionPrefix = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst ACTIONABLE_MESSAGE_BASE = Math.pow(2, 30);\n// const NON_ACTIONABLE_MESSAGE_BASE = Math.pow(2, 31);\n/** The set of NEPs for which an [NEP-461](https://github.com/near/NEPs/pull/461) prefix is required on the message prior to hashing **/\nconst NEP = {\n    MetaTransactions: 366,\n};\n/** Base class for NEP message prefixes **/\nclass NEPPrefix extends types_1.Assignable {\n}\n/** Class for constructing prefixes on actionable (on-chain) messages **/\nclass ActionableMessagePrefix extends NEPPrefix {\n    /** Given the NEP number, set the prefix using 2^30 as the offset **/\n    constructor(prefix) {\n        super({ prefix: ACTIONABLE_MESSAGE_BASE + prefix });\n    }\n}\n/**\n * Class for constructing prefixes on non-actionable (off-chain) messages\n * @todo uncomment when off-chain messages are supported\n * **/\n// abstract class NonActionableMessagePrefix extends NEPPrefix {\n//     /** Given the NEP number, set the prefix using 2^31 as the offset **/\n//     protected constructor(prefix: number) {\n//         super({ prefix: NON_ACTIONABLE_MESSAGE_BASE + prefix });\n//     }\n// }\n/** Prefix for delegate actions whose signatures must always be distinguishable from valid transaction signatures **/\nclass DelegateActionPrefix extends ActionableMessagePrefix {\n    constructor() { super(NEP.MetaTransactions); }\n}\nexports.DelegateActionPrefix = DelegateActionPrefix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvcHJlZml4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQyxpR0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMENBQTBDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBOEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3ByZWZpeC5qcz8xNDUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdHlwZXNcIik7XG5jb25zdCBBQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMwKTtcbi8vIGNvbnN0IE5PTl9BQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMxKTtcbi8qKiBUaGUgc2V0IG9mIE5FUHMgZm9yIHdoaWNoIGFuIFtORVAtNDYxXShodHRwczovL2dpdGh1Yi5jb20vbmVhci9ORVBzL3B1bGwvNDYxKSBwcmVmaXggaXMgcmVxdWlyZWQgb24gdGhlIG1lc3NhZ2UgcHJpb3IgdG8gaGFzaGluZyAqKi9cbmNvbnN0IE5FUCA9IHtcbiAgICBNZXRhVHJhbnNhY3Rpb25zOiAzNjYsXG59O1xuLyoqIEJhc2UgY2xhc3MgZm9yIE5FUCBtZXNzYWdlIHByZWZpeGVzICoqL1xuY2xhc3MgTkVQUHJlZml4IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbi8qKiBDbGFzcyBmb3IgY29uc3RydWN0aW5nIHByZWZpeGVzIG9uIGFjdGlvbmFibGUgKG9uLWNoYWluKSBtZXNzYWdlcyAqKi9cbmNsYXNzIEFjdGlvbmFibGVNZXNzYWdlUHJlZml4IGV4dGVuZHMgTkVQUHJlZml4IHtcbiAgICAvKiogR2l2ZW4gdGhlIE5FUCBudW1iZXIsIHNldCB0aGUgcHJlZml4IHVzaW5nIDJeMzAgYXMgdGhlIG9mZnNldCAqKi9cbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgpIHtcbiAgICAgICAgc3VwZXIoeyBwcmVmaXg6IEFDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIGNvbnN0cnVjdGluZyBwcmVmaXhlcyBvbiBub24tYWN0aW9uYWJsZSAob2ZmLWNoYWluKSBtZXNzYWdlc1xuICogQHRvZG8gdW5jb21tZW50IHdoZW4gb2ZmLWNoYWluIG1lc3NhZ2VzIGFyZSBzdXBwb3J0ZWRcbiAqICoqL1xuLy8gYWJzdHJhY3QgY2xhc3MgTm9uQWN0aW9uYWJsZU1lc3NhZ2VQcmVmaXggZXh0ZW5kcyBORVBQcmVmaXgge1xuLy8gICAgIC8qKiBHaXZlbiB0aGUgTkVQIG51bWJlciwgc2V0IHRoZSBwcmVmaXggdXNpbmcgMl4zMSBhcyB0aGUgb2Zmc2V0ICoqL1xuLy8gICAgIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihwcmVmaXg6IG51bWJlcikge1xuLy8gICAgICAgICBzdXBlcih7IHByZWZpeDogTk9OX0FDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuLy8gICAgIH1cbi8vIH1cbi8qKiBQcmVmaXggZm9yIGRlbGVnYXRlIGFjdGlvbnMgd2hvc2Ugc2lnbmF0dXJlcyBtdXN0IGFsd2F5cyBiZSBkaXN0aW5ndWlzaGFibGUgZnJvbSB2YWxpZCB0cmFuc2FjdGlvbiBzaWduYXR1cmVzICoqL1xuY2xhc3MgRGVsZWdhdGVBY3Rpb25QcmVmaXggZXh0ZW5kcyBBY3Rpb25hYmxlTWVzc2FnZVByZWZpeCB7XG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKE5FUC5NZXRhVHJhbnNhY3Rpb25zKTsgfVxufVxuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IERlbGVnYXRlQWN0aW9uUHJlZml4O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/prefix.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/schema.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/schema.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SCHEMA = exports.SignedTransaction = exports.Transaction = exports.decodeSignedTransaction = exports.decodeTransaction = exports.encodeTransaction = exports.encodeSignedDelegate = exports.encodeDelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst borsh_1 = __webpack_require__(/*! borsh */ \"./node_modules/borsh/lib/cjs/index.js\");\nconst prefix_1 = __webpack_require__(/*! ./prefix */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/prefix.js\");\n/**\n * Borsh-encode a delegate action for inclusion as an action within a meta transaction\n * NB per NEP-461 this requires a Borsh-serialized prefix specific to delegate actions, ensuring\n *  signed delegate actions may never be identical to signed transactions with the same fields\n * @param delegateAction Delegate action to be signed by the meta transaction sender\n */\nfunction encodeDelegateAction(delegateAction) {\n    return new Uint8Array([\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateActionPrefix, new prefix_1.DelegateActionPrefix()),\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateAction, delegateAction),\n    ]);\n}\nexports.encodeDelegateAction = encodeDelegateAction;\n/**\n * Borsh-encode a signed delegate for validation and execution by a relayer\n * @param signedDelegate Signed delegate to be executed in a meta transaction\n */\nfunction encodeSignedDelegate(signedDelegate) {\n    return (0, borsh_1.serialize)(exports.SCHEMA.SignedDelegate, signedDelegate);\n}\nexports.encodeSignedDelegate = encodeSignedDelegate;\n/**\n* Borsh-encode a transaction or signed transaction into a serialized form.\n* @param transaction The transaction or signed transaction object to be encoded.\n* @returns A serialized representation of the input transaction.\n*/\nfunction encodeTransaction(transaction) {\n    const schema = transaction instanceof SignedTransaction ? exports.SCHEMA.SignedTransaction : exports.SCHEMA.Transaction;\n    return (0, borsh_1.serialize)(schema, transaction);\n}\nexports.encodeTransaction = encodeTransaction;\n/**\n * Borsh-decode a Transaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeTransaction(bytes) {\n    return new Transaction((0, borsh_1.deserialize)(exports.SCHEMA.Transaction, bytes));\n}\nexports.decodeTransaction = decodeTransaction;\n/**\n * Borsh-decode a SignedTransaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeSignedTransaction(bytes) {\n    return new SignedTransaction((0, borsh_1.deserialize)(exports.SCHEMA.SignedTransaction, bytes));\n}\nexports.decodeSignedTransaction = decodeSignedTransaction;\nclass Transaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeTransaction(bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeSignedTransaction(bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\nexports.SCHEMA = new class BorshSchema {\n    constructor() {\n        this.Ed25519Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.Secp256k1Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 65 } },\n            }\n        };\n        this.Signature = {\n            enum: [\n                { struct: { ed25519Signature: this.Ed25519Signature } },\n                { struct: { secp256k1Signature: this.Secp256k1Signature } },\n            ]\n        };\n        this.Ed25519Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 32 } },\n            }\n        };\n        this.Secp256k1Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.PublicKey = {\n            enum: [\n                { struct: { ed25519Key: this.Ed25519Data } },\n                { struct: { secp256k1Key: this.Secp256k1Data } },\n            ]\n        };\n        this.FunctionCallPermission = {\n            struct: {\n                allowance: { option: 'u128' },\n                receiverId: 'string',\n                methodNames: { array: { type: 'string' } },\n            }\n        };\n        this.FullAccessPermission = {\n            struct: {}\n        };\n        this.AccessKeyPermission = {\n            enum: [\n                { struct: { functionCall: this.FunctionCallPermission } },\n                { struct: { fullAccess: this.FullAccessPermission } },\n            ]\n        };\n        this.AccessKey = {\n            struct: {\n                nonce: 'u64',\n                permission: this.AccessKeyPermission,\n            }\n        };\n        this.CreateAccount = {\n            struct: {}\n        };\n        this.DeployContract = {\n            struct: {\n                code: { array: { type: 'u8' } },\n            }\n        };\n        this.FunctionCall = {\n            struct: {\n                methodName: 'string',\n                args: { array: { type: 'u8' } },\n                gas: 'u64',\n                deposit: 'u128',\n            }\n        };\n        this.Transfer = {\n            struct: {\n                deposit: 'u128',\n            }\n        };\n        this.Stake = {\n            struct: {\n                stake: 'u128',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.AddKey = {\n            struct: {\n                publicKey: this.PublicKey,\n                accessKey: this.AccessKey,\n            }\n        };\n        this.DeleteKey = {\n            struct: {\n                publicKey: this.PublicKey,\n            }\n        };\n        this.DeleteAccount = {\n            struct: {\n                beneficiaryId: 'string',\n            }\n        };\n        this.DelegateActionPrefix = {\n            struct: {\n                prefix: 'u32',\n            }\n        };\n        this.ClassicActions = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n            ]\n        };\n        this.DelegateAction = {\n            struct: {\n                senderId: 'string',\n                receiverId: 'string',\n                actions: { array: { type: this.ClassicActions } },\n                nonce: 'u64',\n                maxBlockHeight: 'u64',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.SignedDelegate = {\n            struct: {\n                delegateAction: this.DelegateAction,\n                signature: this.Signature,\n            }\n        };\n        this.Action = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n                { struct: { signedDelegate: this.SignedDelegate } },\n            ]\n        };\n        this.Transaction = {\n            struct: {\n                signerId: 'string',\n                publicKey: this.PublicKey,\n                nonce: 'u64',\n                receiverId: 'string',\n                blockHash: { array: { type: 'u8', len: 32 } },\n                actions: { array: { type: this.Action } },\n            }\n        };\n        this.SignedTransaction = {\n            struct: {\n                transaction: this.Transaction,\n                signature: this.Signature,\n            }\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/schema.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/sign.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/sign.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signDelegateAction = exports.signTransaction = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"./node_modules/@noble/hashes/sha256.js\");\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/actions.js\");\nconst create_transaction_1 = __webpack_require__(/*! ./create_transaction */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/create_transaction.js\");\nconst schema_1 = __webpack_require__(/*! ./schema */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/schema.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/signature.js\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\");\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nfunction signTransactionObject(transaction, signer, accountId, networkId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeTransaction)(transaction);\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        const signature = yield signer.signMessage(message, accountId, networkId);\n        const keyType = transaction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedTx = new schema_1.SignedTransaction({\n            transaction,\n            signature: new signature_1.Signature({ keyType, data: signature.signature })\n        });\n        return [hash, signedTx];\n    });\n}\nfunction signTransaction(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (args[0].constructor === schema_1.Transaction) {\n            const [transaction, signer, accountId, networkId] = args;\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n        else {\n            const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n            const publicKey = yield signer.getPublicKey(accountId, networkId);\n            const transaction = (0, create_transaction_1.createTransaction)(accountId, publicKey, receiverId, nonce, actions, blockHash);\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n    });\n}\nexports.signTransaction = signTransaction;\n/**\n * Sign a delegate action\n * @options SignDelegate options\n * @param options.delegateAction Delegate action to be signed by the meta transaction sender\n * @param options.signer Signer instance for the meta transaction sender\n */\nfunction signDelegateAction({ delegateAction, signer }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeDelegateAction)(delegateAction);\n        const signature = yield signer.sign(message);\n        const keyType = delegateAction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedDelegateAction = new actions_1.SignedDelegate({\n            delegateAction,\n            signature: new signature_1.Signature({\n                keyType,\n                data: signature,\n            }),\n        });\n        return {\n            hash: new Uint8Array((0, sha256_1.sha256)(message)),\n            signedDelegateAction,\n        };\n    });\n}\nexports.signDelegateAction = signDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsdUJBQXVCO0FBQ3BELGlCQUFpQixtQkFBTyxDQUFDLG9FQUFzQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQyxxR0FBVztBQUNyQyw2QkFBNkIsbUJBQU8sQ0FBQywySEFBc0I7QUFDM0QsaUJBQWlCLG1CQUFPLENBQUMsbUdBQVU7QUFDbkMsb0JBQW9CLG1CQUFPLENBQUMseUdBQWE7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsbUdBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsb0NBQW9DO0FBQ3ZGLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0JBQXdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3NpZ24uanM/Yzg1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaWduRGVsZWdhdGVBY3Rpb24gPSBleHBvcnRzLnNpZ25UcmFuc2FjdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgYWN0aW9uc18xID0gcmVxdWlyZShcIi4vYWN0aW9uc1wiKTtcbmNvbnN0IGNyZWF0ZV90cmFuc2FjdGlvbl8xID0gcmVxdWlyZShcIi4vY3JlYXRlX3RyYW5zYWN0aW9uXCIpO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG5jb25zdCBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2NyeXB0b1wiKTtcbi8qKlxuICogU2lnbnMgYSBnaXZlbiB0cmFuc2FjdGlvbiBmcm9tIGFuIGFjY291bnQgd2l0aCBnaXZlbiBrZXlzLCBhcHBsaWVkIHRvIHRoZSBnaXZlbiBuZXR3b3JrXG4gKiBAcGFyYW0gdHJhbnNhY3Rpb24gVGhlIFRyYW5zYWN0aW9uIG9iamVjdCB0byBzaWduXG4gKiBAcGFyYW0gc2lnbmVyIFRoZSB7U2lnbmVyfSBvYmplY3QgdGhhdCBhc3Npc3RzIHdpdGggc2lnbmluZyBrZXlzXG4gKiBAcGFyYW0gYWNjb3VudElkIFRoZSBodW1hbi1yZWFkYWJsZSBORUFSIGFjY291bnQgbmFtZVxuICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gKi9cbmZ1bmN0aW9uIHNpZ25UcmFuc2FjdGlvbk9iamVjdCh0cmFuc2FjdGlvbiwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlVHJhbnNhY3Rpb24pKHRyYW5zYWN0aW9uKTtcbiAgICAgICAgY29uc3QgaGFzaCA9IG5ldyBVaW50OEFycmF5KCgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgY29uc3Qga2V5VHlwZSA9IHRyYW5zYWN0aW9uLnB1YmxpY0tleS5lZDI1NTE5S2V5ID8gY3J5cHRvXzEuS2V5VHlwZS5FRDI1NTE5IDogY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgICAgIGNvbnN0IHNpZ25lZFR4ID0gbmV3IHNjaGVtYV8xLlNpZ25lZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBuZXcgc2lnbmF0dXJlXzEuU2lnbmF0dXJlKHsga2V5VHlwZSwgZGF0YTogc2lnbmF0dXJlLnNpZ25hdHVyZSB9KVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFtoYXNoLCBzaWduZWRUeF07XG4gICAgfSk7XG59XG5mdW5jdGlvbiBzaWduVHJhbnNhY3Rpb24oLi4uYXJncykge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGlmIChhcmdzWzBdLmNvbnN0cnVjdG9yID09PSBzY2hlbWFfMS5UcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgY29uc3QgW3RyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IFtyZWNlaXZlcklkLCBub25jZSwgYWN0aW9ucywgYmxvY2tIYXNoLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB5aWVsZCBzaWduZXIuZ2V0UHVibGljS2V5KGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gKDAsIGNyZWF0ZV90cmFuc2FjdGlvbl8xLmNyZWF0ZVRyYW5zYWN0aW9uKShhY2NvdW50SWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCk7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5zaWduVHJhbnNhY3Rpb24gPSBzaWduVHJhbnNhY3Rpb247XG4vKipcbiAqIFNpZ24gYSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBvcHRpb25zIFNpZ25EZWxlZ2F0ZSBvcHRpb25zXG4gKiBAcGFyYW0gb3B0aW9ucy5kZWxlZ2F0ZUFjdGlvbiBEZWxlZ2F0ZSBhY3Rpb24gdG8gYmUgc2lnbmVkIGJ5IHRoZSBtZXRhIHRyYW5zYWN0aW9uIHNlbmRlclxuICogQHBhcmFtIG9wdGlvbnMuc2lnbmVyIFNpZ25lciBpbnN0YW5jZSBmb3IgdGhlIG1ldGEgdHJhbnNhY3Rpb24gc2VuZGVyXG4gKi9cbmZ1bmN0aW9uIHNpZ25EZWxlZ2F0ZUFjdGlvbih7IGRlbGVnYXRlQWN0aW9uLCBzaWduZXIgfSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlRGVsZWdhdGVBY3Rpb24pKGRlbGVnYXRlQWN0aW9uKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ24obWVzc2FnZSk7XG4gICAgICAgIGNvbnN0IGtleVR5cGUgPSBkZWxlZ2F0ZUFjdGlvbi5wdWJsaWNLZXkuZWQyNTUxOUtleSA/IGNyeXB0b18xLktleVR5cGUuRUQyNTUxOSA6IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgICAgICBjb25zdCBzaWduZWREZWxlZ2F0ZUFjdGlvbiA9IG5ldyBhY3Rpb25zXzEuU2lnbmVkRGVsZWdhdGUoe1xuICAgICAgICAgICAgZGVsZWdhdGVBY3Rpb24sXG4gICAgICAgICAgICBzaWduYXR1cmU6IG5ldyBzaWduYXR1cmVfMS5TaWduYXR1cmUoe1xuICAgICAgICAgICAgICAgIGtleVR5cGUsXG4gICAgICAgICAgICAgICAgZGF0YTogc2lnbmF0dXJlLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGFzaDogbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpLFxuICAgICAgICAgICAgc2lnbmVkRGVsZWdhdGVBY3Rpb24sXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnRzLnNpZ25EZWxlZ2F0ZUFjdGlvbiA9IHNpZ25EZWxlZ2F0ZUFjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/sign.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/signature.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/signature.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signature = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/accounts/node_modules/@near-js/crypto/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nclass ED25519Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.SECP256K1;\n    }\n}\nclass Signature extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === crypto_1.KeyType.ED25519) {\n            this.ed25519Signature = { keyType, data };\n        }\n        else if (keyType === crypto_1.KeyType.SECP256K1) {\n            this.secp256k1Signature = { keyType, data };\n        }\n    }\n    get signature() {\n        return this.ed25519Signature || this.secp256k1Signature;\n    }\n    get signatureType() {\n        return this.signature.keyType;\n    }\n    get data() {\n        return this.signature.data;\n    }\n}\nexports.Signature = Signature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQyxtR0FBaUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsaUdBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakMsZ0JBQWdCO0FBQ2hCO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9zaWduYXR1cmUuanM/ZDIxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQG5lYXItanMvY3J5cHRvXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNsYXNzIEVEMjU1MTlTaWduYXR1cmUgZXh0ZW5kcyB0eXBlc18xLkFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmtleVR5cGUgPSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgfVxufVxuY2xhc3MgU0VDUDI1NksxU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5rZXlUeXBlID0gY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgfVxufVxuY2xhc3MgU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGtleVR5cGUsIGRhdGEgfSkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgICAgIGlmIChrZXlUeXBlID09PSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuZWQyNTUxOVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3AyNTZrMVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkMjU1MTlTaWduYXR1cmUgfHwgdGhpcy5zZWNwMjU2azFTaWduYXR1cmU7XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmVUeXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduYXR1cmUua2V5VHlwZTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpZ25hdHVyZS5kYXRhO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbmF0dXJlID0gU2lnbmF0dXJlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/transactions/lib/signature.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/assignable.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/assignable.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/YTBiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/assignable.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/errors.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/errors.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/Y2RkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsb0dBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLDRGQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxzR0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz8xOTNjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLGlIQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMseUdBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz80YWQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/light_client.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzPzQwYzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/light_client.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/response.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/response.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz8xYTEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/provider/response.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/constants.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/constants.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/YTRmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/errors.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQyxtR0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/NGUyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQyxtR0FBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsMkdBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/ZTEzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/accounts/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/format.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/format.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/format.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsa0dBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLGtHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw0RkFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsOEZBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLGdHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyxvR0FBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsa0dBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLDBGQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzPzU5NDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz8xNTMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/console.logger.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQyxtR0FBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzPzUzMzciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/logger.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCx5QkFBeUIsbUJBQU8sQ0FBQyxtSEFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixPQUFPLGlCQUFpQixPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2FjY291bnRzL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2xvZ2dlci5qcz8yYWI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Mb2dnZXIgPSB2b2lkIDA7XG5jb25zdCBjb25zb2xlX2xvZ2dlcl8xID0gcmVxdWlyZShcIi4vY29uc29sZS5sb2dnZXJcIik7XG5jb25zdCBERUZBVUxUX0xPR19MRVZFTFMgPSBbXG4gICAgJ3ZlcmJvc2UnLFxuICAgICdkZWJ1ZycsXG4gICAgJ2xvZycsXG4gICAgJ3dhcm4nLFxuICAgICdlcnJvcicsXG4gICAgJ2ZhdGFsJyxcbl07XG5jb25zdCBERUZBVUxUX0xPR0dFUiA9IHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudi5ORUFSX05PX0xPR1NcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogbmV3IGNvbnNvbGVfbG9nZ2VyXzEuQ29uc29sZUxvZ2dlcihERUZBVUxUX0xPR19MRVZFTFMpO1xuLyoqXG4gKiBVc2VkIHRvIGxvZyB0aGUgbGlicmFyeSBtZXNzYWdlc1xuICovXG5jbGFzcyBMb2dnZXIge1xuICAgIHN0YXRpYyBlcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5lcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ2xvZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBsb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnd2FybicgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyB3YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdkZWJ1ZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBkZWJ1ZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZGVidWcpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3ZlcmJvc2UnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgdmVyYm9zZShtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudmVyYm9zZSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgc3RhdGljIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYiwgX2M7XG4gICAgICAgIChfYyA9IChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5mYXRhbCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG59XG5leHBvcnRzLkxvZ2dlciA9IExvZ2dlcjtcbl9hID0gTG9nZ2VyO1xuTG9nZ2VyLmluc3RhbmNlUmVmID0gREVGQVVMVF9MT0dHRVI7XG5Mb2dnZXIub3ZlcnJpZGVMb2dnZXIgPSAobG9nZ2VyKSA9PiB7XG4gICAgX2EuaW5zdGFuY2VSZWYgPSBsb2dnZXI7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/logger.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logging.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logging.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyxrR0FBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyxrR0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/M2EwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/logging.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/provider.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/provider.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcz82ZjZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0KHR4UmVzdWx0KSB7XG4gICAgaWYgKHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMgPT09ICdvYmplY3QnICYmIHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IEJ1ZmZlci5mcm9tKHR4UmVzdWx0LnN0YXR1cy5TdWNjZXNzVmFsdWUsICdiYXNlNjQnKS50b1N0cmluZygpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCA9IGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/provider.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/utils.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/utils.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzPzI3MjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/validators.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/validators.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"./node_modules/depd/lib/browser/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvYWNjb3VudHMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLHNEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLDBGQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9hY2NvdW50cy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/NWMyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/validators.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.BrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of BrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass BrowserLocalStorageKeyStore extends keystores_1.KeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Stores a {@link KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage key that's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.BrowserLocalStorageKeyStore = BrowserLocalStorageKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/lib/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/lib/index.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractBrowserLocalStorageKeyStore = exports.BrowserLocalStorageKeyStore = void 0;\nvar browser_local_storage_key_store_1 = __webpack_require__(/*! ./browser_local_storage_key_store */ \"./node_modules/@near-js/keystores-browser/lib/browser_local_storage_key_store.js\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } }));\nvar multi_contract_browser_local_storage_key_store_1 = __webpack_require__(/*! ./multi_contract_browser_local_storage_key_store */ \"./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js\");\nObject.defineProperty(exports, \"MultiContractBrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return multi_contract_browser_local_storage_key_store_1.MultiContractBrowserLocalStorageKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdEQUFnRCxHQUFHLG1DQUFtQztBQUN0Rix3Q0FBd0MsbUJBQU8sQ0FBQywySEFBbUM7QUFDbkYsK0RBQThELEVBQUUscUNBQXFDLHlFQUF5RSxFQUFDO0FBQy9LLHVEQUF1RCxtQkFBTyxDQUFDLHlKQUFrRDtBQUNqSCw0RUFBMkUsRUFBRSxxQ0FBcUMscUdBQXFHLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL2xpYi9pbmRleC5qcz9kMGY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0QnJvd3NlckxvY2FsU3RvcmFnZUtleVN0b3JlID0gZXhwb3J0cy5Ccm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmUgPSB2b2lkIDA7XG52YXIgYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xID0gcmVxdWlyZShcIi4vYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xLkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZTsgfSB9KTtcbnZhciBtdWx0aV9jb250cmFjdF9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9icm93c2VyX2xvY2FsX3N0b3JhZ2Vfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTXVsdGlDb250cmFjdEJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3RfYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xLk11bHRpQ29udHJhY3RCcm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractBrowserLocalStorageKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js\");\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\n/**\n * This class is used to store keys in the browsers local storage.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores } from 'near-api-js';\n *\n * const keyStore = new keyStores.MultiContractBrowserLocalStorageKeyStore();\n * const config = {\n *   keyStore, // instance of MultiContractBrowserLocalStorageKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass MultiContractBrowserLocalStorageKeyStore extends keystores_1.MultiContractKeyStore {\n    /**\n     * @param localStorage defaults to window.localStorage\n     * @param prefix defaults to `near-api-js:keystore:`\n     */\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix || LOCAL_STORAGE_KEY_PREFIX;\n    }\n    /**\n     * Stores a {@link utils/key_pair!KeyPair} in local storage.\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     * @param contractId The contract to store in local storage\n     */\n    setKey(networkId, accountId, keyPair, contractId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId, contractId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId, contractId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link utils/key_pair!KeyPair} from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param contractId The NEAR contract tied to the key pair\n     */\n    removeKey(networkId, accountId, contractId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId, contractId));\n        });\n    }\n    /**\n     * Removes all items that start with `prefix` from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * Gets the contract(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The targeted account.\n     */\n    getContracts(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId && parts[0] === accountId) {\n                        result.push(parts[2]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * @hidden\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @param contractId The NEAR contract tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId, contractId) {\n        return `${this.prefix}${accountId}:${networkId}:${contractId}`;\n    }\n    /** @hidden */\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\nexports.MultiContractBrowserLocalStorageKeyStore = MultiContractBrowserLocalStorageKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/lib/multi_contract_browser_local_storage_key_store.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzPzEzNDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsNEdBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLDBHQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQywwSEFBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLDhIQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMsOEdBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz9iYTk1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLG9IQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQywwSEFBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMsOEhBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/MzQxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz9jM2RhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQywwR0FBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDBEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLDRHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLG9IQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyw4R0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzP2ZkN2IiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLDRHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLG9IQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQyw4R0FBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQyx1REFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQywwREFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQywwR0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/ZGRiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/public_key.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/crypto/lib/index.js\");\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLG1JQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMsNkdBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILHdCQUF3QixtQkFBTyxDQUFDLDJIQUFtQjtBQUNuRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsMklBQTJCO0FBQ25FLHlEQUF3RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanM/N2FlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlDb250cmFjdEtleVN0b3JlID0gZXhwb3J0cy5NZXJnZUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IGV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X2tleV9zdG9yZV8xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG52YXIga2V5c3RvcmVfMSA9IHJlcXVpcmUoXCIuL2tleXN0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZXJnZV9rZXlfc3RvcmVfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xudmFyIG11bHRpX2NvbnRyYWN0X2tleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3Rfa2V5c3RvcmVfMS5NdWx0aUNvbnRyYWN0S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2tleXN0b3JlLmpzP2I5MzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/keystore.js\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                const keyPair = yield keyStore.getKey(networkId, accountId);\n                if (keyPair) {\n                    return keyPair;\n                }\n            }\n            return null;\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.removeKey(networkId, accountId);\n            }\n        });\n    }\n    /**\n     * Removes all items from each key store\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.clear();\n            }\n        });\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const network of yield keyStore.getNetworks()) {\n                    result.add(network);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const account of yield keyStore.getAccounts(networkId)) {\n                    result.add(account);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsbUJBQW1CLG1CQUFPLENBQUMsNkdBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVCQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMEJBQTBCO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL21lcmdlX2tleV9zdG9yZS5qcz84Y2M2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZXNbdGhpcy5vcHRpb25zLndyaXRlS2V5U3RvcmVJbmRleF0uc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCBrZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gZWFjaCBrZXkgc3RvcmVcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBrZXlTdG9yZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIHlpZWxkIGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChuZXR3b3JrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYWNjb3VudChzKSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICovXG4gICAgZ2V0QWNjb3VudHMobmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhY2NvdW50IG9mIHlpZWxkIGtleVN0b3JlLmdldEFjY291bnRzKG5ldHdvcmtJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBNZXJnZUtleVN0b3JlKCR7dGhpcy5rZXlTdG9yZXMuam9pbignLCAnKX0pYDtcbiAgICB9XG59XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSBNZXJnZUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/merge_key_store.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5qcz9hOTMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/NzZlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/Njk2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsNkdBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHFHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywrR0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz9lMDNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLDBIQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMsa0hBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz9mYWY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzPzAwODUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/light_client.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz9iNWJjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/provider/response.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/OWU4MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQyw0R0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/N2Q0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQyw0R0FBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsb0hBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/NDMxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvcnBjX2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQyxHQUFHLG1CQUFtQixHQUFHLHdCQUF3QixHQUFHLHFCQUFxQixHQUFHLG1CQUFtQjtBQUNuSSxnQkFBZ0IsbUJBQU8sQ0FBQywwR0FBZ0I7QUFDeEMsbUNBQW1DLG1CQUFPLENBQUMscURBQVU7QUFDckQsaUJBQWlCLG1CQUFPLENBQUMsc0dBQVc7QUFDcEMsOENBQThDLG1CQUFPLENBQUMsbUlBQXVCO0FBQzdFLGdEQUFnRCxtQkFBTyxDQUFDLHVJQUF5QjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0Esc0hBQXNIO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvZXJyb3JzL3JwY19lcnJvcnMuanM/ZDIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLnBhcnNlUmVzdWx0RXJyb3IgPSBleHBvcnRzLnBhcnNlUnBjRXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gdm9pZCAwO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNvbnN0IG11c3RhY2hlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIm11c3RhY2hlXCIpKTtcbmNvbnN0IGZvcm1hdF8xID0gcmVxdWlyZShcIi4uL2Zvcm1hdFwiKTtcbmNvbnN0IGVycm9yX21lc3NhZ2VzX2pzb25fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9lcnJvcl9tZXNzYWdlcy5qc29uXCIpKTtcbmNvbnN0IHJwY19lcnJvcl9zY2hlbWFfanNvbl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3JwY19lcnJvcl9zY2hlbWEuanNvblwiKSk7XG5jb25zdCBtdXN0YWNoZUhlbHBlcnMgPSB7XG4gICAgZm9ybWF0TmVhcjogKCkgPT4gKG4sIHJlbmRlcikgPT4gKDAsIGZvcm1hdF8xLmZvcm1hdE5lYXJBbW91bnQpKHJlbmRlcihuKSlcbn07XG5jbGFzcyBTZXJ2ZXJFcnJvciBleHRlbmRzIHR5cGVzXzEuVHlwZWRFcnJvciB7XG59XG5leHBvcnRzLlNlcnZlckVycm9yID0gU2VydmVyRXJyb3I7XG5jbGFzcyBTZXJ2ZXJUcmFuc2FjdGlvbkVycm9yIGV4dGVuZHMgU2VydmVyRXJyb3Ige1xufVxuZnVuY3Rpb24gcGFyc2VScGNFcnJvcihlcnJvck9iaikge1xuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGNvbnN0IGVycm9yQ2xhc3NOYW1lID0gd2Fsa1N1YnR5cGUoZXJyb3JPYmosIHJwY19lcnJvcl9zY2hlbWFfanNvbl8xLmRlZmF1bHQuc2NoZW1hLCByZXN1bHQsICcnKTtcbiAgICAvLyBOT1RFOiBUaGlzIGFzc3VtZXMgdGhhdCBhbGwgZXJyb3JzIGV4dGVuZCBUeXBlZEVycm9yXG4gICAgY29uc3QgZXJyb3IgPSBuZXcgU2VydmVyRXJyb3IoZm9ybWF0RXJyb3IoZXJyb3JDbGFzc05hbWUsIHJlc3VsdCksIGVycm9yQ2xhc3NOYW1lKTtcbiAgICBPYmplY3QuYXNzaWduKGVycm9yLCByZXN1bHQpO1xuICAgIHJldHVybiBlcnJvcjtcbn1cbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IHBhcnNlUnBjRXJyb3I7XG5mdW5jdGlvbiBwYXJzZVJlc3VsdEVycm9yKHJlc3VsdCkge1xuICAgIGNvbnN0IHNlcnZlcl9lcnJvciA9IHBhcnNlUnBjRXJyb3IocmVzdWx0LnN0YXR1cy5GYWlsdXJlKTtcbiAgICBjb25zdCBzZXJ2ZXJfdHhfZXJyb3IgPSBuZXcgU2VydmVyVHJhbnNhY3Rpb25FcnJvcigpO1xuICAgIE9iamVjdC5hc3NpZ24oc2VydmVyX3R4X2Vycm9yLCBzZXJ2ZXJfZXJyb3IpO1xuICAgIHNlcnZlcl90eF9lcnJvci50eXBlID0gc2VydmVyX2Vycm9yLnR5cGU7XG4gICAgc2VydmVyX3R4X2Vycm9yLm1lc3NhZ2UgPSBzZXJ2ZXJfZXJyb3IubWVzc2FnZTtcbiAgICBzZXJ2ZXJfdHhfZXJyb3IudHJhbnNhY3Rpb25fb3V0Y29tZSA9IHJlc3VsdC50cmFuc2FjdGlvbl9vdXRjb21lO1xuICAgIHJldHVybiBzZXJ2ZXJfdHhfZXJyb3I7XG59XG5leHBvcnRzLnBhcnNlUmVzdWx0RXJyb3IgPSBwYXJzZVJlc3VsdEVycm9yO1xuZnVuY3Rpb24gZm9ybWF0RXJyb3IoZXJyb3JDbGFzc05hbWUsIGVycm9yRGF0YSkge1xuICAgIGlmICh0eXBlb2YgZXJyb3JfbWVzc2FnZXNfanNvbl8xLmRlZmF1bHRbZXJyb3JDbGFzc05hbWVdID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gbXVzdGFjaGVfMS5kZWZhdWx0LnJlbmRlcihlcnJvcl9tZXNzYWdlc19qc29uXzEuZGVmYXVsdFtlcnJvckNsYXNzTmFtZV0sIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZXJyb3JEYXRhKSwgbXVzdGFjaGVIZWxwZXJzKSk7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShlcnJvckRhdGEpO1xufVxuZXhwb3J0cy5mb3JtYXRFcnJvciA9IGZvcm1hdEVycm9yO1xuLyoqXG4gKiBXYWxrcyB0aHJvdWdoIGRlZmluZWQgc2NoZW1hIHJldHVybmluZyBlcnJvcihzKSByZWN1cnNpdmVseVxuICogQHBhcmFtIGVycm9yT2JqIFRoZSBlcnJvciB0byBiZSBwYXJzZWRcbiAqIEBwYXJhbSBzY2hlbWEgQSBkZWZpbmVkIHNjaGVtYSBpbiBKU09OIG1hcHBpbmcgdG8gdGhlIFJQQyBlcnJvcnNcbiAqIEBwYXJhbSByZXN1bHQgQW4gb2JqZWN0IHVzZWQgaW4gcmVjdXJzaW9uIG9yIGNhbGxlZCBkaXJlY3RseVxuICogQHBhcmFtIHR5cGVOYW1lIFRoZSBodW1hbi1yZWFkYWJsZSBlcnJvciB0eXBlIG5hbWUgYXMgZGVmaW5lZCBpbiB0aGUgSlNPTiBtYXBwaW5nXG4gKi9cbmZ1bmN0aW9uIHdhbGtTdWJ0eXBlKGVycm9yT2JqLCBzY2hlbWEsIHJlc3VsdCwgdHlwZU5hbWUpIHtcbiAgICBsZXQgZXJyb3I7XG4gICAgbGV0IHR5cGU7XG4gICAgbGV0IGVycm9yVHlwZU5hbWU7XG4gICAgZm9yIChjb25zdCBlcnJvck5hbWUgaW4gc2NoZW1hKSB7XG4gICAgICAgIGlmIChpc1N0cmluZyhlcnJvck9ialtlcnJvck5hbWVdKSkge1xuICAgICAgICAgICAgLy8gUmV0dXJuIGVhcmx5IGlmIGVycm9yIHR5cGUgaXMgaW4gYSBzY2hlbWFcbiAgICAgICAgICAgIHJldHVybiBlcnJvck9ialtlcnJvck5hbWVdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc09iamVjdChlcnJvck9ialtlcnJvck5hbWVdKSkge1xuICAgICAgICAgICAgZXJyb3IgPSBlcnJvck9ialtlcnJvck5hbWVdO1xuICAgICAgICAgICAgdHlwZSA9IHNjaGVtYVtlcnJvck5hbWVdO1xuICAgICAgICAgICAgZXJyb3JUeXBlTmFtZSA9IGVycm9yTmFtZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc09iamVjdChlcnJvck9iai5raW5kKSAmJiBpc09iamVjdChlcnJvck9iai5raW5kW2Vycm9yTmFtZV0pKSB7XG4gICAgICAgICAgICBlcnJvciA9IGVycm9yT2JqLmtpbmRbZXJyb3JOYW1lXTtcbiAgICAgICAgICAgIHR5cGUgPSBzY2hlbWFbZXJyb3JOYW1lXTtcbiAgICAgICAgICAgIGVycm9yVHlwZU5hbWUgPSBlcnJvck5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZXJyb3IgJiYgdHlwZSkge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2YgT2JqZWN0LmtleXModHlwZS5wcm9wcykpIHtcbiAgICAgICAgICAgIHJlc3VsdFtwcm9wXSA9IGVycm9yW3Byb3BdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB3YWxrU3VidHlwZShlcnJvciwgc2NoZW1hLCByZXN1bHQsIGVycm9yVHlwZU5hbWUpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gVE9ETzogaXMgdGhpcyB0aGUgcmlnaHQgdGhpbmcgdG8gZG8/XG4gICAgICAgIHJlc3VsdC5raW5kID0gZXJyb3JPYmo7XG4gICAgICAgIHJldHVybiB0eXBlTmFtZTtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlKGVycm9yTWVzc2FnZSwgZXJyb3JUeXBlKSB7XG4gICAgLy8gVGhpcyBmdW5jdGlvbiBzaG91bGQgYmUgcmVtb3ZlZCB3aGVuIEpTT04gUlBDIHN0YXJ0cyByZXR1cm5pbmcgdHlwZWQgZXJyb3JzLlxuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgICBjYXNlIC9eYWNjb3VudCAuKj8gZG9lcyBub3QgZXhpc3Qgd2hpbGUgdmlld2luZyQvLnRlc3QoZXJyb3JNZXNzYWdlKTpcbiAgICAgICAgICAgIHJldHVybiAnQWNjb3VudERvZXNOb3RFeGlzdCc7XG4gICAgICAgIGNhc2UgL15BY2NvdW50IC4qPyBkb2Vzbid0IGV4aXN0JC8udGVzdChlcnJvck1lc3NhZ2UpOlxuICAgICAgICAgICAgcmV0dXJuICdBY2NvdW50RG9lc05vdEV4aXN0JztcbiAgICAgICAgY2FzZSAvXmFjY2VzcyBrZXkgLio/IGRvZXMgbm90IGV4aXN0IHdoaWxlIHZpZXdpbmckLy50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ0FjY2Vzc0tleURvZXNOb3RFeGlzdCc7XG4gICAgICAgIGNhc2UgL3dhc20gZXhlY3V0aW9uIGZhaWxlZCB3aXRoIGVycm9yOiBGdW5jdGlvbkNhbGxFcnJvclxcKENvbXBpbGF0aW9uRXJyb3JcXChDb2RlRG9lc05vdEV4aXN0Ly50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ0NvZGVEb2VzTm90RXhpc3QnO1xuICAgICAgICBjYXNlIC93YXNtIGV4ZWN1dGlvbiBmYWlsZWQgd2l0aCBlcnJvcjogQ29tcGlsYXRpb25FcnJvclxcKENvZGVEb2VzTm90RXhpc3QvLnRlc3QoZXJyb3JNZXNzYWdlKTpcbiAgICAgICAgICAgIHJldHVybiAnQ29kZURvZXNOb3RFeGlzdCc7XG4gICAgICAgIGNhc2UgL3dhc20gZXhlY3V0aW9uIGZhaWxlZCB3aXRoIGVycm9yOiBGdW5jdGlvbkNhbGxFcnJvclxcKE1ldGhvZFJlc29sdmVFcnJvclxcKE1ldGhvZE5vdEZvdW5kLy50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ01ldGhvZE5vdEZvdW5kJztcbiAgICAgICAgY2FzZSAvd2FzbSBleGVjdXRpb24gZmFpbGVkIHdpdGggZXJyb3I6IE1ldGhvZFJlc29sdmVFcnJvclxcKE1ldGhvZE5vdEZvdW5kLy50ZXN0KGVycm9yTWVzc2FnZSk6XG4gICAgICAgICAgICByZXR1cm4gJ01ldGhvZE5vdEZvdW5kJztcbiAgICAgICAgY2FzZSAvVHJhbnNhY3Rpb24gbm9uY2UgXFxkKyBtdXN0IGJlIGxhcmdlciB0aGFuIG5vbmNlIG9mIHRoZSB1c2VkIGFjY2VzcyBrZXkgXFxkKy8udGVzdChlcnJvck1lc3NhZ2UpOlxuICAgICAgICAgICAgcmV0dXJuICdJbnZhbGlkTm9uY2UnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGVycm9yVHlwZTtcbiAgICB9XG59XG5leHBvcnRzLmdldEVycm9yVHlwZUZyb21FcnJvck1lc3NhZ2UgPSBnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlO1xuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gZGV0ZXJtaW5pbmcgaWYgdGhlIGFyZ3VtZW50IGlzIGFuIG9iamVjdFxuICogQHBhcmFtIG4gVmFsdWUgdG8gY2hlY2tcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3Qobikge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobikgPT09ICdbb2JqZWN0IE9iamVjdF0nO1xufVxuLyoqXG4gKiBIZWxwZXIgZnVuY3Rpb24gZGV0ZXJtaW5pbmcgaWYgdGhlIGFyZ3VtZW50IGlzIGEgc3RyaW5nXG4gKiBAcGFyYW0gbiBWYWx1ZSB0byBjaGVja1xuICovXG5mdW5jdGlvbiBpc1N0cmluZyhuKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuKSA9PT0gJ1tvYmplY3QgU3RyaW5nXSc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsMkdBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLDJHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxxR0FBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsdUdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLHlHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyw2R0FBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsMkdBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLG1HQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzP2FiNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \**********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz81NzkzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQyw0R0FBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzPzA2MjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCx5QkFBeUIsbUJBQU8sQ0FBQyw0SEFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixPQUFPLGlCQUFpQixPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy1icm93c2VyL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2xvZ2dlci5qcz83MTkxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Mb2dnZXIgPSB2b2lkIDA7XG5jb25zdCBjb25zb2xlX2xvZ2dlcl8xID0gcmVxdWlyZShcIi4vY29uc29sZS5sb2dnZXJcIik7XG5jb25zdCBERUZBVUxUX0xPR19MRVZFTFMgPSBbXG4gICAgJ3ZlcmJvc2UnLFxuICAgICdkZWJ1ZycsXG4gICAgJ2xvZycsXG4gICAgJ3dhcm4nLFxuICAgICdlcnJvcicsXG4gICAgJ2ZhdGFsJyxcbl07XG5jb25zdCBERUZBVUxUX0xPR0dFUiA9IHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudi5ORUFSX05PX0xPR1NcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogbmV3IGNvbnNvbGVfbG9nZ2VyXzEuQ29uc29sZUxvZ2dlcihERUZBVUxUX0xPR19MRVZFTFMpO1xuLyoqXG4gKiBVc2VkIHRvIGxvZyB0aGUgbGlicmFyeSBtZXNzYWdlc1xuICovXG5jbGFzcyBMb2dnZXIge1xuICAgIHN0YXRpYyBlcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5lcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ2xvZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBsb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnd2FybicgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyB3YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdkZWJ1ZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBkZWJ1ZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZGVidWcpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3ZlcmJvc2UnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgdmVyYm9zZShtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudmVyYm9zZSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgc3RhdGljIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYiwgX2M7XG4gICAgICAgIChfYyA9IChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5mYXRhbCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG59XG5leHBvcnRzLkxvZ2dlciA9IExvZ2dlcjtcbl9hID0gTG9nZ2VyO1xuTG9nZ2VyLmluc3RhbmNlUmVmID0gREVGQVVMVF9MT0dHRVI7XG5Mb2dnZXIub3ZlcnJpZGVMb2dnZXIgPSAobG9nZ2VyKSA9PiB7XG4gICAgX2EuaW5zdGFuY2VSZWYgPSBsb2dnZXI7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/logger.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQywyR0FBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQywyR0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/ODgyMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/logging.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcz9mNGIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0KHR4UmVzdWx0KSB7XG4gICAgaWYgKHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMgPT09ICdvYmplY3QnICYmIHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IEJ1ZmZlci5mcm9tKHR4UmVzdWx0LnN0YXR1cy5TdWNjZXNzVmFsdWUsICdiYXNlNjQnKS50b1N0cmluZygpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCA9IGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/provider.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzP2JhYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"./node_modules/depd/lib/browser/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzLWJyb3dzZXIvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLHNEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLG1HQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMtYnJvd3Nlci9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/MTM2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/validators.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/lib/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/lib/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WalletConnection = exports.ConnectedWalletAccount = exports.Near = void 0;\nvar near_1 = __webpack_require__(/*! ./near */ \"./node_modules/@near-js/wallet-account/lib/near.js\");\nObject.defineProperty(exports, \"Near\", ({ enumerable: true, get: function () { return near_1.Near; } }));\nvar wallet_account_1 = __webpack_require__(/*! ./wallet_account */ \"./node_modules/@near-js/wallet-account/lib/wallet_account.js\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", ({ enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } }));\nObject.defineProperty(exports, \"WalletConnection\", ({ enumerable: true, get: function () { return wallet_account_1.WalletConnection; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLDhCQUE4QixHQUFHLFlBQVk7QUFDeEUsYUFBYSxtQkFBTyxDQUFDLGtFQUFRO0FBQzdCLHdDQUF1QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN0Ryx1QkFBdUIsbUJBQU8sQ0FBQyxzRkFBa0I7QUFDakQsMERBQXlELEVBQUUscUNBQXFDLG1EQUFtRCxFQUFDO0FBQ3BKLG9EQUFtRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbGliL2luZGV4LmpzPzI1NGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldhbGxldENvbm5lY3Rpb24gPSBleHBvcnRzLkNvbm5lY3RlZFdhbGxldEFjY291bnQgPSBleHBvcnRzLk5lYXIgPSB2b2lkIDA7XG52YXIgbmVhcl8xID0gcmVxdWlyZShcIi4vbmVhclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5lYXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5lYXJfMS5OZWFyOyB9IH0pO1xudmFyIHdhbGxldF9hY2NvdW50XzEgPSByZXF1aXJlKFwiLi93YWxsZXRfYWNjb3VudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3RlZFdhbGxldEFjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuQ29ubmVjdGVkV2FsbGV0QWNjb3VudDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIldhbGxldENvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuV2FsbGV0Q29ubmVjdGlvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/lib/near.js":
/*!**********************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/lib/near.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link \"@near-js/accounts\".account.Account | Account} through the {@link \"@near-js/providers\".json-rpc-provider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#account](https://docs.near.org/tools/near-api-js/quick-reference#account)\n *\n * @module near\n */\nconst accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        var _a;\n        this.config = config;\n        this.connection = accounts_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: config.provider || { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || ((_a = config.deps) === null || _a === void 0 ? void 0 : _a.keyStore) },\n            jsvmAccountId: config.jsvmAccountId || `jsvm.${config.networkId}`\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? BigInt(config.initialBalance) : BigInt('500000000000000000000000000');\n            this.accountCreator = new accounts_1.LocalAccountCreator(new accounts_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new accounts_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    account(accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new accounts_1.Account(this.connection, accountId);\n            return account;\n        });\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig#masterAccount} and {@link NearConfig#helperUrl}\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    createAccount(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.accountCreator) {\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n            }\n            yield this.accountCreator.createAccount(accountId, publicKey);\n            return new accounts_1.Account(this.connection, accountId);\n        });\n    }\n}\nexports.Near = Near;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbGliL25lYXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVk7QUFDWjtBQUNBO0FBQ0EsUUFBUSxZQUFZLGdDQUFnQyxxREFBcUQsYUFBYSwrRUFBK0U7QUFDck0sNkJBQTZCLGlCQUFpQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsd0VBQW1CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGlDQUFpQyxnREFBZ0Q7QUFDNUgsdUNBQXVDLDRIQUE0SDtBQUNuSywyREFBMkQsaUJBQWlCO0FBQzVFLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxvQ0FBb0MscUJBQXFCO0FBQ3pELHFDQUFxQztBQUNyQyxtQ0FBbUM7QUFDbkMsYUFBYSxnQ0FBZ0MsS0FBSztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9saWIvbmVhci5qcz80N2U5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5lYXIgPSB2b2lkIDA7XG4vKipcbiAqIFRoaXMgbW9kdWxlIGNvbnRhaW5zIHRoZSBtYWluIGNsYXNzIGRldmVsb3BlcnMgd2lsbCB1c2UgdG8gaW50ZXJhY3Qgd2l0aCBORUFSLlxuICogVGhlIHtAbGluayBOZWFyfSBjbGFzcyBpcyB1c2VkIHRvIGludGVyYWN0IHdpdGgge0BsaW5rIFwiQG5lYXItanMvYWNjb3VudHNcIi5hY2NvdW50LkFjY291bnQgfCBBY2NvdW50fSB0aHJvdWdoIHRoZSB7QGxpbmsgXCJAbmVhci1qcy9wcm92aWRlcnNcIi5qc29uLXJwYy1wcm92aWRlci5Kc29uUnBjUHJvdmlkZXIgfCBKc29uUnBjUHJvdmlkZXJ9LlxuICogSXQgaXMgY29uZmlndXJlZCB2aWEgdGhlIHtAbGluayBOZWFyQ29uZmlnfS5cbiAqXG4gKiBAc2VlIFtodHRwczovL2RvY3MubmVhci5vcmcvdG9vbHMvbmVhci1hcGktanMvcXVpY2stcmVmZXJlbmNlI2FjY291bnRdKGh0dHBzOi8vZG9jcy5uZWFyLm9yZy90b29scy9uZWFyLWFwaS1qcy9xdWljay1yZWZlcmVuY2UjYWNjb3VudClcbiAqXG4gKiBAbW9kdWxlIG5lYXJcbiAqL1xuY29uc3QgYWNjb3VudHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9hY2NvdW50c1wiKTtcbi8qKlxuICogVGhpcyBpcyB0aGUgbWFpbiBjbGFzcyBkZXZlbG9wZXJzIHNob3VsZCB1c2UgdG8gaW50ZXJhY3Qgd2l0aCBORUFSLlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiBjb25zdCBuZWFyID0gbmV3IE5lYXIoY29uZmlnKTtcbiAqIGBgYFxuICovXG5jbGFzcyBOZWFyIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uID0gYWNjb3VudHNfMS5Db25uZWN0aW9uLmZyb21Db25maWcoe1xuICAgICAgICAgICAgbmV0d29ya0lkOiBjb25maWcubmV0d29ya0lkLFxuICAgICAgICAgICAgcHJvdmlkZXI6IGNvbmZpZy5wcm92aWRlciB8fCB7IHR5cGU6ICdKc29uUnBjUHJvdmlkZXInLCBhcmdzOiB7IHVybDogY29uZmlnLm5vZGVVcmwsIGhlYWRlcnM6IGNvbmZpZy5oZWFkZXJzIH0gfSxcbiAgICAgICAgICAgIHNpZ25lcjogY29uZmlnLnNpZ25lciB8fCB7IHR5cGU6ICdJbk1lbW9yeVNpZ25lcicsIGtleVN0b3JlOiBjb25maWcua2V5U3RvcmUgfHwgKChfYSA9IGNvbmZpZy5kZXBzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eua2V5U3RvcmUpIH0sXG4gICAgICAgICAgICBqc3ZtQWNjb3VudElkOiBjb25maWcuanN2bUFjY291bnRJZCB8fCBganN2bS4ke2NvbmZpZy5uZXR3b3JrSWR9YFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNvbmZpZy5tYXN0ZXJBY2NvdW50KSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBmaWd1cmUgb3V0IGJldHRlciB3YXkgb2Ygc3BlY2lmaXlpbmcgaW5pdGlhbCBiYWxhbmNlLlxuICAgICAgICAgICAgLy8gSGFyZGNvZGVkIG51bWJlciBiZWxvdyBtdXN0IGJlIGVub3VnaCB0byBwYXkgdGhlIGdhcyBjb3N0IHRvIGRldi1kZXBsb3kgd2l0aCBuZWFyLXNoZWxsIGZvciBtdWx0aXBsZSB0aW1lc1xuICAgICAgICAgICAgY29uc3QgaW5pdGlhbEJhbGFuY2UgPSBjb25maWcuaW5pdGlhbEJhbGFuY2UgPyBCaWdJbnQoY29uZmlnLmluaXRpYWxCYWxhbmNlKSA6IEJpZ0ludCgnNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwJyk7XG4gICAgICAgICAgICB0aGlzLmFjY291bnRDcmVhdG9yID0gbmV3IGFjY291bnRzXzEuTG9jYWxBY2NvdW50Q3JlYXRvcihuZXcgYWNjb3VudHNfMS5BY2NvdW50KHRoaXMuY29ubmVjdGlvbiwgY29uZmlnLm1hc3RlckFjY291bnQpLCBpbml0aWFsQmFsYW5jZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29uZmlnLmhlbHBlclVybCkge1xuICAgICAgICAgICAgdGhpcy5hY2NvdW50Q3JlYXRvciA9IG5ldyBhY2NvdW50c18xLlVybEFjY291bnRDcmVhdG9yKHRoaXMuY29ubmVjdGlvbiwgY29uZmlnLmhlbHBlclVybCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmFjY291bnRDcmVhdG9yID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIG5lYXIgYWNjb3VudElkIHVzZWQgdG8gaW50ZXJhY3Qgd2l0aCB0aGUgbmV0d29yay5cbiAgICAgKi9cbiAgICBhY2NvdW50KGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgYWNjb3VudCA9IG5ldyBhY2NvdW50c18xLkFjY291bnQodGhpcy5jb25uZWN0aW9uLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgcmV0dXJuIGFjY291bnQ7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYW4gYWNjb3VudCB1c2luZyB0aGUge0BsaW5rIEFjY291bnRDcmVhdG9yfS4gRWl0aGVyOlxuICAgICAqICogdXNpbmcgYSBtYXN0ZXJBY2NvdW50IHdpdGgge0BsaW5rIExvY2FsQWNjb3VudENyZWF0b3J9XG4gICAgICogKiB1c2luZyB0aGUgaGVscGVyVXJsIHdpdGgge0BsaW5rIFVybEFjY291bnRDcmVhdG9yfVxuICAgICAqIEBzZWUge0BsaW5rIE5lYXJDb25maWcjbWFzdGVyQWNjb3VudH0gYW5kIHtAbGluayBOZWFyQ29uZmlnI2hlbHBlclVybH1cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhY2NvdW50SWRcbiAgICAgKiBAcGFyYW0gcHVibGljS2V5XG4gICAgICovXG4gICAgY3JlYXRlQWNjb3VudChhY2NvdW50SWQsIHB1YmxpY0tleSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmFjY291bnRDcmVhdG9yKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IHNwZWNpZnkgYWNjb3VudCBjcmVhdG9yLCBlaXRoZXIgdmlhIG1hc3RlckFjY291bnQgb3IgaGVscGVyVXJsIGNvbmZpZ3VyYXRpb24gc2V0dGluZ3MuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCB0aGlzLmFjY291bnRDcmVhdG9yLmNyZWF0ZUFjY291bnQoYWNjb3VudElkLCBwdWJsaWNLZXkpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBhY2NvdW50c18xLkFjY291bnQodGhpcy5jb25uZWN0aW9uLCBhY2NvdW50SWQpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLk5lYXIgPSBOZWFyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/lib/near.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/lib/wallet_account.js":
/*!********************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/lib/wallet_account.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConnectedWalletAccount = exports.WalletConnection = void 0;\n/**\n * This module exposes two classes:\n * * {@link WalletConnection} which redirects users to [NEAR Wallet](https://wallet.near.org/) for key management.\n * * {@link ConnectedWalletAccount} is an {@link \"@near-js/accounts\".account.Account | Account} implementation that uses {@link WalletConnection} to get keys\n *\n * @module walletAccount\n */\nconst accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\");\nconst borsh_1 = __webpack_require__(/*! borsh */ \"./node_modules/borsh/lib/cjs/index.js\");\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n/**\n * This class is not intended for use outside the browser. Without `window` (i.e. in server contexts), it will instantiate but will throw a clear error when used.\n *\n * @see [https://docs.near.org/tools/near-api-js/quick-reference#wallet](https://docs.near.org/tools/near-api-js/quick-reference#wallet)\n * @example\n * ```js\n * // create new WalletConnection instance\n * const wallet = new WalletConnection(near, 'my-app');\n *\n * // If not signed in redirect to the NEAR wallet to sign in\n * // keys will be stored in the BrowserLocalStorageKeyStore\n * if(!wallet.isSignedIn()) return wallet.requestSignIn()\n * ```\n */\nclass WalletConnection {\n    constructor(near, appKeyPrefix) {\n        if (typeof (appKeyPrefix) !== 'string') {\n            throw new Error('Please define a clear appKeyPrefix for this WalletConnection instance as the second argument to the constructor');\n        }\n        if (typeof window === 'undefined') {\n            return new Proxy(this, {\n                get(target, property) {\n                    if (property === 'isSignedIn') {\n                        return () => false;\n                    }\n                    if (property === 'getAccountId') {\n                        return () => '';\n                    }\n                    if (target[property] && typeof target[property] === 'function') {\n                        return () => {\n                            throw new Error('No window found in context, please ensure you are using WalletConnection on the browser');\n                        };\n                    }\n                    return target[property];\n                }\n            });\n        }\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInPromise = this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletConnection is authorized with the wallet.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn();\n     * ```\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns promise of completing signing in after redirecting from wallet\n     * @example\n     * ```js\n     * // on login callback page\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.isSignedIn(); // false\n     * await wallet.isSignedInAsync(); // true\n     * ```\n     */\n    isSignedInAsync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._completeSignInPromise) {\n                return this.isSignedIn();\n            }\n            yield this._completeSignInPromise;\n            return this.isSignedIn();\n        });\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * wallet.getAccountId();\n     * ```\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Constructs string URL to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // return string URL to the NEAR Wallet\n     * const url = await wallet.requestSignInUrl({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    requestSignInUrl({ contractId, methodNames, successUrl, failureUrl, keyType = 'ed25519' }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n            newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n            newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n            if (contractId) {\n                /* Throws exception if contract account does not exist */\n                const contractAccount = yield this._near.account(contractId);\n                yield contractAccount.state();\n                newUrl.searchParams.set('contract_id', contractId);\n                const accessKey = crypto_1.KeyPair.fromRandom(keyType);\n                newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n                yield this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n            }\n            if (methodNames) {\n                methodNames.forEach(methodName => {\n                    newUrl.searchParams.append('methodNames', methodName);\n                });\n            }\n            return newUrl.toString();\n        });\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param options An optional options object\n     * @param options.contractId The NEAR account where the contract is deployed\n     * @param options.successUrl URL to redirect upon success. Default: current url\n     * @param options.failureUrl URL to redirect upon failure. Default: current url\n     *\n     * @example\n     * ```js\n     * const wallet = new WalletConnection(near, 'my-app');\n     * // redirects to the NEAR Wallet\n     * wallet.requestSignIn({ contractId: 'account-with-deploy-contract.near' });\n     * ```\n     */\n    requestSignIn(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield this.requestSignInUrl(options);\n            window.location.assign(url);\n        });\n    }\n    /**\n     * Constructs string URL to the wallet to sign a transaction or batch of transactions.\n     *\n     * @param options A required options object\n     * @param options.transactions List of transactions to sign\n     * @param options.callbackUrl URL to redirect upon success. Default: current url\n     * @param options.meta Meta information the wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param\n     *\n     */\n    requestSignTransactionsUrl({ transactions, meta, callbackUrl }) {\n        const currentUrl = new URL(window.location.href);\n        const newUrl = new URL('sign', this._walletBaseUrl);\n        newUrl.searchParams.set('transactions', transactions\n            .map(transaction => (0, borsh_1.serialize)(transactions_1.SCHEMA.Transaction, transaction))\n            .map(serialized => Buffer.from(serialized).toString('base64'))\n            .join(','));\n        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n        if (meta)\n            newUrl.searchParams.set('meta', meta);\n        return newUrl.toString();\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions by redirecting to the wallet.\n     *\n     * @param options A required options object\n     * @param options.transactions List of transactions to sign\n     * @param options.callbackUrl URL to redirect upon success. Default: current url\n     * @param options.meta Meta information the wallet will send back to the application. `meta` will be attached to the `callbackUrl` as a url search param\n     *\n     */\n    requestSignTransactions(options) {\n        const url = this.requestSignTransactionsUrl(options);\n        window.location.assign(url);\n    }\n    /**\n     * @hidden\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    _completeSignInWithAccessKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const publicKey = currentUrl.searchParams.get('public_key') || '';\n            const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n            const accountId = currentUrl.searchParams.get('account_id') || '';\n            // TODO: Handle errors during login\n            if (accountId) {\n                const authData = {\n                    accountId,\n                    allKeys\n                };\n                window.localStorage.setItem(this._authDataKey, JSON.stringify(authData));\n                if (publicKey) {\n                    yield this._moveKeyFromTempToPermanent(accountId, publicKey);\n                }\n                this._authData = authData;\n            }\n            currentUrl.searchParams.delete('public_key');\n            currentUrl.searchParams.delete('all_keys');\n            currentUrl.searchParams.delete('account_id');\n            currentUrl.searchParams.delete('meta');\n            currentUrl.searchParams.delete('transactionHashes');\n            window.history.replaceState({}, document.title, currentUrl.toString());\n        });\n    }\n    /**\n     * @hidden\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    _moveKeyFromTempToPermanent(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n            yield this._keyStore.setKey(this._networkId, accountId, keyPair);\n            yield this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        });\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletConnection.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexports.WalletConnection = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.\n */\nclass ConnectedWalletAccount extends accounts_1.Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    /**\n     * Sign a transaction by redirecting to the NEAR Wallet\n     * @see {@link WalletConnection#requestSignTransactions}\n     * @param options An optional options object\n     * @param options.receiverId The NEAR account ID of the transaction receiver.\n     * @param options.actions An array of transaction actions to be performed.\n     * @param options.walletMeta Additional metadata to be included in the wallet signing request.\n     * @param options.walletCallbackUrl URL to redirect upon completion of the wallet signing process. Default: current URL.\n     */\n    signAndSendTransaction({ receiverId, actions, walletMeta, walletCallbackUrl = window.location.href }) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const localKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            let accessKey = yield this.accessKeyForTransaction(receiverId, actions, localKey);\n            if (!accessKey) {\n                throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n            }\n            if (localKey && localKey.toString() === accessKey.public_key) {\n                try {\n                    return yield _super.signAndSendTransaction.call(this, { receiverId, actions });\n                }\n                catch (e) {\n                    if (e.type === 'NotEnoughAllowance') {\n                        accessKey = yield this.accessKeyForTransaction(receiverId, actions);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            const block = yield this.connection.provider.block({ finality: 'final' });\n            const blockHash = (0, utils_1.baseDecode)(block.header.hash);\n            const publicKey = crypto_1.PublicKey.from(accessKey.public_key);\n            // TODO: Cache & listen for nonce updates for given access key\n            const nonce = accessKey.access_key.nonce + BigInt(1);\n            const transaction = (0, transactions_1.createTransaction)(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n            yield this.walletConnection.requestSignTransactions({\n                transactions: [transaction],\n                meta: walletMeta,\n                callbackUrl: walletCallbackUrl\n            });\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Failed to redirect to sign transaction'));\n                }, 1000);\n            });\n            // TODO: Aggregate multiple transaction request with \"debounce\".\n            // TODO: Introduce TransactionQueue which also can be used to watch for status?\n        });\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of \\{access_key: AccessKey, public_key: PublicKey\\} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { access_key: { permission } } = accessKey;\n            if (permission === 'FullAccess') {\n                return true;\n            }\n            if (permission.FunctionCall) {\n                const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n                /********************************\n                Accept multisig access keys and let wallets attempt to signAndSendTransaction\n                If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n                ********************************/\n                if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                    return true;\n                }\n                if (allowedReceiverId === receiverId) {\n                    if (actions.length !== 1) {\n                        return false;\n                    }\n                    const [{ functionCall }] = actions;\n                    return functionCall &&\n                        (!functionCall.deposit || functionCall.deposit.toString() === '0') && // TODO: Should support charging amount smaller than allowance?\n                        (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                    // TODO: Handle cases when allowance doesn't have enough to pay for gas\n                }\n            }\n            // TODO: Support other permissions than FunctionCall\n            return false;\n        });\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     */\n    accessKeyForTransaction(receiverId, actions, localKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeys = yield this.getAccessKeys();\n            if (localKey) {\n                const accessKey = accessKeys.find(key => key.public_key.toString() === localKey.toString());\n                if (accessKey && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            const walletKeys = this.walletConnection._authData.allKeys;\n            for (const accessKey of accessKeys) {\n                if (walletKeys.indexOf(accessKey.public_key) !== -1 && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            return null;\n        });\n    }\n}\nexports.ConnectedWalletAccount = ConnectedWalletAccount;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/lib/wallet_account.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzP2FhZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMseUdBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLHVHQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQyx1SEFBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLDJIQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMsMkdBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz82ZDg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLGlIQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQyx1SEFBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMsMkhBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/YzFmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz81MDEzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQyx1R0FBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDBEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLHlHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLGlIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQywyR0FBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzPzE1OTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \*****************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLHlHQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLGlIQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQywyR0FBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQyx1REFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQywwREFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQyx1R0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/NjAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvcHVibGljX2tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixnQkFBZ0IsbUJBQU8sQ0FBQyx1R0FBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQXVCO0FBQ2pELG9DQUFvQyxtQkFBTyxDQUFDLHVEQUFXO0FBQ3ZELG9CQUFvQixtQkFBTyxDQUFDLHlHQUFhO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLHVHQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxRQUFRO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxRQUFRO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDLGdCQUFnQjtBQUNoQjtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCx3QkFBd0IsYUFBYSxRQUFRO0FBQ3JHO0FBQ0EsK0JBQStCLGlDQUFpQztBQUNoRTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOEJBQThCLEdBQUcsV0FBVztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsUUFBUTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy9jcnlwdG8vbGliL3B1YmxpY19rZXkuanM/YmY5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmZ1bmN0aW9uIGtleV90eXBlX3RvX3N0cihrZXlUeXBlKSB7XG4gICAgc3dpdGNoIChrZXlUeXBlKSB7XG4gICAgICAgIGNhc2UgY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5OiByZXR1cm4gJ2VkMjU1MTknO1xuICAgICAgICBjYXNlIGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxOiByZXR1cm4gJ3NlY3AyNTZrMSc7XG4gICAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcihgVW5rbm93biBrZXkgdHlwZSAke2tleVR5cGV9YCk7XG4gICAgfVxufVxuZnVuY3Rpb24gc3RyX3RvX2tleV90eXBlKGtleVR5cGUpIHtcbiAgICBzd2l0Y2ggKGtleVR5cGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICBjYXNlICdlZDI1NTE5JzogcmV0dXJuIGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOTtcbiAgICAgICAgY2FzZSAnc2VjcDI1NmsxJzogcmV0dXJuIGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24ga2V5IHR5cGUgJHtrZXlUeXBlfWApO1xuICAgIH1cbn1cbmNsYXNzIEVEMjU1MTlQdWJsaWNLZXkgZXh0ZW5kcyB0eXBlc18xLkFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmtleVR5cGUgPSBjb25zdGFudHNfMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgfVxufVxuY2xhc3MgU0VDUDI1NksxUHVibGljS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5rZXlUeXBlID0gY29uc3RhbnRzXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgfVxufVxuLyoqXG4gKiBQdWJsaWNLZXkgcmVwcmVzZW50YXRpb24gdGhhdCBoYXMgdHlwZSBhbmQgYnl0ZXMgb2YgdGhlIGtleS5cbiAqL1xuY2xhc3MgUHVibGljS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGtleVR5cGUsIGRhdGEgfSkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgICAgIGlmIChrZXlUeXBlID09PSBjb25zdGFudHNfMS5LZXlUeXBlLkVEMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuZWQyNTUxOUtleSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleVR5cGUgPT09IGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3AyNTZrMUtleSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBQdWJsaWNLZXkgaW5zdGFuY2UgZnJvbSBhIHN0cmluZyBvciBhbiBleGlzdGluZyBQdWJsaWNLZXkgaW5zdGFuY2UuXG4gICAgICogQHBhcmFtIHZhbHVlIFRoZSBzdHJpbmcgb3IgUHVibGljS2V5IGluc3RhbmNlIHRvIGNyZWF0ZSBhIFB1YmxpY0tleSBmcm9tLlxuICAgICAqIEByZXR1cm5zIHtQdWJsaWNLZXl9IFRoZSBQdWJsaWNLZXkgaW5zdGFuY2UuXG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBQdWJsaWNLZXkuZnJvbVN0cmluZyh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgUHVibGljS2V5IGluc3RhbmNlIGZyb20gYW4gZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqIEBwYXJhbSBlbmNvZGVkS2V5IFRoZSBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHJldHVybnMge1B1YmxpY0tleX0gVGhlIFB1YmxpY0tleSBpbnN0YW5jZSBjcmVhdGVkIGZyb20gdGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVN0cmluZyhlbmNvZGVkS2V5KSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gZW5jb2RlZEtleS5zcGxpdCgnOicpO1xuICAgICAgICBsZXQgcHVibGljS2V5O1xuICAgICAgICBsZXQga2V5VHlwZTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgcHVibGljS2V5ID0gcGFydHNbMF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFydHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICBwdWJsaWNLZXkgPSBwYXJ0c1sxXTtcbiAgICAgICAgICAgIGtleVR5cGUgPSBzdHJfdG9fa2V5X3R5cGUocGFydHNbMF0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVuY29kZWQga2V5IGZvcm1hdCwgbXVzdCBiZSA8Y3VydmU+OjxlbmNvZGVkIGtleT4nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZWNvZGVkUHVibGljS2V5ID0gKDAsIHV0aWxzXzEuYmFzZURlY29kZSkocHVibGljS2V5KTtcbiAgICAgICAgaWYgKCFrZXlUeXBlKSB7XG4gICAgICAgICAgICBrZXlUeXBlID0gZGVjb2RlZFB1YmxpY0tleS5sZW5ndGggPT09IGNvbnN0YW50c18xLktleVNpemUuU0VDUDI1NmsxX1BVQkxJQ19LRVkgPyBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSA6IGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrZXlTaXplID0ga2V5VHlwZSA9PT0gY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5ID8gY29uc3RhbnRzXzEuS2V5U2l6ZS5FRDI1NTE5X1BVQkxJQ19LRVkgOiBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1AyNTZrMV9QVUJMSUNfS0VZO1xuICAgICAgICBpZiAoZGVjb2RlZFB1YmxpY0tleS5sZW5ndGggIT09IGtleVNpemUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwdWJsaWMga2V5IHNpemUgKCR7ZGVjb2RlZFB1YmxpY0tleS5sZW5ndGh9KSwgbXVzdCBiZSAke2tleVNpemV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQdWJsaWNLZXkoeyBrZXlUeXBlLCBkYXRhOiBkZWNvZGVkUHVibGljS2V5IH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwdWJsaWMga2V5LlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHB1YmxpYyBrZXkuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIGNvbnN0IGVuY29kZWRLZXkgPSAoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKSh0aGlzLmRhdGEpO1xuICAgICAgICByZXR1cm4gYCR7a2V5X3R5cGVfdG9fc3RyKHRoaXMua2V5VHlwZSl9OiR7ZW5jb2RlZEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZmllcyBhIG1lc3NhZ2Ugc2lnbmF0dXJlIHVzaW5nIHRoZSBwdWJsaWMga2V5LlxuICAgICAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGJlIHZlcmlmaWVkLlxuICAgICAqIEBwYXJhbSBzaWduYXR1cmUgVGhlIHNpZ25hdHVyZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gYHRydWVgIGlmIHRoZSBzaWduYXR1cmUgaXMgdmFsaWQsIG90aGVyd2lzZSBgZmFsc2VgLlxuICAgICAqL1xuICAgIHZlcmlmeShtZXNzYWdlLCBzaWduYXR1cmUpIHtcbiAgICAgICAgY29uc3Qga2V5VHlwZSA9IHRoaXMua2V5VHlwZTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICAgICAgc3dpdGNoIChrZXlUeXBlKSB7XG4gICAgICAgICAgICBjYXNlIGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOTpcbiAgICAgICAgICAgICAgICByZXR1cm4gZWQyNTUxOV8xLmVkMjU1MTkudmVyaWZ5KHNpZ25hdHVyZSwgbWVzc2FnZSwgZGF0YSk7XG4gICAgICAgICAgICBjYXNlIGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxOlxuICAgICAgICAgICAgICAgIHJldHVybiBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhVmVyaWZ5KHNpZ25hdHVyZS5zdWJhcnJheSgwLCA2NCksIG1lc3NhZ2UsIG5ldyBVaW50OEFycmF5KFsweDA0LCAuLi5kYXRhXSkpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24ga2V5IHR5cGU6ICR7a2V5VHlwZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQga2V5UGFpcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWQyNTUxOUtleSB8fCB0aGlzLnNlY3AyNTZrMUtleTtcbiAgICB9XG4gICAgZ2V0IGtleVR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleVBhaXIua2V5VHlwZTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleVBhaXIuZGF0YTtcbiAgICB9XG59XG5leHBvcnRzLlB1YmxpY0tleSA9IFB1YmxpY0tleTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/public_key.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js ***!
  \********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.actionCreators = exports.stringifyJsonOrBytes = void 0;\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\");\n/**\n * Creates a full access key with full access permissions.\n * @returns A new full access key.\n */\nfunction fullAccessKey() {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            fullAccess: new actions_1.FullAccessPermission({}),\n        }),\n    });\n}\n/**\n * Creates an access key with function call permission for a specific receiver and method names.\n * @param receiverId The NEAR account ID of the function call receiver.\n * @param methodNames An array of method names allowed for function calls.\n * @param allowance An optional allowance (maximum amount) for the function call. Default: Unlimited.\n * @returns A new access key with function call permission.\n */\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            functionCall: new actions_1.FunctionCallPermission({\n                receiverId,\n                allowance,\n                methodNames,\n            }),\n        }),\n    });\n}\n/**\n * Creates a new action for creating a new NEAR account.\n * @returns A new action for creating a new account.\n */\nfunction createAccount() {\n    return new actions_1.Action({ createAccount: new actions_1.CreateAccount({}) });\n}\n/**\n * Creates a new action for deploying a contract with the provided code.\n * @param code The Uint8Array representing the code of the contract.\n * @returns A new action for deploying a contract.\n */\nfunction deployContract(code) {\n    return new actions_1.Action({ deployContract: new actions_1.DeployContract({ code }) });\n}\n/**\n * Converts an input argument to a Buffer, handling cases for both JSON and Uint8Array.\n * @param args The input argument, either JSON object or Uint8Array.\n * @returns A Buffer representation of the input argument.\n */\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    return isUint8Array ? args : Buffer.from(JSON.stringify(args));\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n * @param jsContract  Is contract from JS SDK, skips stringification of arguments.\n */\nfunction functionCall(methodName, args, gas = BigInt(0), deposit = BigInt(0), stringify = stringifyJsonOrBytes, jsContract = false) {\n    if (jsContract) {\n        return new actions_1.Action({\n            functionCall: new actions_1.FunctionCall({ methodName, args, gas, deposit }),\n        });\n    }\n    return new actions_1.Action({\n        functionCall: new actions_1.FunctionCall({\n            methodName,\n            args: stringify(args),\n            gas,\n            deposit,\n        }),\n    });\n}\n/**\n * Creates a new action for transferring funds, optionally specifying a deposit amount.\n * @param deposit The amount to be deposited along with the transfer. Default: 0.\n * @returns A new action for transferring funds.\n */\nfunction transfer(deposit = BigInt(0)) {\n    return new actions_1.Action({ transfer: new actions_1.Transfer({ deposit }) });\n}\n/**\n * Creates a new action for staking tokens, specifying the stake amount and public key.\n * @param stake The amount to be staked. Default: 0.\n * @param publicKey The public key associated with the staking action.\n * @returns A new action for staking tokens.\n */\nfunction stake(stake = BigInt(0), publicKey) {\n    return new actions_1.Action({ stake: new actions_1.Stake({ stake, publicKey }) });\n}\n/**\n * Creates a new action for adding a public key with a specified access key.\n * @param publicKey The public key to be added.\n * @param accessKey The access key associated with the added public key.\n * @returns A new action for adding a public key.\n */\nfunction addKey(publicKey, accessKey) {\n    return new actions_1.Action({ addKey: new actions_1.AddKey({ publicKey, accessKey }) });\n}\n/**\n * Creates a new action for deleting a public key.\n * @param publicKey The public key to be deleted.\n * @returns A new action for deleting a public key.\n */\nfunction deleteKey(publicKey) {\n    return new actions_1.Action({ deleteKey: new actions_1.DeleteKey({ publicKey }) });\n}\n/**\n * Creates a new action for deleting an account with the specified beneficiary ID.\n * @param beneficiaryId The NEAR account ID of the beneficiary.\n * @returns A new action for deleting an account.\n */\nfunction deleteAccount(beneficiaryId) {\n    return new actions_1.Action({ deleteAccount: new actions_1.DeleteAccount({ beneficiaryId }) });\n}\n/**\n * Creates a new action for a signed delegation, specifying the delegate action and signature.\n * @param delegateAction The delegate action to be performed.\n * @param signature The signature associated with the delegate action.\n * @returns A new action for a signed delegation.\n */\nfunction signedDelegate({ delegateAction, signature, }) {\n    return new actions_1.Action({\n        signedDelegate: new actions_1.SignedDelegate({ delegateAction, signature }),\n    });\n}\nexports.actionCreators = {\n    addKey,\n    createAccount,\n    deleteAccount,\n    deleteKey,\n    deployContract,\n    fullAccessKey,\n    functionCall,\n    functionCallAccessKey,\n    signedDelegate,\n    stake,\n    transfer,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Action = exports.SignedDelegate = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nclass FunctionCallPermission extends types_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends types_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends types_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nclass IAction extends types_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nclass SignedDelegate extends IAction {\n}\nexports.SignedDelegate = SignedDelegate;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends Enum {\n}\nexports.Action = Action;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxvQkFBb0IsR0FBRyxzQkFBc0IsR0FBRyxxQkFBcUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCO0FBQ25WLGdCQUFnQixtQkFBTyxDQUFDLHVHQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9hY3Rpb25zLmpzP2JmMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjdGlvbiA9IGV4cG9ydHMuU2lnbmVkRGVsZWdhdGUgPSBleHBvcnRzLkRlbGV0ZUFjY291bnQgPSBleHBvcnRzLkRlbGV0ZUtleSA9IGV4cG9ydHMuQWRkS2V5ID0gZXhwb3J0cy5TdGFrZSA9IGV4cG9ydHMuVHJhbnNmZXIgPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbCA9IGV4cG9ydHMuRGVwbG95Q29udHJhY3QgPSBleHBvcnRzLkNyZWF0ZUFjY291bnQgPSBleHBvcnRzLklBY3Rpb24gPSBleHBvcnRzLkFjY2Vzc0tleSA9IGV4cG9ydHMuQWNjZXNzS2V5UGVybWlzc2lvbiA9IGV4cG9ydHMuRnVsbEFjY2Vzc1Blcm1pc3Npb24gPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbFBlcm1pc3Npb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY2xhc3MgRW51bSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcGVydGllcykubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VudW0gY2FuIG9ubHkgdGFrZSBzaW5nbGUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICAgICAgdGhpcy5lbnVtID0ga2V5O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5jbGFzcyBGdW5jdGlvbkNhbGxQZXJtaXNzaW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsUGVybWlzc2lvbiA9IEZ1bmN0aW9uQ2FsbFBlcm1pc3Npb247XG5jbGFzcyBGdWxsQWNjZXNzUGVybWlzc2lvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLkZ1bGxBY2Nlc3NQZXJtaXNzaW9uID0gRnVsbEFjY2Vzc1Blcm1pc3Npb247XG5jbGFzcyBBY2Nlc3NLZXlQZXJtaXNzaW9uIGV4dGVuZHMgRW51bSB7XG59XG5leHBvcnRzLkFjY2Vzc0tleVBlcm1pc3Npb24gPSBBY2Nlc3NLZXlQZXJtaXNzaW9uO1xuY2xhc3MgQWNjZXNzS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuQWNjZXNzS2V5ID0gQWNjZXNzS2V5O1xuY2xhc3MgSUFjdGlvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLklBY3Rpb24gPSBJQWN0aW9uO1xuY2xhc3MgQ3JlYXRlQWNjb3VudCBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5DcmVhdGVBY2NvdW50ID0gQ3JlYXRlQWNjb3VudDtcbmNsYXNzIERlcGxveUNvbnRyYWN0IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlcGxveUNvbnRyYWN0ID0gRGVwbG95Q29udHJhY3Q7XG5jbGFzcyBGdW5jdGlvbkNhbGwgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsID0gRnVuY3Rpb25DYWxsO1xuY2xhc3MgVHJhbnNmZXIgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuVHJhbnNmZXIgPSBUcmFuc2ZlcjtcbmNsYXNzIFN0YWtlIGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLlN0YWtlID0gU3Rha2U7XG5jbGFzcyBBZGRLZXkgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuQWRkS2V5ID0gQWRkS2V5O1xuY2xhc3MgRGVsZXRlS2V5IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlbGV0ZUtleSA9IERlbGV0ZUtleTtcbmNsYXNzIERlbGV0ZUFjY291bnQgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRGVsZXRlQWNjb3VudCA9IERlbGV0ZUFjY291bnQ7XG5jbGFzcyBTaWduZWREZWxlZ2F0ZSBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5TaWduZWREZWxlZ2F0ZSA9IFNpZ25lZERlbGVnYXRlO1xuLyoqXG4gKiBDb250YWlucyBhIGxpc3Qgb2YgdGhlIHZhbGlkIHRyYW5zYWN0aW9uIEFjdGlvbnMgYXZhaWxhYmxlIHdpdGggdGhpcyBBUElcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vbm9taWNvbi5pby9SdW50aW1lU3BlYy9BY3Rpb25zLmh0bWwgfCBBY3Rpb25zIFNwZWN9XG4gKi9cbmNsYXNzIEFjdGlvbiBleHRlbmRzIEVudW0ge1xufVxuZXhwb3J0cy5BY3Rpb24gPSBBY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransaction = void 0;\nconst schema_1 = __webpack_require__(/*! ./schema */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\");\n/**\n * Creates a new transaction object with the provided parameters.\n * @param signerId The NEAR account ID of the transaction signer.\n * @param publicKey The public key associated with the signer.\n * @param receiverId The NEAR account ID of the transaction receiver.\n * @param nonce The nonce value for the transaction, represented as a BN, string, or number.\n * @param actions An array of transaction actions to be performed.\n * @param blockHash The hash of the block where the transaction will be included.\n * @returns A new transaction object initialized with the provided parameters.\n */\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    const txNonce = typeof nonce === 'bigint' ? nonce : BigInt(nonce);\n    return new schema_1.Transaction({\n        signerId,\n        publicKey,\n        nonce: txNonce,\n        receiverId,\n        actions,\n        blockHash,\n    });\n}\nexports.createTransaction = createTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQyx5R0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzPzJhYTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgdHJhbnNhY3Rpb24gb2JqZWN0IHdpdGggdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gc2lnbmVySWQgVGhlIE5FQVIgYWNjb3VudCBJRCBvZiB0aGUgdHJhbnNhY3Rpb24gc2lnbmVyLlxuICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSBhc3NvY2lhdGVkIHdpdGggdGhlIHNpZ25lci5cbiAqIEBwYXJhbSByZWNlaXZlcklkIFRoZSBORUFSIGFjY291bnQgSUQgb2YgdGhlIHRyYW5zYWN0aW9uIHJlY2VpdmVyLlxuICogQHBhcmFtIG5vbmNlIFRoZSBub25jZSB2YWx1ZSBmb3IgdGhlIHRyYW5zYWN0aW9uLCByZXByZXNlbnRlZCBhcyBhIEJOLCBzdHJpbmcsIG9yIG51bWJlci5cbiAqIEBwYXJhbSBhY3Rpb25zIEFuIGFycmF5IG9mIHRyYW5zYWN0aW9uIGFjdGlvbnMgdG8gYmUgcGVyZm9ybWVkLlxuICogQHBhcmFtIGJsb2NrSGFzaCBUaGUgaGFzaCBvZiB0aGUgYmxvY2sgd2hlcmUgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgaW5jbHVkZWQuXG4gKiBAcmV0dXJucyBBIG5ldyB0cmFuc2FjdGlvbiBvYmplY3QgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVHJhbnNhY3Rpb24oc2lnbmVySWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCkge1xuICAgIGNvbnN0IHR4Tm9uY2UgPSB0eXBlb2Ygbm9uY2UgPT09ICdiaWdpbnQnID8gbm9uY2UgOiBCaWdJbnQobm9uY2UpO1xuICAgIHJldHVybiBuZXcgc2NoZW1hXzEuVHJhbnNhY3Rpb24oe1xuICAgICAgICBzaWduZXJJZCxcbiAgICAgICAgcHVibGljS2V5LFxuICAgICAgICBub25jZTogdHhOb25jZSxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgYmxvY2tIYXNoLFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVUcmFuc2FjdGlvbiA9IGNyZWF0ZVRyYW5zYWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildDelegateAction = exports.DelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst action_creators_1 = __webpack_require__(/*! ./action_creators */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, functionCall, stake, transfer, } = action_creators_1.actionCreators;\nclass DelegateAction extends types_1.Assignable {\n}\nexports.DelegateAction = DelegateAction;\n/**\n * Compose a delegate action for inclusion with a meta transaction signed on the sender's behalf\n * @param actions The set of actions to be included in the meta transaction\n * @param maxBlockHeight The maximum block height for which this action can be executed as part of a transaction\n * @param nonce Current nonce on the access key used to sign the delegate action\n * @param publicKey Public key for the access key used to sign the delegate action\n * @param receiverId Account ID for the intended receiver of the meta transaction\n * @param senderId Account ID for the intended signer of the delegate action\n */\nfunction buildDelegateAction({ actions, maxBlockHeight, nonce, publicKey, receiverId, senderId, }) {\n    return new DelegateAction({\n        senderId,\n        receiverId,\n        actions: actions.map((a) => {\n            // @ts-expect-error type workaround\n            if (!a.type && !a.params) {\n                return a;\n            }\n            // @ts-expect-error type workaround\n            switch (a.type) {\n                case 'AddKey': {\n                    // @ts-expect-error type workaround\n                    const { publicKey, accessKey } = a.params;\n                    return addKey(publicKey, accessKey);\n                }\n                case 'CreateAccount': {\n                    // @ts-expect-error type workaround\n                    return createAccount(a.params.createAccount);\n                }\n                case 'DeleteAccount': {\n                    // @ts-expect-error type workaround\n                    return deleteAccount(a.params.deleteAccount);\n                }\n                case 'DeleteKey': {\n                    // @ts-expect-error type workaround\n                    return deleteKey(a.params.publicKey);\n                }\n                case 'DeployContract': {\n                    // @ts-expect-error type workaround\n                    return deployContract(a.params.code);\n                }\n                case 'FunctionCall': {\n                    // @ts-expect-error type workaround\n                    const { methodName, args, gas, deposit } = a.params;\n                    return functionCall(methodName, args, gas, deposit);\n                }\n                case 'Stake': {\n                    // @ts-expect-error type workaround\n                    return stake(a.params.stake, a.params.publicKey);\n                }\n                case 'Transfer': {\n                    // @ts-expect-error type workaround\n                    const { deposit } = a.params;\n                    return transfer(deposit);\n                }\n            }\n            throw new Error('Unrecognized action');\n        }),\n        nonce,\n        maxBlockHeight,\n        publicKey,\n    });\n}\nexports.buildDelegateAction = buildDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCO0FBQ3BELGdCQUFnQixtQkFBTyxDQUFDLHVHQUFnQjtBQUN4QywwQkFBMEIsbUJBQU8sQ0FBQywySEFBbUI7QUFDckQsUUFBUSxrR0FBa0c7QUFDMUc7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQWtFO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQ0FBaUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanM/Y2UxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGREZWxlZ2F0ZUFjdGlvbiA9IGV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY29uc3QgYWN0aW9uX2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIik7XG5jb25zdCB7IGFkZEtleSwgY3JlYXRlQWNjb3VudCwgZGVsZXRlQWNjb3VudCwgZGVsZXRlS2V5LCBkZXBsb3lDb250cmFjdCwgZnVuY3Rpb25DYWxsLCBzdGFrZSwgdHJhbnNmZXIsIH0gPSBhY3Rpb25fY3JlYXRvcnNfMS5hY3Rpb25DcmVhdG9ycztcbmNsYXNzIERlbGVnYXRlQWN0aW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSBEZWxlZ2F0ZUFjdGlvbjtcbi8qKlxuICogQ29tcG9zZSBhIGRlbGVnYXRlIGFjdGlvbiBmb3IgaW5jbHVzaW9uIHdpdGggYSBtZXRhIHRyYW5zYWN0aW9uIHNpZ25lZCBvbiB0aGUgc2VuZGVyJ3MgYmVoYWxmXG4gKiBAcGFyYW0gYWN0aW9ucyBUaGUgc2V0IG9mIGFjdGlvbnMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBtYXhCbG9ja0hlaWdodCBUaGUgbWF4aW11bSBibG9jayBoZWlnaHQgZm9yIHdoaWNoIHRoaXMgYWN0aW9uIGNhbiBiZSBleGVjdXRlZCBhcyBwYXJ0IG9mIGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBub25jZSBDdXJyZW50IG5vbmNlIG9uIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcHVibGljS2V5IFB1YmxpYyBrZXkgZm9yIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcmVjZWl2ZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgcmVjZWl2ZXIgb2YgdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBzZW5kZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgc2lnbmVyIG9mIHRoZSBkZWxlZ2F0ZSBhY3Rpb25cbiAqL1xuZnVuY3Rpb24gYnVpbGREZWxlZ2F0ZUFjdGlvbih7IGFjdGlvbnMsIG1heEJsb2NrSGVpZ2h0LCBub25jZSwgcHVibGljS2V5LCByZWNlaXZlcklkLCBzZW5kZXJJZCwgfSkge1xuICAgIHJldHVybiBuZXcgRGVsZWdhdGVBY3Rpb24oe1xuICAgICAgICBzZW5kZXJJZCxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9uczogYWN0aW9ucy5tYXAoKGEpID0+IHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBpZiAoIWEudHlwZSAmJiAhYS5wYXJhbXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBzd2l0Y2ggKGEudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0FkZEtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwdWJsaWNLZXksIGFjY2Vzc0tleSB9ID0gYS5wYXJhbXM7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRLZXkocHVibGljS2V5LCBhY2Nlc3NLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdDcmVhdGVBY2NvdW50Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQWNjb3VudChhLnBhcmFtcy5jcmVhdGVBY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSAnRGVsZXRlQWNjb3VudCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUFjY291bnQoYS5wYXJhbXMuZGVsZXRlQWNjb3VudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0RlbGV0ZUtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUtleShhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdEZXBsb3lDb250cmFjdCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlcGxveUNvbnRyYWN0KGEucGFyYW1zLmNvZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdGdW5jdGlvbkNhbGwnOiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgbWV0aG9kTmFtZSwgYXJncywgZ2FzLCBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uQ2FsbChtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdTdGFrZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0YWtlKGEucGFyYW1zLnN0YWtlLCBhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdUcmFuc2Zlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZmVyKGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGFjdGlvbicpO1xuICAgICAgICB9KSxcbiAgICAgICAgbm9uY2UsXG4gICAgICAgIG1heEJsb2NrSGVpZ2h0LFxuICAgICAgICBwdWJsaWNLZXksXG4gICAgfSk7XG59XG5leHBvcnRzLmJ1aWxkRGVsZWdhdGVBY3Rpb24gPSBidWlsZERlbGVnYXRlQWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./action_creators */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/action_creators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./actions */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./create_transaction */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./delegate */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/delegate.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schema */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sign */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js\"), exports);\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLDJIQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsMkdBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLGlJQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsNkdBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLHlHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxxR0FBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMsK0dBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL2luZGV4LmpzPzU0ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvbnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZV90cmFuc2FjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGVsZWdhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbmF0dXJlXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DelegateActionPrefix = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst ACTIONABLE_MESSAGE_BASE = Math.pow(2, 30);\n// const NON_ACTIONABLE_MESSAGE_BASE = Math.pow(2, 31);\n/** The set of NEPs for which an [NEP-461](https://github.com/near/NEPs/pull/461) prefix is required on the message prior to hashing **/\nconst NEP = {\n    MetaTransactions: 366,\n};\n/** Base class for NEP message prefixes **/\nclass NEPPrefix extends types_1.Assignable {\n}\n/** Class for constructing prefixes on actionable (on-chain) messages **/\nclass ActionableMessagePrefix extends NEPPrefix {\n    /** Given the NEP number, set the prefix using 2^30 as the offset **/\n    constructor(prefix) {\n        super({ prefix: ACTIONABLE_MESSAGE_BASE + prefix });\n    }\n}\n/**\n * Class for constructing prefixes on non-actionable (off-chain) messages\n * @todo uncomment when off-chain messages are supported\n * **/\n// abstract class NonActionableMessagePrefix extends NEPPrefix {\n//     /** Given the NEP number, set the prefix using 2^31 as the offset **/\n//     protected constructor(prefix: number) {\n//         super({ prefix: NON_ACTIONABLE_MESSAGE_BASE + prefix });\n//     }\n// }\n/** Prefix for delegate actions whose signatures must always be distinguishable from valid transaction signatures **/\nclass DelegateActionPrefix extends ActionableMessagePrefix {\n    constructor() { super(NEP.MetaTransactions); }\n}\nexports.DelegateActionPrefix = DelegateActionPrefix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvcHJlZml4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQyx1R0FBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMENBQTBDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBOEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3ByZWZpeC5qcz83MDIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdHlwZXNcIik7XG5jb25zdCBBQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMwKTtcbi8vIGNvbnN0IE5PTl9BQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMxKTtcbi8qKiBUaGUgc2V0IG9mIE5FUHMgZm9yIHdoaWNoIGFuIFtORVAtNDYxXShodHRwczovL2dpdGh1Yi5jb20vbmVhci9ORVBzL3B1bGwvNDYxKSBwcmVmaXggaXMgcmVxdWlyZWQgb24gdGhlIG1lc3NhZ2UgcHJpb3IgdG8gaGFzaGluZyAqKi9cbmNvbnN0IE5FUCA9IHtcbiAgICBNZXRhVHJhbnNhY3Rpb25zOiAzNjYsXG59O1xuLyoqIEJhc2UgY2xhc3MgZm9yIE5FUCBtZXNzYWdlIHByZWZpeGVzICoqL1xuY2xhc3MgTkVQUHJlZml4IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbi8qKiBDbGFzcyBmb3IgY29uc3RydWN0aW5nIHByZWZpeGVzIG9uIGFjdGlvbmFibGUgKG9uLWNoYWluKSBtZXNzYWdlcyAqKi9cbmNsYXNzIEFjdGlvbmFibGVNZXNzYWdlUHJlZml4IGV4dGVuZHMgTkVQUHJlZml4IHtcbiAgICAvKiogR2l2ZW4gdGhlIE5FUCBudW1iZXIsIHNldCB0aGUgcHJlZml4IHVzaW5nIDJeMzAgYXMgdGhlIG9mZnNldCAqKi9cbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgpIHtcbiAgICAgICAgc3VwZXIoeyBwcmVmaXg6IEFDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIGNvbnN0cnVjdGluZyBwcmVmaXhlcyBvbiBub24tYWN0aW9uYWJsZSAob2ZmLWNoYWluKSBtZXNzYWdlc1xuICogQHRvZG8gdW5jb21tZW50IHdoZW4gb2ZmLWNoYWluIG1lc3NhZ2VzIGFyZSBzdXBwb3J0ZWRcbiAqICoqL1xuLy8gYWJzdHJhY3QgY2xhc3MgTm9uQWN0aW9uYWJsZU1lc3NhZ2VQcmVmaXggZXh0ZW5kcyBORVBQcmVmaXgge1xuLy8gICAgIC8qKiBHaXZlbiB0aGUgTkVQIG51bWJlciwgc2V0IHRoZSBwcmVmaXggdXNpbmcgMl4zMSBhcyB0aGUgb2Zmc2V0ICoqL1xuLy8gICAgIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihwcmVmaXg6IG51bWJlcikge1xuLy8gICAgICAgICBzdXBlcih7IHByZWZpeDogTk9OX0FDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuLy8gICAgIH1cbi8vIH1cbi8qKiBQcmVmaXggZm9yIGRlbGVnYXRlIGFjdGlvbnMgd2hvc2Ugc2lnbmF0dXJlcyBtdXN0IGFsd2F5cyBiZSBkaXN0aW5ndWlzaGFibGUgZnJvbSB2YWxpZCB0cmFuc2FjdGlvbiBzaWduYXR1cmVzICoqL1xuY2xhc3MgRGVsZWdhdGVBY3Rpb25QcmVmaXggZXh0ZW5kcyBBY3Rpb25hYmxlTWVzc2FnZVByZWZpeCB7XG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKE5FUC5NZXRhVHJhbnNhY3Rpb25zKTsgfVxufVxuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IERlbGVnYXRlQWN0aW9uUHJlZml4O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SCHEMA = exports.SignedTransaction = exports.Transaction = exports.decodeSignedTransaction = exports.decodeTransaction = exports.encodeTransaction = exports.encodeSignedDelegate = exports.encodeDelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst borsh_1 = __webpack_require__(/*! borsh */ \"./node_modules/borsh/lib/cjs/index.js\");\nconst prefix_1 = __webpack_require__(/*! ./prefix */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/prefix.js\");\n/**\n * Borsh-encode a delegate action for inclusion as an action within a meta transaction\n * NB per NEP-461 this requires a Borsh-serialized prefix specific to delegate actions, ensuring\n *  signed delegate actions may never be identical to signed transactions with the same fields\n * @param delegateAction Delegate action to be signed by the meta transaction sender\n */\nfunction encodeDelegateAction(delegateAction) {\n    return new Uint8Array([\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateActionPrefix, new prefix_1.DelegateActionPrefix()),\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateAction, delegateAction),\n    ]);\n}\nexports.encodeDelegateAction = encodeDelegateAction;\n/**\n * Borsh-encode a signed delegate for validation and execution by a relayer\n * @param signedDelegate Signed delegate to be executed in a meta transaction\n */\nfunction encodeSignedDelegate(signedDelegate) {\n    return (0, borsh_1.serialize)(exports.SCHEMA.SignedDelegate, signedDelegate);\n}\nexports.encodeSignedDelegate = encodeSignedDelegate;\n/**\n* Borsh-encode a transaction or signed transaction into a serialized form.\n* @param transaction The transaction or signed transaction object to be encoded.\n* @returns A serialized representation of the input transaction.\n*/\nfunction encodeTransaction(transaction) {\n    const schema = transaction instanceof SignedTransaction ? exports.SCHEMA.SignedTransaction : exports.SCHEMA.Transaction;\n    return (0, borsh_1.serialize)(schema, transaction);\n}\nexports.encodeTransaction = encodeTransaction;\n/**\n * Borsh-decode a Transaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeTransaction(bytes) {\n    return new Transaction((0, borsh_1.deserialize)(exports.SCHEMA.Transaction, bytes));\n}\nexports.decodeTransaction = decodeTransaction;\n/**\n * Borsh-decode a SignedTransaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeSignedTransaction(bytes) {\n    return new SignedTransaction((0, borsh_1.deserialize)(exports.SCHEMA.SignedTransaction, bytes));\n}\nexports.decodeSignedTransaction = decodeSignedTransaction;\nclass Transaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeTransaction(bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeSignedTransaction(bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\nexports.SCHEMA = new class BorshSchema {\n    constructor() {\n        this.Ed25519Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.Secp256k1Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 65 } },\n            }\n        };\n        this.Signature = {\n            enum: [\n                { struct: { ed25519Signature: this.Ed25519Signature } },\n                { struct: { secp256k1Signature: this.Secp256k1Signature } },\n            ]\n        };\n        this.Ed25519Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 32 } },\n            }\n        };\n        this.Secp256k1Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.PublicKey = {\n            enum: [\n                { struct: { ed25519Key: this.Ed25519Data } },\n                { struct: { secp256k1Key: this.Secp256k1Data } },\n            ]\n        };\n        this.FunctionCallPermission = {\n            struct: {\n                allowance: { option: 'u128' },\n                receiverId: 'string',\n                methodNames: { array: { type: 'string' } },\n            }\n        };\n        this.FullAccessPermission = {\n            struct: {}\n        };\n        this.AccessKeyPermission = {\n            enum: [\n                { struct: { functionCall: this.FunctionCallPermission } },\n                { struct: { fullAccess: this.FullAccessPermission } },\n            ]\n        };\n        this.AccessKey = {\n            struct: {\n                nonce: 'u64',\n                permission: this.AccessKeyPermission,\n            }\n        };\n        this.CreateAccount = {\n            struct: {}\n        };\n        this.DeployContract = {\n            struct: {\n                code: { array: { type: 'u8' } },\n            }\n        };\n        this.FunctionCall = {\n            struct: {\n                methodName: 'string',\n                args: { array: { type: 'u8' } },\n                gas: 'u64',\n                deposit: 'u128',\n            }\n        };\n        this.Transfer = {\n            struct: {\n                deposit: 'u128',\n            }\n        };\n        this.Stake = {\n            struct: {\n                stake: 'u128',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.AddKey = {\n            struct: {\n                publicKey: this.PublicKey,\n                accessKey: this.AccessKey,\n            }\n        };\n        this.DeleteKey = {\n            struct: {\n                publicKey: this.PublicKey,\n            }\n        };\n        this.DeleteAccount = {\n            struct: {\n                beneficiaryId: 'string',\n            }\n        };\n        this.DelegateActionPrefix = {\n            struct: {\n                prefix: 'u32',\n            }\n        };\n        this.ClassicActions = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n            ]\n        };\n        this.DelegateAction = {\n            struct: {\n                senderId: 'string',\n                receiverId: 'string',\n                actions: { array: { type: this.ClassicActions } },\n                nonce: 'u64',\n                maxBlockHeight: 'u64',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.SignedDelegate = {\n            struct: {\n                delegateAction: this.DelegateAction,\n                signature: this.Signature,\n            }\n        };\n        this.Action = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n                { struct: { signedDelegate: this.SignedDelegate } },\n            ]\n        };\n        this.Transaction = {\n            struct: {\n                signerId: 'string',\n                publicKey: this.PublicKey,\n                nonce: 'u64',\n                receiverId: 'string',\n                blockHash: { array: { type: 'u8', len: 32 } },\n                actions: { array: { type: this.Action } },\n            }\n        };\n        this.SignedTransaction = {\n            struct: {\n                transaction: this.Transaction,\n                signature: this.Signature,\n            }\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signDelegateAction = exports.signTransaction = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"./node_modules/@noble/hashes/sha256.js\");\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/actions.js\");\nconst create_transaction_1 = __webpack_require__(/*! ./create_transaction */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/create_transaction.js\");\nconst schema_1 = __webpack_require__(/*! ./schema */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/schema.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nfunction signTransactionObject(transaction, signer, accountId, networkId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeTransaction)(transaction);\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        const signature = yield signer.signMessage(message, accountId, networkId);\n        const keyType = transaction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedTx = new schema_1.SignedTransaction({\n            transaction,\n            signature: new signature_1.Signature({ keyType, data: signature.signature })\n        });\n        return [hash, signedTx];\n    });\n}\nfunction signTransaction(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (args[0].constructor === schema_1.Transaction) {\n            const [transaction, signer, accountId, networkId] = args;\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n        else {\n            const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n            const publicKey = yield signer.getPublicKey(accountId, networkId);\n            const transaction = (0, create_transaction_1.createTransaction)(accountId, publicKey, receiverId, nonce, actions, blockHash);\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n    });\n}\nexports.signTransaction = signTransaction;\n/**\n * Sign a delegate action\n * @options SignDelegate options\n * @param options.delegateAction Delegate action to be signed by the meta transaction sender\n * @param options.signer Signer instance for the meta transaction sender\n */\nfunction signDelegateAction({ delegateAction, signer }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeDelegateAction)(delegateAction);\n        const signature = yield signer.sign(message);\n        const keyType = delegateAction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedDelegateAction = new actions_1.SignedDelegate({\n            delegateAction,\n            signature: new signature_1.Signature({\n                keyType,\n                data: signature,\n            }),\n        });\n        return {\n            hash: new Uint8Array((0, sha256_1.sha256)(message)),\n            signedDelegateAction,\n        };\n    });\n}\nexports.signDelegateAction = signDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsdUJBQXVCO0FBQ3BELGlCQUFpQixtQkFBTyxDQUFDLG9FQUFzQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQywyR0FBVztBQUNyQyw2QkFBNkIsbUJBQU8sQ0FBQyxpSUFBc0I7QUFDM0QsaUJBQWlCLG1CQUFPLENBQUMseUdBQVU7QUFDbkMsb0JBQW9CLG1CQUFPLENBQUMsK0dBQWE7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMseUdBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsb0NBQW9DO0FBQ3ZGLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0JBQXdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3NpZ24uanM/OTYyNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaWduRGVsZWdhdGVBY3Rpb24gPSBleHBvcnRzLnNpZ25UcmFuc2FjdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgYWN0aW9uc18xID0gcmVxdWlyZShcIi4vYWN0aW9uc1wiKTtcbmNvbnN0IGNyZWF0ZV90cmFuc2FjdGlvbl8xID0gcmVxdWlyZShcIi4vY3JlYXRlX3RyYW5zYWN0aW9uXCIpO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG5jb25zdCBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2NyeXB0b1wiKTtcbi8qKlxuICogU2lnbnMgYSBnaXZlbiB0cmFuc2FjdGlvbiBmcm9tIGFuIGFjY291bnQgd2l0aCBnaXZlbiBrZXlzLCBhcHBsaWVkIHRvIHRoZSBnaXZlbiBuZXR3b3JrXG4gKiBAcGFyYW0gdHJhbnNhY3Rpb24gVGhlIFRyYW5zYWN0aW9uIG9iamVjdCB0byBzaWduXG4gKiBAcGFyYW0gc2lnbmVyIFRoZSB7U2lnbmVyfSBvYmplY3QgdGhhdCBhc3Npc3RzIHdpdGggc2lnbmluZyBrZXlzXG4gKiBAcGFyYW0gYWNjb3VudElkIFRoZSBodW1hbi1yZWFkYWJsZSBORUFSIGFjY291bnQgbmFtZVxuICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gKi9cbmZ1bmN0aW9uIHNpZ25UcmFuc2FjdGlvbk9iamVjdCh0cmFuc2FjdGlvbiwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlVHJhbnNhY3Rpb24pKHRyYW5zYWN0aW9uKTtcbiAgICAgICAgY29uc3QgaGFzaCA9IG5ldyBVaW50OEFycmF5KCgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgY29uc3Qga2V5VHlwZSA9IHRyYW5zYWN0aW9uLnB1YmxpY0tleS5lZDI1NTE5S2V5ID8gY3J5cHRvXzEuS2V5VHlwZS5FRDI1NTE5IDogY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgICAgIGNvbnN0IHNpZ25lZFR4ID0gbmV3IHNjaGVtYV8xLlNpZ25lZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBuZXcgc2lnbmF0dXJlXzEuU2lnbmF0dXJlKHsga2V5VHlwZSwgZGF0YTogc2lnbmF0dXJlLnNpZ25hdHVyZSB9KVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFtoYXNoLCBzaWduZWRUeF07XG4gICAgfSk7XG59XG5mdW5jdGlvbiBzaWduVHJhbnNhY3Rpb24oLi4uYXJncykge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGlmIChhcmdzWzBdLmNvbnN0cnVjdG9yID09PSBzY2hlbWFfMS5UcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgY29uc3QgW3RyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IFtyZWNlaXZlcklkLCBub25jZSwgYWN0aW9ucywgYmxvY2tIYXNoLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB5aWVsZCBzaWduZXIuZ2V0UHVibGljS2V5KGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gKDAsIGNyZWF0ZV90cmFuc2FjdGlvbl8xLmNyZWF0ZVRyYW5zYWN0aW9uKShhY2NvdW50SWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCk7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5zaWduVHJhbnNhY3Rpb24gPSBzaWduVHJhbnNhY3Rpb247XG4vKipcbiAqIFNpZ24gYSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBvcHRpb25zIFNpZ25EZWxlZ2F0ZSBvcHRpb25zXG4gKiBAcGFyYW0gb3B0aW9ucy5kZWxlZ2F0ZUFjdGlvbiBEZWxlZ2F0ZSBhY3Rpb24gdG8gYmUgc2lnbmVkIGJ5IHRoZSBtZXRhIHRyYW5zYWN0aW9uIHNlbmRlclxuICogQHBhcmFtIG9wdGlvbnMuc2lnbmVyIFNpZ25lciBpbnN0YW5jZSBmb3IgdGhlIG1ldGEgdHJhbnNhY3Rpb24gc2VuZGVyXG4gKi9cbmZ1bmN0aW9uIHNpZ25EZWxlZ2F0ZUFjdGlvbih7IGRlbGVnYXRlQWN0aW9uLCBzaWduZXIgfSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlRGVsZWdhdGVBY3Rpb24pKGRlbGVnYXRlQWN0aW9uKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ24obWVzc2FnZSk7XG4gICAgICAgIGNvbnN0IGtleVR5cGUgPSBkZWxlZ2F0ZUFjdGlvbi5wdWJsaWNLZXkuZWQyNTUxOUtleSA/IGNyeXB0b18xLktleVR5cGUuRUQyNTUxOSA6IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgICAgICBjb25zdCBzaWduZWREZWxlZ2F0ZUFjdGlvbiA9IG5ldyBhY3Rpb25zXzEuU2lnbmVkRGVsZWdhdGUoe1xuICAgICAgICAgICAgZGVsZWdhdGVBY3Rpb24sXG4gICAgICAgICAgICBzaWduYXR1cmU6IG5ldyBzaWduYXR1cmVfMS5TaWduYXR1cmUoe1xuICAgICAgICAgICAgICAgIGtleVR5cGUsXG4gICAgICAgICAgICAgICAgZGF0YTogc2lnbmF0dXJlLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGFzaDogbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpLFxuICAgICAgICAgICAgc2lnbmVkRGVsZWdhdGVBY3Rpb24sXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnRzLnNpZ25EZWxlZ2F0ZUFjdGlvbiA9IHNpZ25EZWxlZ2F0ZUFjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/sign.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js ***!
  \**************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signature = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/crypto/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nclass ED25519Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.SECP256K1;\n    }\n}\nclass Signature extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === crypto_1.KeyType.ED25519) {\n            this.ed25519Signature = { keyType, data };\n        }\n        else if (keyType === crypto_1.KeyType.SECP256K1) {\n            this.secp256k1Signature = { keyType, data };\n        }\n    }\n    get signature() {\n        return this.ed25519Signature || this.secp256k1Signature;\n    }\n    get signatureType() {\n        return this.signature.keyType;\n    }\n    get data() {\n        return this.signature.data;\n    }\n}\nexports.Signature = Signature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQyx5R0FBaUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsdUdBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakMsZ0JBQWdCO0FBQ2hCO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9zaWduYXR1cmUuanM/OGI1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQG5lYXItanMvY3J5cHRvXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNsYXNzIEVEMjU1MTlTaWduYXR1cmUgZXh0ZW5kcyB0eXBlc18xLkFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmtleVR5cGUgPSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgfVxufVxuY2xhc3MgU0VDUDI1NksxU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5rZXlUeXBlID0gY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgfVxufVxuY2xhc3MgU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGtleVR5cGUsIGRhdGEgfSkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgICAgIGlmIChrZXlUeXBlID09PSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuZWQyNTUxOVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3AyNTZrMVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkMjU1MTlTaWduYXR1cmUgfHwgdGhpcy5zZWNwMjU2azFTaWduYXR1cmU7XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmVUeXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduYXR1cmUua2V5VHlwZTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpZ25hdHVyZS5kYXRhO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbmF0dXJlID0gU2lnbmF0dXJlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/transactions/lib/signature.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/Mjg5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/YzFiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsMEdBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLGtHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw0R0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz83MjJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js ***!
  \************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLHVIQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMsK0dBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz9jOWVkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzP2E3YzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/light_client.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz9kNzRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/provider/response.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/Zjg1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQyx5R0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/MGNiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQyx5R0FBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsaUhBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/MTVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \***************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsd0dBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLHdHQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxrR0FBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsb0dBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLHNHQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQywwR0FBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsd0dBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLGdHQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzPzNhODMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \*******************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz9hYWE1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQyx5R0FBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzPzIzMzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCx5QkFBeUIsbUJBQU8sQ0FBQyx5SEFBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixPQUFPLGlCQUFpQixPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3dhbGxldC1hY2NvdW50L25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2xvZ2dlci5qcz85YzhmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Mb2dnZXIgPSB2b2lkIDA7XG5jb25zdCBjb25zb2xlX2xvZ2dlcl8xID0gcmVxdWlyZShcIi4vY29uc29sZS5sb2dnZXJcIik7XG5jb25zdCBERUZBVUxUX0xPR19MRVZFTFMgPSBbXG4gICAgJ3ZlcmJvc2UnLFxuICAgICdkZWJ1ZycsXG4gICAgJ2xvZycsXG4gICAgJ3dhcm4nLFxuICAgICdlcnJvcicsXG4gICAgJ2ZhdGFsJyxcbl07XG5jb25zdCBERUZBVUxUX0xPR0dFUiA9IHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudi5ORUFSX05PX0xPR1NcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogbmV3IGNvbnNvbGVfbG9nZ2VyXzEuQ29uc29sZUxvZ2dlcihERUZBVUxUX0xPR19MRVZFTFMpO1xuLyoqXG4gKiBVc2VkIHRvIGxvZyB0aGUgbGlicmFyeSBtZXNzYWdlc1xuICovXG5jbGFzcyBMb2dnZXIge1xuICAgIHN0YXRpYyBlcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5lcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ2xvZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBsb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnd2FybicgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyB3YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdkZWJ1ZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBkZWJ1ZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZGVidWcpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3ZlcmJvc2UnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgdmVyYm9zZShtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudmVyYm9zZSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgc3RhdGljIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYiwgX2M7XG4gICAgICAgIChfYyA9IChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5mYXRhbCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG59XG5leHBvcnRzLkxvZ2dlciA9IExvZ2dlcjtcbl9hID0gTG9nZ2VyO1xuTG9nZ2VyLmluc3RhbmNlUmVmID0gREVGQVVMVF9MT0dHRVI7XG5Mb2dnZXIub3ZlcnJpZGVMb2dnZXIgPSAobG9nZ2VyKSA9PiB7XG4gICAgX2EuaW5zdGFuY2VSZWYgPSBsb2dnZXI7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/logger.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyx3R0FBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyx3R0FBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/YjZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/logging.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcz8yZThiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0KHR4UmVzdWx0KSB7XG4gICAgaWYgKHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMgPT09ICdvYmplY3QnICYmIHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IEJ1ZmZlci5mcm9tKHR4UmVzdWx0LnN0YXR1cy5TdWNjZXNzVmFsdWUsICdiYXNlNjQnKS50b1N0cmluZygpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCA9IGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/provider.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzPzMzZDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"./node_modules/depd/lib/browser/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5lYXItanMvd2FsbGV0LWFjY291bnQvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLHNEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLGdHQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AbmVhci1qcy93YWxsZXQtYWNjb3VudC9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/NjEyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/validators.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/abstract/curve.js":
/*!******************************************************!*\
  !*** ./node_modules/@noble/curves/abstract/curve.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateBasic = exports.wNAF = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nconst modular_js_1 = __webpack_require__(/*! ./modular.js */ \"./node_modules/@noble/curves/abstract/modular.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nfunction wNAF(c, bits) {\n    const constTimeNegate = (condition, item) => {\n        const neg = item.negate();\n        return condition ? neg : item;\n    };\n    const opts = (W) => {\n        const windows = Math.ceil(bits / W) + 1; // +1, because\n        const windowSize = 2 ** (W - 1); // -1 because we skip zero\n        return { windows, windowSize };\n    };\n    return {\n        constTimeNegate,\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n) {\n            let p = c.ZERO;\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = opts(W);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = opts(W);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        wNAFCached(P, precomputesMap, n, transform) {\n            // @ts-ignore\n            const W = P._WINDOW_SIZE || 1;\n            // Calculate precomputes on a first run, reuse them after\n            let comp = precomputesMap.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    precomputesMap.set(P, transform(comp));\n                }\n            }\n            return this.wNAF(W, comp, n);\n        },\n    };\n}\nexports.wNAF = wNAF;\nfunction validateBasic(curve) {\n    (0, modular_js_1.validateField)(curve.Fp);\n    (0, utils_js_1.validateObject)(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...(0, modular_js_1.nLength)(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nexports.validateBasic = validateBasic;\n//# sourceMappingURL=curve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/abstract/curve.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/abstract/edwards.js":
/*!********************************************************!*\
  !*** ./node_modules/@noble/curves/abstract/edwards.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.twistedEdwards = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Twisted Edwards curve. The formula is: ax² + y² = 1 + dx²y²\nconst modular_js_1 = __webpack_require__(/*! ./modular.js */ \"./node_modules/@noble/curves/abstract/modular.js\");\nconst ut = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\nconst curve_js_1 = __webpack_require__(/*! ./curve.js */ \"./node_modules/@noble/curves/abstract/curve.js\");\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _8n = BigInt(8);\n// verification rule is either zip215 or rfc8032 / nist186-5. Consult fromHex:\nconst VERIFY_DEFAULT = { zip215: true };\nfunction validateOpts(curve) {\n    const opts = (0, curve_js_1.validateBasic)(curve);\n    ut.validateObject(curve, {\n        hash: 'function',\n        a: 'bigint',\n        d: 'bigint',\n        randomBytes: 'function',\n    }, {\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        uvRatio: 'function',\n        mapToCurve: 'function',\n    });\n    // Set defaults\n    return Object.freeze({ ...opts });\n}\n// It is not generic twisted curve for now, but ed25519/ed448 generic implementation\nfunction twistedEdwards(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER, prehash: prehash, hash: cHash, randomBytes, nByteLength, h: cofactor, } = CURVE;\n    const MASK = _2n << (BigInt(nByteLength * 8) - _1n);\n    const modP = Fp.create; // Function overrides\n    // sqrt(u/v)\n    const uvRatio = CURVE.uvRatio ||\n        ((u, v) => {\n            try {\n                return { isValid: true, value: Fp.sqrt(u * Fp.inv(v)) };\n            }\n            catch (e) {\n                return { isValid: false, value: _0n };\n            }\n        });\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes); // NOOP\n    const domain = CURVE.domain ||\n        ((data, ctx, phflag) => {\n            if (ctx.length || phflag)\n                throw new Error('Contexts/pre-hash are not supported');\n            return data;\n        }); // NOOP\n    const inBig = (n) => typeof n === 'bigint' && _0n < n; // n in [1..]\n    const inRange = (n, max) => inBig(n) && inBig(max) && n < max; // n in [1..max-1]\n    const in0MaskRange = (n) => n === _0n || inRange(n, MASK); // n in [0..MASK-1]\n    function assertInRange(n, max) {\n        // n in [1..max-1]\n        if (inRange(n, max))\n            return n;\n        throw new Error(`Expected valid scalar < ${max}, got ${typeof n} ${n}`);\n    }\n    function assertGE0(n) {\n        // n in [0..CURVE_ORDER-1]\n        return n === _0n ? n : assertInRange(n, CURVE_ORDER); // GE = prime subgroup, not full group\n    }\n    const pointPrecomputes = new Map();\n    function isPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ExtendedPoint expected');\n    }\n    // Extended Point works in extended coordinates: (x, y, z, t) ∋ (x=x/z, y=y/z, t=xy).\n    // https://en.wikipedia.org/wiki/Twisted_Edwards_curve#Extended_coordinates\n    class Point {\n        constructor(ex, ey, ez, et) {\n            this.ex = ex;\n            this.ey = ey;\n            this.ez = ez;\n            this.et = et;\n            if (!in0MaskRange(ex))\n                throw new Error('x required');\n            if (!in0MaskRange(ey))\n                throw new Error('y required');\n            if (!in0MaskRange(ez))\n                throw new Error('z required');\n            if (!in0MaskRange(et))\n                throw new Error('t required');\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static fromAffine(p) {\n            if (p instanceof Point)\n                throw new Error('extended point not allowed');\n            const { x, y } = p || {};\n            if (!in0MaskRange(x) || !in0MaskRange(y))\n                throw new Error('invalid affine point');\n            return new Point(x, y, _1n, modP(x * y));\n        }\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.ez));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            this._WINDOW_SIZE = windowSize;\n            pointPrecomputes.delete(this);\n        }\n        // Not required for fromHex(), which always creates valid points.\n        // Could be useful for fromAffine().\n        assertValidity() {\n            const { a, d } = CURVE;\n            if (this.is0())\n                throw new Error('bad point: ZERO'); // TODO: optimize, with vars below?\n            // Equation in affine coordinates: ax² + y² = 1 + dx²y²\n            // Equation in projective coordinates (X/Z, Y/Z, Z):  (aX² + Y²)Z² = Z⁴ + dX²Y²\n            const { ex: X, ey: Y, ez: Z, et: T } = this;\n            const X2 = modP(X * X); // X²\n            const Y2 = modP(Y * Y); // Y²\n            const Z2 = modP(Z * Z); // Z²\n            const Z4 = modP(Z2 * Z2); // Z⁴\n            const aX2 = modP(X2 * a); // aX²\n            const left = modP(Z2 * modP(aX2 + Y2)); // (aX² + Y²)Z²\n            const right = modP(Z4 + modP(d * modP(X2 * Y2))); // Z⁴ + dX²Y²\n            if (left !== right)\n                throw new Error('bad point: equation left != right (1)');\n            // In Extended coordinates we also have T, which is x*y=T/Z: check X*Y == Z*T\n            const XY = modP(X * Y);\n            const ZT = modP(Z * T);\n            if (XY !== ZT)\n                throw new Error('bad point: equation left != right (2)');\n        }\n        // Compare one point to another.\n        equals(other) {\n            isPoint(other);\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2 } = other;\n            const X1Z2 = modP(X1 * Z2);\n            const X2Z1 = modP(X2 * Z1);\n            const Y1Z2 = modP(Y1 * Z2);\n            const Y2Z1 = modP(Y2 * Z1);\n            return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        negate() {\n            // Flips point sign to a negative one (-x, y in affine coords)\n            return new Point(modP(-this.ex), this.ey, this.ez, modP(-this.et));\n        }\n        // Fast algo for doubling Extended Point.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#doubling-dbl-2008-hwcd\n        // Cost: 4M + 4S + 1*a + 6add + 1*2.\n        double() {\n            const { a } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1 } = this;\n            const A = modP(X1 * X1); // A = X12\n            const B = modP(Y1 * Y1); // B = Y12\n            const C = modP(_2n * modP(Z1 * Z1)); // C = 2*Z12\n            const D = modP(a * A); // D = a*A\n            const x1y1 = X1 + Y1;\n            const E = modP(modP(x1y1 * x1y1) - A - B); // E = (X1+Y1)2-A-B\n            const G = D + B; // G = D+B\n            const F = G - C; // F = G-C\n            const H = D - B; // H = D-B\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        // Fast algo for adding 2 Extended Points.\n        // https://hyperelliptic.org/EFD/g1p/auto-twisted-extended.html#addition-add-2008-hwcd\n        // Cost: 9M + 1*a + 1*d + 7add.\n        add(other) {\n            isPoint(other);\n            const { a, d } = CURVE;\n            const { ex: X1, ey: Y1, ez: Z1, et: T1 } = this;\n            const { ex: X2, ey: Y2, ez: Z2, et: T2 } = other;\n            // Faster algo for adding 2 Extended Points when curve's a=-1.\n            // http://hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html#addition-add-2008-hwcd-4\n            // Cost: 8M + 8add + 2*2.\n            // Note: It does not check whether the `other` point is valid.\n            if (a === BigInt(-1)) {\n                const A = modP((Y1 - X1) * (Y2 + X2));\n                const B = modP((Y1 + X1) * (Y2 - X2));\n                const F = modP(B - A);\n                if (F === _0n)\n                    return this.double(); // Same point. Tests say it doesn't affect timing\n                const C = modP(Z1 * _2n * T2);\n                const D = modP(T1 * _2n * Z2);\n                const E = D + C;\n                const G = B + A;\n                const H = D - C;\n                const X3 = modP(E * F);\n                const Y3 = modP(G * H);\n                const T3 = modP(E * H);\n                const Z3 = modP(F * G);\n                return new Point(X3, Y3, Z3, T3);\n            }\n            const A = modP(X1 * X2); // A = X1*X2\n            const B = modP(Y1 * Y2); // B = Y1*Y2\n            const C = modP(T1 * d * T2); // C = T1*d*T2\n            const D = modP(Z1 * Z2); // D = Z1*Z2\n            const E = modP((X1 + Y1) * (X2 + Y2) - A - B); // E = (X1+Y1)*(X2+Y2)-A-B\n            const F = D - C; // F = D-C\n            const G = D + C; // G = D+C\n            const H = modP(B - a * A); // H = B-a*A\n            const X3 = modP(E * F); // X3 = E*F\n            const Y3 = modP(G * H); // Y3 = G*H\n            const T3 = modP(E * H); // T3 = E*H\n            const Z3 = modP(F * G); // Z3 = F*G\n            return new Point(X3, Y3, Z3, T3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, pointPrecomputes, n, Point.normalizeZ);\n        }\n        // Constant-time multiplication.\n        multiply(scalar) {\n            const { p, f } = this.wNAF(assertInRange(scalar, CURVE_ORDER));\n            return Point.normalizeZ([p, f])[0];\n        }\n        // Non-constant-time multiplication. Uses double-and-add algorithm.\n        // It's faster, but should only be used when you don't care about\n        // an exposed private key e.g. sig verification.\n        // Does NOT allow scalars higher than CURVE.n.\n        multiplyUnsafe(scalar) {\n            let n = assertGE0(scalar); // 0 <= scalar < CURVE.n\n            if (n === _0n)\n                return I;\n            if (this.equals(I) || n === _1n)\n                return this;\n            if (this.equals(G))\n                return this.wNAF(n).p;\n            return wnaf.unsafeLadder(this, n);\n        }\n        // Checks if point is of small order.\n        // If you add something to small order point, you will have \"dirty\"\n        // point with torsion component.\n        // Multiplies point by cofactor and checks if the result is 0.\n        isSmallOrder() {\n            return this.multiplyUnsafe(cofactor).is0();\n        }\n        // Multiplies point by curve order and checks if the result is 0.\n        // Returns `false` is the point is dirty.\n        isTorsionFree() {\n            return wnaf.unsafeLadder(this, CURVE_ORDER).is0();\n        }\n        // Converts Extended point to default (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        toAffine(iz) {\n            const { ex: x, ey: y, ez: z } = this;\n            const is0 = this.is0();\n            if (iz == null)\n                iz = is0 ? _8n : Fp.inv(z); // 8 was chosen arbitrarily\n            const ax = modP(x * iz);\n            const ay = modP(y * iz);\n            const zz = modP(z * iz);\n            if (is0)\n                return { x: _0n, y: _1n };\n            if (zz !== _1n)\n                throw new Error('invZ was invalid');\n            return { x: ax, y: ay };\n        }\n        clearCofactor() {\n            const { h: cofactor } = CURVE;\n            if (cofactor === _1n)\n                return this;\n            return this.multiplyUnsafe(cofactor);\n        }\n        // Converts hash string or Uint8Array to Point.\n        // Uses algo from RFC8032 5.1.3.\n        static fromHex(hex, zip215 = false) {\n            const { d, a } = CURVE;\n            const len = Fp.BYTES;\n            hex = (0, utils_js_1.ensureBytes)('pointHex', hex, len); // copy hex to a new array\n            const normed = hex.slice(); // copy again, we'll manipulate it\n            const lastByte = hex[len - 1]; // select last byte\n            normed[len - 1] = lastByte & ~0x80; // clear last bit\n            const y = ut.bytesToNumberLE(normed);\n            if (y === _0n) {\n                // y=0 is allowed\n            }\n            else {\n                // RFC8032 prohibits >= p, but ZIP215 doesn't\n                if (zip215)\n                    assertInRange(y, MASK); // zip215=true [1..P-1] (2^255-19-1 for ed25519)\n                else\n                    assertInRange(y, Fp.ORDER); // zip215=false [1..MASK-1] (2^256-1 for ed25519)\n            }\n            // Ed25519: x² = (y²-1)/(dy²+1) mod p. Ed448: x² = (y²-1)/(dy²-1) mod p. Generic case:\n            // ax²+y²=1+dx²y² => y²-1=dx²y²-ax² => y²-1=x²(dy²-a) => x²=(y²-1)/(dy²-a)\n            const y2 = modP(y * y); // denominator is always non-0 mod p.\n            const u = modP(y2 - _1n); // u = y² - 1\n            const v = modP(d * y2 - a); // v = d y² + 1.\n            let { isValid, value: x } = uvRatio(u, v); // √(u/v)\n            if (!isValid)\n                throw new Error('Point.fromHex: invalid y coordinate');\n            const isXOdd = (x & _1n) === _1n; // There are 2 square roots. Use x_0 bit to select proper\n            const isLastByteOdd = (lastByte & 0x80) !== 0; // x_0, last bit\n            if (!zip215 && x === _0n && isLastByteOdd)\n                // if x=0 and x_0 = 1, fail\n                throw new Error('Point.fromHex: x=0 and x_0=1');\n            if (isLastByteOdd !== isXOdd)\n                x = modP(-x); // if x_0 != x mod 2, set x = p-x\n            return Point.fromAffine({ x, y });\n        }\n        static fromPrivateKey(privKey) {\n            return getExtendedPublicKey(privKey).point;\n        }\n        toRawBytes() {\n            const { x, y } = this.toAffine();\n            const bytes = ut.numberToBytesLE(y, Fp.BYTES); // each y has 2 x values (x, -y)\n            bytes[bytes.length - 1] |= x & _1n ? 0x80 : 0; // when compressing, it's enough to store y\n            return bytes; // and use the last byte to encode sign of x\n        }\n        toHex() {\n            return ut.bytesToHex(this.toRawBytes()); // Same as toRawBytes, but returns string.\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, _1n, modP(CURVE.Gx * CURVE.Gy));\n    Point.ZERO = new Point(_0n, _1n, _1n, _0n); // 0, 1, 1, 0\n    const { BASE: G, ZERO: I } = Point;\n    const wnaf = (0, curve_js_1.wNAF)(Point, nByteLength * 8);\n    function modN(a) {\n        return (0, modular_js_1.mod)(a, CURVE_ORDER);\n    }\n    // Little-endian SHA512 with modulo n\n    function modN_LE(hash) {\n        return modN(ut.bytesToNumberLE(hash));\n    }\n    /** Convenience method that creates public key and other stuff. RFC8032 5.1.5 */\n    function getExtendedPublicKey(key) {\n        const len = nByteLength;\n        key = (0, utils_js_1.ensureBytes)('private key', key, len);\n        // Hash private key with curve's hash function to produce uniformingly random input\n        // Check byte lengths: ensure(64, h(ensure(32, key)))\n        const hashed = (0, utils_js_1.ensureBytes)('hashed private key', cHash(key), 2 * len);\n        const head = adjustScalarBytes(hashed.slice(0, len)); // clear first half bits, produce FE\n        const prefix = hashed.slice(len, 2 * len); // second half is called key prefix (5.1.6)\n        const scalar = modN_LE(head); // The actual private scalar\n        const point = G.multiply(scalar); // Point on Edwards curve aka public key\n        const pointBytes = point.toRawBytes(); // Uint8Array representation\n        return { head, prefix, scalar, point, pointBytes };\n    }\n    // Calculates EdDSA pub key. RFC8032 5.1.5. Privkey is hashed. Use first half with 3 bits cleared\n    function getPublicKey(privKey) {\n        return getExtendedPublicKey(privKey).pointBytes;\n    }\n    // int('LE', SHA512(dom2(F, C) || msgs)) mod N\n    function hashDomainToScalar(context = new Uint8Array(), ...msgs) {\n        const msg = ut.concatBytes(...msgs);\n        return modN_LE(cHash(domain(msg, (0, utils_js_1.ensureBytes)('context', context), !!prehash)));\n    }\n    /** Signs message with privateKey. RFC8032 5.1.6 */\n    function sign(msg, privKey, options = {}) {\n        msg = (0, utils_js_1.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph etc.\n        const { prefix, scalar, pointBytes } = getExtendedPublicKey(privKey);\n        const r = hashDomainToScalar(options.context, prefix, msg); // r = dom2(F, C) || prefix || PH(M)\n        const R = G.multiply(r).toRawBytes(); // R = rG\n        const k = hashDomainToScalar(options.context, R, pointBytes, msg); // R || A || PH(M)\n        const s = modN(r + k * scalar); // S = (r + k * s) mod L\n        assertGE0(s); // 0 <= s < l\n        const res = ut.concatBytes(R, ut.numberToBytesLE(s, Fp.BYTES));\n        return (0, utils_js_1.ensureBytes)('result', res, nByteLength * 2); // 64-byte signature\n    }\n    const verifyOpts = VERIFY_DEFAULT;\n    function verify(sig, msg, publicKey, options = verifyOpts) {\n        const { context, zip215 } = options;\n        const len = Fp.BYTES; // Verifies EdDSA signature against message and public key. RFC8032 5.1.7.\n        sig = (0, utils_js_1.ensureBytes)('signature', sig, 2 * len); // An extended group equation is checked.\n        msg = (0, utils_js_1.ensureBytes)('message', msg);\n        if (prehash)\n            msg = prehash(msg); // for ed25519ph, etc\n        const s = ut.bytesToNumberLE(sig.slice(len, 2 * len));\n        // zip215: true is good for consensus-critical apps and allows points < 2^256\n        // zip215: false follows RFC8032 / NIST186-5 and restricts points to CURVE.p\n        let A, R, SB;\n        try {\n            A = Point.fromHex(publicKey, zip215);\n            R = Point.fromHex(sig.slice(0, len), zip215);\n            SB = G.multiplyUnsafe(s); // 0 <= s < l is done inside\n        }\n        catch (error) {\n            return false;\n        }\n        if (!zip215 && A.isSmallOrder())\n            return false;\n        const k = hashDomainToScalar(context, R.toRawBytes(), A.toRawBytes(), msg);\n        const RkA = R.add(A.multiplyUnsafe(k));\n        // [8][S]B = [8]R + [8][k]A'\n        return RkA.subtract(SB).clearCofactor().equals(Point.ZERO);\n    }\n    G._setWindowSize(8); // Enable precomputes. Slows down first publicKey computation by 20ms.\n    const utils = {\n        getExtendedPublicKey,\n        // ed25519 private keys are uniform 32b. No need to check for modulo bias, like in secp256k1.\n        randomPrivateKey: () => randomBytes(Fp.BYTES),\n        /**\n         * We're doing scalar multiplication (used in getPublicKey etc) with precomputed BASE_POINT\n         * values. This slows down first getPublicKey() by milliseconds (see Speed section),\n         * but allows to speed-up subsequent getPublicKey() calls up to 20x.\n         * @param windowSize 2, 4, 8, 16\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3));\n            return point;\n        },\n    };\n    return {\n        CURVE,\n        getPublicKey,\n        sign,\n        verify,\n        ExtendedPoint: Point,\n        utils,\n    };\n}\nexports.twistedEdwards = twistedEdwards;\n//# sourceMappingURL=edwards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/abstract/edwards.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/abstract/hash-to-curve.js":
/*!**************************************************************!*\
  !*** ./node_modules/@noble/curves/abstract/hash-to-curve.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createHasher = exports.isogenyMap = exports.hash_to_field = exports.expand_message_xof = exports.expand_message_xmd = void 0;\nconst modular_js_1 = __webpack_require__(/*! ./modular.js */ \"./node_modules/@noble/curves/abstract/modular.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\nfunction validateDST(dst) {\n    if (dst instanceof Uint8Array)\n        return dst;\n    if (typeof dst === 'string')\n        return (0, utils_js_1.utf8ToBytes)(dst);\n    throw new Error('DST must be Uint8Array or string');\n}\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = utils_js_1.bytesToNumberBE;\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value, length) {\n    if (value < 0 || value >= 1 << (8 * length)) {\n        throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n    }\n    const res = Array.from({ length }).fill(0);\n    for (let i = length - 1; i >= 0; i--) {\n        res[i] = value & 0xff;\n        value >>>= 8;\n    }\n    return new Uint8Array(res);\n}\nfunction strxor(a, b) {\n    const arr = new Uint8Array(a.length);\n    for (let i = 0; i < a.length; i++) {\n        arr[i] = a[i] ^ b[i];\n    }\n    return arr;\n}\nfunction isBytes(item) {\n    if (!(item instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n}\nfunction isNum(item) {\n    if (!Number.isSafeInteger(item))\n        throw new Error('number expected');\n}\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.1\nfunction expand_message_xmd(msg, DST, lenInBytes, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    if (DST.length > 255)\n        DST = H((0, utils_js_1.concatBytes)((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-'), DST));\n    const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n    const ell = Math.ceil(lenInBytes / b_in_bytes);\n    if (ell > 255)\n        throw new Error('Invalid xmd length');\n    const DST_prime = (0, utils_js_1.concatBytes)(DST, i2osp(DST.length, 1));\n    const Z_pad = i2osp(0, r_in_bytes);\n    const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n    const b = new Array(ell);\n    const b_0 = H((0, utils_js_1.concatBytes)(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n    b[0] = H((0, utils_js_1.concatBytes)(b_0, i2osp(1, 1), DST_prime));\n    for (let i = 1; i <= ell; i++) {\n        const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n        b[i] = H((0, utils_js_1.concatBytes)(...args));\n    }\n    const pseudo_random_bytes = (0, utils_js_1.concatBytes)(...b);\n    return pseudo_random_bytes.slice(0, lenInBytes);\n}\nexports.expand_message_xmd = expand_message_xmd;\n// Produces a uniformly random byte string using an extendable-output function (XOF) H.\n// 1. The collision resistance of H MUST be at least k bits.\n// 2. H MUST be an XOF that has been proved indifferentiable from\n//    a random oracle under a reasonable cryptographic assumption.\n// https://www.rfc-editor.org/rfc/rfc9380#section-5.3.2\nfunction expand_message_xof(msg, DST, lenInBytes, k, H) {\n    isBytes(msg);\n    isBytes(DST);\n    isNum(lenInBytes);\n    // https://www.rfc-editor.org/rfc/rfc9380#section-5.3.3\n    // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n    if (DST.length > 255) {\n        const dkLen = Math.ceil((2 * k) / 8);\n        DST = H.create({ dkLen }).update((0, utils_js_1.utf8ToBytes)('H2C-OVERSIZE-DST-')).update(DST).digest();\n    }\n    if (lenInBytes > 65535 || DST.length > 255)\n        throw new Error('expand_message_xof: invalid lenInBytes');\n    return (H.create({ dkLen: lenInBytes })\n        .update(msg)\n        .update(i2osp(lenInBytes, 2))\n        // 2. DST_prime = DST || I2OSP(len(DST), 1)\n        .update(DST)\n        .update(i2osp(DST.length, 1))\n        .digest());\n}\nexports.expand_message_xof = expand_message_xof;\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://www.rfc-editor.org/rfc/rfc9380#section-5.2\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nfunction hash_to_field(msg, count, options) {\n    (0, utils_js_1.validateObject)(options, {\n        DST: 'stringOrUint8Array',\n        p: 'bigint',\n        m: 'isSafeInteger',\n        k: 'isSafeInteger',\n        hash: 'hash',\n    });\n    const { p, k, m, hash, expand, DST: _DST } = options;\n    isBytes(msg);\n    isNum(count);\n    const DST = validateDST(_DST);\n    const log2p = p.toString(2).length;\n    const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n    const len_in_bytes = count * m * L;\n    let prb; // pseudo_random_bytes\n    if (expand === 'xmd') {\n        prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n    }\n    else if (expand === 'xof') {\n        prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n    }\n    else if (expand === '_internal_pass') {\n        // for internal tests only\n        prb = msg;\n    }\n    else {\n        throw new Error('expand must be \"xmd\" or \"xof\"');\n    }\n    const u = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const e = new Array(m);\n        for (let j = 0; j < m; j++) {\n            const elm_offset = L * (j + i * m);\n            const tv = prb.subarray(elm_offset, elm_offset + L);\n            e[j] = (0, modular_js_1.mod)(os2ip(tv), p);\n        }\n        u[i] = e;\n    }\n    return u;\n}\nexports.hash_to_field = hash_to_field;\nfunction isogenyMap(field, map) {\n    // Make same order as in spec\n    const COEFF = map.map((i) => Array.from(i).reverse());\n    return (x, y) => {\n        const [xNum, xDen, yNum, yDen] = COEFF.map((val) => val.reduce((acc, i) => field.add(field.mul(acc, x), i)));\n        x = field.div(xNum, xDen); // xNum / xDen\n        y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n        return { x, y };\n    };\n}\nexports.isogenyMap = isogenyMap;\nfunction createHasher(Point, mapToCurve, def) {\n    if (typeof mapToCurve !== 'function')\n        throw new Error('mapToCurve() must be defined');\n    return {\n        // Encodes byte string to elliptic curve.\n        // hash_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        hashToCurve(msg, options) {\n            const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options });\n            const u0 = Point.fromAffine(mapToCurve(u[0]));\n            const u1 = Point.fromAffine(mapToCurve(u[1]));\n            const P = u0.add(u1).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n        // Encodes byte string to elliptic curve.\n        // encode_to_curve from https://www.rfc-editor.org/rfc/rfc9380#section-3\n        encodeToCurve(msg, options) {\n            const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options });\n            const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n            P.assertValidity();\n            return P;\n        },\n    };\n}\nexports.createHasher = createHasher;\n//# sourceMappingURL=hash-to-curve.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/abstract/hash-to-curve.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/abstract/modular.js":
/*!********************************************************!*\
  !*** ./node_modules/@noble/curves/abstract/modular.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mapHashToField = exports.getMinHashLength = exports.getFieldBytesLength = exports.hashToPrivateScalar = exports.FpSqrtEven = exports.FpSqrtOdd = exports.Field = exports.nLength = exports.FpIsSquare = exports.FpDiv = exports.FpInvertBatch = exports.FpPow = exports.validateField = exports.isNegativeLE = exports.FpSqrt = exports.tonelliShanks = exports.invert = exports.pow2 = exports.pow = exports.mod = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n// Calculates a modulo b\nfunction mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nexports.mod = mod;\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nfunction pow(num, power, modulo) {\n    if (modulo <= _0n || power < _0n)\n        throw new Error('Expected power/modulo > 0');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\nexports.pow = pow;\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nfunction pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\nexports.pow2 = pow2;\n// Inverses number over modulo\nfunction invert(number, modulo) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nexports.invert = invert;\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nfunction tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++)\n        ;\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\nexports.tonelliShanks = tonelliShanks;\nfunction FpSqrt(P) {\n    // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n    // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\nexports.FpSqrt = FpSqrt;\n// Little-endian check for first LE bit (last BE bit);\nconst isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\nexports.isNegativeLE = isNegativeLE;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nfunction validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return (0, utils_js_1.validateObject)(field, opts);\n}\nexports.validateField = validateField;\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nfunction FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('Expected power > 0');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\nexports.FpPow = FpPow;\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nfunction FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexports.FpInvertBatch = FpInvertBatch;\nfunction FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\nexports.FpDiv = FpDiv;\n// This function returns True whenever the value x is a square in the field F.\nfunction FpIsSquare(f) {\n    const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n    return (x) => {\n        const p = f.pow(x, legendreConst);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\nexports.FpIsSquare = FpIsSquare;\n// CURVE.n lengths\nfunction nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\nexports.nLength = nLength;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nfunction Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('Field lengths over 2048 bytes are not supported');\n    const sqrtP = FpSqrt(ORDER);\n    const f = Object.freeze({\n        ORDER,\n        BITS,\n        BYTES,\n        MASK: (0, utils_js_1.bitMask)(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? (0, utils_js_1.numberToBytesLE)(num, BYTES) : (0, utils_js_1.numberToBytesBE)(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n            return isLE ? (0, utils_js_1.bytesToNumberLE)(bytes) : (0, utils_js_1.bytesToNumberBE)(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexports.Field = Field;\nfunction FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexports.FpSqrtOdd = FpSqrtOdd;\nfunction FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(`Field doesn't have isOdd`);\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\nexports.FpSqrtEven = FpSqrtEven;\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nfunction hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = (0, utils_js_1.ensureBytes)('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberLE)(hash) : (0, utils_js_1.bytesToNumberBE)(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\nexports.hashToPrivateScalar = hashToPrivateScalar;\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nfunction getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\nexports.getFieldBytesLength = getFieldBytesLength;\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nfunction getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\nexports.getMinHashLength = getMinHashLength;\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nfunction mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n    const num = isLE ? (0, utils_js_1.bytesToNumberBE)(key) : (0, utils_js_1.bytesToNumberLE)(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? (0, utils_js_1.numberToBytesLE)(reduced, fieldLen) : (0, utils_js_1.numberToBytesBE)(reduced, fieldLen);\n}\nexports.mapHashToField = mapHashToField;\n//# sourceMappingURL=modular.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/abstract/modular.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/abstract/montgomery.js":
/*!***********************************************************!*\
  !*** ./node_modules/@noble/curves/abstract/montgomery.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.montgomery = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst modular_js_1 = __webpack_require__(/*! ./modular.js */ \"./node_modules/@noble/curves/abstract/modular.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction validateOpts(curve) {\n    (0, utils_js_1.validateObject)(curve, {\n        a: 'bigint',\n    }, {\n        montgomeryBits: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n        adjustScalarBytes: 'function',\n        domain: 'function',\n        powPminus2: 'function',\n        Gu: 'bigint',\n    });\n    // Set defaults\n    return Object.freeze({ ...curve });\n}\n// NOTE: not really montgomery curve, just bunch of very specific methods for X25519/X448 (RFC 7748, https://www.rfc-editor.org/rfc/rfc7748)\n// Uses only one coordinate instead of two\nfunction montgomery(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { P } = CURVE;\n    const modP = (n) => (0, modular_js_1.mod)(n, P);\n    const montgomeryBits = CURVE.montgomeryBits;\n    const montgomeryBytes = Math.ceil(montgomeryBits / 8);\n    const fieldLen = CURVE.nByteLength;\n    const adjustScalarBytes = CURVE.adjustScalarBytes || ((bytes) => bytes);\n    const powPminus2 = CURVE.powPminus2 || ((x) => (0, modular_js_1.pow)(x, P - BigInt(2), P));\n    // cswap from RFC7748. But it is not from RFC7748!\n    /*\n      cswap(swap, x_2, x_3):\n           dummy = mask(swap) AND (x_2 XOR x_3)\n           x_2 = x_2 XOR dummy\n           x_3 = x_3 XOR dummy\n           Return (x_2, x_3)\n    Where mask(swap) is the all-1 or all-0 word of the same length as x_2\n     and x_3, computed, e.g., as mask(swap) = 0 - swap.\n    */\n    function cswap(swap, x_2, x_3) {\n        const dummy = modP(swap * (x_2 - x_3));\n        x_2 = modP(x_2 - dummy);\n        x_3 = modP(x_3 + dummy);\n        return [x_2, x_3];\n    }\n    // Accepts 0 as well\n    function assertFieldElement(n) {\n        if (typeof n === 'bigint' && _0n <= n && n < P)\n            return n;\n        throw new Error('Expected valid scalar 0 < scalar < CURVE.P');\n    }\n    // x25519 from 4\n    // The constant a24 is (486662 - 2) / 4 = 121665 for curve25519/X25519\n    const a24 = (CURVE.a - BigInt(2)) / BigInt(4);\n    /**\n     *\n     * @param pointU u coordinate (x) on Montgomery Curve 25519\n     * @param scalar by which the point would be multiplied\n     * @returns new Point on Montgomery curve\n     */\n    function montgomeryLadder(pointU, scalar) {\n        const u = assertFieldElement(pointU);\n        // Section 5: Implementations MUST accept non-canonical values and process them as\n        // if they had been reduced modulo the field prime.\n        const k = assertFieldElement(scalar);\n        const x_1 = u;\n        let x_2 = _1n;\n        let z_2 = _0n;\n        let x_3 = u;\n        let z_3 = _1n;\n        let swap = _0n;\n        let sw;\n        for (let t = BigInt(montgomeryBits - 1); t >= _0n; t--) {\n            const k_t = (k >> t) & _1n;\n            swap ^= k_t;\n            sw = cswap(swap, x_2, x_3);\n            x_2 = sw[0];\n            x_3 = sw[1];\n            sw = cswap(swap, z_2, z_3);\n            z_2 = sw[0];\n            z_3 = sw[1];\n            swap = k_t;\n            const A = x_2 + z_2;\n            const AA = modP(A * A);\n            const B = x_2 - z_2;\n            const BB = modP(B * B);\n            const E = AA - BB;\n            const C = x_3 + z_3;\n            const D = x_3 - z_3;\n            const DA = modP(D * A);\n            const CB = modP(C * B);\n            const dacb = DA + CB;\n            const da_cb = DA - CB;\n            x_3 = modP(dacb * dacb);\n            z_3 = modP(x_1 * modP(da_cb * da_cb));\n            x_2 = modP(AA * BB);\n            z_2 = modP(E * (AA + modP(a24 * E)));\n        }\n        // (x_2, x_3) = cswap(swap, x_2, x_3)\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        // (z_2, z_3) = cswap(swap, z_2, z_3)\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        // z_2^(p - 2)\n        const z2 = powPminus2(z_2);\n        // Return x_2 * (z_2^(p - 2))\n        return modP(x_2 * z2);\n    }\n    function encodeUCoordinate(u) {\n        return (0, utils_js_1.numberToBytesLE)(modP(u), montgomeryBytes);\n    }\n    function decodeUCoordinate(uEnc) {\n        // Section 5: When receiving such an array, implementations of X25519\n        // MUST mask the most significant bit in the final byte.\n        // This is very ugly way, but it works because fieldLen-1 is outside of bounds for X448, so this becomes NOOP\n        // fieldLen - scalaryBytes = 1 for X448 and = 0 for X25519\n        const u = (0, utils_js_1.ensureBytes)('u coordinate', uEnc, montgomeryBytes);\n        // u[fieldLen-1] crashes QuickJS (TypeError: out-of-bound numeric index)\n        if (fieldLen === montgomeryBytes)\n            u[fieldLen - 1] &= 127; // 0b0111_1111\n        return (0, utils_js_1.bytesToNumberLE)(u);\n    }\n    function decodeScalar(n) {\n        const bytes = (0, utils_js_1.ensureBytes)('scalar', n);\n        if (bytes.length !== montgomeryBytes && bytes.length !== fieldLen)\n            throw new Error(`Expected ${montgomeryBytes} or ${fieldLen} bytes, got ${bytes.length}`);\n        return (0, utils_js_1.bytesToNumberLE)(adjustScalarBytes(bytes));\n    }\n    function scalarMult(scalar, u) {\n        const pointU = decodeUCoordinate(u);\n        const _scalar = decodeScalar(scalar);\n        const pu = montgomeryLadder(pointU, _scalar);\n        // The result was not contributory\n        // https://cr.yp.to/ecdh.html#validate\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    }\n    // Computes public key from private. By doing scalar multiplication of base point.\n    const GuBytes = encodeUCoordinate(CURVE.Gu);\n    function scalarMultBase(scalar) {\n        return scalarMult(scalar, GuBytes);\n    }\n    return {\n        scalarMult,\n        scalarMultBase,\n        getSharedSecret: (privateKey, publicKey) => scalarMult(privateKey, publicKey),\n        getPublicKey: (privateKey) => scalarMultBase(privateKey),\n        utils: { randomPrivateKey: () => CURVE.randomBytes(CURVE.nByteLength) },\n        GuBytes: GuBytes,\n    };\n}\nexports.montgomery = montgomery;\n//# sourceMappingURL=montgomery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/abstract/montgomery.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/abstract/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/@noble/curves/abstract/utils.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateObject = exports.createHmacDrbg = exports.bitMask = exports.bitSet = exports.bitGet = exports.bitLen = exports.utf8ToBytes = exports.equalBytes = exports.concatBytes = exports.ensureBytes = exports.numberToVarBytesBE = exports.numberToBytesLE = exports.numberToBytesBE = exports.bytesToNumberLE = exports.bytesToNumberBE = exports.hexToBytes = exports.hexToNumber = exports.numberToHexUnpadded = exports.bytesToHex = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a) => a instanceof Uint8Array;\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nexports.numberToHexUnpadded = numberToHexUnpadded;\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // Big Endian\n    return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\nexports.hexToNumber = hexToNumber;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// BE: Big Endian, LE: Little Endian\nfunction bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexports.bytesToNumberBE = bytesToNumberBE;\nfunction bytesToNumberLE(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexports.bytesToNumberLE = bytesToNumberLE;\nfunction numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexports.numberToBytesBE = numberToBytesBE;\nfunction numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\nexports.numberToBytesLE = numberToBytesLE;\n// Unpadded, rarely used\nfunction numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\nexports.numberToVarBytesBE = numberToVarBytesBE;\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nfunction ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n        }\n    }\n    else if (u8a(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(`${title} must be hex string or Uint8Array`);\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n    return res;\n}\nexports.ensureBytes = ensureBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\nfunction equalBytes(b1, b2) {\n    // We don't care about timing attacks here\n    if (b1.length !== b2.length)\n        return false;\n    for (let i = 0; i < b1.length; i++)\n        if (b1[i] !== b2[i])\n            return false;\n    return true;\n}\nexports.equalBytes = equalBytes;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nfunction bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\nexports.bitLen = bitLen;\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nfunction bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\nexports.bitGet = bitGet;\n/**\n * Sets single bit at position.\n */\nconst bitSet = (n, pos, value) => {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n};\nexports.bitSet = bitSet;\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nconst bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\nexports.bitMask = bitMask;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nfunction createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\nexports.createHmacDrbg = createHmacDrbg;\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || val instanceof Uint8Array,\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nfunction validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error(`Invalid validator \"${type}\", expected function`);\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error(`Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\nexports.validateObject = validateObject;\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/abstract/utils.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/ed25519.js":
/*!***********************************************!*\
  !*** ./node_modules/@noble/curves/ed25519.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hash_to_ristretto255 = exports.hashToRistretto255 = exports.RistrettoPoint = exports.encodeToCurve = exports.hashToCurve = exports.edwardsToMontgomeryPriv = exports.edwardsToMontgomery = exports.edwardsToMontgomeryPub = exports.x25519 = exports.ed25519ph = exports.ed25519ctx = exports.ed25519 = exports.ED25519_TORSION_SUBGROUP = void 0;\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/sha512.js\");\nconst utils_1 = __webpack_require__(/*! @noble/hashes/utils */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/utils.js\");\nconst edwards_js_1 = __webpack_require__(/*! ./abstract/edwards.js */ \"./node_modules/@noble/curves/abstract/edwards.js\");\nconst montgomery_js_1 = __webpack_require__(/*! ./abstract/montgomery.js */ \"./node_modules/@noble/curves/abstract/montgomery.js\");\nconst modular_js_1 = __webpack_require__(/*! ./abstract/modular.js */ \"./node_modules/@noble/curves/abstract/modular.js\");\nconst utils_js_1 = __webpack_require__(/*! ./abstract/utils.js */ \"./node_modules/@noble/curves/abstract/utils.js\");\nconst hash_to_curve_js_1 = __webpack_require__(/*! ./abstract/hash-to-curve.js */ \"./node_modules/@noble/curves/abstract/hash-to-curve.js\");\n/**\n * ed25519 Twisted Edwards curve with following addons:\n * - X25519 ECDH\n * - Ristretto cofactor elimination\n * - Elligator hash-to-group / point indistinguishability\n */\nconst ED25519_P = BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949');\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst ED25519_SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _5n = BigInt(5);\n// prettier-ignore\nconst _10n = BigInt(10), _20n = BigInt(20), _40n = BigInt(40), _80n = BigInt(80);\nfunction ed25519_pow_2_252_3(x) {\n    const P = ED25519_P;\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P; // x^3, 11\n    const b4 = ((0, modular_js_1.pow2)(b2, _2n, P) * b2) % P; // x^15, 1111\n    const b5 = ((0, modular_js_1.pow2)(b4, _1n, P) * x) % P; // x^31\n    const b10 = ((0, modular_js_1.pow2)(b5, _5n, P) * b5) % P;\n    const b20 = ((0, modular_js_1.pow2)(b10, _10n, P) * b10) % P;\n    const b40 = ((0, modular_js_1.pow2)(b20, _20n, P) * b20) % P;\n    const b80 = ((0, modular_js_1.pow2)(b40, _40n, P) * b40) % P;\n    const b160 = ((0, modular_js_1.pow2)(b80, _80n, P) * b80) % P;\n    const b240 = ((0, modular_js_1.pow2)(b160, _80n, P) * b80) % P;\n    const b250 = ((0, modular_js_1.pow2)(b240, _10n, P) * b10) % P;\n    const pow_p_5_8 = ((0, modular_js_1.pow2)(b250, _2n, P) * x) % P;\n    // ^ To pow to (p+3)/8, multiply it by x.\n    return { pow_p_5_8, b2 };\n}\nfunction adjustScalarBytes(bytes) {\n    // Section 5: For X25519, in order to decode 32 random bytes as an integer scalar,\n    // set the three least significant bits of the first byte\n    bytes[0] &= 248; // 0b1111_1000\n    // and the most significant bit of the last to zero,\n    bytes[31] &= 127; // 0b0111_1111\n    // set the second most significant bit of the last byte to 1\n    bytes[31] |= 64; // 0b0100_0000\n    return bytes;\n}\n// sqrt(u/v)\nfunction uvRatio(u, v) {\n    const P = ED25519_P;\n    const v3 = (0, modular_js_1.mod)(v * v * v, P); // v³\n    const v7 = (0, modular_js_1.mod)(v3 * v3 * v, P); // v⁷\n    // (p+3)/8 and (p-5)/8\n    const pow = ed25519_pow_2_252_3(u * v7).pow_p_5_8;\n    let x = (0, modular_js_1.mod)(u * v3 * pow, P); // (uv³)(uv⁷)^(p-5)/8\n    const vx2 = (0, modular_js_1.mod)(v * x * x, P); // vx²\n    const root1 = x; // First root candidate\n    const root2 = (0, modular_js_1.mod)(x * ED25519_SQRT_M1, P); // Second root candidate\n    const useRoot1 = vx2 === u; // If vx² = u (mod p), x is a square root\n    const useRoot2 = vx2 === (0, modular_js_1.mod)(-u, P); // If vx² = -u, set x <-- x * 2^((p-1)/4)\n    const noRoot = vx2 === (0, modular_js_1.mod)(-u * ED25519_SQRT_M1, P); // There is no valid root, vx² = -u√(-1)\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2; // We return root2 anyway, for const-time\n    if ((0, modular_js_1.isNegativeLE)(x, P))\n        x = (0, modular_js_1.mod)(-x, P);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\n// Just in case\nexports.ED25519_TORSION_SUBGROUP = [\n    '0100000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n    '0000000000000000000000000000000000000000000000000000000000000080',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n    'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n    '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n    '0000000000000000000000000000000000000000000000000000000000000000',\n    'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n];\nconst Fp = (0, modular_js_1.Field)(ED25519_P, undefined, true);\nconst ed25519Defaults = {\n    // Param: a\n    a: BigInt(-1),\n    // d is equal to -121665/121666 over finite field.\n    // Negative number is P - number, and division is invert(number, P)\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    // Finite field 𝔽p over which we'll do calculations; 2n**255n - 19n\n    Fp,\n    // Subgroup order: how many points curve has\n    // 2n**252n + 27742317777372353535851937790883648493n;\n    n: BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989'),\n    // Cofactor\n    h: BigInt(8),\n    // Base point (x, y) aka generator point\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n    hash: sha512_1.sha512,\n    randomBytes: utils_1.randomBytes,\n    adjustScalarBytes,\n    // dom2\n    // Ratio of u to v. Allows us to combine inversion and square root. Uses algo from RFC8032 5.1.3.\n    // Constant-time, u/√v\n    uvRatio,\n};\nexports.ed25519 = (0, edwards_js_1.twistedEdwards)(ed25519Defaults);\nfunction ed25519_domain(data, ctx, phflag) {\n    if (ctx.length > 255)\n        throw new Error('Context is too big');\n    return (0, utils_1.concatBytes)((0, utils_1.utf8ToBytes)('SigEd25519 no Ed25519 collisions'), new Uint8Array([phflag ? 1 : 0, ctx.length]), ctx, data);\n}\nexports.ed25519ctx = (0, edwards_js_1.twistedEdwards)({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n});\nexports.ed25519ph = (0, edwards_js_1.twistedEdwards)({\n    ...ed25519Defaults,\n    domain: ed25519_domain,\n    prehash: sha512_1.sha512,\n});\nexports.x25519 = (() => (0, montgomery_js_1.montgomery)({\n    P: ED25519_P,\n    a: BigInt(486662),\n    montgomeryBits: 255,\n    nByteLength: 32,\n    Gu: BigInt(9),\n    powPminus2: (x) => {\n        const P = ED25519_P;\n        // x^(p-2) aka x^(2^255-21)\n        const { pow_p_5_8, b2 } = ed25519_pow_2_252_3(x);\n        return (0, modular_js_1.mod)((0, modular_js_1.pow2)(pow_p_5_8, BigInt(3), P) * b2, P);\n    },\n    adjustScalarBytes,\n    randomBytes: utils_1.randomBytes,\n}))();\n/**\n * Converts ed25519 public key to x25519 public key. Uses formula:\n * * `(u, v) = ((1+y)/(1-y), sqrt(-486664)*u/x)`\n * * `(x, y) = (sqrt(-486664)*u/v, (u-1)/(u+1))`\n * @example\n *   const someonesPub = ed25519.getPublicKey(ed25519.utils.randomPrivateKey());\n *   const aPriv = x25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(aPriv, edwardsToMontgomeryPub(someonesPub))\n */\nfunction edwardsToMontgomeryPub(edwardsPub) {\n    const { y } = exports.ed25519.ExtendedPoint.fromHex(edwardsPub);\n    const _1n = BigInt(1);\n    return Fp.toBytes(Fp.create((_1n + y) * Fp.inv(_1n - y)));\n}\nexports.edwardsToMontgomeryPub = edwardsToMontgomeryPub;\nexports.edwardsToMontgomery = edwardsToMontgomeryPub; // deprecated\n/**\n * Converts ed25519 secret key to x25519 secret key.\n * @example\n *   const someonesPub = x25519.getPublicKey(x25519.utils.randomPrivateKey());\n *   const aPriv = ed25519.utils.randomPrivateKey();\n *   x25519.getSharedSecret(edwardsToMontgomeryPriv(aPriv), someonesPub)\n */\nfunction edwardsToMontgomeryPriv(edwardsPriv) {\n    const hashed = ed25519Defaults.hash(edwardsPriv.subarray(0, 32));\n    return ed25519Defaults.adjustScalarBytes(hashed).subarray(0, 32);\n}\nexports.edwardsToMontgomeryPriv = edwardsToMontgomeryPriv;\n// Hash To Curve Elligator2 Map (NOTE: different from ristretto255 elligator)\n// NOTE: very important part is usage of FpSqrtEven for ELL2_C1_EDWARDS, since\n// SageMath returns different root first and everything falls apart\nconst ELL2_C1 = (Fp.ORDER + BigInt(3)) / BigInt(8); // 1. c1 = (q + 3) / 8       # Integer arithmetic\nconst ELL2_C2 = Fp.pow(_2n, ELL2_C1); // 2. c2 = 2^c1\nconst ELL2_C3 = Fp.sqrt(Fp.neg(Fp.ONE)); // 3. c3 = sqrt(-1)\nconst ELL2_C4 = (Fp.ORDER - BigInt(5)) / BigInt(8); // 4. c4 = (q - 5) / 8       # Integer arithmetic\nconst ELL2_J = BigInt(486662);\n// prettier-ignore\nfunction map_to_curve_elligator2_curve25519(u) {\n    let tv1 = Fp.sqr(u); //  1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, _2n); //  2.  tv1 = 2 * tv1\n    let xd = Fp.add(tv1, Fp.ONE); //  3.   xd = tv1 + 1         # Nonzero: -1 is square (mod p), tv1 is not\n    let x1n = Fp.neg(ELL2_J); //  4.  x1n = -J              # x1 = x1n / xd = -J / (1 + 2 * u^2)\n    let tv2 = Fp.sqr(xd); //  5.  tv2 = xd^2\n    let gxd = Fp.mul(tv2, xd); //  6.  gxd = tv2 * xd        # gxd = xd^3\n    let gx1 = Fp.mul(tv1, ELL2_J); //  7.  gx1 = J * tv1         # x1n + J * xd\n    gx1 = Fp.mul(gx1, x1n); //  8.  gx1 = gx1 * x1n       # x1n^2 + J * x1n * xd\n    gx1 = Fp.add(gx1, tv2); //  9.  gx1 = gx1 + tv2       # x1n^2 + J * x1n * xd + xd^2\n    gx1 = Fp.mul(gx1, x1n); //  10. gx1 = gx1 * x1n       # x1n^3 + J * x1n^2 * xd + x1n * xd^2\n    let tv3 = Fp.sqr(gxd); //  11. tv3 = gxd^2\n    tv2 = Fp.sqr(tv3); //  12. tv2 = tv3^2           # gxd^4\n    tv3 = Fp.mul(tv3, gxd); //  13. tv3 = tv3 * gxd       # gxd^3\n    tv3 = Fp.mul(tv3, gx1); //  14. tv3 = tv3 * gx1       # gx1 * gxd^3\n    tv2 = Fp.mul(tv2, tv3); //  15. tv2 = tv2 * tv3       # gx1 * gxd^7\n    let y11 = Fp.pow(tv2, ELL2_C4); //  16. y11 = tv2^c4        # (gx1 * gxd^7)^((p - 5) / 8)\n    y11 = Fp.mul(y11, tv3); //  17. y11 = y11 * tv3       # gx1*gxd^3*(gx1*gxd^7)^((p-5)/8)\n    let y12 = Fp.mul(y11, ELL2_C3); //  18. y12 = y11 * c3\n    tv2 = Fp.sqr(y11); //  19. tv2 = y11^2\n    tv2 = Fp.mul(tv2, gxd); //  20. tv2 = tv2 * gxd\n    let e1 = Fp.eql(tv2, gx1); //  21.  e1 = tv2 == gx1\n    let y1 = Fp.cmov(y12, y11, e1); //  22.  y1 = CMOV(y12, y11, e1)  # If g(x1) is square, this is its sqrt\n    let x2n = Fp.mul(x1n, tv1); //  23. x2n = x1n * tv1       # x2 = x2n / xd = 2 * u^2 * x1n / xd\n    let y21 = Fp.mul(y11, u); //  24. y21 = y11 * u\n    y21 = Fp.mul(y21, ELL2_C2); //  25. y21 = y21 * c2\n    let y22 = Fp.mul(y21, ELL2_C3); //  26. y22 = y21 * c3\n    let gx2 = Fp.mul(gx1, tv1); //  27. gx2 = gx1 * tv1       # g(x2) = gx2 / gxd = 2 * u^2 * g(x1)\n    tv2 = Fp.sqr(y21); //  28. tv2 = y21^2\n    tv2 = Fp.mul(tv2, gxd); //  29. tv2 = tv2 * gxd\n    let e2 = Fp.eql(tv2, gx2); //  30.  e2 = tv2 == gx2\n    let y2 = Fp.cmov(y22, y21, e2); //  31.  y2 = CMOV(y22, y21, e2)  # If g(x2) is square, this is its sqrt\n    tv2 = Fp.sqr(y1); //  32. tv2 = y1^2\n    tv2 = Fp.mul(tv2, gxd); //  33. tv2 = tv2 * gxd\n    let e3 = Fp.eql(tv2, gx1); //  34.  e3 = tv2 == gx1\n    let xn = Fp.cmov(x2n, x1n, e3); //  35.  xn = CMOV(x2n, x1n, e3)  # If e3, x = x1, else x = x2\n    let y = Fp.cmov(y2, y1, e3); //  36.   y = CMOV(y2, y1, e3)    # If e3, y = y1, else y = y2\n    let e4 = Fp.isOdd(y); //  37.  e4 = sgn0(y) == 1        # Fix sign of y\n    y = Fp.cmov(y, Fp.neg(y), e3 !== e4); //  38.   y = CMOV(y, -y, e3 XOR e4)\n    return { xMn: xn, xMd: xd, yMn: y, yMd: _1n }; //  39. return (xn, xd, y, 1)\n}\nconst ELL2_C1_EDWARDS = (0, modular_js_1.FpSqrtEven)(Fp, Fp.neg(BigInt(486664))); // sgn0(c1) MUST equal 0\nfunction map_to_curve_elligator2_edwards25519(u) {\n    const { xMn, xMd, yMn, yMd } = map_to_curve_elligator2_curve25519(u); //  1.  (xMn, xMd, yMn, yMd) =\n    // map_to_curve_elligator2_curve25519(u)\n    let xn = Fp.mul(xMn, yMd); //  2.  xn = xMn * yMd\n    xn = Fp.mul(xn, ELL2_C1_EDWARDS); //  3.  xn = xn * c1\n    let xd = Fp.mul(xMd, yMn); //  4.  xd = xMd * yMn    # xn / xd = c1 * xM / yM\n    let yn = Fp.sub(xMn, xMd); //  5.  yn = xMn - xMd\n    let yd = Fp.add(xMn, xMd); //  6.  yd = xMn + xMd    # (n / d - 1) / (n / d + 1) = (n - d) / (n + d)\n    let tv1 = Fp.mul(xd, yd); //  7. tv1 = xd * yd\n    let e = Fp.eql(tv1, Fp.ZERO); //  8.   e = tv1 == 0\n    xn = Fp.cmov(xn, Fp.ZERO, e); //  9.  xn = CMOV(xn, 0, e)\n    xd = Fp.cmov(xd, Fp.ONE, e); //  10. xd = CMOV(xd, 1, e)\n    yn = Fp.cmov(yn, Fp.ONE, e); //  11. yn = CMOV(yn, 1, e)\n    yd = Fp.cmov(yd, Fp.ONE, e); //  12. yd = CMOV(yd, 1, e)\n    const inv = Fp.invertBatch([xd, yd]); // batch division\n    return { x: Fp.mul(xn, inv[0]), y: Fp.mul(yn, inv[1]) }; //  13. return (xn, xd, yn, yd)\n}\nconst htf = /* @__PURE__ */ (() => (0, hash_to_curve_js_1.createHasher)(exports.ed25519.ExtendedPoint, (scalars) => map_to_curve_elligator2_edwards25519(scalars[0]), {\n    DST: 'edwards25519_XMD:SHA-512_ELL2_RO_',\n    encodeDST: 'edwards25519_XMD:SHA-512_ELL2_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha512_1.sha512,\n}))();\nexports.hashToCurve = (() => htf.hashToCurve)();\nexports.encodeToCurve = (() => htf.encodeToCurve)();\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistPoint))\n        throw new Error('RistrettoPoint expected');\n}\n// √(-1) aka √(a) aka 2^((p-1)/4)\nconst SQRT_M1 = ED25519_SQRT_M1;\n// √(ad - 1)\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\n// 1 / √(a-d)\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\n// 1-d²\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\n// (d-1)²\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\n// Calculates 1/√(number)\nconst invertSqrt = (number) => uvRatio(_1n, number);\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nconst bytes255ToNumberLE = (bytes) => exports.ed25519.CURVE.Fp.create((0, utils_js_1.bytesToNumberLE)(bytes) & MAX_255B);\n// Computes Elligator map for Ristretto\n// https://ristretto.group/formulas/elligator.html\nfunction calcElligatorRistrettoMap(r0) {\n    const { d } = exports.ed25519.CURVE;\n    const P = exports.ed25519.CURVE.Fp.ORDER;\n    const mod = exports.ed25519.CURVE.Fp.create;\n    const r = mod(SQRT_M1 * r0 * r0); // 1\n    const Ns = mod((r + _1n) * ONE_MINUS_D_SQ); // 2\n    let c = BigInt(-1); // 3\n    const D = mod((c - d * r) * mod(r + d)); // 4\n    let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D); // 5\n    let s_ = mod(s * r0); // 6\n    if (!(0, modular_js_1.isNegativeLE)(s_, P))\n        s_ = mod(-s_);\n    if (!Ns_D_is_sq)\n        s = s_; // 7\n    if (!Ns_D_is_sq)\n        c = r; // 8\n    const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D); // 9\n    const s2 = s * s;\n    const W0 = mod((s + s) * D); // 10\n    const W1 = mod(Nt * SQRT_AD_MINUS_ONE); // 11\n    const W2 = mod(_1n - s2); // 12\n    const W3 = mod(_1n + s2); // 13\n    return new exports.ed25519.ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n}\n/**\n * Each ed25519/ExtendedPoint has 8 different equivalent points. This can be\n * a source of bugs for protocols like ring signatures. Ristretto was created to solve this.\n * Ristretto point operates in X:Y:Z:T extended coordinates like ExtendedPoint,\n * but it should work in its own namespace: do not combine those two.\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-ristretto255-decaf448\n */\nclass RistPoint {\n    // Private property to discourage combining ExtendedPoint + RistrettoPoint\n    // Always use Ristretto encoding/decoding instead.\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static fromAffine(ap) {\n        return new RistPoint(exports.ed25519.ExtendedPoint.fromAffine(ap));\n    }\n    /**\n     * Takes uniform output of 64-byte hash function like sha512 and converts it to `RistrettoPoint`.\n     * The hash-to-group operation applies Elligator twice and adds the results.\n     * **Note:** this is one-way map, there is no conversion from point to hash.\n     * https://ristretto.group/formulas/elligator.html\n     * @param hex 64-byte output of a hash function\n     */\n    static hashToCurve(hex) {\n        hex = (0, utils_js_1.ensureBytes)('ristrettoHash', hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = calcElligatorRistrettoMap(r2);\n        return new RistPoint(R1.add(R2));\n    }\n    /**\n     * Converts ristretto-encoded string to ristretto point.\n     * https://ristretto.group/formulas/decoding.html\n     * @param hex Ristretto-encoded 32 bytes. Not every 32-byte string is valid ristretto encoding\n     */\n    static fromHex(hex) {\n        hex = (0, utils_js_1.ensureBytes)('ristrettoHex', hex, 32);\n        const { a, d } = exports.ed25519.CURVE;\n        const P = exports.ed25519.CURVE.Fp.ORDER;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        // 1. Check that s_bytes is the canonical encoding of a field element, or else abort.\n        // 3. Check that s is non-negative, or else abort\n        if (!(0, utils_js_1.equalBytes)((0, utils_js_1.numberToBytesLE)(s, 32), hex) || (0, modular_js_1.isNegativeLE)(s, P))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2); // 4 (a is -1)\n        const u2 = mod(_1n - a * s2); // 5\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2); // 6\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2)); // 7\n        const Dx = mod(I * u2); // 8\n        const Dy = mod(I * Dx * v); // 9\n        let x = mod((s + s) * Dx); // 10\n        if ((0, modular_js_1.isNegativeLE)(x, P))\n            x = mod(-x); // 10\n        const y = mod(u1 * Dy); // 11\n        const t = mod(x * y); // 12\n        if (!isValid || (0, modular_js_1.isNegativeLE)(t, P) || y === _0n)\n            throw new Error(emsg);\n        return new RistPoint(new exports.ed25519.ExtendedPoint(x, y, _1n, t));\n    }\n    /**\n     * Encodes ristretto point to Uint8Array.\n     * https://ristretto.group/formulas/encoding.html\n     */\n    toRawBytes() {\n        let { ex: x, ey: y, ez: z, et: t } = this.ep;\n        const P = exports.ed25519.CURVE.Fp.ORDER;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        const u1 = mod(mod(z + y) * mod(z - y)); // 1\n        const u2 = mod(x * y); // 2\n        // Square root always exists\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq)); // 3\n        const D1 = mod(invsqrt * u1); // 4\n        const D2 = mod(invsqrt * u2); // 5\n        const zInv = mod(D1 * D2 * t); // 6\n        let D; // 7\n        if ((0, modular_js_1.isNegativeLE)(t * zInv, P)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2; // 8\n        }\n        if ((0, modular_js_1.isNegativeLE)(x * zInv, P))\n            y = mod(-y); // 9\n        let s = mod((z - y) * D); // 10 (check footer's note, no sqrt(-a))\n        if ((0, modular_js_1.isNegativeLE)(s, P))\n            s = mod(-s);\n        return (0, utils_js_1.numberToBytesLE)(s, 32); // 11\n    }\n    toHex() {\n        return (0, utils_js_1.bytesToHex)(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    // Compare one point to another.\n    equals(other) {\n        assertRstPoint(other);\n        const { ex: X1, ey: Y1 } = this.ep;\n        const { ex: X2, ey: Y2 } = other.ep;\n        const mod = exports.ed25519.CURVE.Fp.create;\n        // (x1 * y2 == y1 * x2) | (y1 * y2 == x1 * x2)\n        const one = mod(X1 * Y2) === mod(Y1 * X2);\n        const two = mod(Y1 * Y2) === mod(X1 * X2);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nexports.RistrettoPoint = (() => {\n    if (!RistPoint.BASE)\n        RistPoint.BASE = new RistPoint(exports.ed25519.ExtendedPoint.BASE);\n    if (!RistPoint.ZERO)\n        RistPoint.ZERO = new RistPoint(exports.ed25519.ExtendedPoint.ZERO);\n    return RistPoint;\n})();\n// Hashing to ristretto255. https://www.rfc-editor.org/rfc/rfc9380#appendix-B\nconst hashToRistretto255 = (msg, options) => {\n    const d = options.DST;\n    const DST = typeof d === 'string' ? (0, utils_1.utf8ToBytes)(d) : d;\n    const uniform_bytes = (0, hash_to_curve_js_1.expand_message_xmd)(msg, DST, 64, sha512_1.sha512);\n    const P = RistPoint.hashToCurve(uniform_bytes);\n    return P;\n};\nexports.hashToRistretto255 = hashToRistretto255;\nexports.hash_to_ristretto255 = exports.hashToRistretto255; // legacy\n//# sourceMappingURL=ed25519.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/ed25519.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.output = exports.exists = exports.hash = exports.bytes = exports.bool = exports.number = void 0;\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.number = number;\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexports.bool = bool;\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexports.bytes = bytes;\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexports.hash = hash;\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexports.exists = exists;\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexports.output = output;\nconst assert = { number, bool, bytes, hash, exists, output };\nexports[\"default\"] = assert;\n//# sourceMappingURL=_assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5vYmxlL2N1cnZlcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9fYXNzZXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsWUFBWSxHQUFHLGFBQWEsR0FBRyxZQUFZLEdBQUcsY0FBYztBQUM5RjtBQUNBO0FBQ0EsbURBQW1ELEVBQUU7QUFDckQ7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGlEQUFpRCxFQUFFO0FBQ25EO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELFFBQVEsa0JBQWtCLFNBQVM7QUFDNUY7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixJQUFJO0FBQ3JGO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsaUJBQWlCO0FBQ2pCLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9jdXJ2ZXMvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX2Fzc2VydC5qcz9hNDBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vdXRwdXQgPSBleHBvcnRzLmV4aXN0cyA9IGV4cG9ydHMuaGFzaCA9IGV4cG9ydHMuYnl0ZXMgPSBleHBvcnRzLmJvb2wgPSBleHBvcnRzLm51bWJlciA9IHZvaWQgMDtcbmZ1bmN0aW9uIG51bWJlcihuKSB7XG4gICAgaWYgKCFOdW1iZXIuaXNTYWZlSW50ZWdlcihuKSB8fCBuIDwgMClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBXcm9uZyBwb3NpdGl2ZSBpbnRlZ2VyOiAke259YCk7XG59XG5leHBvcnRzLm51bWJlciA9IG51bWJlcjtcbmZ1bmN0aW9uIGJvb2woYikge1xuICAgIGlmICh0eXBlb2YgYiAhPT0gJ2Jvb2xlYW4nKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIGJvb2xlYW4sIG5vdCAke2J9YCk7XG59XG5leHBvcnRzLmJvb2wgPSBib29sO1xuZnVuY3Rpb24gYnl0ZXMoYiwgLi4ubGVuZ3Rocykge1xuICAgIGlmICghKGIgaW5zdGFuY2VvZiBVaW50OEFycmF5KSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBVaW50OEFycmF5Jyk7XG4gICAgaWYgKGxlbmd0aHMubGVuZ3RoID4gMCAmJiAhbGVuZ3Rocy5pbmNsdWRlcyhiLmxlbmd0aCkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRXhwZWN0ZWQgVWludDhBcnJheSBvZiBsZW5ndGggJHtsZW5ndGhzfSwgbm90IG9mIGxlbmd0aD0ke2IubGVuZ3RofWApO1xufVxuZXhwb3J0cy5ieXRlcyA9IGJ5dGVzO1xuZnVuY3Rpb24gaGFzaChoYXNoKSB7XG4gICAgaWYgKHR5cGVvZiBoYXNoICE9PSAnZnVuY3Rpb24nIHx8IHR5cGVvZiBoYXNoLmNyZWF0ZSAhPT0gJ2Z1bmN0aW9uJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoIHNob3VsZCBiZSB3cmFwcGVkIGJ5IHV0aWxzLndyYXBDb25zdHJ1Y3RvcicpO1xuICAgIG51bWJlcihoYXNoLm91dHB1dExlbik7XG4gICAgbnVtYmVyKGhhc2guYmxvY2tMZW4pO1xufVxuZXhwb3J0cy5oYXNoID0gaGFzaDtcbmZ1bmN0aW9uIGV4aXN0cyhpbnN0YW5jZSwgY2hlY2tGaW5pc2hlZCA9IHRydWUpIHtcbiAgICBpZiAoaW5zdGFuY2UuZGVzdHJveWVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggaW5zdGFuY2UgaGFzIGJlZW4gZGVzdHJveWVkJyk7XG4gICAgaWYgKGNoZWNrRmluaXNoZWQgJiYgaW5zdGFuY2UuZmluaXNoZWQpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSGFzaCNkaWdlc3QoKSBoYXMgYWxyZWFkeSBiZWVuIGNhbGxlZCcpO1xufVxuZXhwb3J0cy5leGlzdHMgPSBleGlzdHM7XG5mdW5jdGlvbiBvdXRwdXQob3V0LCBpbnN0YW5jZSkge1xuICAgIGJ5dGVzKG91dCk7XG4gICAgY29uc3QgbWluID0gaW5zdGFuY2Uub3V0cHV0TGVuO1xuICAgIGlmIChvdXQubGVuZ3RoIDwgbWluKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgZGlnZXN0SW50bygpIGV4cGVjdHMgb3V0cHV0IGJ1ZmZlciBvZiBsZW5ndGggYXQgbGVhc3QgJHttaW59YCk7XG4gICAgfVxufVxuZXhwb3J0cy5vdXRwdXQgPSBvdXRwdXQ7XG5jb25zdCBhc3NlcnQgPSB7IG51bWJlciwgYm9vbCwgYnl0ZXMsIGhhc2gsIGV4aXN0cywgb3V0cHV0IH07XG5leHBvcnRzLmRlZmF1bHQgPSBhc3NlcnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fYXNzZXJ0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/node_modules/@noble/hashes/_sha2.js":
/*!************************************************************************!*\
  !*** ./node_modules/@noble/curves/node_modules/@noble/hashes/_sha2.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SHA2 = void 0;\nconst _assert_js_1 = __webpack_require__(/*! ./_assert.js */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/_assert.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        (0, _assert_js_1.exists)(this);\n        const { view, buffer, blockLen } = this;\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        (0, _assert_js_1.exists)(this);\n        (0, _assert_js_1.output)(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n//# sourceMappingURL=_sha2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5vYmxlL2N1cnZlcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9fc2hhMi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1oscUJBQXFCLG1CQUFPLENBQUMsd0ZBQWM7QUFDM0MsbUJBQW1CLG1CQUFPLENBQUMsb0ZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHlCQUF5QjtBQUN6QztBQUNBO0FBQ0EsMEJBQTBCLFVBQVU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsdUJBQXVCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtCQUErQjtBQUMvQyxjQUFjLE1BQU07QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGNBQWM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG9CQUFvQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFxRDtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9jdXJ2ZXMvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3NoYTIuanM/NThkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU0hBMiA9IHZvaWQgMDtcbmNvbnN0IF9hc3NlcnRfanNfMSA9IHJlcXVpcmUoXCIuL19hc3NlcnQuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG4vLyBQb2x5ZmlsbCBmb3IgU2FmYXJpIDE0XG5mdW5jdGlvbiBzZXRCaWdVaW50NjQodmlldywgYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpIHtcbiAgICBpZiAodHlwZW9mIHZpZXcuc2V0QmlnVWludDY0ID09PSAnZnVuY3Rpb24nKVxuICAgICAgICByZXR1cm4gdmlldy5zZXRCaWdVaW50NjQoYnl0ZU9mZnNldCwgdmFsdWUsIGlzTEUpO1xuICAgIGNvbnN0IF8zMm4gPSBCaWdJbnQoMzIpO1xuICAgIGNvbnN0IF91MzJfbWF4ID0gQmlnSW50KDB4ZmZmZmZmZmYpO1xuICAgIGNvbnN0IHdoID0gTnVtYmVyKCh2YWx1ZSA+PiBfMzJuKSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCB3bCA9IE51bWJlcih2YWx1ZSAmIF91MzJfbWF4KTtcbiAgICBjb25zdCBoID0gaXNMRSA/IDQgOiAwO1xuICAgIGNvbnN0IGwgPSBpc0xFID8gMCA6IDQ7XG4gICAgdmlldy5zZXRVaW50MzIoYnl0ZU9mZnNldCArIGgsIHdoLCBpc0xFKTtcbiAgICB2aWV3LnNldFVpbnQzMihieXRlT2Zmc2V0ICsgbCwgd2wsIGlzTEUpO1xufVxuLy8gQmFzZSBTSEEyIGNsYXNzIChSRkMgNjIzNClcbmNsYXNzIFNIQTIgZXh0ZW5kcyB1dGlsc19qc18xLkhhc2gge1xuICAgIGNvbnN0cnVjdG9yKGJsb2NrTGVuLCBvdXRwdXRMZW4sIHBhZE9mZnNldCwgaXNMRSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmJsb2NrTGVuID0gYmxvY2tMZW47XG4gICAgICAgIHRoaXMub3V0cHV0TGVuID0gb3V0cHV0TGVuO1xuICAgICAgICB0aGlzLnBhZE9mZnNldCA9IHBhZE9mZnNldDtcbiAgICAgICAgdGhpcy5pc0xFID0gaXNMRTtcbiAgICAgICAgdGhpcy5maW5pc2hlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxlbmd0aCA9IDA7XG4gICAgICAgIHRoaXMucG9zID0gMDtcbiAgICAgICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5idWZmZXIgPSBuZXcgVWludDhBcnJheShibG9ja0xlbik7XG4gICAgICAgIHRoaXMudmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKHRoaXMuYnVmZmVyKTtcbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgKDAsIF9hc3NlcnRfanNfMS5leGlzdHMpKHRoaXMpO1xuICAgICAgICBjb25zdCB7IHZpZXcsIGJ1ZmZlciwgYmxvY2tMZW4gfSA9IHRoaXM7XG4gICAgICAgIGRhdGEgPSAoMCwgdXRpbHNfanNfMS50b0J5dGVzKShkYXRhKTtcbiAgICAgICAgY29uc3QgbGVuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IHBvcyA9IDA7IHBvcyA8IGxlbjspIHtcbiAgICAgICAgICAgIGNvbnN0IHRha2UgPSBNYXRoLm1pbihibG9ja0xlbiAtIHRoaXMucG9zLCBsZW4gLSBwb3MpO1xuICAgICAgICAgICAgLy8gRmFzdCBwYXRoOiB3ZSBoYXZlIGF0IGxlYXN0IG9uZSBibG9jayBpbiBpbnB1dCwgY2FzdCBpdCB0byB2aWV3IGFuZCBwcm9jZXNzXG4gICAgICAgICAgICBpZiAodGFrZSA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhVmlldyA9ICgwLCB1dGlsc19qc18xLmNyZWF0ZVZpZXcpKGRhdGEpO1xuICAgICAgICAgICAgICAgIGZvciAoOyBibG9ja0xlbiA8PSBsZW4gLSBwb3M7IHBvcyArPSBibG9ja0xlbilcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzKGRhdGFWaWV3LCBwb3MpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnVmZmVyLnNldChkYXRhLnN1YmFycmF5KHBvcywgcG9zICsgdGFrZSksIHRoaXMucG9zKTtcbiAgICAgICAgICAgIHRoaXMucG9zICs9IHRha2U7XG4gICAgICAgICAgICBwb3MgKz0gdGFrZTtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvcyA9PT0gYmxvY2tMZW4pIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3MgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMubGVuZ3RoICs9IGRhdGEubGVuZ3RoO1xuICAgICAgICB0aGlzLnJvdW5kQ2xlYW4oKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdEludG8ob3V0KSB7XG4gICAgICAgICgwLCBfYXNzZXJ0X2pzXzEuZXhpc3RzKSh0aGlzKTtcbiAgICAgICAgKDAsIF9hc3NlcnRfanNfMS5vdXRwdXQpKG91dCwgdGhpcyk7XG4gICAgICAgIHRoaXMuZmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAvLyBQYWRkaW5nXG4gICAgICAgIC8vIFdlIGNhbiBhdm9pZCBhbGxvY2F0aW9uIG9mIGJ1ZmZlciBmb3IgcGFkZGluZyBjb21wbGV0ZWx5IGlmIGl0XG4gICAgICAgIC8vIHdhcyBwcmV2aW91c2x5IG5vdCBhbGxvY2F0ZWQgaGVyZS4gQnV0IGl0IHdvbid0IGNoYW5nZSBwZXJmb3JtYW5jZS5cbiAgICAgICAgY29uc3QgeyBidWZmZXIsIHZpZXcsIGJsb2NrTGVuLCBpc0xFIH0gPSB0aGlzO1xuICAgICAgICBsZXQgeyBwb3MgfSA9IHRoaXM7XG4gICAgICAgIC8vIGFwcGVuZCB0aGUgYml0ICcxJyB0byB0aGUgbWVzc2FnZVxuICAgICAgICBidWZmZXJbcG9zKytdID0gMGIxMDAwMDAwMDtcbiAgICAgICAgdGhpcy5idWZmZXIuc3ViYXJyYXkocG9zKS5maWxsKDApO1xuICAgICAgICAvLyB3ZSBoYXZlIGxlc3MgdGhhbiBwYWRPZmZzZXQgbGVmdCBpbiBidWZmZXIsIHNvIHdlIGNhbm5vdCBwdXQgbGVuZ3RoIGluIGN1cnJlbnQgYmxvY2ssIG5lZWQgcHJvY2VzcyBpdCBhbmQgcGFkIGFnYWluXG4gICAgICAgIGlmICh0aGlzLnBhZE9mZnNldCA+IGJsb2NrTGVuIC0gcG9zKSB7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3ModmlldywgMCk7XG4gICAgICAgICAgICBwb3MgPSAwO1xuICAgICAgICB9XG4gICAgICAgIC8vIFBhZCB1bnRpbCBmdWxsIGJsb2NrIGJ5dGUgd2l0aCB6ZXJvc1xuICAgICAgICBmb3IgKGxldCBpID0gcG9zOyBpIDwgYmxvY2tMZW47IGkrKylcbiAgICAgICAgICAgIGJ1ZmZlcltpXSA9IDA7XG4gICAgICAgIC8vIE5vdGU6IHNoYTUxMiByZXF1aXJlcyBsZW5ndGggdG8gYmUgMTI4Yml0IGludGVnZXIsIGJ1dCBsZW5ndGggaW4gSlMgd2lsbCBvdmVyZmxvdyBiZWZvcmUgdGhhdFxuICAgICAgICAvLyBZb3UgbmVlZCB0byB3cml0ZSBhcm91bmQgMiBleGFieXRlcyAodTY0X21heCAvIDggLyAoMTAyNCoqNikpIGZvciB0aGlzIHRvIGhhcHBlbi5cbiAgICAgICAgLy8gU28gd2UganVzdCB3cml0ZSBsb3dlc3QgNjQgYml0cyBvZiB0aGF0IHZhbHVlLlxuICAgICAgICBzZXRCaWdVaW50NjQodmlldywgYmxvY2tMZW4gLSA4LCBCaWdJbnQodGhpcy5sZW5ndGggKiA4KSwgaXNMRSk7XG4gICAgICAgIHRoaXMucHJvY2Vzcyh2aWV3LCAwKTtcbiAgICAgICAgY29uc3Qgb3ZpZXcgPSAoMCwgdXRpbHNfanNfMS5jcmVhdGVWaWV3KShvdXQpO1xuICAgICAgICBjb25zdCBsZW4gPSB0aGlzLm91dHB1dExlbjtcbiAgICAgICAgLy8gTk9URTogd2UgZG8gZGl2aXNpb24gYnkgNCBsYXRlciwgd2hpY2ggc2hvdWxkIGJlIGZ1c2VkIGluIHNpbmdsZSBvcCB3aXRoIG1vZHVsbyBieSBKSVRcbiAgICAgICAgaWYgKGxlbiAlIDQpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ19zaGEyOiBvdXRwdXRMZW4gc2hvdWxkIGJlIGFsaWduZWQgdG8gMzJiaXQnKTtcbiAgICAgICAgY29uc3Qgb3V0TGVuID0gbGVuIC8gNDtcbiAgICAgICAgY29uc3Qgc3RhdGUgPSB0aGlzLmdldCgpO1xuICAgICAgICBpZiAob3V0TGVuID4gc3RhdGUubGVuZ3RoKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdfc2hhMjogb3V0cHV0TGVuIGJpZ2dlciB0aGFuIHN0YXRlJyk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3V0TGVuOyBpKyspXG4gICAgICAgICAgICBvdmlldy5zZXRVaW50MzIoNCAqIGksIHN0YXRlW2ldLCBpc0xFKTtcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICBjb25zdCB7IGJ1ZmZlciwgb3V0cHV0TGVuIH0gPSB0aGlzO1xuICAgICAgICB0aGlzLmRpZ2VzdEludG8oYnVmZmVyKTtcbiAgICAgICAgY29uc3QgcmVzID0gYnVmZmVyLnNsaWNlKDAsIG91dHB1dExlbik7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH1cbiAgICBfY2xvbmVJbnRvKHRvKSB7XG4gICAgICAgIHRvIHx8ICh0byA9IG5ldyB0aGlzLmNvbnN0cnVjdG9yKCkpO1xuICAgICAgICB0by5zZXQoLi4udGhpcy5nZXQoKSk7XG4gICAgICAgIGNvbnN0IHsgYmxvY2tMZW4sIGJ1ZmZlciwgbGVuZ3RoLCBmaW5pc2hlZCwgZGVzdHJveWVkLCBwb3MgfSA9IHRoaXM7XG4gICAgICAgIHRvLmxlbmd0aCA9IGxlbmd0aDtcbiAgICAgICAgdG8ucG9zID0gcG9zO1xuICAgICAgICB0by5maW5pc2hlZCA9IGZpbmlzaGVkO1xuICAgICAgICB0by5kZXN0cm95ZWQgPSBkZXN0cm95ZWQ7XG4gICAgICAgIGlmIChsZW5ndGggJSBibG9ja0xlbilcbiAgICAgICAgICAgIHRvLmJ1ZmZlci5zZXQoYnVmZmVyKTtcbiAgICAgICAgcmV0dXJuIHRvO1xuICAgIH1cbn1cbmV4cG9ydHMuU0hBMiA9IFNIQTI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fc2hhMi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/node_modules/@noble/hashes/_sha2.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/node_modules/@noble/hashes/_u64.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@noble/curves/node_modules/@noble/hashes/_u64.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.add5L = exports.add5H = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, _l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexports[\"default\"] = u64;\n//# sourceMappingURL=_u64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5vYmxlL2N1cnZlcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9fdTY0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsR0FBRyxhQUFhLEdBQUcsYUFBYSxHQUFHLGFBQWEsR0FBRyxhQUFhLEdBQUcsYUFBYSxHQUFHLFdBQVcsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGNBQWMsR0FBRyxjQUFjLEdBQUcsZUFBZSxHQUFHLGVBQWUsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGNBQWMsR0FBRyxjQUFjLEdBQUcsYUFBYSxHQUFHLGFBQWEsR0FBRyxhQUFhLEdBQUcsYUFBYSxHQUFHLGVBQWU7QUFDelc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQyxnQkFBZ0IsT0FBTztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bub2JsZS9jdXJ2ZXMvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvX3U2NC5qcz9mYzk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hZGQ1TCA9IGV4cG9ydHMuYWRkNUggPSBleHBvcnRzLmFkZDRIID0gZXhwb3J0cy5hZGQ0TCA9IGV4cG9ydHMuYWRkM0ggPSBleHBvcnRzLmFkZDNMID0gZXhwb3J0cy5hZGQgPSBleHBvcnRzLnJvdGxCTCA9IGV4cG9ydHMucm90bEJIID0gZXhwb3J0cy5yb3RsU0wgPSBleHBvcnRzLnJvdGxTSCA9IGV4cG9ydHMucm90cjMyTCA9IGV4cG9ydHMucm90cjMySCA9IGV4cG9ydHMucm90ckJMID0gZXhwb3J0cy5yb3RyQkggPSBleHBvcnRzLnJvdHJTTCA9IGV4cG9ydHMucm90clNIID0gZXhwb3J0cy5zaHJTTCA9IGV4cG9ydHMuc2hyU0ggPSBleHBvcnRzLnRvQmlnID0gZXhwb3J0cy5zcGxpdCA9IGV4cG9ydHMuZnJvbUJpZyA9IHZvaWQgMDtcbmNvbnN0IFUzMl9NQVNLNjQgPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDIgKiogMzIgLSAxKTtcbmNvbnN0IF8zMm4gPSAvKiBAX19QVVJFX18gKi8gQmlnSW50KDMyKTtcbi8vIFdlIGFyZSBub3QgdXNpbmcgQmlnVWludDY0QXJyYXksIGJlY2F1c2UgdGhleSBhcmUgZXh0cmVtZWx5IHNsb3cgYXMgcGVyIDIwMjJcbmZ1bmN0aW9uIGZyb21CaWcobiwgbGUgPSBmYWxzZSkge1xuICAgIGlmIChsZSlcbiAgICAgICAgcmV0dXJuIHsgaDogTnVtYmVyKG4gJiBVMzJfTUFTSzY0KSwgbDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfTtcbiAgICByZXR1cm4geyBoOiBOdW1iZXIoKG4gPj4gXzMybikgJiBVMzJfTUFTSzY0KSB8IDAsIGw6IE51bWJlcihuICYgVTMyX01BU0s2NCkgfCAwIH07XG59XG5leHBvcnRzLmZyb21CaWcgPSBmcm9tQmlnO1xuZnVuY3Rpb24gc3BsaXQobHN0LCBsZSA9IGZhbHNlKSB7XG4gICAgbGV0IEFoID0gbmV3IFVpbnQzMkFycmF5KGxzdC5sZW5ndGgpO1xuICAgIGxldCBBbCA9IG5ldyBVaW50MzJBcnJheShsc3QubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB7IGgsIGwgfSA9IGZyb21CaWcobHN0W2ldLCBsZSk7XG4gICAgICAgIFtBaFtpXSwgQWxbaV1dID0gW2gsIGxdO1xuICAgIH1cbiAgICByZXR1cm4gW0FoLCBBbF07XG59XG5leHBvcnRzLnNwbGl0ID0gc3BsaXQ7XG5jb25zdCB0b0JpZyA9IChoLCBsKSA9PiAoQmlnSW50KGggPj4+IDApIDw8IF8zMm4pIHwgQmlnSW50KGwgPj4+IDApO1xuZXhwb3J0cy50b0JpZyA9IHRvQmlnO1xuLy8gZm9yIFNoaWZ0IGluIFswLCAzMilcbmNvbnN0IHNoclNIID0gKGgsIF9sLCBzKSA9PiBoID4+PiBzO1xuZXhwb3J0cy5zaHJTSCA9IHNoclNIO1xuY29uc3Qgc2hyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuZXhwb3J0cy5zaHJTTCA9IHNoclNMO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RyU0ggPSAoaCwgbCwgcykgPT4gKGggPj4+IHMpIHwgKGwgPDwgKDMyIC0gcykpO1xuZXhwb3J0cy5yb3RyU0ggPSByb3RyU0g7XG5jb25zdCByb3RyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuZXhwb3J0cy5yb3RyU0wgPSByb3RyU0w7XG4vLyBSaWdodCByb3RhdGUgZm9yIFNoaWZ0IGluICgzMiwgNjQpLCBOT1RFOiAzMiBpcyBzcGVjaWFsIGNhc2UuXG5jb25zdCByb3RyQkggPSAoaCwgbCwgcykgPT4gKGggPDwgKDY0IC0gcykpIHwgKGwgPj4+IChzIC0gMzIpKTtcbmV4cG9ydHMucm90ckJIID0gcm90ckJIO1xuY29uc3Qgcm90ckJMID0gKGgsIGwsIHMpID0+IChoID4+PiAocyAtIDMyKSkgfCAobCA8PCAoNjQgLSBzKSk7XG5leHBvcnRzLnJvdHJCTCA9IHJvdHJCTDtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3Igc2hpZnQ9PT0zMiAoanVzdCBzd2FwcyBsJmgpXG5jb25zdCByb3RyMzJIID0gKF9oLCBsKSA9PiBsO1xuZXhwb3J0cy5yb3RyMzJIID0gcm90cjMySDtcbmNvbnN0IHJvdHIzMkwgPSAoaCwgX2wpID0+IGg7XG5leHBvcnRzLnJvdHIzMkwgPSByb3RyMzJMO1xuLy8gTGVmdCByb3RhdGUgZm9yIFNoaWZ0IGluIFsxLCAzMilcbmNvbnN0IHJvdGxTSCA9IChoLCBsLCBzKSA9PiAoaCA8PCBzKSB8IChsID4+PiAoMzIgLSBzKSk7XG5leHBvcnRzLnJvdGxTSCA9IHJvdGxTSDtcbmNvbnN0IHJvdGxTTCA9IChoLCBsLCBzKSA9PiAobCA8PCBzKSB8IChoID4+PiAoMzIgLSBzKSk7XG5leHBvcnRzLnJvdGxTTCA9IHJvdGxTTDtcbi8vIExlZnQgcm90YXRlIGZvciBTaGlmdCBpbiAoMzIsIDY0KSwgTk9URTogMzIgaXMgc3BlY2lhbCBjYXNlLlxuY29uc3Qgcm90bEJIID0gKGgsIGwsIHMpID0+IChsIDw8IChzIC0gMzIpKSB8IChoID4+PiAoNjQgLSBzKSk7XG5leHBvcnRzLnJvdGxCSCA9IHJvdGxCSDtcbmNvbnN0IHJvdGxCTCA9IChoLCBsLCBzKSA9PiAoaCA8PCAocyAtIDMyKSkgfCAobCA+Pj4gKDY0IC0gcykpO1xuZXhwb3J0cy5yb3RsQkwgPSByb3RsQkw7XG4vLyBKUyB1c2VzIDMyLWJpdCBzaWduZWQgaW50ZWdlcnMgZm9yIGJpdHdpc2Ugb3BlcmF0aW9ucyB3aGljaCBtZWFucyB3ZSBjYW5ub3Rcbi8vIHNpbXBsZSB0YWtlIGNhcnJ5IG91dCBvZiBsb3cgYml0IHN1bSBieSBzaGlmdCwgd2UgbmVlZCB0byB1c2UgZGl2aXNpb24uXG5mdW5jdGlvbiBhZGQoQWgsIEFsLCBCaCwgQmwpIHtcbiAgICBjb25zdCBsID0gKEFsID4+PiAwKSArIChCbCA+Pj4gMCk7XG4gICAgcmV0dXJuIHsgaDogKEFoICsgQmggKyAoKGwgLyAyICoqIDMyKSB8IDApKSB8IDAsIGw6IGwgfCAwIH07XG59XG5leHBvcnRzLmFkZCA9IGFkZDtcbi8vIEFkZGl0aW9uIHdpdGggbW9yZSB0aGFuIDIgZWxlbWVudHNcbmNvbnN0IGFkZDNMID0gKEFsLCBCbCwgQ2wpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKTtcbmV4cG9ydHMuYWRkM0wgPSBhZGQzTDtcbmNvbnN0IGFkZDNIID0gKGxvdywgQWgsIEJoLCBDaCkgPT4gKEFoICsgQmggKyBDaCArICgobG93IC8gMiAqKiAzMikgfCAwKSkgfCAwO1xuZXhwb3J0cy5hZGQzSCA9IGFkZDNIO1xuY29uc3QgYWRkNEwgPSAoQWwsIEJsLCBDbCwgRGwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCk7XG5leHBvcnRzLmFkZDRMID0gYWRkNEw7XG5jb25zdCBhZGQ0SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoKSA9PiAoQWggKyBCaCArIENoICsgRGggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmV4cG9ydHMuYWRkNEggPSBhZGQ0SDtcbmNvbnN0IGFkZDVMID0gKEFsLCBCbCwgQ2wsIERsLCBFbCkgPT4gKEFsID4+PiAwKSArIChCbCA+Pj4gMCkgKyAoQ2wgPj4+IDApICsgKERsID4+PiAwKSArIChFbCA+Pj4gMCk7XG5leHBvcnRzLmFkZDVMID0gYWRkNUw7XG5jb25zdCBhZGQ1SCA9IChsb3csIEFoLCBCaCwgQ2gsIERoLCBFaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgRWggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmV4cG9ydHMuYWRkNUggPSBhZGQ1SDtcbi8vIHByZXR0aWVyLWlnbm9yZVxuY29uc3QgdTY0ID0ge1xuICAgIGZyb21CaWcsIHNwbGl0LCB0b0JpZyxcbiAgICBzaHJTSCwgc2hyU0wsXG4gICAgcm90clNILCByb3RyU0wsIHJvdHJCSCwgcm90ckJMLFxuICAgIHJvdHIzMkgsIHJvdHIzMkwsXG4gICAgcm90bFNILCByb3RsU0wsIHJvdGxCSCwgcm90bEJMLFxuICAgIGFkZCwgYWRkM0wsIGFkZDNILCBhZGQ0TCwgYWRkNEgsIGFkZDVILCBhZGQ1TCxcbn07XG5leHBvcnRzLmRlZmF1bHQgPSB1NjQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fdTY0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/node_modules/@noble/hashes/_u64.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.crypto = void 0;\nexports.crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG5vYmxlL2N1cnZlcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9jcnlwdG8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQG5vYmxlL2N1cnZlcy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9jcnlwdG8uanM/YmFmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3J5cHRvID0gdm9pZCAwO1xuZXhwb3J0cy5jcnlwdG8gPSB0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcgJiYgJ2NyeXB0bycgaW4gZ2xvYmFsVGhpcyA/IGdsb2JhbFRoaXMuY3J5cHRvIDogdW5kZWZpbmVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3J5cHRvLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/node_modules/@noble/hashes/sha512.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@noble/curves/node_modules/@noble/hashes/sha512.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha384 = exports.sha512_256 = exports.sha512_224 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = __webpack_require__(/*! ./_sha2.js */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/_sha2.js\");\nconst _u64_js_1 = __webpack_require__(/*! ./_u64.js */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/_u64.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => _u64_js_1.default.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = _u64_js_1.default.rotrSH(W15h, W15l, 1) ^ _u64_js_1.default.rotrSH(W15h, W15l, 8) ^ _u64_js_1.default.shrSH(W15h, W15l, 7);\n            const s0l = _u64_js_1.default.rotrSL(W15h, W15l, 1) ^ _u64_js_1.default.rotrSL(W15h, W15l, 8) ^ _u64_js_1.default.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = _u64_js_1.default.rotrSH(W2h, W2l, 19) ^ _u64_js_1.default.rotrBH(W2h, W2l, 61) ^ _u64_js_1.default.shrSH(W2h, W2l, 6);\n            const s1l = _u64_js_1.default.rotrSL(W2h, W2l, 19) ^ _u64_js_1.default.rotrBL(W2h, W2l, 61) ^ _u64_js_1.default.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = _u64_js_1.default.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = _u64_js_1.default.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = _u64_js_1.default.rotrSH(Eh, El, 14) ^ _u64_js_1.default.rotrSH(Eh, El, 18) ^ _u64_js_1.default.rotrBH(Eh, El, 41);\n            const sigma1l = _u64_js_1.default.rotrSL(Eh, El, 14) ^ _u64_js_1.default.rotrSL(Eh, El, 18) ^ _u64_js_1.default.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = _u64_js_1.default.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = _u64_js_1.default.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = _u64_js_1.default.rotrSH(Ah, Al, 28) ^ _u64_js_1.default.rotrBH(Ah, Al, 34) ^ _u64_js_1.default.rotrBH(Ah, Al, 39);\n            const sigma0l = _u64_js_1.default.rotrSL(Ah, Al, 28) ^ _u64_js_1.default.rotrBL(Ah, Al, 34) ^ _u64_js_1.default.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = _u64_js_1.default.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = _u64_js_1.default.add3L(T1l, sigma0l, MAJl);\n            Ah = _u64_js_1.default.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = _u64_js_1.default.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = _u64_js_1.default.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = _u64_js_1.default.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = _u64_js_1.default.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = _u64_js_1.default.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = _u64_js_1.default.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = _u64_js_1.default.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = _u64_js_1.default.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_224 = (0, utils_js_1.wrapConstructor)(() => new SHA512_224());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n//# sourceMappingURL=sha512.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/node_modules/@noble/hashes/sha512.js\n"));

/***/ }),

/***/ "./node_modules/@noble/curves/node_modules/@noble/hashes/utils.js":
/*!************************************************************************!*\
  !*** ./node_modules/@noble/curves/node_modules/@noble/hashes/utils.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.randomBytes = exports.wrapXOFConstructorWithOpts = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nconst crypto_1 = __webpack_require__(/*! @noble/hashes/crypto */ \"./node_modules/@noble/curves/node_modules/@noble/hashes/crypto.js\");\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\nexports.nextTick = nextTick;\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\nexports.utf8ToBytes = utf8ToBytes;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\nexports.concatBytes = concatBytes;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapXOFConstructorWithOpts = wrapXOFConstructorWithOpts;\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto && typeof crypto_1.crypto.getRandomValues === 'function') {\n        return crypto_1.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\nexports.randomBytes = randomBytes;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@noble/curves/node_modules/@noble/hashes/utils.js\n"));

/***/ }),

/***/ "./node_modules/base-x/index.js":
/*!**************************************!*\
  !*** ./node_modules/base-x/index.js ***!
  \**************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// base-x encoding\n// Forked from https://github.com/cryptocoinjs/bs58\n// Originally written by Mike Hearn for BitcoinJ\n// Copyright (c) 2011 Google Inc\n// Ported to JavaScript by Stefan Thomas\n// Merged Buffer refactorings from base58-native by Stephen Pair\n// Copyright (c) 2013 BitPay Inc\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\n\nmodule.exports = function base (ALPHABET) {\n  var ALPHABET_MAP = {}\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n\n  // pre-compute lookup table\n  for (var z = 0; z < ALPHABET.length; z++) {\n    var x = ALPHABET.charAt(z)\n\n    if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n    ALPHABET_MAP[x] = z\n  }\n\n  function encode (source) {\n    if (source.length === 0) return ''\n\n    var digits = [0]\n    for (var i = 0; i < source.length; ++i) {\n      for (var j = 0, carry = source[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8\n        digits[j] = carry % BASE\n        carry = (carry / BASE) | 0\n      }\n\n      while (carry > 0) {\n        digits.push(carry % BASE)\n        carry = (carry / BASE) | 0\n      }\n    }\n\n    var string = ''\n\n    // deal with leading zeros\n    for (var k = 0; source[k] === 0 && k < source.length - 1; ++k) string += ALPHABET[0]\n    // convert digits to a string\n    for (var q = digits.length - 1; q >= 0; --q) string += ALPHABET[digits[q]]\n\n    return string\n  }\n\n  function decodeUnsafe (string) {\n    if (string.length === 0) return Buffer.allocUnsafe(0)\n\n    var bytes = [0]\n    for (var i = 0; i < string.length; i++) {\n      var value = ALPHABET_MAP[string[i]]\n      if (value === undefined) return\n\n      for (var j = 0, carry = value; j < bytes.length; ++j) {\n        carry += bytes[j] * BASE\n        bytes[j] = carry & 0xff\n        carry >>= 8\n      }\n\n      while (carry > 0) {\n        bytes.push(carry & 0xff)\n        carry >>= 8\n      }\n    }\n\n    // deal with leading zeros\n    for (var k = 0; string[k] === LEADER && k < string.length - 1; ++k) {\n      bytes.push(0)\n    }\n\n    return Buffer.from(bytes.reverse())\n  }\n\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFzZS14L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsc0ZBQTZCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtCQUFrQixxQkFBcUI7QUFDdkM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDLHlDQUF5QyxtQkFBbUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLG9CQUFvQiwwQ0FBMEM7QUFDOUQ7QUFDQSxvQ0FBb0MsUUFBUTs7QUFFNUM7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBOztBQUVBLHFDQUFxQyxrQkFBa0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9CQUFvQiwrQ0FBK0M7QUFDbkU7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYmFzZS14L2luZGV4LmpzPzhkYzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYmFzZS14IGVuY29kaW5nXG4vLyBGb3JrZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vY3J5cHRvY29pbmpzL2JzNThcbi8vIE9yaWdpbmFsbHkgd3JpdHRlbiBieSBNaWtlIEhlYXJuIGZvciBCaXRjb2luSlxuLy8gQ29weXJpZ2h0IChjKSAyMDExIEdvb2dsZSBJbmNcbi8vIFBvcnRlZCB0byBKYXZhU2NyaXB0IGJ5IFN0ZWZhbiBUaG9tYXNcbi8vIE1lcmdlZCBCdWZmZXIgcmVmYWN0b3JpbmdzIGZyb20gYmFzZTU4LW5hdGl2ZSBieSBTdGVwaGVuIFBhaXJcbi8vIENvcHlyaWdodCAoYykgMjAxMyBCaXRQYXkgSW5jXG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlclxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhc2UgKEFMUEhBQkVUKSB7XG4gIHZhciBBTFBIQUJFVF9NQVAgPSB7fVxuICB2YXIgQkFTRSA9IEFMUEhBQkVULmxlbmd0aFxuICB2YXIgTEVBREVSID0gQUxQSEFCRVQuY2hhckF0KDApXG5cbiAgLy8gcHJlLWNvbXB1dGUgbG9va3VwIHRhYmxlXG4gIGZvciAodmFyIHogPSAwOyB6IDwgQUxQSEFCRVQubGVuZ3RoOyB6KyspIHtcbiAgICB2YXIgeCA9IEFMUEhBQkVULmNoYXJBdCh6KVxuXG4gICAgaWYgKEFMUEhBQkVUX01BUFt4XSAhPT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgVHlwZUVycm9yKHggKyAnIGlzIGFtYmlndW91cycpXG4gICAgQUxQSEFCRVRfTUFQW3hdID0gelxuICB9XG5cbiAgZnVuY3Rpb24gZW5jb2RlIChzb3VyY2UpIHtcbiAgICBpZiAoc291cmNlLmxlbmd0aCA9PT0gMCkgcmV0dXJuICcnXG5cbiAgICB2YXIgZGlnaXRzID0gWzBdXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzb3VyY2UubGVuZ3RoOyArK2kpIHtcbiAgICAgIGZvciAodmFyIGogPSAwLCBjYXJyeSA9IHNvdXJjZVtpXTsgaiA8IGRpZ2l0cy5sZW5ndGg7ICsraikge1xuICAgICAgICBjYXJyeSArPSBkaWdpdHNbal0gPDwgOFxuICAgICAgICBkaWdpdHNbal0gPSBjYXJyeSAlIEJBU0VcbiAgICAgICAgY2FycnkgPSAoY2FycnkgLyBCQVNFKSB8IDBcbiAgICAgIH1cblxuICAgICAgd2hpbGUgKGNhcnJ5ID4gMCkge1xuICAgICAgICBkaWdpdHMucHVzaChjYXJyeSAlIEJBU0UpXG4gICAgICAgIGNhcnJ5ID0gKGNhcnJ5IC8gQkFTRSkgfCAwXG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIHN0cmluZyA9ICcnXG5cbiAgICAvLyBkZWFsIHdpdGggbGVhZGluZyB6ZXJvc1xuICAgIGZvciAodmFyIGsgPSAwOyBzb3VyY2Vba10gPT09IDAgJiYgayA8IHNvdXJjZS5sZW5ndGggLSAxOyArK2spIHN0cmluZyArPSBBTFBIQUJFVFswXVxuICAgIC8vIGNvbnZlcnQgZGlnaXRzIHRvIGEgc3RyaW5nXG4gICAgZm9yICh2YXIgcSA9IGRpZ2l0cy5sZW5ndGggLSAxOyBxID49IDA7IC0tcSkgc3RyaW5nICs9IEFMUEhBQkVUW2RpZ2l0c1txXV1cblxuICAgIHJldHVybiBzdHJpbmdcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlY29kZVVuc2FmZSAoc3RyaW5nKSB7XG4gICAgaWYgKHN0cmluZy5sZW5ndGggPT09IDApIHJldHVybiBCdWZmZXIuYWxsb2NVbnNhZmUoMClcblxuICAgIHZhciBieXRlcyA9IFswXVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgdmFsdWUgPSBBTFBIQUJFVF9NQVBbc3RyaW5nW2ldXVxuICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVyblxuXG4gICAgICBmb3IgKHZhciBqID0gMCwgY2FycnkgPSB2YWx1ZTsgaiA8IGJ5dGVzLmxlbmd0aDsgKytqKSB7XG4gICAgICAgIGNhcnJ5ICs9IGJ5dGVzW2pdICogQkFTRVxuICAgICAgICBieXRlc1tqXSA9IGNhcnJ5ICYgMHhmZlxuICAgICAgICBjYXJyeSA+Pj0gOFxuICAgICAgfVxuXG4gICAgICB3aGlsZSAoY2FycnkgPiAwKSB7XG4gICAgICAgIGJ5dGVzLnB1c2goY2FycnkgJiAweGZmKVxuICAgICAgICBjYXJyeSA+Pj0gOFxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIGRlYWwgd2l0aCBsZWFkaW5nIHplcm9zXG4gICAgZm9yICh2YXIgayA9IDA7IHN0cmluZ1trXSA9PT0gTEVBREVSICYmIGsgPCBzdHJpbmcubGVuZ3RoIC0gMTsgKytrKSB7XG4gICAgICBieXRlcy5wdXNoKDApXG4gICAgfVxuXG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJ5dGVzLnJldmVyc2UoKSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlY29kZSAoc3RyaW5nKSB7XG4gICAgdmFyIGJ1ZmZlciA9IGRlY29kZVVuc2FmZShzdHJpbmcpXG4gICAgaWYgKGJ1ZmZlcikgcmV0dXJuIGJ1ZmZlclxuXG4gICAgdGhyb3cgbmV3IEVycm9yKCdOb24tYmFzZScgKyBCQVNFICsgJyBjaGFyYWN0ZXInKVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBlbmNvZGU6IGVuY29kZSxcbiAgICBkZWNvZGVVbnNhZmU6IGRlY29kZVVuc2FmZSxcbiAgICBkZWNvZGU6IGRlY29kZVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/base-x/index.js\n"));

/***/ }),

/***/ "./node_modules/borsh/lib/cjs/buffer.js":
/*!**********************************************!*\
  !*** ./node_modules/borsh/lib/cjs/buffer.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nexports.__esModule = true;\nexports.DecodeBuffer = exports.EncodeBuffer = void 0;\nvar EncodeBuffer = /** @class */ (function () {\n    function EncodeBuffer() {\n        this.offset = 0;\n        this.buffer_size = 256;\n        this.buffer = new ArrayBuffer(this.buffer_size);\n        this.view = new DataView(this.buffer);\n    }\n    EncodeBuffer.prototype.resize_if_necessary = function (needed_space) {\n        if (this.buffer_size - this.offset < needed_space) {\n            this.buffer_size = Math.max(this.buffer_size * 2, this.buffer_size + needed_space);\n            var new_buffer = new ArrayBuffer(this.buffer_size);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.buffer));\n            this.buffer = new_buffer;\n            this.view = new DataView(new_buffer);\n        }\n    };\n    EncodeBuffer.prototype.get_used_buffer = function () {\n        return new Uint8Array(this.buffer).slice(0, this.offset);\n    };\n    EncodeBuffer.prototype.store_value = function (value, type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.resize_if_necessary(size);\n        var toCall = type[0] === 'f' ? \"setFloat\".concat(bSize) : type[0] === 'i' ? \"setInt\".concat(bSize) : \"setUint\".concat(bSize);\n        this.view[toCall](this.offset, value, true);\n        this.offset += size;\n    };\n    EncodeBuffer.prototype.store_bytes = function (from) {\n        this.resize_if_necessary(from.length);\n        new Uint8Array(this.buffer).set(new Uint8Array(from), this.offset);\n        this.offset += from.length;\n    };\n    return EncodeBuffer;\n}());\nexports.EncodeBuffer = EncodeBuffer;\nvar DecodeBuffer = /** @class */ (function () {\n    function DecodeBuffer(buf) {\n        this.offset = 0;\n        this.buffer_size = buf.length;\n        this.buffer = new ArrayBuffer(buf.length);\n        new Uint8Array(this.buffer).set(buf);\n        this.view = new DataView(this.buffer);\n    }\n    DecodeBuffer.prototype.assert_enough_buffer = function (size) {\n        if (this.offset + size > this.buffer.byteLength) {\n            throw new Error('Error in schema, the buffer is smaller than expected');\n        }\n    };\n    DecodeBuffer.prototype.consume_value = function (type) {\n        var bSize = type.substring(1);\n        var size = parseInt(bSize) / 8;\n        this.assert_enough_buffer(size);\n        var toCall = type[0] === 'f' ? \"getFloat\".concat(bSize) : type[0] === 'i' ? \"getInt\".concat(bSize) : \"getUint\".concat(bSize);\n        var ret = this.view[toCall](this.offset, true);\n        this.offset += size;\n        return ret;\n    };\n    DecodeBuffer.prototype.consume_bytes = function (size) {\n        this.assert_enough_buffer(size);\n        var ret = this.buffer.slice(this.offset, this.offset + size);\n        this.offset += size;\n        return ret;\n    };\n    return DecodeBuffer;\n}());\nexports.DecodeBuffer = DecodeBuffer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy9idWZmZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixrQkFBa0I7QUFDbEIsb0JBQW9CLEdBQUcsb0JBQW9CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvYnVmZmVyLmpzP2MxOTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5EZWNvZGVCdWZmZXIgPSBleHBvcnRzLkVuY29kZUJ1ZmZlciA9IHZvaWQgMDtcbnZhciBFbmNvZGVCdWZmZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRW5jb2RlQnVmZmVyKCkge1xuICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgIHRoaXMuYnVmZmVyX3NpemUgPSAyNTY7XG4gICAgICAgIHRoaXMuYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKHRoaXMuYnVmZmVyX3NpemUpO1xuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgRGF0YVZpZXcodGhpcy5idWZmZXIpO1xuICAgIH1cbiAgICBFbmNvZGVCdWZmZXIucHJvdG90eXBlLnJlc2l6ZV9pZl9uZWNlc3NhcnkgPSBmdW5jdGlvbiAobmVlZGVkX3NwYWNlKSB7XG4gICAgICAgIGlmICh0aGlzLmJ1ZmZlcl9zaXplIC0gdGhpcy5vZmZzZXQgPCBuZWVkZWRfc3BhY2UpIHtcbiAgICAgICAgICAgIHRoaXMuYnVmZmVyX3NpemUgPSBNYXRoLm1heCh0aGlzLmJ1ZmZlcl9zaXplICogMiwgdGhpcy5idWZmZXJfc2l6ZSArIG5lZWRlZF9zcGFjZSk7XG4gICAgICAgICAgICB2YXIgbmV3X2J1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcih0aGlzLmJ1ZmZlcl9zaXplKTtcbiAgICAgICAgICAgIG5ldyBVaW50OEFycmF5KG5ld19idWZmZXIpLnNldChuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlcikpO1xuICAgICAgICAgICAgdGhpcy5idWZmZXIgPSBuZXdfYnVmZmVyO1xuICAgICAgICAgICAgdGhpcy52aWV3ID0gbmV3IERhdGFWaWV3KG5ld19idWZmZXIpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBFbmNvZGVCdWZmZXIucHJvdG90eXBlLmdldF91c2VkX2J1ZmZlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyKS5zbGljZSgwLCB0aGlzLm9mZnNldCk7XG4gICAgfTtcbiAgICBFbmNvZGVCdWZmZXIucHJvdG90eXBlLnN0b3JlX3ZhbHVlID0gZnVuY3Rpb24gKHZhbHVlLCB0eXBlKSB7XG4gICAgICAgIHZhciBiU2l6ZSA9IHR5cGUuc3Vic3RyaW5nKDEpO1xuICAgICAgICB2YXIgc2l6ZSA9IHBhcnNlSW50KGJTaXplKSAvIDg7XG4gICAgICAgIHRoaXMucmVzaXplX2lmX25lY2Vzc2FyeShzaXplKTtcbiAgICAgICAgdmFyIHRvQ2FsbCA9IHR5cGVbMF0gPT09ICdmJyA/IFwic2V0RmxvYXRcIi5jb25jYXQoYlNpemUpIDogdHlwZVswXSA9PT0gJ2knID8gXCJzZXRJbnRcIi5jb25jYXQoYlNpemUpIDogXCJzZXRVaW50XCIuY29uY2F0KGJTaXplKTtcbiAgICAgICAgdGhpcy52aWV3W3RvQ2FsbF0odGhpcy5vZmZzZXQsIHZhbHVlLCB0cnVlKTtcbiAgICAgICAgdGhpcy5vZmZzZXQgKz0gc2l6ZTtcbiAgICB9O1xuICAgIEVuY29kZUJ1ZmZlci5wcm90b3R5cGUuc3RvcmVfYnl0ZXMgPSBmdW5jdGlvbiAoZnJvbSkge1xuICAgICAgICB0aGlzLnJlc2l6ZV9pZl9uZWNlc3NhcnkoZnJvbS5sZW5ndGgpO1xuICAgICAgICBuZXcgVWludDhBcnJheSh0aGlzLmJ1ZmZlcikuc2V0KG5ldyBVaW50OEFycmF5KGZyb20pLCB0aGlzLm9mZnNldCk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IGZyb20ubGVuZ3RoO1xuICAgIH07XG4gICAgcmV0dXJuIEVuY29kZUJ1ZmZlcjtcbn0oKSk7XG5leHBvcnRzLkVuY29kZUJ1ZmZlciA9IEVuY29kZUJ1ZmZlcjtcbnZhciBEZWNvZGVCdWZmZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gRGVjb2RlQnVmZmVyKGJ1Zikge1xuICAgICAgICB0aGlzLm9mZnNldCA9IDA7XG4gICAgICAgIHRoaXMuYnVmZmVyX3NpemUgPSBidWYubGVuZ3RoO1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihidWYubGVuZ3RoKTtcbiAgICAgICAgbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIpLnNldChidWYpO1xuICAgICAgICB0aGlzLnZpZXcgPSBuZXcgRGF0YVZpZXcodGhpcy5idWZmZXIpO1xuICAgIH1cbiAgICBEZWNvZGVCdWZmZXIucHJvdG90eXBlLmFzc2VydF9lbm91Z2hfYnVmZmVyID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgICAgICAgaWYgKHRoaXMub2Zmc2V0ICsgc2l6ZSA+IHRoaXMuYnVmZmVyLmJ5dGVMZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgaW4gc2NoZW1hLCB0aGUgYnVmZmVyIGlzIHNtYWxsZXIgdGhhbiBleHBlY3RlZCcpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBEZWNvZGVCdWZmZXIucHJvdG90eXBlLmNvbnN1bWVfdmFsdWUgPSBmdW5jdGlvbiAodHlwZSkge1xuICAgICAgICB2YXIgYlNpemUgPSB0eXBlLnN1YnN0cmluZygxKTtcbiAgICAgICAgdmFyIHNpemUgPSBwYXJzZUludChiU2l6ZSkgLyA4O1xuICAgICAgICB0aGlzLmFzc2VydF9lbm91Z2hfYnVmZmVyKHNpemUpO1xuICAgICAgICB2YXIgdG9DYWxsID0gdHlwZVswXSA9PT0gJ2YnID8gXCJnZXRGbG9hdFwiLmNvbmNhdChiU2l6ZSkgOiB0eXBlWzBdID09PSAnaScgPyBcImdldEludFwiLmNvbmNhdChiU2l6ZSkgOiBcImdldFVpbnRcIi5jb25jYXQoYlNpemUpO1xuICAgICAgICB2YXIgcmV0ID0gdGhpcy52aWV3W3RvQ2FsbF0odGhpcy5vZmZzZXQsIHRydWUpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBzaXplO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH07XG4gICAgRGVjb2RlQnVmZmVyLnByb3RvdHlwZS5jb25zdW1lX2J5dGVzID0gZnVuY3Rpb24gKHNpemUpIHtcbiAgICAgICAgdGhpcy5hc3NlcnRfZW5vdWdoX2J1ZmZlcihzaXplKTtcbiAgICAgICAgdmFyIHJldCA9IHRoaXMuYnVmZmVyLnNsaWNlKHRoaXMub2Zmc2V0LCB0aGlzLm9mZnNldCArIHNpemUpO1xuICAgICAgICB0aGlzLm9mZnNldCArPSBzaXplO1xuICAgICAgICByZXR1cm4gcmV0O1xuICAgIH07XG4gICAgcmV0dXJuIERlY29kZUJ1ZmZlcjtcbn0oKSk7XG5leHBvcnRzLkRlY29kZUJ1ZmZlciA9IERlY29kZUJ1ZmZlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/borsh/lib/cjs/buffer.js\n"));

/***/ }),

/***/ "./node_modules/borsh/lib/cjs/deserialize.js":
/*!***************************************************!*\
  !*** ./node_modules/borsh/lib/cjs/deserialize.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nexports.__esModule = true;\nexports.BorshDeserializer = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"./node_modules/borsh/lib/cjs/types.js\");\nvar buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/borsh/lib/cjs/buffer.js\");\nvar BorshDeserializer = /** @class */ (function () {\n    function BorshDeserializer(bufferArray) {\n        this.buffer = new buffer_js_1.DecodeBuffer(bufferArray);\n    }\n    BorshDeserializer.prototype.decode = function (schema) {\n        return this.decode_value(schema);\n    };\n    BorshDeserializer.prototype.decode_value = function (schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.decode_integer(schema);\n            if (schema === 'string')\n                return this.decode_string();\n            if (schema === 'bool')\n                return this.decode_boolean();\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.decode_option(schema);\n            if ('enum' in schema)\n                return this.decode_enum(schema);\n            if ('array' in schema)\n                return this.decode_array(schema);\n            if ('set' in schema)\n                return this.decode_set(schema);\n            if ('map' in schema)\n                return this.decode_map(schema);\n            if ('struct' in schema)\n                return this.decode_struct(schema);\n        }\n        throw new Error(\"Unsupported type: \".concat(schema));\n    };\n    BorshDeserializer.prototype.decode_integer = function (schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            return this.buffer.consume_value(schema);\n        }\n        return this.decode_bigint(size, schema.startsWith('i'));\n    };\n    BorshDeserializer.prototype.decode_bigint = function (size, signed) {\n        if (signed === void 0) { signed = false; }\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(this.buffer.consume_bytes(buffer_len));\n        var bits = buffer.reduceRight(function (r, x) { return r + x.toString(16).padStart(2, '0'); }, '');\n        if (signed && buffer[buffer_len - 1]) {\n            return BigInt.asIntN(size, BigInt(\"0x\".concat(bits)));\n        }\n        return BigInt(\"0x\".concat(bits));\n    };\n    BorshDeserializer.prototype.decode_string = function () {\n        var len = this.decode_integer('u32');\n        var buffer = new Uint8Array(this.buffer.consume_bytes(len));\n        return String.fromCharCode.apply(null, buffer);\n    };\n    BorshDeserializer.prototype.decode_boolean = function () {\n        return this.buffer.consume_value('u8') > 0;\n    };\n    BorshDeserializer.prototype.decode_option = function (schema) {\n        var option = this.buffer.consume_value('u8');\n        if (option === 1) {\n            return this.decode_value(schema.option);\n        }\n        if (option !== 0) {\n            throw new Error(\"Invalid option \".concat(option));\n        }\n        return null;\n    };\n    BorshDeserializer.prototype.decode_enum = function (schema) {\n        var _a;\n        var valueIndex = this.buffer.consume_value('u8');\n        if (valueIndex > schema[\"enum\"].length) {\n            throw new Error(\"Enum option \".concat(valueIndex, \" is not available\"));\n        }\n        var struct = schema[\"enum\"][valueIndex].struct;\n        var key = Object.keys(struct)[0];\n        return _a = {}, _a[key] = this.decode_value(struct[key]), _a;\n    };\n    BorshDeserializer.prototype.decode_array = function (schema) {\n        var result = [];\n        var len = schema.array.len ? schema.array.len : this.decode_integer('u32');\n        for (var i = 0; i < len; ++i) {\n            result.push(this.decode_value(schema.array.type));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_set = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Set();\n        for (var i = 0; i < len; ++i) {\n            result.add(this.decode_value(schema.set));\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_map = function (schema) {\n        var len = this.decode_integer('u32');\n        var result = new Map();\n        for (var i = 0; i < len; ++i) {\n            var key = this.decode_value(schema.map.key);\n            var value = this.decode_value(schema.map.value);\n            result.set(key, value);\n        }\n        return result;\n    };\n    BorshDeserializer.prototype.decode_struct = function (schema) {\n        var result = {};\n        for (var key in schema.struct) {\n            result[key] = this.decode_value(schema.struct[key]);\n        }\n        return result;\n    };\n    return BorshDeserializer;\n}());\nexports.BorshDeserializer = BorshDeserializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy9kZXNlcmlhbGl6ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQjtBQUNsQix5QkFBeUI7QUFDekIsaUJBQWlCLG1CQUFPLENBQUMseURBQVk7QUFDckMsa0JBQWtCLG1CQUFPLENBQUMsMkRBQWE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLHdEQUF3RCw2Q0FBNkM7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixTQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCx5QkFBeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2JvcnNoL2xpYi9janMvZGVzZXJpYWxpemUuanM/YWNkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLkJvcnNoRGVzZXJpYWxpemVyID0gdm9pZCAwO1xudmFyIHR5cGVzX2pzXzEgPSByZXF1aXJlKFwiLi90eXBlcy5qc1wiKTtcbnZhciBidWZmZXJfanNfMSA9IHJlcXVpcmUoXCIuL2J1ZmZlci5qc1wiKTtcbnZhciBCb3JzaERlc2VyaWFsaXplciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCb3JzaERlc2VyaWFsaXplcihidWZmZXJBcnJheSkge1xuICAgICAgICB0aGlzLmJ1ZmZlciA9IG5ldyBidWZmZXJfanNfMS5EZWNvZGVCdWZmZXIoYnVmZmVyQXJyYXkpO1xuICAgIH1cbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfdmFsdWUgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2NoZW1hID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgaWYgKHR5cGVzX2pzXzEuaW50ZWdlcnMuaW5jbHVkZXMoc2NoZW1hKSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfaW50ZWdlcihzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKHNjaGVtYSA9PT0gJ3N0cmluZycpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX3N0cmluZygpO1xuICAgICAgICAgICAgaWYgKHNjaGVtYSA9PT0gJ2Jvb2wnKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9ib29sZWFuKCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBzY2hlbWEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoJ29wdGlvbicgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9vcHRpb24oc2NoZW1hKTtcbiAgICAgICAgICAgIGlmICgnZW51bScgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9lbnVtKHNjaGVtYSk7XG4gICAgICAgICAgICBpZiAoJ2FycmF5JyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX2FycmF5KHNjaGVtYSk7XG4gICAgICAgICAgICBpZiAoJ3NldCcgaW4gc2NoZW1hKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmRlY29kZV9zZXQoc2NoZW1hKTtcbiAgICAgICAgICAgIGlmICgnbWFwJyBpbiBzY2hlbWEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX21hcChzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKCdzdHJ1Y3QnIGluIHNjaGVtYSlcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfc3RydWN0KHNjaGVtYSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgdHlwZTogXCIuY29uY2F0KHNjaGVtYSkpO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9pbnRlZ2VyID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgc2l6ZSA9IHBhcnNlSW50KHNjaGVtYS5zdWJzdHJpbmcoMSkpO1xuICAgICAgICBpZiAoc2l6ZSA8PSAzMiB8fCBzY2hlbWEgPT0gJ2Y2NCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmJ1ZmZlci5jb25zdW1lX3ZhbHVlKHNjaGVtYSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZGVjb2RlX2JpZ2ludChzaXplLCBzY2hlbWEuc3RhcnRzV2l0aCgnaScpKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfYmlnaW50ID0gZnVuY3Rpb24gKHNpemUsIHNpZ25lZCkge1xuICAgICAgICBpZiAoc2lnbmVkID09PSB2b2lkIDApIHsgc2lnbmVkID0gZmFsc2U7IH1cbiAgICAgICAgdmFyIGJ1ZmZlcl9sZW4gPSBzaXplIC8gODtcbiAgICAgICAgdmFyIGJ1ZmZlciA9IG5ldyBVaW50OEFycmF5KHRoaXMuYnVmZmVyLmNvbnN1bWVfYnl0ZXMoYnVmZmVyX2xlbikpO1xuICAgICAgICB2YXIgYml0cyA9IGJ1ZmZlci5yZWR1Y2VSaWdodChmdW5jdGlvbiAociwgeCkgeyByZXR1cm4gciArIHgudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJyk7IH0sICcnKTtcbiAgICAgICAgaWYgKHNpZ25lZCAmJiBidWZmZXJbYnVmZmVyX2xlbiAtIDFdKSB7XG4gICAgICAgICAgICByZXR1cm4gQmlnSW50LmFzSW50TihzaXplLCBCaWdJbnQoXCIweFwiLmNvbmNhdChiaXRzKSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBCaWdJbnQoXCIweFwiLmNvbmNhdChiaXRzKSk7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX3N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxlbiA9IHRoaXMuZGVjb2RlX2ludGVnZXIoJ3UzMicpO1xuICAgICAgICB2YXIgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIuY29uc3VtZV9ieXRlcyhsZW4pKTtcbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgYnVmZmVyKTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfYm9vbGVhbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYnVmZmVyLmNvbnN1bWVfdmFsdWUoJ3U4JykgPiAwO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9vcHRpb24gPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciBvcHRpb24gPSB0aGlzLmJ1ZmZlci5jb25zdW1lX3ZhbHVlKCd1OCcpO1xuICAgICAgICBpZiAob3B0aW9uID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLm9wdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbiAhPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvcHRpb24gXCIuY29uY2F0KG9wdGlvbikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgQm9yc2hEZXNlcmlhbGl6ZXIucHJvdG90eXBlLmRlY29kZV9lbnVtID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHZhciB2YWx1ZUluZGV4ID0gdGhpcy5idWZmZXIuY29uc3VtZV92YWx1ZSgndTgnKTtcbiAgICAgICAgaWYgKHZhbHVlSW5kZXggPiBzY2hlbWFbXCJlbnVtXCJdLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW51bSBvcHRpb24gXCIuY29uY2F0KHZhbHVlSW5kZXgsIFwiIGlzIG5vdCBhdmFpbGFibGVcIikpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzdHJ1Y3QgPSBzY2hlbWFbXCJlbnVtXCJdW3ZhbHVlSW5kZXhdLnN0cnVjdDtcbiAgICAgICAgdmFyIGtleSA9IE9iamVjdC5rZXlzKHN0cnVjdClbMF07XG4gICAgICAgIHJldHVybiBfYSA9IHt9LCBfYVtrZXldID0gdGhpcy5kZWNvZGVfdmFsdWUoc3RydWN0W2tleV0pLCBfYTtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfYXJyYXkgPSBmdW5jdGlvbiAoc2NoZW1hKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICAgICAgdmFyIGxlbiA9IHNjaGVtYS5hcnJheS5sZW4gPyBzY2hlbWEuYXJyYXkubGVuIDogdGhpcy5kZWNvZGVfaW50ZWdlcigndTMyJyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHRoaXMuZGVjb2RlX3ZhbHVlKHNjaGVtYS5hcnJheS50eXBlKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIEJvcnNoRGVzZXJpYWxpemVyLnByb3RvdHlwZS5kZWNvZGVfc2V0ID0gZnVuY3Rpb24gKHNjaGVtYSkge1xuICAgICAgICB2YXIgbGVuID0gdGhpcy5kZWNvZGVfaW50ZWdlcigndTMyJyk7XG4gICAgICAgIHZhciByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICAgIHJlc3VsdC5hZGQodGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLnNldCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX21hcCA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIGxlbiA9IHRoaXMuZGVjb2RlX2ludGVnZXIoJ3UzMicpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gbmV3IE1hcCgpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgKytpKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLm1hcC5rZXkpO1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5kZWNvZGVfdmFsdWUoc2NoZW1hLm1hcC52YWx1ZSk7XG4gICAgICAgICAgICByZXN1bHQuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICBCb3JzaERlc2VyaWFsaXplci5wcm90b3R5cGUuZGVjb2RlX3N0cnVjdCA9IGZ1bmN0aW9uIChzY2hlbWEpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgICAgICBmb3IgKHZhciBrZXkgaW4gc2NoZW1hLnN0cnVjdCkge1xuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB0aGlzLmRlY29kZV92YWx1ZShzY2hlbWEuc3RydWN0W2tleV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcbiAgICByZXR1cm4gQm9yc2hEZXNlcmlhbGl6ZXI7XG59KCkpO1xuZXhwb3J0cy5Cb3JzaERlc2VyaWFsaXplciA9IEJvcnNoRGVzZXJpYWxpemVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/borsh/lib/cjs/deserialize.js\n"));

/***/ }),

/***/ "./node_modules/borsh/lib/cjs/index.js":
/*!*********************************************!*\
  !*** ./node_modules/borsh/lib/cjs/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.deserialize = exports.serialize = void 0;\nvar serialize_js_1 = __webpack_require__(/*! ./serialize.js */ \"./node_modules/borsh/lib/cjs/serialize.js\");\nvar deserialize_js_1 = __webpack_require__(/*! ./deserialize.js */ \"./node_modules/borsh/lib/cjs/deserialize.js\");\nvar utils = __importStar(__webpack_require__(/*! ./utils.js */ \"./node_modules/borsh/lib/cjs/utils.js\"));\nfunction serialize(schema, value, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var serializer = new serialize_js_1.BorshSerializer(validate);\n    return serializer.encode(value, schema);\n}\nexports.serialize = serialize;\nfunction deserialize(schema, buffer, validate) {\n    if (validate === void 0) { validate = true; }\n    if (validate)\n        utils.validate_schema(schema);\n    var deserializer = new deserialize_js_1.BorshDeserializer(buffer);\n    return deserializer.decode(schema);\n}\nexports.deserialize = deserialize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIsbUJBQW1CLEdBQUcsaUJBQWlCO0FBQ3ZDLHFCQUFxQixtQkFBTyxDQUFDLGlFQUFnQjtBQUM3Qyx1QkFBdUIsbUJBQU8sQ0FBQyxxRUFBa0I7QUFDakQseUJBQXlCLG1CQUFPLENBQUMseURBQVk7QUFDN0M7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ib3JzaC9saWIvY2pzL2luZGV4LmpzPzZmNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzLmRlc2VyaWFsaXplID0gZXhwb3J0cy5zZXJpYWxpemUgPSB2b2lkIDA7XG52YXIgc2VyaWFsaXplX2pzXzEgPSByZXF1aXJlKFwiLi9zZXJpYWxpemUuanNcIik7XG52YXIgZGVzZXJpYWxpemVfanNfMSA9IHJlcXVpcmUoXCIuL2Rlc2VyaWFsaXplLmpzXCIpO1xudmFyIHV0aWxzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpKTtcbmZ1bmN0aW9uIHNlcmlhbGl6ZShzY2hlbWEsIHZhbHVlLCB2YWxpZGF0ZSkge1xuICAgIGlmICh2YWxpZGF0ZSA9PT0gdm9pZCAwKSB7IHZhbGlkYXRlID0gdHJ1ZTsgfVxuICAgIGlmICh2YWxpZGF0ZSlcbiAgICAgICAgdXRpbHMudmFsaWRhdGVfc2NoZW1hKHNjaGVtYSk7XG4gICAgdmFyIHNlcmlhbGl6ZXIgPSBuZXcgc2VyaWFsaXplX2pzXzEuQm9yc2hTZXJpYWxpemVyKHZhbGlkYXRlKTtcbiAgICByZXR1cm4gc2VyaWFsaXplci5lbmNvZGUodmFsdWUsIHNjaGVtYSk7XG59XG5leHBvcnRzLnNlcmlhbGl6ZSA9IHNlcmlhbGl6ZTtcbmZ1bmN0aW9uIGRlc2VyaWFsaXplKHNjaGVtYSwgYnVmZmVyLCB2YWxpZGF0ZSkge1xuICAgIGlmICh2YWxpZGF0ZSA9PT0gdm9pZCAwKSB7IHZhbGlkYXRlID0gdHJ1ZTsgfVxuICAgIGlmICh2YWxpZGF0ZSlcbiAgICAgICAgdXRpbHMudmFsaWRhdGVfc2NoZW1hKHNjaGVtYSk7XG4gICAgdmFyIGRlc2VyaWFsaXplciA9IG5ldyBkZXNlcmlhbGl6ZV9qc18xLkJvcnNoRGVzZXJpYWxpemVyKGJ1ZmZlcik7XG4gICAgcmV0dXJuIGRlc2VyaWFsaXplci5kZWNvZGUoc2NoZW1hKTtcbn1cbmV4cG9ydHMuZGVzZXJpYWxpemUgPSBkZXNlcmlhbGl6ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/borsh/lib/cjs/index.js\n"));

/***/ }),

/***/ "./node_modules/borsh/lib/cjs/serialize.js":
/*!*************************************************!*\
  !*** ./node_modules/borsh/lib/cjs/serialize.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nexports.__esModule = true;\nexports.BorshSerializer = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"./node_modules/borsh/lib/cjs/types.js\");\nvar buffer_js_1 = __webpack_require__(/*! ./buffer.js */ \"./node_modules/borsh/lib/cjs/buffer.js\");\nvar utils = __importStar(__webpack_require__(/*! ./utils.js */ \"./node_modules/borsh/lib/cjs/utils.js\"));\nvar BorshSerializer = /** @class */ (function () {\n    function BorshSerializer(checkTypes) {\n        this.encoded = new buffer_js_1.EncodeBuffer();\n        this.fieldPath = ['value'];\n        this.checkTypes = checkTypes;\n    }\n    BorshSerializer.prototype.encode = function (value, schema) {\n        this.encode_value(value, schema);\n        return this.encoded.get_used_buffer();\n    };\n    BorshSerializer.prototype.encode_value = function (value, schema) {\n        if (typeof schema === 'string') {\n            if (types_js_1.integers.includes(schema))\n                return this.encode_integer(value, schema);\n            if (schema === 'string')\n                return this.encode_string(value);\n            if (schema === 'bool')\n                return this.encode_boolean(value);\n        }\n        if (typeof schema === 'object') {\n            if ('option' in schema)\n                return this.encode_option(value, schema);\n            if ('enum' in schema)\n                return this.encode_enum(value, schema);\n            if ('array' in schema)\n                return this.encode_array(value, schema);\n            if ('set' in schema)\n                return this.encode_set(value, schema);\n            if ('map' in schema)\n                return this.encode_map(value, schema);\n            if ('struct' in schema)\n                return this.encode_struct(value, schema);\n        }\n    };\n    BorshSerializer.prototype.encode_integer = function (value, schema) {\n        var size = parseInt(schema.substring(1));\n        if (size <= 32 || schema == 'f64') {\n            this.checkTypes && utils.expect_type(value, 'number', this.fieldPath);\n            this.encoded.store_value(value, schema);\n        }\n        else {\n            this.checkTypes && utils.expect_bigint(value, this.fieldPath);\n            this.encode_bigint(BigInt(value), size);\n        }\n    };\n    BorshSerializer.prototype.encode_bigint = function (value, size) {\n        var buffer_len = size / 8;\n        var buffer = new Uint8Array(buffer_len);\n        for (var i = 0; i < buffer_len; i++) {\n            buffer[i] = Number(value & BigInt(0xff));\n            value = value >> BigInt(8);\n        }\n        this.encoded.store_bytes(new Uint8Array(buffer));\n    };\n    BorshSerializer.prototype.encode_string = function (value) {\n        this.checkTypes && utils.expect_type(value, 'string', this.fieldPath);\n        var _value = value;\n        // 4 bytes for length\n        this.encoded.store_value(_value.length, 'u32');\n        // string bytes\n        for (var i = 0; i < _value.length; i++) {\n            this.encoded.store_value(_value.charCodeAt(i), 'u8');\n        }\n    };\n    BorshSerializer.prototype.encode_boolean = function (value) {\n        this.checkTypes && utils.expect_type(value, 'boolean', this.fieldPath);\n        this.encoded.store_value(value ? 1 : 0, 'u8');\n    };\n    BorshSerializer.prototype.encode_option = function (value, schema) {\n        if (value === null || value === undefined) {\n            this.encoded.store_value(0, 'u8');\n        }\n        else {\n            this.encoded.store_value(1, 'u8');\n            this.encode_value(value, schema.option);\n        }\n    };\n    BorshSerializer.prototype.encode_enum = function (value, schema) {\n        this.checkTypes && utils.expect_enum(value, this.fieldPath);\n        var valueKey = Object.keys(value)[0];\n        for (var i = 0; i < schema[\"enum\"].length; i++) {\n            var valueSchema = schema[\"enum\"][i];\n            if (valueKey === Object.keys(valueSchema.struct)[0]) {\n                this.encoded.store_value(i, 'u8');\n                return this.encode_struct(value, valueSchema);\n            }\n        }\n        throw new Error(\"Enum key (\".concat(valueKey, \") not found in enum schema: \").concat(JSON.stringify(schema), \" at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_array = function (value, schema) {\n        if (utils.isArrayLike(value))\n            return this.encode_arraylike(value, schema);\n        if (value instanceof ArrayBuffer)\n            return this.encode_buffer(value, schema);\n        throw new Error(\"Expected Array-like not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(this.fieldPath.join('.')));\n    };\n    BorshSerializer.prototype.encode_arraylike = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.length, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.length, 'u32');\n        }\n        // array values\n        for (var i = 0; i < value.length; i++) {\n            this.encode_value(value[i], schema.array.type);\n        }\n    };\n    BorshSerializer.prototype.encode_buffer = function (value, schema) {\n        if (schema.array.len) {\n            utils.expect_same_size(value.byteLength, schema.array.len, this.fieldPath);\n        }\n        else {\n            // 4 bytes for length\n            this.encoded.store_value(value.byteLength, 'u32');\n        }\n        // array values\n        this.encoded.store_bytes(new Uint8Array(value));\n    };\n    BorshSerializer.prototype.encode_set = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isSet = value instanceof Set;\n        var values = isSet ? Array.from(value.values()) : Object.values(value);\n        // 4 bytes for length\n        this.encoded.store_value(values.length, 'u32');\n        // set values\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var value_1 = values_1[_i];\n            this.encode_value(value_1, schema.set);\n        }\n    };\n    BorshSerializer.prototype.encode_map = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        var isMap = value instanceof Map;\n        var keys = isMap ? Array.from(value.keys()) : Object.keys(value);\n        // 4 bytes for length\n        this.encoded.store_value(keys.length, 'u32');\n        // store key/values\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            this.encode_value(key, schema.map.key);\n            this.encode_value(isMap ? value.get(key) : value[key], schema.map.value);\n        }\n    };\n    BorshSerializer.prototype.encode_struct = function (value, schema) {\n        this.checkTypes && utils.expect_type(value, 'object', this.fieldPath);\n        for (var _i = 0, _a = Object.keys(schema.struct); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.fieldPath.push(key);\n            this.encode_value(value[key], schema.struct[key]);\n            this.fieldPath.pop();\n        }\n    };\n    return BorshSerializer;\n}());\nexports.BorshSerializer = BorshSerializer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/borsh/lib/cjs/serialize.js\n"));

/***/ }),

/***/ "./node_modules/borsh/lib/cjs/types.js":
/*!*********************************************!*\
  !*** ./node_modules/borsh/lib/cjs/types.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nexports.__esModule = true;\nexports.integers = void 0;\nexports.integers = ['u8', 'u16', 'u32', 'u64', 'u128', 'i8', 'i16', 'i32', 'i64', 'i128', 'f32', 'f64'];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLGtCQUFrQjtBQUNsQixnQkFBZ0I7QUFDaEIsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ib3JzaC9saWIvY2pzL3R5cGVzLmpzPzA4NDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5pbnRlZ2VycyA9IHZvaWQgMDtcbmV4cG9ydHMuaW50ZWdlcnMgPSBbJ3U4JywgJ3UxNicsICd1MzInLCAndTY0JywgJ3UxMjgnLCAnaTgnLCAnaTE2JywgJ2kzMicsICdpNjQnLCAnaTEyOCcsICdmMzInLCAnZjY0J107XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/borsh/lib/cjs/types.js\n"));

/***/ }),

/***/ "./node_modules/borsh/lib/cjs/utils.js":
/*!*********************************************!*\
  !*** ./node_modules/borsh/lib/cjs/utils.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nexports.validate_schema = exports.ErrorSchema = exports.expect_enum = exports.expect_same_size = exports.expect_bigint = exports.expect_type = exports.isArrayLike = void 0;\nvar types_js_1 = __webpack_require__(/*! ./types.js */ \"./node_modules/borsh/lib/cjs/types.js\");\nfunction isArrayLike(value) {\n    // source: https://stackoverflow.com/questions/24048547/checking-if-an-object-is-array-like\n    return (Array.isArray(value) ||\n        (!!value &&\n            typeof value === 'object' &&\n            'length' in value &&\n            typeof (value.length) === 'number' &&\n            (value.length === 0 ||\n                (value.length > 0 &&\n                    (value.length - 1) in value))));\n}\nexports.isArrayLike = isArrayLike;\nfunction expect_type(value, type, fieldPath) {\n    if (typeof (value) !== type) {\n        throw new Error(\"Expected \".concat(type, \" not \").concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_type = expect_type;\nfunction expect_bigint(value, fieldPath) {\n    var basicType = ['number', 'string', 'bigint', 'boolean'].includes(typeof (value));\n    var strObject = typeof (value) === 'object' && value !== null && 'toString' in value;\n    if (!basicType && !strObject) {\n        throw new Error(\"Expected bigint, number, boolean or string not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_bigint = expect_bigint;\nfunction expect_same_size(length, expected, fieldPath) {\n    if (length !== expected) {\n        throw new Error(\"Array length \".concat(length, \" does not match schema length \").concat(expected, \" at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_same_size = expect_same_size;\nfunction expect_enum(value, fieldPath) {\n    if (typeof (value) !== 'object' || value === null) {\n        throw new Error(\"Expected object not \".concat(typeof (value), \"(\").concat(value, \") at \").concat(fieldPath.join('.')));\n    }\n}\nexports.expect_enum = expect_enum;\n// Validate Schema\nvar VALID_STRING_TYPES = types_js_1.integers.concat(['bool', 'string']);\nvar VALID_OBJECT_KEYS = ['option', 'enum', 'array', 'set', 'map', 'struct'];\nvar ErrorSchema = /** @class */ (function (_super) {\n    __extends(ErrorSchema, _super);\n    function ErrorSchema(schema, expected) {\n        var message = \"Invalid schema: \".concat(JSON.stringify(schema), \" expected \").concat(expected);\n        return _super.call(this, message) || this;\n    }\n    return ErrorSchema;\n}(Error));\nexports.ErrorSchema = ErrorSchema;\nfunction validate_schema(schema) {\n    if (typeof (schema) === 'string' && VALID_STRING_TYPES.includes(schema)) {\n        return;\n    }\n    if (schema && typeof (schema) === 'object') {\n        var keys = Object.keys(schema);\n        if (keys.length === 1 && VALID_OBJECT_KEYS.includes(keys[0])) {\n            var key = keys[0];\n            if (key === 'option')\n                return validate_schema(schema[key]);\n            if (key === 'enum')\n                return validate_enum_schema(schema[key]);\n            if (key === 'array')\n                return validate_array_schema(schema[key]);\n            if (key === 'set')\n                return validate_schema(schema[key]);\n            if (key === 'map')\n                return validate_map_schema(schema[key]);\n            if (key === 'struct')\n                return validate_struct_schema(schema[key]);\n        }\n    }\n    throw new ErrorSchema(schema, VALID_OBJECT_KEYS.join(', ') + ' or ' + VALID_STRING_TYPES.join(', '));\n}\nexports.validate_schema = validate_schema;\nfunction validate_enum_schema(schema) {\n    if (!Array.isArray(schema))\n        throw new ErrorSchema(schema, 'Array');\n    for (var _i = 0, schema_1 = schema; _i < schema_1.length; _i++) {\n        var sch = schema_1[_i];\n        if (typeof sch !== 'object' || !('struct' in sch)) {\n            throw new Error('Missing \"struct\" key in enum schema');\n        }\n        if (typeof sch.struct !== 'object' || Object.keys(sch.struct).length !== 1) {\n            throw new Error('The \"struct\" in each enum must have a single key');\n        }\n        validate_schema({ struct: sch.struct });\n    }\n}\nfunction validate_array_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, '{ type, len? }');\n    if (schema.len && typeof schema.len !== 'number') {\n        throw new Error(\"Invalid schema: \".concat(schema));\n    }\n    if ('type' in schema)\n        return validate_schema(schema.type);\n    throw new ErrorSchema(schema, '{ type, len? }');\n}\nfunction validate_map_schema(schema) {\n    if (typeof schema === 'object' && 'key' in schema && 'value' in schema) {\n        validate_schema(schema.key);\n        validate_schema(schema.value);\n    }\n    else {\n        throw new ErrorSchema(schema, '{ key, value }');\n    }\n}\nfunction validate_struct_schema(schema) {\n    if (typeof schema !== 'object')\n        throw new ErrorSchema(schema, 'object');\n    for (var key in schema) {\n        validate_schema(schema[key]);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYm9yc2gvbGliL2Nqcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZ0JBQWdCLHNDQUFzQyxrQkFBa0I7QUFDdkYsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQjtBQUNsQix1QkFBdUIsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRyx3QkFBd0IsR0FBRyxxQkFBcUIsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUI7QUFDbEssaUJBQWlCLG1CQUFPLENBQUMseURBQVk7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxzQkFBc0I7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0JBQW9CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFlBQVk7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxZQUFZO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFlBQVk7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ib3JzaC9saWIvY2pzL3V0aWxzLmpzPzY0YTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcbmV4cG9ydHMudmFsaWRhdGVfc2NoZW1hID0gZXhwb3J0cy5FcnJvclNjaGVtYSA9IGV4cG9ydHMuZXhwZWN0X2VudW0gPSBleHBvcnRzLmV4cGVjdF9zYW1lX3NpemUgPSBleHBvcnRzLmV4cGVjdF9iaWdpbnQgPSBleHBvcnRzLmV4cGVjdF90eXBlID0gZXhwb3J0cy5pc0FycmF5TGlrZSA9IHZvaWQgMDtcbnZhciB0eXBlc19qc18xID0gcmVxdWlyZShcIi4vdHlwZXMuanNcIik7XG5mdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSkge1xuICAgIC8vIHNvdXJjZTogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjQwNDg1NDcvY2hlY2tpbmctaWYtYW4tb2JqZWN0LWlzLWFycmF5LWxpa2VcbiAgICByZXR1cm4gKEFycmF5LmlzQXJyYXkodmFsdWUpIHx8XG4gICAgICAgICghIXZhbHVlICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICAnbGVuZ3RoJyBpbiB2YWx1ZSAmJlxuICAgICAgICAgICAgdHlwZW9mICh2YWx1ZS5sZW5ndGgpID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgKHZhbHVlLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAgICAgICAgICh2YWx1ZS5sZW5ndGggPiAwICYmXG4gICAgICAgICAgICAgICAgICAgICh2YWx1ZS5sZW5ndGggLSAxKSBpbiB2YWx1ZSkpKSk7XG59XG5leHBvcnRzLmlzQXJyYXlMaWtlID0gaXNBcnJheUxpa2U7XG5mdW5jdGlvbiBleHBlY3RfdHlwZSh2YWx1ZSwgdHlwZSwgZmllbGRQYXRoKSB7XG4gICAgaWYgKHR5cGVvZiAodmFsdWUpICE9PSB0eXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkV4cGVjdGVkIFwiLmNvbmNhdCh0eXBlLCBcIiBub3QgXCIpLmNvbmNhdCh0eXBlb2YgKHZhbHVlKSwgXCIoXCIpLmNvbmNhdCh2YWx1ZSwgXCIpIGF0IFwiKS5jb25jYXQoZmllbGRQYXRoLmpvaW4oJy4nKSkpO1xuICAgIH1cbn1cbmV4cG9ydHMuZXhwZWN0X3R5cGUgPSBleHBlY3RfdHlwZTtcbmZ1bmN0aW9uIGV4cGVjdF9iaWdpbnQodmFsdWUsIGZpZWxkUGF0aCkge1xuICAgIHZhciBiYXNpY1R5cGUgPSBbJ251bWJlcicsICdzdHJpbmcnLCAnYmlnaW50JywgJ2Jvb2xlYW4nXS5pbmNsdWRlcyh0eXBlb2YgKHZhbHVlKSk7XG4gICAgdmFyIHN0ck9iamVjdCA9IHR5cGVvZiAodmFsdWUpID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbCAmJiAndG9TdHJpbmcnIGluIHZhbHVlO1xuICAgIGlmICghYmFzaWNUeXBlICYmICFzdHJPYmplY3QpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgYmlnaW50LCBudW1iZXIsIGJvb2xlYW4gb3Igc3RyaW5nIG5vdCBcIi5jb25jYXQodHlwZW9mICh2YWx1ZSksIFwiKFwiKS5jb25jYXQodmFsdWUsIFwiKSBhdCBcIikuY29uY2F0KGZpZWxkUGF0aC5qb2luKCcuJykpKTtcbiAgICB9XG59XG5leHBvcnRzLmV4cGVjdF9iaWdpbnQgPSBleHBlY3RfYmlnaW50O1xuZnVuY3Rpb24gZXhwZWN0X3NhbWVfc2l6ZShsZW5ndGgsIGV4cGVjdGVkLCBmaWVsZFBhdGgpIHtcbiAgICBpZiAobGVuZ3RoICE9PSBleHBlY3RlZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBcnJheSBsZW5ndGggXCIuY29uY2F0KGxlbmd0aCwgXCIgZG9lcyBub3QgbWF0Y2ggc2NoZW1hIGxlbmd0aCBcIikuY29uY2F0KGV4cGVjdGVkLCBcIiBhdCBcIikuY29uY2F0KGZpZWxkUGF0aC5qb2luKCcuJykpKTtcbiAgICB9XG59XG5leHBvcnRzLmV4cGVjdF9zYW1lX3NpemUgPSBleHBlY3Rfc2FtZV9zaXplO1xuZnVuY3Rpb24gZXhwZWN0X2VudW0odmFsdWUsIGZpZWxkUGF0aCkge1xuICAgIGlmICh0eXBlb2YgKHZhbHVlKSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXhwZWN0ZWQgb2JqZWN0IG5vdCBcIi5jb25jYXQodHlwZW9mICh2YWx1ZSksIFwiKFwiKS5jb25jYXQodmFsdWUsIFwiKSBhdCBcIikuY29uY2F0KGZpZWxkUGF0aC5qb2luKCcuJykpKTtcbiAgICB9XG59XG5leHBvcnRzLmV4cGVjdF9lbnVtID0gZXhwZWN0X2VudW07XG4vLyBWYWxpZGF0ZSBTY2hlbWFcbnZhciBWQUxJRF9TVFJJTkdfVFlQRVMgPSB0eXBlc19qc18xLmludGVnZXJzLmNvbmNhdChbJ2Jvb2wnLCAnc3RyaW5nJ10pO1xudmFyIFZBTElEX09CSkVDVF9LRVlTID0gWydvcHRpb24nLCAnZW51bScsICdhcnJheScsICdzZXQnLCAnbWFwJywgJ3N0cnVjdCddO1xudmFyIEVycm9yU2NoZW1hID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIF9fZXh0ZW5kcyhFcnJvclNjaGVtYSwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBFcnJvclNjaGVtYShzY2hlbWEsIGV4cGVjdGVkKSB7XG4gICAgICAgIHZhciBtZXNzYWdlID0gXCJJbnZhbGlkIHNjaGVtYTogXCIuY29uY2F0KEpTT04uc3RyaW5naWZ5KHNjaGVtYSksIFwiIGV4cGVjdGVkIFwiKS5jb25jYXQoZXhwZWN0ZWQpO1xuICAgICAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSkgfHwgdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIEVycm9yU2NoZW1hO1xufShFcnJvcikpO1xuZXhwb3J0cy5FcnJvclNjaGVtYSA9IEVycm9yU2NoZW1hO1xuZnVuY3Rpb24gdmFsaWRhdGVfc2NoZW1hKHNjaGVtYSkge1xuICAgIGlmICh0eXBlb2YgKHNjaGVtYSkgPT09ICdzdHJpbmcnICYmIFZBTElEX1NUUklOR19UWVBFUy5pbmNsdWRlcyhzY2hlbWEpKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHNjaGVtYSAmJiB0eXBlb2YgKHNjaGVtYSkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc2NoZW1hKTtcbiAgICAgICAgaWYgKGtleXMubGVuZ3RoID09PSAxICYmIFZBTElEX09CSkVDVF9LRVlTLmluY2x1ZGVzKGtleXNbMF0pKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0ga2V5c1swXTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09ICdvcHRpb24nKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZV9zY2hlbWEoc2NoZW1hW2tleV0pO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ2VudW0nKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZV9lbnVtX3NjaGVtYShzY2hlbWFba2V5XSk7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnYXJyYXknKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZV9hcnJheV9zY2hlbWEoc2NoZW1hW2tleV0pO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3NldCcpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbGlkYXRlX3NjaGVtYShzY2hlbWFba2V5XSk7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnbWFwJylcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsaWRhdGVfbWFwX3NjaGVtYShzY2hlbWFba2V5XSk7XG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnc3RydWN0JylcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsaWRhdGVfc3RydWN0X3NjaGVtYShzY2hlbWFba2V5XSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yU2NoZW1hKHNjaGVtYSwgVkFMSURfT0JKRUNUX0tFWVMuam9pbignLCAnKSArICcgb3IgJyArIFZBTElEX1NUUklOR19UWVBFUy5qb2luKCcsICcpKTtcbn1cbmV4cG9ydHMudmFsaWRhdGVfc2NoZW1hID0gdmFsaWRhdGVfc2NoZW1hO1xuZnVuY3Rpb24gdmFsaWRhdGVfZW51bV9zY2hlbWEoc2NoZW1hKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHNjaGVtYSkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvclNjaGVtYShzY2hlbWEsICdBcnJheScpO1xuICAgIGZvciAodmFyIF9pID0gMCwgc2NoZW1hXzEgPSBzY2hlbWE7IF9pIDwgc2NoZW1hXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgIHZhciBzY2ggPSBzY2hlbWFfMVtfaV07XG4gICAgICAgIGlmICh0eXBlb2Ygc2NoICE9PSAnb2JqZWN0JyB8fCAhKCdzdHJ1Y3QnIGluIHNjaCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBcInN0cnVjdFwiIGtleSBpbiBlbnVtIHNjaGVtYScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2Ygc2NoLnN0cnVjdCAhPT0gJ29iamVjdCcgfHwgT2JqZWN0LmtleXMoc2NoLnN0cnVjdCkubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBcInN0cnVjdFwiIGluIGVhY2ggZW51bSBtdXN0IGhhdmUgYSBzaW5nbGUga2V5Jyk7XG4gICAgICAgIH1cbiAgICAgICAgdmFsaWRhdGVfc2NoZW1hKHsgc3RydWN0OiBzY2guc3RydWN0IH0pO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHZhbGlkYXRlX2FycmF5X3NjaGVtYShzY2hlbWEpIHtcbiAgICBpZiAodHlwZW9mIHNjaGVtYSAhPT0gJ29iamVjdCcpXG4gICAgICAgIHRocm93IG5ldyBFcnJvclNjaGVtYShzY2hlbWEsICd7IHR5cGUsIGxlbj8gfScpO1xuICAgIGlmIChzY2hlbWEubGVuICYmIHR5cGVvZiBzY2hlbWEubGVuICE9PSAnbnVtYmVyJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNjaGVtYTogXCIuY29uY2F0KHNjaGVtYSkpO1xuICAgIH1cbiAgICBpZiAoJ3R5cGUnIGluIHNjaGVtYSlcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlX3NjaGVtYShzY2hlbWEudHlwZSk7XG4gICAgdGhyb3cgbmV3IEVycm9yU2NoZW1hKHNjaGVtYSwgJ3sgdHlwZSwgbGVuPyB9Jyk7XG59XG5mdW5jdGlvbiB2YWxpZGF0ZV9tYXBfc2NoZW1hKHNjaGVtYSkge1xuICAgIGlmICh0eXBlb2Ygc2NoZW1hID09PSAnb2JqZWN0JyAmJiAna2V5JyBpbiBzY2hlbWEgJiYgJ3ZhbHVlJyBpbiBzY2hlbWEpIHtcbiAgICAgICAgdmFsaWRhdGVfc2NoZW1hKHNjaGVtYS5rZXkpO1xuICAgICAgICB2YWxpZGF0ZV9zY2hlbWEoc2NoZW1hLnZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvclNjaGVtYShzY2hlbWEsICd7IGtleSwgdmFsdWUgfScpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHZhbGlkYXRlX3N0cnVjdF9zY2hlbWEoc2NoZW1hKSB7XG4gICAgaWYgKHR5cGVvZiBzY2hlbWEgIT09ICdvYmplY3QnKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3JTY2hlbWEoc2NoZW1hLCAnb2JqZWN0Jyk7XG4gICAgZm9yICh2YXIga2V5IGluIHNjaGVtYSkge1xuICAgICAgICB2YWxpZGF0ZV9zY2hlbWEoc2NoZW1hW2tleV0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/borsh/lib/cjs/utils.js\n"));

/***/ }),

/***/ "./node_modules/bs58/index.js":
/*!************************************!*\
  !*** ./node_modules/bs58/index.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var basex = __webpack_require__(/*! base-x */ \"./node_modules/base-x/index.js\")\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYnM1OC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxZQUFZLG1CQUFPLENBQUMsOENBQVE7QUFDNUI7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2JzNTgvaW5kZXguanM/NWFmNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZXggPSByZXF1aXJlKCdiYXNlLXgnKVxudmFyIEFMUEhBQkVUID0gJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXG5cbm1vZHVsZS5leHBvcnRzID0gYmFzZXgoQUxQSEFCRVQpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/bs58/index.js\n"));

/***/ }),

/***/ "./node_modules/depd/lib/browser/index.js":
/*!************************************************!*\
  !*** ./node_modules/depd/lib/browser/index.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVwZC9saWIvYnJvd3Nlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVZOztBQUVaO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZGVwZC9saWIvYnJvd3Nlci9pbmRleC5qcz80ODg4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogZGVwZFxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBleHBvcnRzLlxuICogQHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZGVwZFxuXG4vKipcbiAqIENyZWF0ZSBkZXByZWNhdGUgZm9yIG5hbWVzcGFjZSBpbiBjYWxsZXIuXG4gKi9cblxuZnVuY3Rpb24gZGVwZCAobmFtZXNwYWNlKSB7XG4gIGlmICghbmFtZXNwYWNlKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgbmFtZXNwYWNlIGlzIHJlcXVpcmVkJylcbiAgfVxuXG4gIGZ1bmN0aW9uIGRlcHJlY2F0ZSAobWVzc2FnZSkge1xuICAgIC8vIG5vLW9wIGluIGJyb3dzZXJcbiAgfVxuXG4gIGRlcHJlY2F0ZS5fZmlsZSA9IHVuZGVmaW5lZFxuICBkZXByZWNhdGUuX2lnbm9yZWQgPSB0cnVlXG4gIGRlcHJlY2F0ZS5fbmFtZXNwYWNlID0gbmFtZXNwYWNlXG4gIGRlcHJlY2F0ZS5fdHJhY2VkID0gZmFsc2VcbiAgZGVwcmVjYXRlLl93YXJuZWQgPSBPYmplY3QuY3JlYXRlKG51bGwpXG5cbiAgZGVwcmVjYXRlLmZ1bmN0aW9uID0gd3JhcGZ1bmN0aW9uXG4gIGRlcHJlY2F0ZS5wcm9wZXJ0eSA9IHdyYXBwcm9wZXJ0eVxuXG4gIHJldHVybiBkZXByZWNhdGVcbn1cblxuLyoqXG4gKiBSZXR1cm4gYSB3cmFwcGVkIGZ1bmN0aW9uIGluIGEgZGVwcmVjYXRpb24gbWVzc2FnZS5cbiAqXG4gKiBUaGlzIGlzIGEgbm8tb3AgdmVyc2lvbiBvZiB0aGUgd3JhcHBlciwgd2hpY2ggZG9lcyBub3RoaW5nIGJ1dCBjYWxsXG4gKiB2YWxpZGF0aW9uLlxuICovXG5cbmZ1bmN0aW9uIHdyYXBmdW5jdGlvbiAoZm4sIG1lc3NhZ2UpIHtcbiAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IGZuIG11c3QgYmUgYSBmdW5jdGlvbicpXG4gIH1cblxuICByZXR1cm4gZm5cbn1cblxuLyoqXG4gKiBXcmFwIHByb3BlcnR5IGluIGEgZGVwcmVjYXRpb24gbWVzc2FnZS5cbiAqXG4gKiBUaGlzIGlzIGEgbm8tb3AgdmVyc2lvbiBvZiB0aGUgd3JhcHBlciwgd2hpY2ggZG9lcyBub3RoaW5nIGJ1dCBjYWxsXG4gKiB2YWxpZGF0aW9uLlxuICovXG5cbmZ1bmN0aW9uIHdyYXBwcm9wZXJ0eSAob2JqLCBwcm9wLCBtZXNzYWdlKSB7XG4gIGlmICghb2JqIHx8ICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqICE9PSAnZnVuY3Rpb24nKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2FyZ3VtZW50IG9iaiBtdXN0IGJlIG9iamVjdCcpXG4gIH1cblxuICB2YXIgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBwcm9wKVxuXG4gIGlmICghZGVzY3JpcHRvcikge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ211c3QgY2FsbCBwcm9wZXJ0eSBvbiBvd25lciBvYmplY3QnKVxuICB9XG5cbiAgaWYgKCFkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3Byb3BlcnR5IG11c3QgYmUgY29uZmlndXJhYmxlJylcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/depd/lib/browser/index.js\n"));

/***/ }),

/***/ "./node_modules/generate-function/index.js":
/*!*************************************************!*\
  !*** ./node_modules/generate-function/index.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\")\nvar isProperty = __webpack_require__(/*! is-property */ \"./node_modules/is-property/is-property.js\")\n\nvar INDENT_START = /[\\{\\[]/\nvar INDENT_END = /[\\}\\]]/\n\n// from https://mathiasbynens.be/notes/reserved-keywords\nvar RESERVED = [\n  'do',\n  'if',\n  'in',\n  'for',\n  'let',\n  'new',\n  'try',\n  'var',\n  'case',\n  'else',\n  'enum',\n  'eval',\n  'null',\n  'this',\n  'true',\n  'void',\n  'with',\n  'await',\n  'break',\n  'catch',\n  'class',\n  'const',\n  'false',\n  'super',\n  'throw',\n  'while',\n  'yield',\n  'delete',\n  'export',\n  'import',\n  'public',\n  'return',\n  'static',\n  'switch',\n  'typeof',\n  'default',\n  'extends',\n  'finally',\n  'package',\n  'private',\n  'continue',\n  'debugger',\n  'function',\n  'arguments',\n  'interface',\n  'protected',\n  'implements',\n  'instanceof',\n  'NaN',\n  'undefined'\n]\n\nvar RESERVED_MAP = {}\n\nfor (var i = 0; i < RESERVED.length; i++) {\n  RESERVED_MAP[RESERVED[i]] = true\n}\n\nvar isVariable = function (name) {\n  return isProperty(name) && !RESERVED_MAP.hasOwnProperty(name)\n}\n\nvar formats = {\n  s: function(s) {\n    return '' + s\n  },\n  d: function(d) {\n    return '' + Number(d)\n  },\n  o: function(o) {\n    return JSON.stringify(o)\n  }\n}\n\nvar genfun = function() {\n  var lines = []\n  var indent = 0\n  var vars = {}\n\n  var push = function(str) {\n    var spaces = ''\n    while (spaces.length < indent*2) spaces += '  '\n    lines.push(spaces+str)\n  }\n\n  var pushLine = function(line) {\n    if (INDENT_END.test(line.trim()[0]) && INDENT_START.test(line[line.length-1])) {\n      indent--\n      push(line)\n      indent++\n      return\n    }\n    if (INDENT_START.test(line[line.length-1])) {\n      push(line)\n      indent++\n      return\n    }\n    if (INDENT_END.test(line.trim()[0])) {\n      indent--\n      push(line)\n      return\n    }\n\n    push(line)\n  }\n\n  var line = function(fmt) {\n    if (!fmt) return line\n\n    if (arguments.length === 1 && fmt.indexOf('\\n') > -1) {\n      var lines = fmt.trim().split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        pushLine(lines[i].trim())\n      }\n    } else {\n      pushLine(util.format.apply(util, arguments))\n    }\n\n    return line\n  }\n\n  line.scope = {}\n  line.formats = formats\n\n  line.sym = function(name) {\n    if (!name || !isVariable(name)) name = 'tmp'\n    if (!vars[name]) vars[name] = 0\n    return name + (vars[name]++ || '')\n  }\n\n  line.property = function(obj, name) {\n    if (arguments.length === 1) {\n      name = obj\n      obj = ''\n    }\n\n    name = name + ''\n\n    if (isProperty(name)) return (obj ? obj + '.' + name : name)\n    return obj ? obj + '[' + JSON.stringify(name) + ']' : JSON.stringify(name)\n  }\n\n  line.toString = function() {\n    return lines.join('\\n')\n  }\n\n  line.toFunction = function(scope) {\n    if (!scope) scope = {}\n\n    var src = 'return ('+line.toString()+')'\n\n    Object.keys(line.scope).forEach(function (key) {\n      if (!scope[key]) scope[key] = line.scope[key]\n    })\n\n    var keys = Object.keys(scope).map(function(key) {\n      return key\n    })\n\n    var vals = keys.map(function(key) {\n      return scope[key]\n    })\n\n    return Function.apply(null, keys.concat(src)).apply(null, vals)\n  }\n\n  if (arguments.length) line.apply(null, arguments)\n\n  return line\n}\n\ngenfun.formats = formats\nmodule.exports = genfun\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VuZXJhdGUtZnVuY3Rpb24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVyxtQkFBTyxDQUFDLHlDQUFNO0FBQ3pCLGlCQUFpQixtQkFBTyxDQUFDLDhEQUFhOztBQUV0Qyx1QkFBdUI7QUFDdkIscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLGdCQUFnQixxQkFBcUI7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esc0JBQXNCLGtCQUFrQjtBQUN4QztBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2dlbmVyYXRlLWZ1bmN0aW9uL2luZGV4LmpzPzVjMTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJylcbnZhciBpc1Byb3BlcnR5ID0gcmVxdWlyZSgnaXMtcHJvcGVydHknKVxuXG52YXIgSU5ERU5UX1NUQVJUID0gL1tcXHtcXFtdL1xudmFyIElOREVOVF9FTkQgPSAvW1xcfVxcXV0vXG5cbi8vIGZyb20gaHR0cHM6Ly9tYXRoaWFzYnluZW5zLmJlL25vdGVzL3Jlc2VydmVkLWtleXdvcmRzXG52YXIgUkVTRVJWRUQgPSBbXG4gICdkbycsXG4gICdpZicsXG4gICdpbicsXG4gICdmb3InLFxuICAnbGV0JyxcbiAgJ25ldycsXG4gICd0cnknLFxuICAndmFyJyxcbiAgJ2Nhc2UnLFxuICAnZWxzZScsXG4gICdlbnVtJyxcbiAgJ2V2YWwnLFxuICAnbnVsbCcsXG4gICd0aGlzJyxcbiAgJ3RydWUnLFxuICAndm9pZCcsXG4gICd3aXRoJyxcbiAgJ2F3YWl0JyxcbiAgJ2JyZWFrJyxcbiAgJ2NhdGNoJyxcbiAgJ2NsYXNzJyxcbiAgJ2NvbnN0JyxcbiAgJ2ZhbHNlJyxcbiAgJ3N1cGVyJyxcbiAgJ3Rocm93JyxcbiAgJ3doaWxlJyxcbiAgJ3lpZWxkJyxcbiAgJ2RlbGV0ZScsXG4gICdleHBvcnQnLFxuICAnaW1wb3J0JyxcbiAgJ3B1YmxpYycsXG4gICdyZXR1cm4nLFxuICAnc3RhdGljJyxcbiAgJ3N3aXRjaCcsXG4gICd0eXBlb2YnLFxuICAnZGVmYXVsdCcsXG4gICdleHRlbmRzJyxcbiAgJ2ZpbmFsbHknLFxuICAncGFja2FnZScsXG4gICdwcml2YXRlJyxcbiAgJ2NvbnRpbnVlJyxcbiAgJ2RlYnVnZ2VyJyxcbiAgJ2Z1bmN0aW9uJyxcbiAgJ2FyZ3VtZW50cycsXG4gICdpbnRlcmZhY2UnLFxuICAncHJvdGVjdGVkJyxcbiAgJ2ltcGxlbWVudHMnLFxuICAnaW5zdGFuY2VvZicsXG4gICdOYU4nLFxuICAndW5kZWZpbmVkJ1xuXVxuXG52YXIgUkVTRVJWRURfTUFQID0ge31cblxuZm9yICh2YXIgaSA9IDA7IGkgPCBSRVNFUlZFRC5sZW5ndGg7IGkrKykge1xuICBSRVNFUlZFRF9NQVBbUkVTRVJWRURbaV1dID0gdHJ1ZVxufVxuXG52YXIgaXNWYXJpYWJsZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBpc1Byb3BlcnR5KG5hbWUpICYmICFSRVNFUlZFRF9NQVAuaGFzT3duUHJvcGVydHkobmFtZSlcbn1cblxudmFyIGZvcm1hdHMgPSB7XG4gIHM6IGZ1bmN0aW9uKHMpIHtcbiAgICByZXR1cm4gJycgKyBzXG4gIH0sXG4gIGQ6IGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gJycgKyBOdW1iZXIoZClcbiAgfSxcbiAgbzogZnVuY3Rpb24obykge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShvKVxuICB9XG59XG5cbnZhciBnZW5mdW4gPSBmdW5jdGlvbigpIHtcbiAgdmFyIGxpbmVzID0gW11cbiAgdmFyIGluZGVudCA9IDBcbiAgdmFyIHZhcnMgPSB7fVxuXG4gIHZhciBwdXNoID0gZnVuY3Rpb24oc3RyKSB7XG4gICAgdmFyIHNwYWNlcyA9ICcnXG4gICAgd2hpbGUgKHNwYWNlcy5sZW5ndGggPCBpbmRlbnQqMikgc3BhY2VzICs9ICcgICdcbiAgICBsaW5lcy5wdXNoKHNwYWNlcytzdHIpXG4gIH1cblxuICB2YXIgcHVzaExpbmUgPSBmdW5jdGlvbihsaW5lKSB7XG4gICAgaWYgKElOREVOVF9FTkQudGVzdChsaW5lLnRyaW0oKVswXSkgJiYgSU5ERU5UX1NUQVJULnRlc3QobGluZVtsaW5lLmxlbmd0aC0xXSkpIHtcbiAgICAgIGluZGVudC0tXG4gICAgICBwdXNoKGxpbmUpXG4gICAgICBpbmRlbnQrK1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIGlmIChJTkRFTlRfU1RBUlQudGVzdChsaW5lW2xpbmUubGVuZ3RoLTFdKSkge1xuICAgICAgcHVzaChsaW5lKVxuICAgICAgaW5kZW50KytcbiAgICAgIHJldHVyblxuICAgIH1cbiAgICBpZiAoSU5ERU5UX0VORC50ZXN0KGxpbmUudHJpbSgpWzBdKSkge1xuICAgICAgaW5kZW50LS1cbiAgICAgIHB1c2gobGluZSlcbiAgICAgIHJldHVyblxuICAgIH1cblxuICAgIHB1c2gobGluZSlcbiAgfVxuXG4gIHZhciBsaW5lID0gZnVuY3Rpb24oZm10KSB7XG4gICAgaWYgKCFmbXQpIHJldHVybiBsaW5lXG5cbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSAmJiBmbXQuaW5kZXhPZignXFxuJykgPiAtMSkge1xuICAgICAgdmFyIGxpbmVzID0gZm10LnRyaW0oKS5zcGxpdCgnXFxuJylcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGluZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcHVzaExpbmUobGluZXNbaV0udHJpbSgpKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwdXNoTGluZSh1dGlsLmZvcm1hdC5hcHBseSh1dGlsLCBhcmd1bWVudHMpKVxuICAgIH1cblxuICAgIHJldHVybiBsaW5lXG4gIH1cblxuICBsaW5lLnNjb3BlID0ge31cbiAgbGluZS5mb3JtYXRzID0gZm9ybWF0c1xuXG4gIGxpbmUuc3ltID0gZnVuY3Rpb24obmFtZSkge1xuICAgIGlmICghbmFtZSB8fCAhaXNWYXJpYWJsZShuYW1lKSkgbmFtZSA9ICd0bXAnXG4gICAgaWYgKCF2YXJzW25hbWVdKSB2YXJzW25hbWVdID0gMFxuICAgIHJldHVybiBuYW1lICsgKHZhcnNbbmFtZV0rKyB8fCAnJylcbiAgfVxuXG4gIGxpbmUucHJvcGVydHkgPSBmdW5jdGlvbihvYmosIG5hbWUpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgbmFtZSA9IG9ialxuICAgICAgb2JqID0gJydcbiAgICB9XG5cbiAgICBuYW1lID0gbmFtZSArICcnXG5cbiAgICBpZiAoaXNQcm9wZXJ0eShuYW1lKSkgcmV0dXJuIChvYmogPyBvYmogKyAnLicgKyBuYW1lIDogbmFtZSlcbiAgICByZXR1cm4gb2JqID8gb2JqICsgJ1snICsgSlNPTi5zdHJpbmdpZnkobmFtZSkgKyAnXScgOiBKU09OLnN0cmluZ2lmeShuYW1lKVxuICB9XG5cbiAgbGluZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBsaW5lcy5qb2luKCdcXG4nKVxuICB9XG5cbiAgbGluZS50b0Z1bmN0aW9uID0gZnVuY3Rpb24oc2NvcGUpIHtcbiAgICBpZiAoIXNjb3BlKSBzY29wZSA9IHt9XG5cbiAgICB2YXIgc3JjID0gJ3JldHVybiAoJytsaW5lLnRvU3RyaW5nKCkrJyknXG5cbiAgICBPYmplY3Qua2V5cyhsaW5lLnNjb3BlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmICghc2NvcGVba2V5XSkgc2NvcGVba2V5XSA9IGxpbmUuc2NvcGVba2V5XVxuICAgIH0pXG5cbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHNjb3BlKS5tYXAoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4ga2V5XG4gICAgfSlcblxuICAgIHZhciB2YWxzID0ga2V5cy5tYXAoZnVuY3Rpb24oa2V5KSB7XG4gICAgICByZXR1cm4gc2NvcGVba2V5XVxuICAgIH0pXG5cbiAgICByZXR1cm4gRnVuY3Rpb24uYXBwbHkobnVsbCwga2V5cy5jb25jYXQoc3JjKSkuYXBwbHkobnVsbCwgdmFscylcbiAgfVxuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoKSBsaW5lLmFwcGx5KG51bGwsIGFyZ3VtZW50cylcblxuICByZXR1cm4gbGluZVxufVxuXG5nZW5mdW4uZm9ybWF0cyA9IGZvcm1hdHNcbm1vZHVsZS5leHBvcnRzID0gZ2VuZnVuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/generate-function/index.js\n"));

/***/ }),

/***/ "./node_modules/generate-object-property/index.js":
/*!********************************************************!*\
  !*** ./node_modules/generate-object-property/index.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var isProperty = __webpack_require__(/*! is-property */ \"./node_modules/is-property/is-property.js\")\n\nvar gen = function(obj, prop) {\n  return isProperty(prop) ? obj+'.'+prop : obj+'['+JSON.stringify(prop)+']'\n}\n\ngen.valid = isProperty\ngen.property = function (prop) {\n return isProperty(prop) ? prop : JSON.stringify(prop)\n}\n\nmodule.exports = gen\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZ2VuZXJhdGUtb2JqZWN0LXByb3BlcnR5L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLDhEQUFhOztBQUV0QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2dlbmVyYXRlLW9iamVjdC1wcm9wZXJ0eS9pbmRleC5qcz82M2UyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc1Byb3BlcnR5ID0gcmVxdWlyZSgnaXMtcHJvcGVydHknKVxuXG52YXIgZ2VuID0gZnVuY3Rpb24ob2JqLCBwcm9wKSB7XG4gIHJldHVybiBpc1Byb3BlcnR5KHByb3ApID8gb2JqKycuJytwcm9wIDogb2JqKydbJytKU09OLnN0cmluZ2lmeShwcm9wKSsnXSdcbn1cblxuZ2VuLnZhbGlkID0gaXNQcm9wZXJ0eVxuZ2VuLnByb3BlcnR5ID0gZnVuY3Rpb24gKHByb3ApIHtcbiByZXR1cm4gaXNQcm9wZXJ0eShwcm9wKSA/IHByb3AgOiBKU09OLnN0cmluZ2lmeShwcm9wKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdlblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/generate-object-property/index.js\n"));

/***/ }),

/***/ "./node_modules/http-errors/index.js":
/*!*******************************************!*\
  !*** ./node_modules/http-errors/index.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = __webpack_require__(/*! depd */ \"./node_modules/http-errors/node_modules/depd/lib/browser/index.js\")('http-errors')\nvar setPrototypeOf = __webpack_require__(/*! setprototypeof */ \"./node_modules/setprototypeof/index.js\")\nvar statuses = __webpack_require__(/*! statuses */ \"./node_modules/statuses/index.js\")\nvar inherits = __webpack_require__(/*! inherits */ \"./node_modules/http-errors/node_modules/inherits/inherits_browser.js\")\nvar toIdentifier = __webpack_require__(/*! toidentifier */ \"./node_modules/toidentifier/index.js\")\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = createError\nmodule.exports.HttpError = createHttpErrorConstructor()\n\n// Populate exports for all constructors\npopulateConstructorExports(module.exports, statuses.codes, module.exports.HttpError)\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\nfunction codeClass (status) {\n  return Number(String(status).charAt(0) + '00')\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError () {\n  // so much arity going on ~_~\n  var err\n  var msg\n  var status = 500\n  var props = {}\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (arg instanceof Error) {\n      err = arg\n      status = err.status || err.statusCode || status\n      continue\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg\n        break\n      case 'number':\n        status = arg\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)')\n        }\n        break\n      case 'object':\n        props = arg\n        break\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes')\n  }\n\n  if (typeof status !== 'number' ||\n    (!statuses[status] && (status < 400 || status >= 600))) {\n    status = 500\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)]\n\n  if (!err) {\n    // create error\n    err = HttpError\n      ? new HttpError(msg)\n      : new Error(msg || statuses[status])\n    Error.captureStackTrace(err, createError)\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500\n    err.status = err.statusCode = status\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key]\n    }\n  }\n\n  return err\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor () {\n  function HttpError () {\n    throw new TypeError('cannot construct abstract class')\n  }\n\n  inherits(HttpError, Error)\n\n  return HttpError\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ClientError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ClientError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ClientError, HttpError)\n  nameFunc(ClientError, className)\n\n  ClientError.prototype.status = code\n  ClientError.prototype.statusCode = code\n  ClientError.prototype.expose = true\n\n  return ClientError\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor (HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error'\n\n  function ServerError (message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code]\n    var err = new Error(msg)\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError)\n\n    // adjust the [[Prototype]]\n    setPrototypeOf(err, ServerError.prototype)\n\n    // redefine the error message\n    Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    })\n\n    // redefine the error name\n    Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    })\n\n    return err\n  }\n\n  inherits(ServerError, HttpError)\n  nameFunc(ServerError, className)\n\n  ServerError.prototype.status = code\n  ServerError.prototype.statusCode = code\n  ServerError.prototype.expose = false\n\n  return ServerError\n}\n\n/**\n * Set the name of a function, if possible.\n * @private\n */\n\nfunction nameFunc (func, name) {\n  var desc = Object.getOwnPropertyDescriptor(func, 'name')\n\n  if (desc && desc.configurable) {\n    desc.value = name\n    Object.defineProperty(func, 'name', desc)\n  }\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports (exports, codes, HttpError) {\n  codes.forEach(function forEachCode (code) {\n    var CodeError\n    var name = toIdentifier(statuses[code])\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code)\n        break\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code)\n        break\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError\n      exports[name] = CodeError\n    }\n  })\n\n  // backwards-compatibility\n  exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot,\n    '\"I\\'mateapot\"; use \"ImATeapot\" instead')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/http-errors/index.js\n"));

/***/ }),

/***/ "./node_modules/http-errors/node_modules/depd/lib/browser/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/http-errors/node_modules/depd/lib/browser/index.js ***!
  \*************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * depd\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = depd\n\n/**\n * Create deprecate for namespace in caller.\n */\n\nfunction depd (namespace) {\n  if (!namespace) {\n    throw new TypeError('argument namespace is required')\n  }\n\n  function deprecate (message) {\n    // no-op in browser\n  }\n\n  deprecate._file = undefined\n  deprecate._ignored = true\n  deprecate._namespace = namespace\n  deprecate._traced = false\n  deprecate._warned = Object.create(null)\n\n  deprecate.function = wrapfunction\n  deprecate.property = wrapproperty\n\n  return deprecate\n}\n\n/**\n * Return a wrapped function in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapfunction (fn, message) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('argument fn must be a function')\n  }\n\n  return fn\n}\n\n/**\n * Wrap property in a deprecation message.\n *\n * This is a no-op version of the wrapper, which does nothing but call\n * validation.\n */\n\nfunction wrapproperty (obj, prop, message) {\n  if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    throw new TypeError('argument obj must be object')\n  }\n\n  var descriptor = Object.getOwnPropertyDescriptor(obj, prop)\n\n  if (!descriptor) {\n    throw new TypeError('must call property on owner object')\n  }\n\n  if (!descriptor.configurable) {\n    throw new TypeError('property must be configurable')\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHR0cC1lcnJvcnMvbm9kZV9tb2R1bGVzL2RlcGQvbGliL2Jyb3dzZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFWTs7QUFFWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2h0dHAtZXJyb3JzL25vZGVfbW9kdWxlcy9kZXBkL2xpYi9icm93c2VyL2luZGV4LmpzPzBmMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBkZXBkXG4gKiBDb3B5cmlnaHQoYykgMjAxNSBEb3VnbGFzIENocmlzdG9waGVyIFdpbHNvblxuICogTUlUIExpY2Vuc2VkXG4gKi9cblxuJ3VzZSBzdHJpY3QnXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBkZXBkXG5cbi8qKlxuICogQ3JlYXRlIGRlcHJlY2F0ZSBmb3IgbmFtZXNwYWNlIGluIGNhbGxlci5cbiAqL1xuXG5mdW5jdGlvbiBkZXBkIChuYW1lc3BhY2UpIHtcbiAgaWYgKCFuYW1lc3BhY2UpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdhcmd1bWVudCBuYW1lc3BhY2UgaXMgcmVxdWlyZWQnKVxuICB9XG5cbiAgZnVuY3Rpb24gZGVwcmVjYXRlIChtZXNzYWdlKSB7XG4gICAgLy8gbm8tb3AgaW4gYnJvd3NlclxuICB9XG5cbiAgZGVwcmVjYXRlLl9maWxlID0gdW5kZWZpbmVkXG4gIGRlcHJlY2F0ZS5faWdub3JlZCA9IHRydWVcbiAgZGVwcmVjYXRlLl9uYW1lc3BhY2UgPSBuYW1lc3BhY2VcbiAgZGVwcmVjYXRlLl90cmFjZWQgPSBmYWxzZVxuICBkZXByZWNhdGUuX3dhcm5lZCA9IE9iamVjdC5jcmVhdGUobnVsbClcblxuICBkZXByZWNhdGUuZnVuY3Rpb24gPSB3cmFwZnVuY3Rpb25cbiAgZGVwcmVjYXRlLnByb3BlcnR5ID0gd3JhcHByb3BlcnR5XG5cbiAgcmV0dXJuIGRlcHJlY2F0ZVxufVxuXG4vKipcbiAqIFJldHVybiBhIHdyYXBwZWQgZnVuY3Rpb24gaW4gYSBkZXByZWNhdGlvbiBtZXNzYWdlLlxuICpcbiAqIFRoaXMgaXMgYSBuby1vcCB2ZXJzaW9uIG9mIHRoZSB3cmFwcGVyLCB3aGljaCBkb2VzIG5vdGhpbmcgYnV0IGNhbGxcbiAqIHZhbGlkYXRpb24uXG4gKi9cblxuZnVuY3Rpb24gd3JhcGZ1bmN0aW9uIChmbiwgbWVzc2FnZSkge1xuICBpZiAodHlwZW9mIGZuICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgZm4gbXVzdCBiZSBhIGZ1bmN0aW9uJylcbiAgfVxuXG4gIHJldHVybiBmblxufVxuXG4vKipcbiAqIFdyYXAgcHJvcGVydHkgaW4gYSBkZXByZWNhdGlvbiBtZXNzYWdlLlxuICpcbiAqIFRoaXMgaXMgYSBuby1vcCB2ZXJzaW9uIG9mIHRoZSB3cmFwcGVyLCB3aGljaCBkb2VzIG5vdGhpbmcgYnV0IGNhbGxcbiAqIHZhbGlkYXRpb24uXG4gKi9cblxuZnVuY3Rpb24gd3JhcHByb3BlcnR5IChvYmosIHByb3AsIG1lc3NhZ2UpIHtcbiAgaWYgKCFvYmogfHwgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnICYmIHR5cGVvZiBvYmogIT09ICdmdW5jdGlvbicpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignYXJndW1lbnQgb2JqIG11c3QgYmUgb2JqZWN0JylcbiAgfVxuXG4gIHZhciBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIHByb3ApXG5cbiAgaWYgKCFkZXNjcmlwdG9yKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbXVzdCBjYWxsIHByb3BlcnR5IG9uIG93bmVyIG9iamVjdCcpXG4gIH1cblxuICBpZiAoIWRlc2NyaXB0b3IuY29uZmlndXJhYmxlKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigncHJvcGVydHkgbXVzdCBiZSBjb25maWd1cmFibGUnKVxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/http-errors/node_modules/depd/lib/browser/index.js\n"));

/***/ }),

/***/ "./node_modules/http-errors/node_modules/inherits/inherits_browser.js":
/*!****************************************************************************!*\
  !*** ./node_modules/http-errors/node_modules/inherits/inherits_browser.js ***!
  \****************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaHR0cC1lcnJvcnMvbm9kZV9tb2R1bGVzL2luaGVyaXRzL2luaGVyaXRzX2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2h0dHAtZXJyb3JzL25vZGVfbW9kdWxlcy9pbmhlcml0cy9pbmhlcml0c19icm93c2VyLmpzPzI2OTMiXSwic291cmNlc0NvbnRlbnQiOlsiaWYgKHR5cGVvZiBPYmplY3QuY3JlYXRlID09PSAnZnVuY3Rpb24nKSB7XG4gIC8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaW5oZXJpdHMoY3Rvciwgc3VwZXJDdG9yKSB7XG4gICAgY3Rvci5zdXBlcl8gPSBzdXBlckN0b3JcbiAgICBjdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDdG9yLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH07XG59IGVsc2Uge1xuICAvLyBvbGQgc2Nob29sIHNoaW0gZm9yIG9sZCBicm93c2Vyc1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICAgIGN0b3Iuc3VwZXJfID0gc3VwZXJDdG9yXG4gICAgdmFyIFRlbXBDdG9yID0gZnVuY3Rpb24gKCkge31cbiAgICBUZW1wQ3Rvci5wcm90b3R5cGUgPSBzdXBlckN0b3IucHJvdG90eXBlXG4gICAgY3Rvci5wcm90b3R5cGUgPSBuZXcgVGVtcEN0b3IoKVxuICAgIGN0b3IucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gY3RvclxuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/http-errors/node_modules/inherits/inherits_browser.js\n"));

/***/ }),

/***/ "./node_modules/is-my-ip-valid/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-my-ip-valid/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var reIpv4FirstPass = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/\n\nvar reSubnetString = /\\/\\d{1,3}(?=%|$)/\nvar reForwardSlash = /\\//\nvar reZone = /%.*$/\nvar reBadCharacters = /([^0-9a-f:/%])/i\nvar reBadAddress = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/i\n\nfunction validate4 (input) {\n  if (!(reIpv4FirstPass.test(input))) return false\n\n  var parts = input.split('.')\n\n  if (parts.length !== 4) return false\n\n  if (parts[0][0] === '0' && parts[0].length > 1) return false\n  if (parts[1][0] === '0' && parts[1].length > 1) return false\n  if (parts[2][0] === '0' && parts[2].length > 1) return false\n  if (parts[3][0] === '0' && parts[3].length > 1) return false\n\n  var n0 = Number(parts[0])\n  var n1 = Number(parts[1])\n  var n2 = Number(parts[2])\n  var n3 = Number(parts[3])\n\n  return (n0 >= 0 && n0 < 256 && n1 >= 0 && n1 < 256 && n2 >= 0 && n2 < 256 && n3 >= 0 && n3 < 256)\n}\n\nfunction validate6 (input) {\n  var withoutSubnet = input.replace(reSubnetString, '')\n  var hasSubnet = (input.length !== withoutSubnet.length)\n\n  // FIXME: this should probably be an option in the future\n  if (hasSubnet) return false\n\n  if (!hasSubnet) {\n    if (reForwardSlash.test(input)) return false\n  }\n\n  var withoutZone = withoutSubnet.replace(reZone, '')\n  var lastPartSeparator = withoutZone.lastIndexOf(':')\n\n  if (lastPartSeparator === -1) return false\n\n  var lastPart = withoutZone.substring(lastPartSeparator + 1)\n  var hasV4Part = validate4(lastPart)\n  var address = (hasV4Part ? withoutZone.substring(0, lastPartSeparator + 1) + '1234:5678' : withoutZone)\n\n  if (reBadCharacters.test(address)) return false\n  if (reBadAddress.test(address)) return false\n\n  var halves = address.split('::')\n\n  if (halves.length > 2) return false\n\n  if (halves.length === 2) {\n    var first = (halves[0] === '' ? [] : halves[0].split(':'))\n    var last = (halves[1] === '' ? [] : halves[1].split(':'))\n    var remainingLength = 8 - (first.length + last.length)\n\n    if (remainingLength <= 0) return false\n  } else {\n    if (address.split(':').length !== 8) return false\n  }\n\n  return true\n}\n\nfunction validate (input) {\n  return validate4(input) || validate6(input)\n}\n\nmodule.exports = function validator (options) {\n  if (!options) options = {}\n\n  if (options.version === 4) return validate4\n  if (options.version === 6) return validate6\n  if (options.version == null) return validate\n\n  throw new Error('Unknown version: ' + options.version)\n}\n\nmodule.exports.__all_regexes__ = [\n  reIpv4FirstPass,\n  reSubnetString,\n  reForwardSlash,\n  reZone,\n  reBadCharacters,\n  reBadAddress\n]\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtbXktaXAtdmFsaWQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLElBQUksS0FBSyxJQUFJLEtBQUssSUFBSSxLQUFLLElBQUk7O0FBRTFELDJCQUEyQixJQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixHQUFHLEdBQUcsR0FBRzs7QUFFdkM7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSw4QkFBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzLW15LWlwLXZhbGlkL2luZGV4LmpzPzE1NTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHJlSXB2NEZpcnN0UGFzcyA9IC9eXFxkezEsM31cXC5cXGR7MSwzfVxcLlxcZHsxLDN9XFwuXFxkezEsM30kL1xuXG52YXIgcmVTdWJuZXRTdHJpbmcgPSAvXFwvXFxkezEsM30oPz0lfCQpL1xudmFyIHJlRm9yd2FyZFNsYXNoID0gL1xcLy9cbnZhciByZVpvbmUgPSAvJS4qJC9cbnZhciByZUJhZENoYXJhY3RlcnMgPSAvKFteMC05YS1mOi8lXSkvaVxudmFyIHJlQmFkQWRkcmVzcyA9IC8oWzAtOWEtZl17NSx9fDp7Myx9fFteOl06JHxeOlteOl18XFwvJCkvaVxuXG5mdW5jdGlvbiB2YWxpZGF0ZTQgKGlucHV0KSB7XG4gIGlmICghKHJlSXB2NEZpcnN0UGFzcy50ZXN0KGlucHV0KSkpIHJldHVybiBmYWxzZVxuXG4gIHZhciBwYXJ0cyA9IGlucHV0LnNwbGl0KCcuJylcblxuICBpZiAocGFydHMubGVuZ3RoICE9PSA0KSByZXR1cm4gZmFsc2VcblxuICBpZiAocGFydHNbMF1bMF0gPT09ICcwJyAmJiBwYXJ0c1swXS5sZW5ndGggPiAxKSByZXR1cm4gZmFsc2VcbiAgaWYgKHBhcnRzWzFdWzBdID09PSAnMCcgJiYgcGFydHNbMV0ubGVuZ3RoID4gMSkgcmV0dXJuIGZhbHNlXG4gIGlmIChwYXJ0c1syXVswXSA9PT0gJzAnICYmIHBhcnRzWzJdLmxlbmd0aCA+IDEpIHJldHVybiBmYWxzZVxuICBpZiAocGFydHNbM11bMF0gPT09ICcwJyAmJiBwYXJ0c1szXS5sZW5ndGggPiAxKSByZXR1cm4gZmFsc2VcblxuICB2YXIgbjAgPSBOdW1iZXIocGFydHNbMF0pXG4gIHZhciBuMSA9IE51bWJlcihwYXJ0c1sxXSlcbiAgdmFyIG4yID0gTnVtYmVyKHBhcnRzWzJdKVxuICB2YXIgbjMgPSBOdW1iZXIocGFydHNbM10pXG5cbiAgcmV0dXJuIChuMCA+PSAwICYmIG4wIDwgMjU2ICYmIG4xID49IDAgJiYgbjEgPCAyNTYgJiYgbjIgPj0gMCAmJiBuMiA8IDI1NiAmJiBuMyA+PSAwICYmIG4zIDwgMjU2KVxufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZTYgKGlucHV0KSB7XG4gIHZhciB3aXRob3V0U3VibmV0ID0gaW5wdXQucmVwbGFjZShyZVN1Ym5ldFN0cmluZywgJycpXG4gIHZhciBoYXNTdWJuZXQgPSAoaW5wdXQubGVuZ3RoICE9PSB3aXRob3V0U3VibmV0Lmxlbmd0aClcblxuICAvLyBGSVhNRTogdGhpcyBzaG91bGQgcHJvYmFibHkgYmUgYW4gb3B0aW9uIGluIHRoZSBmdXR1cmVcbiAgaWYgKGhhc1N1Ym5ldCkgcmV0dXJuIGZhbHNlXG5cbiAgaWYgKCFoYXNTdWJuZXQpIHtcbiAgICBpZiAocmVGb3J3YXJkU2xhc2gudGVzdChpbnB1dCkpIHJldHVybiBmYWxzZVxuICB9XG5cbiAgdmFyIHdpdGhvdXRab25lID0gd2l0aG91dFN1Ym5ldC5yZXBsYWNlKHJlWm9uZSwgJycpXG4gIHZhciBsYXN0UGFydFNlcGFyYXRvciA9IHdpdGhvdXRab25lLmxhc3RJbmRleE9mKCc6JylcblxuICBpZiAobGFzdFBhcnRTZXBhcmF0b3IgPT09IC0xKSByZXR1cm4gZmFsc2VcblxuICB2YXIgbGFzdFBhcnQgPSB3aXRob3V0Wm9uZS5zdWJzdHJpbmcobGFzdFBhcnRTZXBhcmF0b3IgKyAxKVxuICB2YXIgaGFzVjRQYXJ0ID0gdmFsaWRhdGU0KGxhc3RQYXJ0KVxuICB2YXIgYWRkcmVzcyA9IChoYXNWNFBhcnQgPyB3aXRob3V0Wm9uZS5zdWJzdHJpbmcoMCwgbGFzdFBhcnRTZXBhcmF0b3IgKyAxKSArICcxMjM0OjU2NzgnIDogd2l0aG91dFpvbmUpXG5cbiAgaWYgKHJlQmFkQ2hhcmFjdGVycy50ZXN0KGFkZHJlc3MpKSByZXR1cm4gZmFsc2VcbiAgaWYgKHJlQmFkQWRkcmVzcy50ZXN0KGFkZHJlc3MpKSByZXR1cm4gZmFsc2VcblxuICB2YXIgaGFsdmVzID0gYWRkcmVzcy5zcGxpdCgnOjonKVxuXG4gIGlmIChoYWx2ZXMubGVuZ3RoID4gMikgcmV0dXJuIGZhbHNlXG5cbiAgaWYgKGhhbHZlcy5sZW5ndGggPT09IDIpIHtcbiAgICB2YXIgZmlyc3QgPSAoaGFsdmVzWzBdID09PSAnJyA/IFtdIDogaGFsdmVzWzBdLnNwbGl0KCc6JykpXG4gICAgdmFyIGxhc3QgPSAoaGFsdmVzWzFdID09PSAnJyA/IFtdIDogaGFsdmVzWzFdLnNwbGl0KCc6JykpXG4gICAgdmFyIHJlbWFpbmluZ0xlbmd0aCA9IDggLSAoZmlyc3QubGVuZ3RoICsgbGFzdC5sZW5ndGgpXG5cbiAgICBpZiAocmVtYWluaW5nTGVuZ3RoIDw9IDApIHJldHVybiBmYWxzZVxuICB9IGVsc2Uge1xuICAgIGlmIChhZGRyZXNzLnNwbGl0KCc6JykubGVuZ3RoICE9PSA4KSByZXR1cm4gZmFsc2VcbiAgfVxuXG4gIHJldHVybiB0cnVlXG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlIChpbnB1dCkge1xuICByZXR1cm4gdmFsaWRhdGU0KGlucHV0KSB8fCB2YWxpZGF0ZTYoaW5wdXQpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdmFsaWRhdG9yIChvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykgb3B0aW9ucyA9IHt9XG5cbiAgaWYgKG9wdGlvbnMudmVyc2lvbiA9PT0gNCkgcmV0dXJuIHZhbGlkYXRlNFxuICBpZiAob3B0aW9ucy52ZXJzaW9uID09PSA2KSByZXR1cm4gdmFsaWRhdGU2XG4gIGlmIChvcHRpb25zLnZlcnNpb24gPT0gbnVsbCkgcmV0dXJuIHZhbGlkYXRlXG5cbiAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIHZlcnNpb246ICcgKyBvcHRpb25zLnZlcnNpb24pXG59XG5cbm1vZHVsZS5leHBvcnRzWydfX2FsbF9yZWdleGVzX18nXSA9IFtcbiAgcmVJcHY0Rmlyc3RQYXNzLFxuICByZVN1Ym5ldFN0cmluZyxcbiAgcmVGb3J3YXJkU2xhc2gsXG4gIHJlWm9uZSxcbiAgcmVCYWRDaGFyYWN0ZXJzLFxuICByZUJhZEFkZHJlc3Ncbl1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/is-my-ip-valid/index.js\n"));

/***/ }),

/***/ "./node_modules/is-my-json-valid/formats.js":
/*!**************************************************!*\
  !*** ./node_modules/is-my-json-valid/formats.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var createIpValidator = __webpack_require__(/*! is-my-ip-valid */ \"./node_modules/is-my-ip-valid/index.js\")\n\nvar reEmailWhitespace = /\\s/\nvar reHostnameFirstPass = /^[a-zA-Z0-9.-]+$/\nvar reHostnamePart = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/\nvar rePhoneFirstPass = /^\\+[0-9][0-9 ]{5,27}[0-9]$/\nvar rePhoneDoubleSpace = / {2}/\nvar rePhoneGlobalSpace = / /g\n\nexports[\"date-time\"] = /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}[tT ]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+|)([zZ]|[+-]\\d{2}:\\d{2})$/\nexports.date = /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}$/\nexports.time = /^\\d{2}:\\d{2}:\\d{2}$/\nexports.email = function (input) { return (input.indexOf('@') !== -1) && (!reEmailWhitespace.test(input)) }\nexports[\"ip-address\"] = exports.ipv4 = createIpValidator({ version: 4 })\nexports.ipv6 = createIpValidator({ version: 6 })\nexports.uri = /^[a-zA-Z][a-zA-Z0-9+\\-.]*:[^\\s]*$/\nexports.color = /(#?([0-9A-Fa-f]{3,6})\\b)|(aqua)|(black)|(blue)|(fuchsia)|(gray)|(green)|(lime)|(maroon)|(navy)|(olive)|(orange)|(purple)|(red)|(silver)|(teal)|(white)|(yellow)|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\))/\nexports.hostname = function (input) {\n  if (!(reHostnameFirstPass.test(input))) return false\n\n  var parts = input.split('.')\n\n  for (var i = 0; i < parts.length; i++) {\n    if (!(reHostnamePart.test(parts[i]))) return false\n  }\n\n  return true\n}\nexports.alpha = /^[a-zA-Z]+$/\nexports.alphanumeric = /^[a-zA-Z0-9]+$/\nexports.style = /.:\\s*[^;]/g\nexports.phone = function (input) {\n  if (!(rePhoneFirstPass.test(input))) return false\n  if (rePhoneDoubleSpace.test(input)) return false\n\n  var digits = input.substring(1).replace(rePhoneGlobalSpace, '').length\n\n  return (digits >= 7 && digits <= 15)\n}\nexports[\"utc-millisec\"] = /^[0-9]{1,15}\\.?[0-9]{0,15}$/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaXMtbXktanNvbi12YWxpZC9mb3JtYXRzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHdCQUF3QixtQkFBTyxDQUFDLDhEQUFnQjs7QUFFaEQ7QUFDQTtBQUNBLDREQUE0RCxLQUFLO0FBQ2pFLHVDQUF1QyxLQUFLO0FBQzVDLDRCQUE0QixFQUFFO0FBQzlCOztBQUVBLG9CQUFvQixRQUFRLEVBQUUsV0FBVyxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsdUJBQXVCLEVBQUUsSUFBSSxFQUFFO0FBQ3BILFlBQWUsUUFBUSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFO0FBQzFELFlBQWUsUUFBUSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUU7QUFDckMsYUFBZ0Isc0JBQXNCO0FBQ3RDLHFCQUFxQixHQUFHLFlBQWUsdUJBQXVCLFlBQVk7QUFDMUUsWUFBZSx1QkFBdUIsWUFBWTtBQUNsRCxXQUFjO0FBQ2QsYUFBZ0Isb0JBQW9CLElBQUk7QUFDeEMsZ0JBQW1CO0FBQ25COztBQUVBOztBQUVBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBZ0I7QUFDaEIsb0JBQXVCO0FBQ3ZCLGFBQWdCLFlBQVk7QUFDNUIsYUFBZ0I7QUFDaEI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsdUJBQXVCLFdBQVcsS0FBSyxTQUFTLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2lzLW15LWpzb24tdmFsaWQvZm9ybWF0cy5qcz84YjBjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVJcFZhbGlkYXRvciA9IHJlcXVpcmUoJ2lzLW15LWlwLXZhbGlkJylcblxudmFyIHJlRW1haWxXaGl0ZXNwYWNlID0gL1xccy9cbnZhciByZUhvc3RuYW1lRmlyc3RQYXNzID0gL15bYS16QS1aMC05Li1dKyQvXG52YXIgcmVIb3N0bmFtZVBhcnQgPSAvXihbYS16QS1aMC05XXxbYS16QS1aMC05XVthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKSQvXG52YXIgcmVQaG9uZUZpcnN0UGFzcyA9IC9eXFwrWzAtOV1bMC05IF17NSwyN31bMC05XSQvXG52YXIgcmVQaG9uZURvdWJsZVNwYWNlID0gLyB7Mn0vXG52YXIgcmVQaG9uZUdsb2JhbFNwYWNlID0gLyAvZ1xuXG5leHBvcnRzWydkYXRlLXRpbWUnXSA9IC9eXFxkezR9LSg/OjBbMC05XXsxfXwxWzAtMl17MX0pLVswLTldezJ9W3RUIF1cXGR7Mn06XFxkezJ9OlxcZHsyfSg/OlxcLlxcZCt8KShbelpdfFsrLV1cXGR7Mn06XFxkezJ9KSQvXG5leHBvcnRzWydkYXRlJ10gPSAvXlxcZHs0fS0oPzowWzAtOV17MX18MVswLTJdezF9KS1bMC05XXsyfSQvXG5leHBvcnRzWyd0aW1lJ10gPSAvXlxcZHsyfTpcXGR7Mn06XFxkezJ9JC9cbmV4cG9ydHNbJ2VtYWlsJ10gPSBmdW5jdGlvbiAoaW5wdXQpIHsgcmV0dXJuIChpbnB1dC5pbmRleE9mKCdAJykgIT09IC0xKSAmJiAoIXJlRW1haWxXaGl0ZXNwYWNlLnRlc3QoaW5wdXQpKSB9XG5leHBvcnRzWydpcC1hZGRyZXNzJ10gPSBleHBvcnRzWydpcHY0J10gPSBjcmVhdGVJcFZhbGlkYXRvcih7IHZlcnNpb246IDQgfSlcbmV4cG9ydHNbJ2lwdjYnXSA9IGNyZWF0ZUlwVmFsaWRhdG9yKHsgdmVyc2lvbjogNiB9KVxuZXhwb3J0c1sndXJpJ10gPSAvXlthLXpBLVpdW2EtekEtWjAtOStcXC0uXSo6W15cXHNdKiQvXG5leHBvcnRzWydjb2xvciddID0gLygjPyhbMC05QS1GYS1mXXszLDZ9KVxcYil8KGFxdWEpfChibGFjayl8KGJsdWUpfChmdWNoc2lhKXwoZ3JheSl8KGdyZWVuKXwobGltZSl8KG1hcm9vbil8KG5hdnkpfChvbGl2ZSl8KG9yYW5nZSl8KHB1cnBsZSl8KHJlZCl8KHNpbHZlcil8KHRlYWwpfCh3aGl0ZSl8KHllbGxvdyl8KHJnYlxcKFxccypcXGIoWzAtOV18WzEtOV1bMC05XXwxWzAtOV1bMC05XXwyWzAtNF1bMC05XXwyNVswLTVdKVxcYlxccyosXFxzKlxcYihbMC05XXxbMS05XVswLTldfDFbMC05XVswLTldfDJbMC00XVswLTldfDI1WzAtNV0pXFxiXFxzKixcXHMqXFxiKFswLTldfFsxLTldWzAtOV18MVswLTldWzAtOV18MlswLTRdWzAtOV18MjVbMC01XSlcXGJcXHMqXFwpKXwocmdiXFwoXFxzKihcXGQ/XFxkJXwxMDAlKStcXHMqLFxccyooXFxkP1xcZCV8MTAwJSkrXFxzKixcXHMqKFxcZD9cXGQlfDEwMCUpK1xccypcXCkpL1xuZXhwb3J0c1snaG9zdG5hbWUnXSA9IGZ1bmN0aW9uIChpbnB1dCkge1xuICBpZiAoIShyZUhvc3RuYW1lRmlyc3RQYXNzLnRlc3QoaW5wdXQpKSkgcmV0dXJuIGZhbHNlXG5cbiAgdmFyIHBhcnRzID0gaW5wdXQuc3BsaXQoJy4nKVxuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcGFydHMubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIShyZUhvc3RuYW1lUGFydC50ZXN0KHBhcnRzW2ldKSkpIHJldHVybiBmYWxzZVxuICB9XG5cbiAgcmV0dXJuIHRydWVcbn1cbmV4cG9ydHNbJ2FscGhhJ10gPSAvXlthLXpBLVpdKyQvXG5leHBvcnRzWydhbHBoYW51bWVyaWMnXSA9IC9eW2EtekEtWjAtOV0rJC9cbmV4cG9ydHNbJ3N0eWxlJ10gPSAvLjpcXHMqW147XS9nXG5leHBvcnRzWydwaG9uZSddID0gZnVuY3Rpb24gKGlucHV0KSB7XG4gIGlmICghKHJlUGhvbmVGaXJzdFBhc3MudGVzdChpbnB1dCkpKSByZXR1cm4gZmFsc2VcbiAgaWYgKHJlUGhvbmVEb3VibGVTcGFjZS50ZXN0KGlucHV0KSkgcmV0dXJuIGZhbHNlXG5cbiAgdmFyIGRpZ2l0cyA9IGlucHV0LnN1YnN0cmluZygxKS5yZXBsYWNlKHJlUGhvbmVHbG9iYWxTcGFjZSwgJycpLmxlbmd0aFxuXG4gIHJldHVybiAoZGlnaXRzID49IDcgJiYgZGlnaXRzIDw9IDE1KVxufVxuZXhwb3J0c1sndXRjLW1pbGxpc2VjJ10gPSAvXlswLTldezEsMTV9XFwuP1swLTldezAsMTV9JC9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/is-my-json-valid/formats.js\n"));

/***/ }),

/***/ "./node_modules/is-my-json-valid/index.js":
/*!************************************************!*\
  !*** ./node_modules/is-my-json-valid/index.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var genobj = __webpack_require__(/*! generate-object-property */ \"./node_modules/generate-object-property/index.js\")\nvar genfun = __webpack_require__(/*! generate-function */ \"./node_modules/generate-function/index.js\")\nvar jsonpointer = __webpack_require__(/*! jsonpointer */ \"./node_modules/jsonpointer/jsonpointer.js\")\nvar xtend = __webpack_require__(/*! xtend */ \"./node_modules/xtend/immutable.js\")\nvar formats = __webpack_require__(/*! ./formats */ \"./node_modules/is-my-json-valid/formats.js\")\n\nvar get = function(obj, additionalSchemas, ptr) {\n\n  var visit = function(sub) {\n    if (sub && sub.id === ptr) return sub\n    if (typeof sub !== 'object' || !sub) return null\n    return Object.keys(sub).reduce(function(res, k) {\n      return res || visit(sub[k])\n    }, null)\n  }\n\n  var res = visit(obj)\n  if (res) return res\n\n  ptr = ptr.replace(/^#/, '')\n  ptr = ptr.replace(/\\/$/, '')\n\n  try {\n    return jsonpointer.get(obj, decodeURI(ptr))\n  } catch (err) {\n    var end = ptr.indexOf('#')\n    var other\n    // external reference\n    if (end !== 0) {\n      // fragment doesn't exist.\n      if (end === -1) {\n        other = additionalSchemas[ptr]\n      } else {\n        var ext = ptr.slice(0, end)\n        other = additionalSchemas[ext]\n        var fragment = ptr.slice(end).replace(/^#/, '')\n        try {\n          return jsonpointer.get(other, fragment)\n        } catch (err) {}\n      }\n    } else {\n      other = additionalSchemas[ptr]\n    }\n    return other || null\n  }\n}\n\nvar types = {}\n\ntypes.any = function() {\n  return 'true'\n}\n\ntypes.null = function(name) {\n  return name+' === null'\n}\n\ntypes.boolean = function(name) {\n  return 'typeof '+name+' === \"boolean\"'\n}\n\ntypes.array = function(name) {\n  return 'Array.isArray('+name+')'\n}\n\ntypes.object = function(name) {\n  return 'typeof '+name+' === \"object\" && '+name+' && !Array.isArray('+name+')'\n}\n\ntypes.number = function(name) {\n  return 'typeof '+name+' === \"number\" && isFinite('+name+')'\n}\n\ntypes.integer = function(name) {\n  return 'typeof '+name+' === \"number\" && (Math.floor('+name+') === '+name+' || '+name+' > 9007199254740992 || '+name+' < -9007199254740992)'\n}\n\ntypes.string = function(name) {\n  return 'typeof '+name+' === \"string\"'\n}\n\nvar unique = function(array, len) {\n  len = Math.min(len === -1 ? array.length : len, array.length)\n  var list = []\n  for (var i = 0; i < len; i++) {\n    list.push(typeof array[i] === 'object' ? JSON.stringify(array[i]) : array[i])\n  }\n  for (var i = 1; i < list.length; i++) {\n    if (list.indexOf(list[i]) !== i) return false\n  }\n  return true\n}\n\nvar isMultipleOf = function(name, multipleOf) {\n  var res;\n  var factor = ((multipleOf | 0) !== multipleOf) ? Math.pow(10, multipleOf.toString().split('.').pop().length) : 1\n  if (factor > 1) {\n    var factorName = ((name | 0) !== name) ? Math.pow(10, name.toString().split('.').pop().length) : 1\n    if (factorName > factor) res = true\n    else res = Math.round(factor * name) % (factor * multipleOf)\n  }\n  else res = name % multipleOf;\n  return !res;\n}\n\nvar testLimitedRegex = function (r, s, maxLength) {\n  if (maxLength > -1 && s.length > maxLength) return true\n  return r.test(s)\n}\n\nvar compile = function(schema, cache, root, reporter, opts) {\n  var fmts = opts ? xtend(formats, opts.formats) : formats\n  var scope = {unique:unique, formats:fmts, isMultipleOf:isMultipleOf, testLimitedRegex:testLimitedRegex}\n  var verbose = opts ? !!opts.verbose : false;\n  var greedy = opts && opts.greedy !== undefined ?\n    opts.greedy : false;\n\n  var syms = {}\n  var allocated = []\n  var gensym = function(name) {\n    var res = name+(syms[name] = (syms[name] || 0)+1)\n    allocated.push(res)\n    return res\n  }\n\n  var formatName = function(field) {\n    var s = JSON.stringify(field)\n    try {\n      var pattern = /\\[([^\\[\\]\"]+)\\]/\n      while (pattern.test(s)) s = s.replace(pattern, replacer)\n      return s\n    } catch (_) {\n      return JSON.stringify(field)\n    }\n\n    function replacer (match, v) {\n      if (allocated.indexOf(v) === -1) throw new Error('Unreplaceable')\n      return '.\" + ' + v + ' + \"'\n    }\n  }\n\n  var reversePatterns = {}\n  var patterns = function(p) {\n    if (reversePatterns[p]) return reversePatterns[p]\n    var n = gensym('pattern')\n    scope[n] = new RegExp(p)\n    reversePatterns[p] = n\n    return n\n  }\n\n  var vars = ['i','j','k','l','m','n','o','p','q','r','s','t','u','v','x','y','z']\n  var genloop = function() {\n    var v = vars.shift()\n    vars.push(v+v[0])\n    allocated.push(v)\n    return v\n  }\n\n  var visit = function(name, node, reporter, filter, schemaPath) {\n    var properties = node.properties\n    var type = node.type\n    var tuple = false\n\n    if (Array.isArray(node.items)) { // tuple type\n      properties = {}\n      node.items.forEach(function(item, i) {\n        properties[i] = item\n      })\n      type = 'array'\n      tuple = true\n    }\n\n    var indent = 0\n    var error = function(msg, prop, value) {\n      validate('errors++')\n      if (reporter === true) {\n        validate('if (validate.errors === null) validate.errors = []')\n        if (verbose) {\n          validate(\n            'validate.errors.push({field:%s,message:%s,value:%s,type:%s,schemaPath:%s})',\n            formatName(prop || name),\n            JSON.stringify(msg),\n            value || name,\n            JSON.stringify(type),\n            JSON.stringify(schemaPath)\n          )\n        } else {\n          validate('validate.errors.push({field:%s,message:%s})', formatName(prop || name), JSON.stringify(msg))\n        }\n      }\n    }\n\n    if (node.required === true) {\n      indent++\n      validate('if (%s === undefined) {', name)\n      error('is required')\n      validate('} else {')\n    } else {\n      indent++\n      validate('if (%s !== undefined) {', name)\n    }\n\n    var valid = [].concat(type)\n      .map(function(t) {\n        if (t && !types.hasOwnProperty(t)) {\n          throw new Error('Unknown type: ' + t)\n        }\n\n        return types[t || 'any'](name)\n      })\n      .join(' || ') || 'true'\n\n    if (valid !== 'true') {\n      indent++\n      validate('if (!(%s)) {', valid)\n      error('is the wrong type')\n      validate('} else {')\n    }\n\n    if (tuple) {\n      if (node.additionalItems === false) {\n        validate('if (%s.length > %d) {', name, node.items.length)\n        error('has additional items')\n        validate('}')\n      } else if (node.additionalItems) {\n        var i = genloop()\n        validate('for (var %s = %d; %s < %s.length; %s++) {', i, node.items.length, i, name, i)\n        visit(name+'['+i+']', node.additionalItems, reporter, filter, schemaPath.concat('additionalItems'))\n        validate('}')\n      }\n    }\n\n    if (node.format && fmts[node.format]) {\n      if (type !== 'string' && formats[node.format]) validate('if (%s) {', types.string(name))\n      var n = gensym('format')\n      scope[n] = fmts[node.format]\n\n      if (typeof scope[n] === 'function') validate('if (!%s(%s)) {', n, name)\n      else validate('if (!testLimitedRegex(%s, %s, %d)) {', n, name, typeof node.maxLength === 'undefined' ? -1 : node.maxLength)\n      error('must be '+node.format+' format')\n      validate('}')\n      if (type !== 'string' && formats[node.format]) validate('}')\n    }\n\n    if (Array.isArray(node.required)) {\n      var n = gensym('missing')\n      validate('var %s = 0', n)\n      var checkRequired = function (req) {\n        var prop = genobj(name, req);\n        validate('if (%s === undefined) {', prop)\n        error('is required', prop)\n        validate('%s++', n)\n        validate('}')\n      }\n      validate('if ((%s)) {', type !== 'object' ? types.object(name) : 'true')\n      node.required.map(checkRequired)\n      validate('}');\n      if (!greedy) {\n        validate('if (%s === 0) {', n)\n        indent++\n      }\n    }\n\n    if (node.uniqueItems) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n      validate('if (!(unique(%s, %d))) {', name, node.maxItems || -1)\n      error('must be unique')\n      validate('}')\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.enum) {\n      var complex = node.enum.some(function(e) {\n        return typeof e === 'object'\n      })\n\n      var compare = complex ?\n        function(e) {\n          return 'JSON.stringify('+name+')'+' !== JSON.stringify('+JSON.stringify(e)+')'\n        } :\n        function(e) {\n          return name+' !== '+JSON.stringify(e)\n        }\n\n      validate('if (%s) {', node.enum.map(compare).join(' && ') || 'false')\n      error('must be an enum value')\n      validate('}')\n    }\n\n    if (node.dependencies) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      Object.keys(node.dependencies).forEach(function(key) {\n        var deps = node.dependencies[key]\n        if (typeof deps === 'string') deps = [deps]\n\n        var exists = function(k) {\n          return genobj(name, k) + ' !== undefined'\n        }\n\n        if (Array.isArray(deps)) {\n          validate('if (%s !== undefined && !(%s)) {', genobj(name, key), deps.map(exists).join(' && ') || 'true')\n          error('dependencies not set')\n          validate('}')\n        }\n        if (typeof deps === 'object') {\n          validate('if (%s !== undefined) {', genobj(name, key))\n          visit(name, deps, reporter, filter, schemaPath.concat(['dependencies', key]))\n          validate('}')\n        }\n      })\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.additionalProperties || node.additionalProperties === false) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      var i = genloop()\n      var keys = gensym('keys')\n\n      var toCompare = function(p) {\n        return keys+'['+i+'] !== '+JSON.stringify(p)\n      }\n\n      var toTest = function(p) {\n        return '!'+patterns(p)+'.test('+keys+'['+i+'])'\n      }\n\n      var additionalProp = Object.keys(properties || {}).map(toCompare)\n        .concat(Object.keys(node.patternProperties || {}).map(toTest))\n        .join(' && ') || 'true'\n\n      validate('var %s = Object.keys(%s)', keys, name)\n        ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)\n          ('if (%s) {', additionalProp)\n\n      if (node.additionalProperties === false) {\n        if (filter) validate('delete %s', name+'['+keys+'['+i+']]')\n        error('has additional properties', null, JSON.stringify(name+'.') + ' + ' + keys + '['+i+']')\n      } else {\n        visit(name+'['+keys+'['+i+']]', node.additionalProperties, reporter, filter, schemaPath.concat(['additionalProperties']))\n      }\n\n      validate\n          ('}')\n        ('}')\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.$ref) {\n      var sub = get(root, opts && opts.schemas || {}, node.$ref)\n      if (sub) {\n        var fn = cache[node.$ref]\n        if (!fn) {\n          cache[node.$ref] = function proxy(data) {\n            return fn(data)\n          }\n          fn = compile(sub, cache, root, false, opts)\n        }\n        var n = gensym('ref')\n        scope[n] = fn\n        validate('if (!(%s(%s))) {', n, name)\n        error('referenced schema does not match')\n        validate('}')\n      }\n    }\n\n    if (node.not) {\n      var prev = gensym('prev')\n      validate('var %s = errors', prev)\n      visit(name, node.not, false, filter, schemaPath.concat('not'))\n      validate('if (%s === errors) {', prev)\n      error('negative schema matches')\n      validate('} else {')\n        ('errors = %s', prev)\n      ('}')\n    }\n\n    if (node.items && !tuple) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n\n      var i = genloop()\n      validate('for (var %s = 0; %s < %s.length; %s++) {', i, i, name, i)\n      visit(name+'['+i+']', node.items, reporter, filter, schemaPath.concat('items'))\n      validate('}')\n\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.patternProperties) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n      var keys = gensym('keys')\n      var i = genloop()\n      validate\n        ('var %s = Object.keys(%s)', keys, name)\n        ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)\n\n      Object.keys(node.patternProperties).forEach(function(key) {\n        var p = patterns(key)\n        validate('if (%s.test(%s)) {', p, keys+'['+i+']')\n        visit(name+'['+keys+'['+i+']]', node.patternProperties[key], reporter, filter, schemaPath.concat(['patternProperties', key]))\n        validate('}')\n      })\n\n      validate('}')\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.pattern) {\n      var p = patterns(node.pattern)\n      if (type !== 'string') validate('if (%s) {', types.string(name))\n      validate('if (!(testLimitedRegex(%s, %s, %d))) {', p, name, typeof node.maxLength === 'undefined' ? -1 : node.maxLength)\n      error('pattern mismatch')\n      validate('}')\n      if (type !== 'string') validate('}')\n    }\n\n    if (node.allOf) {\n      node.allOf.forEach(function(sch, key) {\n        visit(name, sch, reporter, filter, schemaPath.concat(['allOf', key]))\n      })\n    }\n\n    if (node.anyOf && node.anyOf.length) {\n      var prev = gensym('prev')\n\n      node.anyOf.forEach(function(sch, i) {\n        if (i === 0) {\n          validate('var %s = errors', prev)\n        } else {\n          validate('if (errors !== %s) {', prev)\n            ('errors = %s', prev)\n        }\n        visit(name, sch, false, false, schemaPath)\n      })\n      node.anyOf.forEach(function(sch, i) {\n        if (i) validate('}')\n      })\n      validate('if (%s !== errors) {', prev)\n      error('no schemas match')\n      validate('}')\n    }\n\n    if (node.oneOf && node.oneOf.length) {\n      var prev = gensym('prev')\n      var passes = gensym('passes')\n\n      validate\n        ('var %s = errors', prev)\n        ('var %s = 0', passes)\n\n      node.oneOf.forEach(function(sch, i) {\n        visit(name, sch, false, false, schemaPath)\n        validate('if (%s === errors) {', prev)\n          ('%s++', passes)\n        ('} else {')\n          ('errors = %s', prev)\n        ('}')\n      })\n\n      validate('if (%s !== 1) {', passes)\n      error('no (or more than one) schemas match')\n      validate('}')\n    }\n\n    if (node.multipleOf !== undefined) {\n      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))\n\n      validate('if (!isMultipleOf(%s, %d)) {', name, node.multipleOf)\n\n      error('has a remainder')\n      validate('}')\n\n      if (type !== 'number' && type !== 'integer') validate('}')\n    }\n\n    if (node.maxProperties !== undefined) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      validate('if (Object.keys(%s).length > %d) {', name, node.maxProperties)\n      error('has more properties than allowed')\n      validate('}')\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.minProperties !== undefined) {\n      if (type !== 'object') validate('if (%s) {', types.object(name))\n\n      validate('if (Object.keys(%s).length < %d) {', name, node.minProperties)\n      error('has less properties than allowed')\n      validate('}')\n\n      if (type !== 'object') validate('}')\n    }\n\n    if (node.maxItems !== undefined) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n\n      validate('if (%s.length > %d) {', name, node.maxItems)\n      error('has more items than allowed')\n      validate('}')\n\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.minItems !== undefined) {\n      if (type !== 'array') validate('if (%s) {', types.array(name))\n\n      validate('if (%s.length < %d) {', name, node.minItems)\n      error('has less items than allowed')\n      validate('}')\n\n      if (type !== 'array') validate('}')\n    }\n\n    if (node.maxLength !== undefined) {\n      if (type !== 'string') validate('if (%s) {', types.string(name))\n\n      validate('if (%s.length > %d) {', name, node.maxLength)\n      error('has longer length than allowed')\n      validate('}')\n\n      if (type !== 'string') validate('}')\n    }\n\n    if (node.minLength !== undefined) {\n      if (type !== 'string') validate('if (%s) {', types.string(name))\n\n      validate('if (%s.length < %d) {', name, node.minLength)\n      error('has less length than allowed')\n      validate('}')\n\n      if (type !== 'string') validate('}')\n    }\n\n    if (node.minimum !== undefined) {\n      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))\n\n      validate('if (%s %s %d) {', name, node.exclusiveMinimum ? '<=' : '<', node.minimum)\n      error('is less than minimum')\n      validate('}')\n\n      if (type !== 'number' && type !== 'integer') validate('}')\n    }\n\n    if (node.maximum !== undefined) {\n      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))\n\n      validate('if (%s %s %d) {', name, node.exclusiveMaximum ? '>=' : '>', node.maximum)\n      error('is more than maximum')\n      validate('}')\n\n      if (type !== 'number' && type !== 'integer') validate('}')\n    }\n\n    if (properties) {\n      Object.keys(properties).forEach(function(p) {\n        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('if (%s !== null) {', name)\n\n        visit(\n          genobj(name, p),\n          properties[p],\n          reporter,\n          filter,\n          schemaPath.concat(tuple ? p : ['properties', p])\n        )\n\n        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('}')\n      })\n    }\n\n    while (indent--) validate('}')\n  }\n\n  var validate = genfun\n    ('function validate(data) {')\n      // Since undefined is not a valid JSON value, we coerce to null and other checks will catch this\n      ('if (data === undefined) data = null')\n      ('validate.errors = null')\n      ('var errors = 0')\n\n  visit('data', schema, reporter, opts && opts.filter, [])\n\n  validate\n      ('return errors === 0')\n    ('}')\n\n  validate = validate.toFunction(scope)\n  validate.errors = null\n\n  if (Object.defineProperty) {\n    Object.defineProperty(validate, 'error', {\n      get: function() {\n        if (!validate.errors) return ''\n        return validate.errors.map(function(err) {\n          return err.field + ' ' + err.message;\n        }).join('\\n')\n      }\n    })\n  }\n\n  validate.toJSON = function() {\n    return schema\n  }\n\n  return validate\n}\n\nmodule.exports = function(schema, opts) {\n  if (typeof schema === 'string') schema = JSON.parse(schema)\n  return compile(schema, {}, schema, true, opts)\n}\n\nmodule.exports.filter = function(schema, opts) {\n  var validate = module.exports(schema, xtend(opts, {filter: true}))\n  return function(sch) {\n    validate(sch)\n    return sch\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/is-my-json-valid/index.js\n"));

/***/ }),

/***/ "./node_modules/is-property/is-property.js":
/*!*************************************************!*\
  !*** ./node_modules/is-property/is-property.js ***!
  \*************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nfunction isProperty(str) {\n  return /^[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc0-9\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19b0-\\u19c0\\u19c8\\u19c9\\u19d0-\\u19d9\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1dc0-\\u1de6\\u1dfc-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua900-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f]*$/.test(str)\n}\nmodule.exports = isProperty//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/is-property/is-property.js\n"));

/***/ }),

/***/ "./node_modules/jsonpointer/jsonpointer.js":
/*!*************************************************!*\
  !*** ./node_modules/jsonpointer/jsonpointer.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanNvbnBvaW50ZXIvanNvbnBvaW50ZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSx3Q0FBd0MsUUFBUTtBQUNoRDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtCQUFrQixRQUFRO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1gsV0FBVztBQUNYLGVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pzb25wb2ludGVyL2pzb25wb2ludGVyLmpzP2UzMzgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhc0V4Y2FwZSA9IC9+L1xudmFyIGVzY2FwZU1hdGNoZXIgPSAvflswMV0vZ1xuZnVuY3Rpb24gZXNjYXBlUmVwbGFjZXIgKG0pIHtcbiAgc3dpdGNoIChtKSB7XG4gICAgY2FzZSAnfjEnOiByZXR1cm4gJy8nXG4gICAgY2FzZSAnfjAnOiByZXR1cm4gJ34nXG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHRpbGRlIGVzY2FwZTogJyArIG0pXG59XG5cbmZ1bmN0aW9uIHVudGlsZGUgKHN0cikge1xuICBpZiAoIWhhc0V4Y2FwZS50ZXN0KHN0cikpIHJldHVybiBzdHJcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKGVzY2FwZU1hdGNoZXIsIGVzY2FwZVJlcGxhY2VyKVxufVxuXG5mdW5jdGlvbiBzZXR0ZXIgKG9iaiwgcG9pbnRlciwgdmFsdWUpIHtcbiAgdmFyIHBhcnRcbiAgdmFyIGhhc05leHRQYXJ0XG5cbiAgZm9yICh2YXIgcCA9IDEsIGxlbiA9IHBvaW50ZXIubGVuZ3RoOyBwIDwgbGVuOykge1xuICAgIGlmIChwb2ludGVyW3BdID09PSAnY29uc3RydWN0b3InIHx8IHBvaW50ZXJbcF0gPT09ICdwcm90b3R5cGUnIHx8IHBvaW50ZXJbcF0gPT09ICdfX3Byb3RvX18nKSByZXR1cm4gb2JqXG5cbiAgICBwYXJ0ID0gdW50aWxkZShwb2ludGVyW3ArK10pXG4gICAgaGFzTmV4dFBhcnQgPSBsZW4gPiBwXG5cbiAgICBpZiAodHlwZW9mIG9ialtwYXJ0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIHN1cHBvcnQgc2V0dGluZyBvZiAvLVxuICAgICAgaWYgKEFycmF5LmlzQXJyYXkob2JqKSAmJiBwYXJ0ID09PSAnLScpIHtcbiAgICAgICAgcGFydCA9IG9iai5sZW5ndGhcbiAgICAgIH1cblxuICAgICAgLy8gc3VwcG9ydCBuZXN0ZWQgb2JqZWN0cy9hcnJheSB3aGVuIHNldHRpbmcgdmFsdWVzXG4gICAgICBpZiAoaGFzTmV4dFBhcnQpIHtcbiAgICAgICAgaWYgKChwb2ludGVyW3BdICE9PSAnJyAmJiBwb2ludGVyW3BdIDwgSW5maW5pdHkpIHx8IHBvaW50ZXJbcF0gPT09ICctJykgb2JqW3BhcnRdID0gW11cbiAgICAgICAgZWxzZSBvYmpbcGFydF0gPSB7fVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghaGFzTmV4dFBhcnQpIGJyZWFrXG4gICAgb2JqID0gb2JqW3BhcnRdXG4gIH1cblxuICB2YXIgb2xkVmFsdWUgPSBvYmpbcGFydF1cbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIGRlbGV0ZSBvYmpbcGFydF1cbiAgZWxzZSBvYmpbcGFydF0gPSB2YWx1ZVxuICByZXR1cm4gb2xkVmFsdWVcbn1cblxuZnVuY3Rpb24gY29tcGlsZVBvaW50ZXIgKHBvaW50ZXIpIHtcbiAgaWYgKHR5cGVvZiBwb2ludGVyID09PSAnc3RyaW5nJykge1xuICAgIHBvaW50ZXIgPSBwb2ludGVyLnNwbGl0KCcvJylcbiAgICBpZiAocG9pbnRlclswXSA9PT0gJycpIHJldHVybiBwb2ludGVyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEpTT04gcG9pbnRlci4nKVxuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkocG9pbnRlcikpIHtcbiAgICBmb3IgKGNvbnN0IHBhcnQgb2YgcG9pbnRlcikge1xuICAgICAgaWYgKHR5cGVvZiBwYXJ0ICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgcGFydCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEpTT04gcG9pbnRlci4gTXVzdCBiZSBvZiB0eXBlIHN0cmluZyBvciBudW1iZXIuJylcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBvaW50ZXJcbiAgfVxuXG4gIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBKU09OIHBvaW50ZXIuJylcbn1cblxuZnVuY3Rpb24gZ2V0IChvYmosIHBvaW50ZXIpIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaW5wdXQgb2JqZWN0LicpXG4gIHBvaW50ZXIgPSBjb21waWxlUG9pbnRlcihwb2ludGVyKVxuICB2YXIgbGVuID0gcG9pbnRlci5sZW5ndGhcbiAgaWYgKGxlbiA9PT0gMSkgcmV0dXJuIG9ialxuXG4gIGZvciAodmFyIHAgPSAxOyBwIDwgbGVuOykge1xuICAgIG9iaiA9IG9ialt1bnRpbGRlKHBvaW50ZXJbcCsrXSldXG4gICAgaWYgKGxlbiA9PT0gcCkgcmV0dXJuIG9ialxuICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHJldHVybiB1bmRlZmluZWRcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXQgKG9iaiwgcG9pbnRlciwgdmFsdWUpIHtcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgaW5wdXQgb2JqZWN0LicpXG4gIHBvaW50ZXIgPSBjb21waWxlUG9pbnRlcihwb2ludGVyKVxuICBpZiAocG9pbnRlci5sZW5ndGggPT09IDApIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBKU09OIHBvaW50ZXIgZm9yIHNldC4nKVxuICByZXR1cm4gc2V0dGVyKG9iaiwgcG9pbnRlciwgdmFsdWUpXG59XG5cbmZ1bmN0aW9uIGNvbXBpbGUgKHBvaW50ZXIpIHtcbiAgdmFyIGNvbXBpbGVkID0gY29tcGlsZVBvaW50ZXIocG9pbnRlcilcbiAgcmV0dXJuIHtcbiAgICBnZXQ6IGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgIHJldHVybiBnZXQob2JqZWN0LCBjb21waWxlZClcbiAgICB9LFxuICAgIHNldDogZnVuY3Rpb24gKG9iamVjdCwgdmFsdWUpIHtcbiAgICAgIHJldHVybiBzZXQob2JqZWN0LCBjb21waWxlZCwgdmFsdWUpXG4gICAgfVxuICB9XG59XG5cbmV4cG9ydHMuZ2V0ID0gZ2V0XG5leHBvcnRzLnNldCA9IHNldFxuZXhwb3J0cy5jb21waWxlID0gY29tcGlsZVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/jsonpointer/jsonpointer.js\n"));

/***/ }),

/***/ "./node_modules/lru_map/dist/lru.js":
/*!******************************************!*\
  !*** ./node_modules/lru_map/dist/lru.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("!function(g,c){ true?c(exports):0}(this,function(g){const c=Symbol(\"newer\"),e=Symbol(\"older\");class n{constructor(a,b){typeof a!==\"number\"&&(b=a,a=0),this.size=0,this.limit=a,this.oldest=this.newest=void 0,this._keymap=new Map(),b&&(this.assign(b),a<1&&(this.limit=this.size))}_markEntryAsUsed(a){if(a===this.newest)return;a[c]&&(a===this.oldest&&(this.oldest=a[c]),a[c][e]=a[e]),a[e]&&(a[e][c]=a[c]),a[c]=void 0,a[e]=this.newest,this.newest&&(this.newest[c]=a),this.newest=a}assign(a){let b,d=this.limit||Number.MAX_VALUE;this._keymap.clear();let m=a[Symbol.iterator]();for(let h=m.next();!h.done;h=m.next()){let f=new l(h.value[0],h.value[1]);this._keymap.set(f.key,f),b?(b[c]=f,f[e]=b):this.oldest=f,b=f;if(d--==0)throw new Error(\"overflow\")}this.newest=b,this.size=this._keymap.size}get(a){var b=this._keymap.get(a);return b?(this._markEntryAsUsed(b),b.value):void 0}set(a,b){var d=this._keymap.get(a);return d?(d.value=b,this._markEntryAsUsed(d),this):(this._keymap.set(a,d=new l(a,b)),this.newest?(this.newest[c]=d,d[e]=this.newest):this.oldest=d,this.newest=d,++this.size,this.size>this.limit&&this.shift(),this)}shift(){var a=this.oldest;if(a)return this.oldest[c]?(this.oldest=this.oldest[c],this.oldest[e]=void 0):(this.oldest=void 0,this.newest=void 0),a[c]=a[e]=void 0,this._keymap.delete(a.key),--this.size,[a.key,a.value]}find(a){let b=this._keymap.get(a);return b?b.value:void 0}has(a){return this._keymap.has(a)}delete(a){var b=this._keymap.get(a);return b?(this._keymap.delete(b.key),b[c]&&b[e]?(b[e][c]=b[c],b[c][e]=b[e]):b[c]?(b[c][e]=void 0,this.oldest=b[c]):b[e]?(b[e][c]=void 0,this.newest=b[e]):this.oldest=this.newest=void 0,this.size--,b.value):void 0}clear(){this.oldest=this.newest=void 0,this.size=0,this._keymap.clear()}keys(){return new j(this.oldest)}values(){return new k(this.oldest)}entries(){return this}[Symbol.iterator](){return new i(this.oldest)}forEach(a,b){typeof b!==\"object\"&&(b=this);let d=this.oldest;for(;d;)a.call(b,d.value,d.key,this),d=d[c]}toJSON(){for(var a=new Array(this.size),b=0,d=this.oldest;d;)a[b++]={key:d.key,value:d.value},d=d[c];return a}toString(){for(var a=\"\",b=this.oldest;b;)a+=String(b.key)+\":\"+b.value,b=b[c],b&&(a+=\" < \");return a}}g.LRUMap=n;function l(a,b){this.key=a,this.value=b,this[c]=void 0,this[e]=void 0}function i(a){this.entry=a}i.prototype[Symbol.iterator]=function(){return this},i.prototype.next=function(){let a=this.entry;return a?(this.entry=a[c],{done:!1,value:[a.key,a.value]}):{done:!0,value:void 0}};function j(a){this.entry=a}j.prototype[Symbol.iterator]=function(){return this},j.prototype.next=function(){let a=this.entry;return a?(this.entry=a[c],{done:!1,value:a.key}):{done:!0,value:void 0}};function k(a){this.entry=a}k.prototype[Symbol.iterator]=function(){return this},k.prototype.next=function(){let a=this.entry;return a?(this.entry=a[c],{done:!1,value:a.value}):{done:!0,value:void 0}}});\n//# sourceMappingURL=lru.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbHJ1X21hcC9kaXN0L2xydS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxlQUFlLEtBQW9ELFlBQVksQ0FBZ0csQ0FBQyxrQkFBa0IsMENBQTBDLFFBQVEsaUJBQWlCLDhKQUE4SixvQkFBb0IsMEJBQTBCLHlKQUF5SixVQUFVLHFDQUFxQyxxQkFBcUIsMkJBQTJCLG1CQUFtQixRQUFRLFlBQVksbUNBQW1DLDhEQUE4RCxzQ0FBc0MsMENBQTBDLE9BQU8sMEJBQTBCLG1EQUFtRCxTQUFTLDBCQUEwQixzTkFBc04sUUFBUSxrQkFBa0IsOExBQThMLFFBQVEsMEJBQTBCLHdCQUF3QixPQUFPLDJCQUEyQixVQUFVLDBCQUEwQixxTkFBcU4sUUFBUSxnRUFBZ0UsT0FBTywwQkFBMEIsU0FBUywwQkFBMEIsVUFBVSxZQUFZLG9CQUFvQiwwQkFBMEIsYUFBYSw4QkFBOEIsa0JBQWtCLEtBQUssRUFBRSxxQ0FBcUMsU0FBUyxpREFBaUQsRUFBRSxTQUFTLHdCQUF3QixRQUFRLFNBQVMsV0FBVywyQkFBMkIsRUFBRSxtREFBbUQsVUFBVSxXQUFXLGdCQUFnQixzREFBc0QsY0FBYyxhQUFhLHdDQUF3QyxZQUFZLDZCQUE2QixpQkFBaUIsMkJBQTJCLDhCQUE4QixHQUFHLHVCQUF1QixjQUFjLGFBQWEsd0NBQXdDLFlBQVksNkJBQTZCLGlCQUFpQiwyQkFBMkIsb0JBQW9CLEdBQUcsdUJBQXVCLGNBQWMsYUFBYSx3Q0FBd0MsWUFBWSw2QkFBNkIsaUJBQWlCLDJCQUEyQixzQkFBc0IsR0FBRyx1QkFBdUI7QUFDdDlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9scnVfbWFwL2Rpc3QvbHJ1LmpzP2YyYzgiXSwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKGcsYyl7dHlwZW9mIGV4cG9ydHM9PVwib2JqZWN0XCImJnR5cGVvZiBtb2R1bGUhPVwidW5kZWZpbmVkXCI/YyhleHBvcnRzKTp0eXBlb2YgZGVmaW5lPT1cImZ1bmN0aW9uXCImJmRlZmluZS5hbWQ/ZGVmaW5lKFtcImV4cG9ydHNcIl0sYyk6YygoZz1nfHxzZWxmKS5scnVfbWFwPWcubHJ1X21hcHx8e30pfSh0aGlzLGZ1bmN0aW9uKGcpe2NvbnN0IGM9U3ltYm9sKFwibmV3ZXJcIiksZT1TeW1ib2woXCJvbGRlclwiKTtjbGFzcyBue2NvbnN0cnVjdG9yKGEsYil7dHlwZW9mIGEhPT1cIm51bWJlclwiJiYoYj1hLGE9MCksdGhpcy5zaXplPTAsdGhpcy5saW1pdD1hLHRoaXMub2xkZXN0PXRoaXMubmV3ZXN0PXZvaWQgMCx0aGlzLl9rZXltYXA9bmV3IE1hcCgpLGImJih0aGlzLmFzc2lnbihiKSxhPDEmJih0aGlzLmxpbWl0PXRoaXMuc2l6ZSkpfV9tYXJrRW50cnlBc1VzZWQoYSl7aWYoYT09PXRoaXMubmV3ZXN0KXJldHVybjthW2NdJiYoYT09PXRoaXMub2xkZXN0JiYodGhpcy5vbGRlc3Q9YVtjXSksYVtjXVtlXT1hW2VdKSxhW2VdJiYoYVtlXVtjXT1hW2NdKSxhW2NdPXZvaWQgMCxhW2VdPXRoaXMubmV3ZXN0LHRoaXMubmV3ZXN0JiYodGhpcy5uZXdlc3RbY109YSksdGhpcy5uZXdlc3Q9YX1hc3NpZ24oYSl7bGV0IGIsZD10aGlzLmxpbWl0fHxOdW1iZXIuTUFYX1ZBTFVFO3RoaXMuX2tleW1hcC5jbGVhcigpO2xldCBtPWFbU3ltYm9sLml0ZXJhdG9yXSgpO2ZvcihsZXQgaD1tLm5leHQoKTshaC5kb25lO2g9bS5uZXh0KCkpe2xldCBmPW5ldyBsKGgudmFsdWVbMF0saC52YWx1ZVsxXSk7dGhpcy5fa2V5bWFwLnNldChmLmtleSxmKSxiPyhiW2NdPWYsZltlXT1iKTp0aGlzLm9sZGVzdD1mLGI9ZjtpZihkLS09PTApdGhyb3cgbmV3IEVycm9yKFwib3ZlcmZsb3dcIil9dGhpcy5uZXdlc3Q9Yix0aGlzLnNpemU9dGhpcy5fa2V5bWFwLnNpemV9Z2V0KGEpe3ZhciBiPXRoaXMuX2tleW1hcC5nZXQoYSk7cmV0dXJuIGI/KHRoaXMuX21hcmtFbnRyeUFzVXNlZChiKSxiLnZhbHVlKTp2b2lkIDB9c2V0KGEsYil7dmFyIGQ9dGhpcy5fa2V5bWFwLmdldChhKTtyZXR1cm4gZD8oZC52YWx1ZT1iLHRoaXMuX21hcmtFbnRyeUFzVXNlZChkKSx0aGlzKToodGhpcy5fa2V5bWFwLnNldChhLGQ9bmV3IGwoYSxiKSksdGhpcy5uZXdlc3Q/KHRoaXMubmV3ZXN0W2NdPWQsZFtlXT10aGlzLm5ld2VzdCk6dGhpcy5vbGRlc3Q9ZCx0aGlzLm5ld2VzdD1kLCsrdGhpcy5zaXplLHRoaXMuc2l6ZT50aGlzLmxpbWl0JiZ0aGlzLnNoaWZ0KCksdGhpcyl9c2hpZnQoKXt2YXIgYT10aGlzLm9sZGVzdDtpZihhKXJldHVybiB0aGlzLm9sZGVzdFtjXT8odGhpcy5vbGRlc3Q9dGhpcy5vbGRlc3RbY10sdGhpcy5vbGRlc3RbZV09dm9pZCAwKToodGhpcy5vbGRlc3Q9dm9pZCAwLHRoaXMubmV3ZXN0PXZvaWQgMCksYVtjXT1hW2VdPXZvaWQgMCx0aGlzLl9rZXltYXAuZGVsZXRlKGEua2V5KSwtLXRoaXMuc2l6ZSxbYS5rZXksYS52YWx1ZV19ZmluZChhKXtsZXQgYj10aGlzLl9rZXltYXAuZ2V0KGEpO3JldHVybiBiP2IudmFsdWU6dm9pZCAwfWhhcyhhKXtyZXR1cm4gdGhpcy5fa2V5bWFwLmhhcyhhKX1kZWxldGUoYSl7dmFyIGI9dGhpcy5fa2V5bWFwLmdldChhKTtyZXR1cm4gYj8odGhpcy5fa2V5bWFwLmRlbGV0ZShiLmtleSksYltjXSYmYltlXT8oYltlXVtjXT1iW2NdLGJbY11bZV09YltlXSk6YltjXT8oYltjXVtlXT12b2lkIDAsdGhpcy5vbGRlc3Q9YltjXSk6YltlXT8oYltlXVtjXT12b2lkIDAsdGhpcy5uZXdlc3Q9YltlXSk6dGhpcy5vbGRlc3Q9dGhpcy5uZXdlc3Q9dm9pZCAwLHRoaXMuc2l6ZS0tLGIudmFsdWUpOnZvaWQgMH1jbGVhcigpe3RoaXMub2xkZXN0PXRoaXMubmV3ZXN0PXZvaWQgMCx0aGlzLnNpemU9MCx0aGlzLl9rZXltYXAuY2xlYXIoKX1rZXlzKCl7cmV0dXJuIG5ldyBqKHRoaXMub2xkZXN0KX12YWx1ZXMoKXtyZXR1cm4gbmV3IGsodGhpcy5vbGRlc3QpfWVudHJpZXMoKXtyZXR1cm4gdGhpc31bU3ltYm9sLml0ZXJhdG9yXSgpe3JldHVybiBuZXcgaSh0aGlzLm9sZGVzdCl9Zm9yRWFjaChhLGIpe3R5cGVvZiBiIT09XCJvYmplY3RcIiYmKGI9dGhpcyk7bGV0IGQ9dGhpcy5vbGRlc3Q7Zm9yKDtkOylhLmNhbGwoYixkLnZhbHVlLGQua2V5LHRoaXMpLGQ9ZFtjXX10b0pTT04oKXtmb3IodmFyIGE9bmV3IEFycmF5KHRoaXMuc2l6ZSksYj0wLGQ9dGhpcy5vbGRlc3Q7ZDspYVtiKytdPXtrZXk6ZC5rZXksdmFsdWU6ZC52YWx1ZX0sZD1kW2NdO3JldHVybiBhfXRvU3RyaW5nKCl7Zm9yKHZhciBhPVwiXCIsYj10aGlzLm9sZGVzdDtiOylhKz1TdHJpbmcoYi5rZXkpK1wiOlwiK2IudmFsdWUsYj1iW2NdLGImJihhKz1cIiA8IFwiKTtyZXR1cm4gYX19Zy5MUlVNYXA9bjtmdW5jdGlvbiBsKGEsYil7dGhpcy5rZXk9YSx0aGlzLnZhbHVlPWIsdGhpc1tjXT12b2lkIDAsdGhpc1tlXT12b2lkIDB9ZnVuY3Rpb24gaShhKXt0aGlzLmVudHJ5PWF9aS5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxpLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7bGV0IGE9dGhpcy5lbnRyeTtyZXR1cm4gYT8odGhpcy5lbnRyeT1hW2NdLHtkb25lOiExLHZhbHVlOlthLmtleSxhLnZhbHVlXX0pOntkb25lOiEwLHZhbHVlOnZvaWQgMH19O2Z1bmN0aW9uIGooYSl7dGhpcy5lbnRyeT1hfWoucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sai5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe2xldCBhPXRoaXMuZW50cnk7cmV0dXJuIGE/KHRoaXMuZW50cnk9YVtjXSx7ZG9uZTohMSx2YWx1ZTphLmtleX0pOntkb25lOiEwLHZhbHVlOnZvaWQgMH19O2Z1bmN0aW9uIGsoYSl7dGhpcy5lbnRyeT1hfWsucHJvdG90eXBlW1N5bWJvbC5pdGVyYXRvcl09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30say5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe2xldCBhPXRoaXMuZW50cnk7cmV0dXJuIGE/KHRoaXMuZW50cnk9YVtjXSx7ZG9uZTohMSx2YWx1ZTphLnZhbHVlfSk6e2RvbmU6ITAsdmFsdWU6dm9pZCAwfX19KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxydS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/lru_map/dist/lru.js\n"));

/***/ }),

/***/ "./node_modules/mustache/mustache.js":
/*!*******************************************!*\
  !*** ./node_modules/mustache/mustache.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// This file has been generated from mustache.mjs\n(function (global, factory) {\n   true ? module.exports = factory() :\n  0;\n}(this, (function () { 'use strict';\n\n  /*!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js\n   */\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.templateCache = {\n      _cache: {},\n      set: function set (key, value) {\n        this._cache[key] = value;\n      },\n      get: function get (key) {\n        return this._cache[key];\n      },\n      clear: function clear () {\n        this._cache = {};\n      }\n    };\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    if (typeof this.templateCache !== 'undefined') {\n      this.templateCache.clear();\n    }\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.templateCache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var isCacheEnabled = typeof cache !== 'undefined';\n    var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;\n\n    if (tokens == undefined) {\n      tokens = parseTemplate(template, tags);\n      isCacheEnabled && cache.set(cacheKey, tokens);\n    }\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view, undefined);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  var mustache = {\n    name: 'mustache.js',\n    version: '4.0.0',\n    tags: [ '{{', '}}' ],\n    clearCache: undefined,\n    escape: undefined,\n    parse: undefined,\n    render: undefined,\n    Scanner: undefined,\n    Context: undefined,\n    Writer: undefined,\n    /**\n     * Allows a user to override the default caching strategy, by providing an\n     * object with set, get and clear methods. This can also be used to disable\n     * the cache by setting it to the literal `undefined`.\n     */\n    set templateCache (cache) {\n      defaultWriter.templateCache = cache;\n    },\n    /**\n     * Gets the default or overridden caching object from the default writer.\n     */\n    get templateCache () {\n      return defaultWriter.templateCache;\n    }\n  };\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/mustache/mustache.js\n"));

/***/ }),

/***/ "./node_modules/near-abi/lib/index.js":
/*!********************************************!*\
  !*** ./node_modules/near-abi/lib/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AbiSerializationType = exports.AbiFunctionModifier = exports.AbiFunctionKind = exports.SCHEMA_VERSION = void 0;\nexports.SCHEMA_VERSION = \"0.3.0\";\n/**\n * Function kind regulates whether this function's invocation requires a transaction (so-called\n * call functions) or not (view functions).\n */\nvar AbiFunctionKind;\n(function (AbiFunctionKind) {\n    AbiFunctionKind[\"View\"] = \"view\";\n    AbiFunctionKind[\"Call\"] = \"call\";\n})(AbiFunctionKind = exports.AbiFunctionKind || (exports.AbiFunctionKind = {}));\n/** Function can have multiple modifiers that can change its semantics. */\nvar AbiFunctionModifier;\n(function (AbiFunctionModifier) {\n    /** Init functions can be used to initialize the state of the contract. */\n    AbiFunctionModifier[\"Init\"] = \"init\";\n    /**\n     * Private functions can only be called from the contract containing them. Usually, when a\n     * contract has to have a callback for a remote cross-contract call, this callback method\n     * should only be called by the contract itself.\n     */\n    AbiFunctionModifier[\"Private\"] = \"private\";\n    /** Payable functions can accept token transfer together with the function call.\n     * This is done so that contracts can define a fee in tokens that needs to be payed when\n     * they are used.\n     */\n    AbiFunctionModifier[\"Payable\"] = \"payable\";\n})(AbiFunctionModifier = exports.AbiFunctionModifier || (exports.AbiFunctionModifier = {}));\n/** Supported serialization formats. */\nvar AbiSerializationType;\n(function (AbiSerializationType) {\n    AbiSerializationType[\"Json\"] = \"json\";\n    AbiSerializationType[\"Borsh\"] = \"borsh\";\n})(AbiSerializationType = exports.AbiSerializationType || (exports.AbiSerializationType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hYmkvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLDJCQUEyQixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQjtBQUM3RyxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0RBQWdELHVCQUF1QixLQUFLO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3REFBd0QsMkJBQTJCLEtBQUs7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFiaS9saWIvaW5kZXguanM/ZjYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWJpU2VyaWFsaXphdGlvblR5cGUgPSBleHBvcnRzLkFiaUZ1bmN0aW9uTW9kaWZpZXIgPSBleHBvcnRzLkFiaUZ1bmN0aW9uS2luZCA9IGV4cG9ydHMuU0NIRU1BX1ZFUlNJT04gPSB2b2lkIDA7XG5leHBvcnRzLlNDSEVNQV9WRVJTSU9OID0gXCIwLjMuMFwiO1xuLyoqXG4gKiBGdW5jdGlvbiBraW5kIHJlZ3VsYXRlcyB3aGV0aGVyIHRoaXMgZnVuY3Rpb24ncyBpbnZvY2F0aW9uIHJlcXVpcmVzIGEgdHJhbnNhY3Rpb24gKHNvLWNhbGxlZFxuICogY2FsbCBmdW5jdGlvbnMpIG9yIG5vdCAodmlldyBmdW5jdGlvbnMpLlxuICovXG52YXIgQWJpRnVuY3Rpb25LaW5kO1xuKGZ1bmN0aW9uIChBYmlGdW5jdGlvbktpbmQpIHtcbiAgICBBYmlGdW5jdGlvbktpbmRbXCJWaWV3XCJdID0gXCJ2aWV3XCI7XG4gICAgQWJpRnVuY3Rpb25LaW5kW1wiQ2FsbFwiXSA9IFwiY2FsbFwiO1xufSkoQWJpRnVuY3Rpb25LaW5kID0gZXhwb3J0cy5BYmlGdW5jdGlvbktpbmQgfHwgKGV4cG9ydHMuQWJpRnVuY3Rpb25LaW5kID0ge30pKTtcbi8qKiBGdW5jdGlvbiBjYW4gaGF2ZSBtdWx0aXBsZSBtb2RpZmllcnMgdGhhdCBjYW4gY2hhbmdlIGl0cyBzZW1hbnRpY3MuICovXG52YXIgQWJpRnVuY3Rpb25Nb2RpZmllcjtcbihmdW5jdGlvbiAoQWJpRnVuY3Rpb25Nb2RpZmllcikge1xuICAgIC8qKiBJbml0IGZ1bmN0aW9ucyBjYW4gYmUgdXNlZCB0byBpbml0aWFsaXplIHRoZSBzdGF0ZSBvZiB0aGUgY29udHJhY3QuICovXG4gICAgQWJpRnVuY3Rpb25Nb2RpZmllcltcIkluaXRcIl0gPSBcImluaXRcIjtcbiAgICAvKipcbiAgICAgKiBQcml2YXRlIGZ1bmN0aW9ucyBjYW4gb25seSBiZSBjYWxsZWQgZnJvbSB0aGUgY29udHJhY3QgY29udGFpbmluZyB0aGVtLiBVc3VhbGx5LCB3aGVuIGFcbiAgICAgKiBjb250cmFjdCBoYXMgdG8gaGF2ZSBhIGNhbGxiYWNrIGZvciBhIHJlbW90ZSBjcm9zcy1jb250cmFjdCBjYWxsLCB0aGlzIGNhbGxiYWNrIG1ldGhvZFxuICAgICAqIHNob3VsZCBvbmx5IGJlIGNhbGxlZCBieSB0aGUgY29udHJhY3QgaXRzZWxmLlxuICAgICAqL1xuICAgIEFiaUZ1bmN0aW9uTW9kaWZpZXJbXCJQcml2YXRlXCJdID0gXCJwcml2YXRlXCI7XG4gICAgLyoqIFBheWFibGUgZnVuY3Rpb25zIGNhbiBhY2NlcHQgdG9rZW4gdHJhbnNmZXIgdG9nZXRoZXIgd2l0aCB0aGUgZnVuY3Rpb24gY2FsbC5cbiAgICAgKiBUaGlzIGlzIGRvbmUgc28gdGhhdCBjb250cmFjdHMgY2FuIGRlZmluZSBhIGZlZSBpbiB0b2tlbnMgdGhhdCBuZWVkcyB0byBiZSBwYXllZCB3aGVuXG4gICAgICogdGhleSBhcmUgdXNlZC5cbiAgICAgKi9cbiAgICBBYmlGdW5jdGlvbk1vZGlmaWVyW1wiUGF5YWJsZVwiXSA9IFwicGF5YWJsZVwiO1xufSkoQWJpRnVuY3Rpb25Nb2RpZmllciA9IGV4cG9ydHMuQWJpRnVuY3Rpb25Nb2RpZmllciB8fCAoZXhwb3J0cy5BYmlGdW5jdGlvbk1vZGlmaWVyID0ge30pKTtcbi8qKiBTdXBwb3J0ZWQgc2VyaWFsaXphdGlvbiBmb3JtYXRzLiAqL1xudmFyIEFiaVNlcmlhbGl6YXRpb25UeXBlO1xuKGZ1bmN0aW9uIChBYmlTZXJpYWxpemF0aW9uVHlwZSkge1xuICAgIEFiaVNlcmlhbGl6YXRpb25UeXBlW1wiSnNvblwiXSA9IFwianNvblwiO1xuICAgIEFiaVNlcmlhbGl6YXRpb25UeXBlW1wiQm9yc2hcIl0gPSBcImJvcnNoXCI7XG59KShBYmlTZXJpYWxpemF0aW9uVHlwZSA9IGV4cG9ydHMuQWJpU2VyaWFsaXphdGlvblR5cGUgfHwgKGV4cG9ydHMuQWJpU2VyaWFsaXphdGlvblR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-abi/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/account.js":
/*!*************************************************!*\
  !*** ./node_modules/near-api-js/lib/account.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account = void 0;\nvar accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nObject.defineProperty(exports, \"Account\", ({ enumerable: true, get: function () { return accounts_1.Account; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2FjY291bnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFtQjtBQUM1QywyQ0FBMEMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9hY2NvdW50LmpzPzEzNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjY291bnQgPSB2b2lkIDA7XG52YXIgYWNjb3VudHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9hY2NvdW50c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRzXzEuQWNjb3VudDsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/account.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/account_creator.js":
/*!*********************************************************!*\
  !*** ./node_modules/near-api-js/lib/account_creator.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UrlAccountCreator = exports.LocalAccountCreator = exports.AccountCreator = void 0;\nvar accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nObject.defineProperty(exports, \"AccountCreator\", ({ enumerable: true, get: function () { return accounts_1.AccountCreator; } }));\nObject.defineProperty(exports, \"LocalAccountCreator\", ({ enumerable: true, get: function () { return accounts_1.LocalAccountCreator; } }));\nObject.defineProperty(exports, \"UrlAccountCreator\", ({ enumerable: true, get: function () { return accounts_1.UrlAccountCreator; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2FjY291bnRfY3JlYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0I7QUFDaEYsaUJBQWlCLG1CQUFPLENBQUMsd0VBQW1CO0FBQzVDLGtEQUFpRCxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM5SCx1REFBc0QsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDeEkscURBQW9ELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvYWNjb3VudF9jcmVhdG9yLmpzPzJlMDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlVybEFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5Mb2NhbEFjY291bnRDcmVhdG9yID0gZXhwb3J0cy5BY2NvdW50Q3JlYXRvciA9IHZvaWQgMDtcbnZhciBhY2NvdW50c18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2FjY291bnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudENyZWF0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRzXzEuQWNjb3VudENyZWF0b3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMb2NhbEFjY291bnRDcmVhdG9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLkxvY2FsQWNjb3VudENyZWF0b3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVcmxBY2NvdW50Q3JlYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5VcmxBY2NvdW50Q3JlYXRvcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/account_creator.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/account_multisig.js":
/*!**********************************************************!*\
  !*** ./node_modules/near-api-js/lib/account_multisig.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultisigStateStatus = exports.MultisigDeleteRequestRejectionError = exports.MULTISIG_CONFIRM_METHODS = exports.MULTISIG_CHANGE_METHODS = exports.MULTISIG_DEPOSIT = exports.MULTISIG_GAS = exports.MULTISIG_ALLOWANCE = exports.MULTISIG_STORAGE_KEY = exports.AccountMultisig = exports.Account2FA = void 0;\nvar accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nObject.defineProperty(exports, \"Account2FA\", ({ enumerable: true, get: function () { return accounts_1.Account2FA; } }));\nObject.defineProperty(exports, \"AccountMultisig\", ({ enumerable: true, get: function () { return accounts_1.AccountMultisig; } }));\nObject.defineProperty(exports, \"MULTISIG_STORAGE_KEY\", ({ enumerable: true, get: function () { return accounts_1.MULTISIG_STORAGE_KEY; } }));\nObject.defineProperty(exports, \"MULTISIG_ALLOWANCE\", ({ enumerable: true, get: function () { return accounts_1.MULTISIG_ALLOWANCE; } }));\nObject.defineProperty(exports, \"MULTISIG_GAS\", ({ enumerable: true, get: function () { return accounts_1.MULTISIG_GAS; } }));\nObject.defineProperty(exports, \"MULTISIG_DEPOSIT\", ({ enumerable: true, get: function () { return accounts_1.MULTISIG_DEPOSIT; } }));\nObject.defineProperty(exports, \"MULTISIG_CHANGE_METHODS\", ({ enumerable: true, get: function () { return accounts_1.MULTISIG_CHANGE_METHODS; } }));\nObject.defineProperty(exports, \"MULTISIG_CONFIRM_METHODS\", ({ enumerable: true, get: function () { return accounts_1.MULTISIG_CONFIRM_METHODS; } }));\nObject.defineProperty(exports, \"MultisigDeleteRequestRejectionError\", ({ enumerable: true, get: function () { return accounts_1.MultisigDeleteRequestRejectionError; } }));\nObject.defineProperty(exports, \"MultisigStateStatus\", ({ enumerable: true, get: function () { return accounts_1.MultisigStateStatus; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2FjY291bnRfbXVsdGlzaWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsMkNBQTJDLEdBQUcsZ0NBQWdDLEdBQUcsK0JBQStCLEdBQUcsd0JBQXdCLEdBQUcsb0JBQW9CLEdBQUcsMEJBQTBCLEdBQUcsNEJBQTRCLEdBQUcsdUJBQXVCLEdBQUcsa0JBQWtCO0FBQzNTLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFtQjtBQUM1Qyw4Q0FBNkMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdEgsbURBQWtELEVBQUUscUNBQXFDLHNDQUFzQyxFQUFDO0FBQ2hJLHdEQUF1RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUMxSSxzREFBcUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdEksZ0RBQStDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQzFILG9EQUFtRCxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUNsSSwyREFBMEQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDaEosNERBQTJELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ2xKLHVFQUFzRSxFQUFFLHFDQUFxQywwREFBMEQsRUFBQztBQUN4Syx1REFBc0QsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9hY2NvdW50X211bHRpc2lnLmpzPzZkMGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk11bHRpc2lnU3RhdGVTdGF0dXMgPSBleHBvcnRzLk11bHRpc2lnRGVsZXRlUmVxdWVzdFJlamVjdGlvbkVycm9yID0gZXhwb3J0cy5NVUxUSVNJR19DT05GSVJNX01FVEhPRFMgPSBleHBvcnRzLk1VTFRJU0lHX0NIQU5HRV9NRVRIT0RTID0gZXhwb3J0cy5NVUxUSVNJR19ERVBPU0lUID0gZXhwb3J0cy5NVUxUSVNJR19HQVMgPSBleHBvcnRzLk1VTFRJU0lHX0FMTE9XQU5DRSA9IGV4cG9ydHMuTVVMVElTSUdfU1RPUkFHRV9LRVkgPSBleHBvcnRzLkFjY291bnRNdWx0aXNpZyA9IGV4cG9ydHMuQWNjb3VudDJGQSA9IHZvaWQgMDtcbnZhciBhY2NvdW50c18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2FjY291bnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudDJGQVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5BY2NvdW50MkZBOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjb3VudE11bHRpc2lnXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLkFjY291bnRNdWx0aXNpZzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX1NUT1JBR0VfS0VZXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLk1VTFRJU0lHX1NUT1JBR0VfS0VZOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTVVMVElTSUdfQUxMT1dBTkNFXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLk1VTFRJU0lHX0FMTE9XQU5DRTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX0dBU1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5NVUxUSVNJR19HQVM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19ERVBPU0lUXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLk1VTFRJU0lHX0RFUE9TSVQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNVUxUSVNJR19DSEFOR0VfTUVUSE9EU1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5NVUxUSVNJR19DSEFOR0VfTUVUSE9EUzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk1VTFRJU0lHX0NPTkZJUk1fTUVUSE9EU1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5NVUxUSVNJR19DT05GSVJNX01FVEhPRFM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5NdWx0aXNpZ0RlbGV0ZVJlcXVlc3RSZWplY3Rpb25FcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpc2lnU3RhdGVTdGF0dXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRzXzEuTXVsdGlzaWdTdGF0ZVN0YXR1czsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/account_multisig.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/browser-connect.js":
/*!*********************************************************!*\
  !*** ./node_modules/near-api-js/lib/browser-connect.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.connect = void 0;\n/**\n * Connect to NEAR using the provided configuration.\n *\n * {@link ConnectConfig#networkId} and {@link ConnectConfig#nodeUrl} are required.\n *\n * To sign transactions you can also pass: {@link ConnectConfig#keyStore}\n *\n * Both are passed they are prioritize in that order.\n *\n * @see {@link ConnectConfig}\n * @example\n * ```js\n * async function initNear() {\n *   const near = await connect({\n *      networkId: 'testnet',\n *      nodeUrl: 'https://rpc.testnet.near.org'\n *   })\n * }\n * ```\n *\n * @module browserConnect\n */\nconst near_1 = __webpack_require__(/*! ./near */ \"./node_modules/near-api-js/lib/near.js\");\n/**\n * Initialize connection to Near network.\n */\nfunction connect(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new near_1.Near(config);\n    });\n}\nexports.connect = connect;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2Jyb3dzZXItY29ubmVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLElBQUksK0JBQStCLEtBQUssNkJBQTZCO0FBQ3JFO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxzREFBUTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvYnJvd3Nlci1jb25uZWN0LmpzPzk5MzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29ubmVjdCA9IHZvaWQgMDtcbi8qKlxuICogQ29ubmVjdCB0byBORUFSIHVzaW5nIHRoZSBwcm92aWRlZCBjb25maWd1cmF0aW9uLlxuICpcbiAqIHtAbGluayBDb25uZWN0Q29uZmlnI25ldHdvcmtJZH0gYW5kIHtAbGluayBDb25uZWN0Q29uZmlnI25vZGVVcmx9IGFyZSByZXF1aXJlZC5cbiAqXG4gKiBUbyBzaWduIHRyYW5zYWN0aW9ucyB5b3UgY2FuIGFsc28gcGFzczoge0BsaW5rIENvbm5lY3RDb25maWcja2V5U3RvcmV9XG4gKlxuICogQm90aCBhcmUgcGFzc2VkIHRoZXkgYXJlIHByaW9yaXRpemUgaW4gdGhhdCBvcmRlci5cbiAqXG4gKiBAc2VlIHtAbGluayBDb25uZWN0Q29uZmlnfVxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiBhc3luYyBmdW5jdGlvbiBpbml0TmVhcigpIHtcbiAqICAgY29uc3QgbmVhciA9IGF3YWl0IGNvbm5lY3Qoe1xuICogICAgICBuZXR3b3JrSWQ6ICd0ZXN0bmV0JyxcbiAqICAgICAgbm9kZVVybDogJ2h0dHBzOi8vcnBjLnRlc3RuZXQubmVhci5vcmcnXG4gKiAgIH0pXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBAbW9kdWxlIGJyb3dzZXJDb25uZWN0XG4gKi9cbmNvbnN0IG5lYXJfMSA9IHJlcXVpcmUoXCIuL25lYXJcIik7XG4vKipcbiAqIEluaXRpYWxpemUgY29ubmVjdGlvbiB0byBOZWFyIG5ldHdvcmsuXG4gKi9cbmZ1bmN0aW9uIGNvbm5lY3QoY29uZmlnKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBuZWFyXzEuTmVhcihjb25maWcpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5jb25uZWN0ID0gY29ubmVjdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/browser-connect.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/browser-index.js":
/*!*******************************************************!*\
  !*** ./node_modules/near-api-js/lib/browser-index.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.keyStores = void 0;\n/** @hidden @module */\nexports.keyStores = __importStar(__webpack_require__(/*! ./key_stores/browser-index */ \"./node_modules/near-api-js/lib/key_stores/browser-index.js\"));\n__exportStar(__webpack_require__(/*! ./common-index */ \"./node_modules/near-api-js/lib/common-index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./browser-connect */ \"./node_modules/near-api-js/lib/browser-connect.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2Jyb3dzZXItaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQjtBQUNBLGlCQUFpQixnQkFBZ0IsbUJBQU8sQ0FBQyw4RkFBNEI7QUFDckUsYUFBYSxtQkFBTyxDQUFDLHNFQUFnQjtBQUNyQyxhQUFhLG1CQUFPLENBQUMsNEVBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvYnJvd3Nlci1pbmRleC5qcz83NWUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5rZXlTdG9yZXMgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiBAbW9kdWxlICovXG5leHBvcnRzLmtleVN0b3JlcyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9rZXlfc3RvcmVzL2Jyb3dzZXItaW5kZXhcIikpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbW1vbi1pbmRleFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYnJvd3Nlci1jb25uZWN0XCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/browser-index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/common-index.js":
/*!******************************************************!*\
  !*** ./node_modules/near-api-js/lib/common-index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WalletConnection = exports.ConnectedWalletAccount = exports.Near = exports.KeyPair = exports.Signer = exports.InMemorySigner = exports.Contract = exports.Connection = exports.Account = exports.multisig = exports.validators = exports.transactions = exports.utils = exports.providers = exports.accountCreator = void 0;\n/** @hidden @module */\nconst providers = __importStar(__webpack_require__(/*! ./providers */ \"./node_modules/near-api-js/lib/providers/index.js\"));\nexports.providers = providers;\nconst utils = __importStar(__webpack_require__(/*! ./utils */ \"./node_modules/near-api-js/lib/utils/index.js\"));\nexports.utils = utils;\nconst transactions = __importStar(__webpack_require__(/*! ./transaction */ \"./node_modules/near-api-js/lib/transaction.js\"));\nexports.transactions = transactions;\nconst validators = __importStar(__webpack_require__(/*! ./validators */ \"./node_modules/near-api-js/lib/validators.js\"));\nexports.validators = validators;\nconst account_1 = __webpack_require__(/*! ./account */ \"./node_modules/near-api-js/lib/account.js\");\nObject.defineProperty(exports, \"Account\", ({ enumerable: true, get: function () { return account_1.Account; } }));\nconst multisig = __importStar(__webpack_require__(/*! ./account_multisig */ \"./node_modules/near-api-js/lib/account_multisig.js\"));\nexports.multisig = multisig;\nconst accountCreator = __importStar(__webpack_require__(/*! ./account_creator */ \"./node_modules/near-api-js/lib/account_creator.js\"));\nexports.accountCreator = accountCreator;\nconst connection_1 = __webpack_require__(/*! ./connection */ \"./node_modules/near-api-js/lib/connection.js\");\nObject.defineProperty(exports, \"Connection\", ({ enumerable: true, get: function () { return connection_1.Connection; } }));\nconst signer_1 = __webpack_require__(/*! ./signer */ \"./node_modules/near-api-js/lib/signer.js\");\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signer_1.Signer; } }));\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return signer_1.InMemorySigner; } }));\nconst contract_1 = __webpack_require__(/*! ./contract */ \"./node_modules/near-api-js/lib/contract.js\");\nObject.defineProperty(exports, \"Contract\", ({ enumerable: true, get: function () { return contract_1.Contract; } }));\nconst key_pair_1 = __webpack_require__(/*! ./utils/key_pair */ \"./node_modules/near-api-js/lib/utils/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nconst near_1 = __webpack_require__(/*! ./near */ \"./node_modules/near-api-js/lib/near.js\");\nObject.defineProperty(exports, \"Near\", ({ enumerable: true, get: function () { return near_1.Near; } }));\nconst wallet_account_1 = __webpack_require__(/*! ./wallet-account */ \"./node_modules/near-api-js/lib/wallet-account.js\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", ({ enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } }));\nObject.defineProperty(exports, \"WalletConnection\", ({ enumerable: true, get: function () { return wallet_account_1.WalletConnection; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2NvbW1vbi1pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCLEdBQUcsOEJBQThCLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxjQUFjLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCLEdBQUcsa0JBQWtCLEdBQUcsZUFBZSxHQUFHLGdCQUFnQixHQUFHLGtCQUFrQixHQUFHLG9CQUFvQixHQUFHLGFBQWEsR0FBRyxpQkFBaUIsR0FBRyxzQkFBc0I7QUFDMVQ7QUFDQSwrQkFBK0IsbUJBQU8sQ0FBQyxzRUFBYTtBQUNwRCxpQkFBaUI7QUFDakIsMkJBQTJCLG1CQUFPLENBQUMsOERBQVM7QUFDNUMsYUFBYTtBQUNiLGtDQUFrQyxtQkFBTyxDQUFDLG9FQUFlO0FBQ3pELG9CQUFvQjtBQUNwQixnQ0FBZ0MsbUJBQU8sQ0FBQyxrRUFBYztBQUN0RCxrQkFBa0I7QUFDbEIsa0JBQWtCLG1CQUFPLENBQUMsNERBQVc7QUFDckMsMkNBQTBDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQy9HLDhCQUE4QixtQkFBTyxDQUFDLDhFQUFvQjtBQUMxRCxnQkFBZ0I7QUFDaEIsb0NBQW9DLG1CQUFPLENBQUMsNEVBQW1CO0FBQy9ELHNCQUFzQjtBQUN0QixxQkFBcUIsbUJBQU8sQ0FBQyxrRUFBYztBQUMzQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDeEgsaUJBQWlCLG1CQUFPLENBQUMsMERBQVU7QUFDbkMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzVHLGtEQUFpRCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUM1SCxtQkFBbUIsbUJBQU8sQ0FBQyw4REFBWTtBQUN2Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgsbUJBQW1CLG1CQUFPLENBQUMsMEVBQWtCO0FBQzdDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCxlQUFlLG1CQUFPLENBQUMsc0RBQVE7QUFDL0Isd0NBQXVDLEVBQUUscUNBQXFDLHVCQUF1QixFQUFDO0FBQ3RHLHlCQUF5QixtQkFBTyxDQUFDLDBFQUFrQjtBQUNuRCwwREFBeUQsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDcEosb0RBQW1ELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvY29tbW9uLWluZGV4LmpzPzgyMTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2FsbGV0Q29ubmVjdGlvbiA9IGV4cG9ydHMuQ29ubmVjdGVkV2FsbGV0QWNjb3VudCA9IGV4cG9ydHMuTmVhciA9IGV4cG9ydHMuS2V5UGFpciA9IGV4cG9ydHMuU2lnbmVyID0gZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IGV4cG9ydHMuQ29udHJhY3QgPSBleHBvcnRzLkNvbm5lY3Rpb24gPSBleHBvcnRzLkFjY291bnQgPSBleHBvcnRzLm11bHRpc2lnID0gZXhwb3J0cy52YWxpZGF0b3JzID0gZXhwb3J0cy50cmFuc2FjdGlvbnMgPSBleHBvcnRzLnV0aWxzID0gZXhwb3J0cy5wcm92aWRlcnMgPSBleHBvcnRzLmFjY291bnRDcmVhdG9yID0gdm9pZCAwO1xuLyoqIEBoaWRkZW4gQG1vZHVsZSAqL1xuY29uc3QgcHJvdmlkZXJzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL3Byb3ZpZGVyc1wiKSk7XG5leHBvcnRzLnByb3ZpZGVycyA9IHByb3ZpZGVycztcbmNvbnN0IHV0aWxzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpKTtcbmV4cG9ydHMudXRpbHMgPSB1dGlscztcbmNvbnN0IHRyYW5zYWN0aW9ucyA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi90cmFuc2FjdGlvblwiKSk7XG5leHBvcnRzLnRyYW5zYWN0aW9ucyA9IHRyYW5zYWN0aW9ucztcbmNvbnN0IHZhbGlkYXRvcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSk7XG5leHBvcnRzLnZhbGlkYXRvcnMgPSB2YWxpZGF0b3JzO1xuY29uc3QgYWNjb3VudF8xID0gcmVxdWlyZShcIi4vYWNjb3VudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRfMS5BY2NvdW50OyB9IH0pO1xuY29uc3QgbXVsdGlzaWcgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vYWNjb3VudF9tdWx0aXNpZ1wiKSk7XG5leHBvcnRzLm11bHRpc2lnID0gbXVsdGlzaWc7XG5jb25zdCBhY2NvdW50Q3JlYXRvciA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9hY2NvdW50X2NyZWF0b3JcIikpO1xuZXhwb3J0cy5hY2NvdW50Q3JlYXRvciA9IGFjY291bnRDcmVhdG9yO1xuY29uc3QgY29ubmVjdGlvbl8xID0gcmVxdWlyZShcIi4vY29ubmVjdGlvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbm5lY3Rpb25fMS5Db25uZWN0aW9uOyB9IH0pO1xuY29uc3Qgc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9zaWduZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTaWduZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNpZ25lcl8xLlNpZ25lcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkluTWVtb3J5U2lnbmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduZXJfMS5Jbk1lbW9yeVNpZ25lcjsgfSB9KTtcbmNvbnN0IGNvbnRyYWN0XzEgPSByZXF1aXJlKFwiLi9jb250cmFjdFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnRyYWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb250cmFjdF8xLkNvbnRyYWN0OyB9IH0pO1xuY29uc3Qga2V5X3BhaXJfMSA9IHJlcXVpcmUoXCIuL3V0aWxzL2tleV9wYWlyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5UGFpclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4ga2V5X3BhaXJfMS5LZXlQYWlyOyB9IH0pO1xuY29uc3QgbmVhcl8xID0gcmVxdWlyZShcIi4vbmVhclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5lYXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG5lYXJfMS5OZWFyOyB9IH0pO1xuY29uc3Qgd2FsbGV0X2FjY291bnRfMSA9IHJlcXVpcmUoXCIuL3dhbGxldC1hY2NvdW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29ubmVjdGVkV2FsbGV0QWNjb3VudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gd2FsbGV0X2FjY291bnRfMS5Db25uZWN0ZWRXYWxsZXRBY2NvdW50OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiV2FsbGV0Q29ubmVjdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gd2FsbGV0X2FjY291bnRfMS5XYWxsZXRDb25uZWN0aW9uOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/common-index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/connection.js":
/*!****************************************************!*\
  !*** ./node_modules/near-api-js/lib/connection.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connection = void 0;\nvar accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nObject.defineProperty(exports, \"Connection\", ({ enumerable: true, get: function () { return accounts_1.Connection; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLGlCQUFpQixtQkFBTyxDQUFDLHdFQUFtQjtBQUM1Qyw4Q0FBNkMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9jb25uZWN0aW9uLmpzPzgwNWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbm5lY3Rpb24gPSB2b2lkIDA7XG52YXIgYWNjb3VudHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9hY2NvdW50c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRzXzEuQ29ubmVjdGlvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/connection.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/contract.js":
/*!**************************************************!*\
  !*** ./node_modules/near-api-js/lib/contract.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Contract = void 0;\nvar accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nObject.defineProperty(exports, \"Contract\", ({ enumerable: true, get: function () { return accounts_1.Contract; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2NvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQixpQkFBaUIsbUJBQU8sQ0FBQyx3RUFBbUI7QUFDNUMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvY29udHJhY3QuanM/ZTlmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29udHJhY3QgPSB2b2lkIDA7XG52YXIgYWNjb3VudHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9hY2NvdW50c1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbnRyYWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLkNvbnRyYWN0OyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/contract.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/key_stores/browser-index.js":
/*!******************************************************************!*\
  !*** ./node_modules/near-api-js/lib/key_stores/browser-index.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = exports.BrowserLocalStorageKeyStore = exports.InMemoryKeyStore = exports.KeyStore = void 0;\n/** @hidden @module */\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/near-api-js/lib/key_stores/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nconst in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"./node_modules/near-api-js/lib/key_stores/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nconst browser_local_storage_key_store_1 = __webpack_require__(/*! ./browser_local_storage_key_store */ \"./node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return browser_local_storage_key_store_1.BrowserLocalStorageKeyStore; } }));\nconst merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"./node_modules/near-api-js/lib/key_stores/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMvYnJvd3Nlci1pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxtQ0FBbUMsR0FBRyx3QkFBd0IsR0FBRyxnQkFBZ0I7QUFDekc7QUFDQSxtQkFBbUIsbUJBQU8sQ0FBQyx5RUFBWTtBQUN2Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgsOEJBQThCLG1CQUFPLENBQUMsK0ZBQXVCO0FBQzdELG9EQUFtRCxFQUFFLHFDQUFxQyxrREFBa0QsRUFBQztBQUM3SSwwQ0FBMEMsbUJBQU8sQ0FBQyx1SEFBbUM7QUFDckYsK0RBQThELEVBQUUscUNBQXFDLHlFQUF5RSxFQUFDO0FBQy9LLDBCQUEwQixtQkFBTyxDQUFDLHVGQUFtQjtBQUNyRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9rZXlfc3RvcmVzL2Jyb3dzZXItaW5kZXguanM/MTcyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVyZ2VLZXlTdG9yZSA9IGV4cG9ydHMuQnJvd3NlckxvY2FsU3RvcmFnZUtleVN0b3JlID0gZXhwb3J0cy5Jbk1lbW9yeUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IHZvaWQgMDtcbi8qKiBAaGlkZGVuIEBtb2R1bGUgKi9cbmNvbnN0IGtleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlzdG9yZV8xLktleVN0b3JlOyB9IH0pO1xuY29uc3QgaW5fbWVtb3J5X2tleV9zdG9yZV8xID0gcmVxdWlyZShcIi4vaW5fbWVtb3J5X2tleV9zdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkluTWVtb3J5S2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluX21lbW9yeV9rZXlfc3RvcmVfMS5Jbk1lbW9yeUtleVN0b3JlOyB9IH0pO1xuY29uc3QgYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xID0gcmVxdWlyZShcIi4vYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZV8xLkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZTsgfSB9KTtcbmNvbnN0IG1lcmdlX2tleV9zdG9yZV8xID0gcmVxdWlyZShcIi4vbWVyZ2Vfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWVyZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbWVyZ2Vfa2V5X3N0b3JlXzEuTWVyZ2VLZXlTdG9yZTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/key_stores/browser-index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js":
/*!************************************************************************************!*\
  !*** ./node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BrowserLocalStorageKeyStore = void 0;\nvar keystores_browser_1 = __webpack_require__(/*! @near-js/keystores-browser */ \"./node_modules/@near-js/keystores-browser/lib/index.js\");\nObject.defineProperty(exports, \"BrowserLocalStorageKeyStore\", ({ enumerable: true, get: function () { return keystores_browser_1.BrowserLocalStorageKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMvYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUM7QUFDbkMsMEJBQTBCLG1CQUFPLENBQUMsMEZBQTRCO0FBQzlELCtEQUE4RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMvYnJvd3Nlcl9sb2NhbF9zdG9yYWdlX2tleV9zdG9yZS5qcz8wZDY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ccm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmUgPSB2b2lkIDA7XG52YXIga2V5c3RvcmVzX2Jyb3dzZXJfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXMtYnJvd3NlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkJyb3dzZXJMb2NhbFN0b3JhZ2VLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4ga2V5c3RvcmVzX2Jyb3dzZXJfMS5Ccm93c2VyTG9jYWxTdG9yYWdlS2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/key_stores/browser_local_storage_key_store.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/key_stores/in_memory_key_store.js":
/*!************************************************************************!*\
  !*** ./node_modules/near-api-js/lib/key_stores/in_memory_key_store.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nvar keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return keystores_1.InMemoryKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMvaW5fbWVtb3J5X2tleV9zdG9yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsa0JBQWtCLG1CQUFPLENBQUMsbUdBQW9CO0FBQzlDLG9EQUFtRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMvaW5fbWVtb3J5X2tleV9zdG9yZS5qcz84N2VlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Jbk1lbW9yeUtleVN0b3JlID0gdm9pZCAwO1xudmFyIGtleXN0b3Jlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2tleXN0b3Jlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkluTWVtb3J5S2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3Jlc18xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/key_stores/in_memory_key_store.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/key_stores/keystore.js":
/*!*************************************************************!*\
  !*** ./node_modules/near-api-js/lib/key_stores/keystore.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\nvar keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystores_1.KeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLGtCQUFrQixtQkFBTyxDQUFDLG1HQUFvQjtBQUM5Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9rZXlfc3RvcmVzL2tleXN0b3JlLmpzPzU0NGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xudmFyIGtleXN0b3Jlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2tleXN0b3Jlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlzdG9yZXNfMS5LZXlTdG9yZTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/key_stores/keystore.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/key_stores/merge_key_store.js":
/*!********************************************************************!*\
  !*** ./node_modules/near-api-js/lib/key_stores/merge_key_store.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nvar keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return keystores_1.MergeKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL2tleV9zdG9yZXMvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixrQkFBa0IsbUJBQU8sQ0FBQyxtR0FBb0I7QUFDOUMsaURBQWdELEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIva2V5X3N0b3Jlcy9tZXJnZV9rZXlfc3RvcmUuanM/MTlkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTWVyZ2VLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBrZXlzdG9yZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlzdG9yZXNfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/key_stores/merge_key_store.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/near.js":
/*!**********************************************!*\
  !*** ./node_modules/near-api-js/lib/near.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Near = void 0;\nvar wallet_account_1 = __webpack_require__(/*! @near-js/wallet-account */ \"./node_modules/@near-js/wallet-account/lib/index.js\");\nObject.defineProperty(exports, \"Near\", ({ enumerable: true, get: function () { return wallet_account_1.Near; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL25lYXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsWUFBWTtBQUNaLHVCQUF1QixtQkFBTyxDQUFDLG9GQUF5QjtBQUN4RCx3Q0FBdUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9uZWFyLmpzPzljYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk5lYXIgPSB2b2lkIDA7XG52YXIgd2FsbGV0X2FjY291bnRfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5lYXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuTmVhcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/near.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/providers/failover-rpc-provider.js":
/*!*************************************************************************!*\
  !*** ./node_modules/near-api-js/lib/providers/failover-rpc-provider.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FailoverRpcProvider = void 0;\nvar providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", ({ enumerable: true, get: function () { return providers_1.FailoverRpcProvider; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9mYWlsb3Zlci1ycGMtcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGtCQUFrQixtQkFBTyxDQUFDLG1HQUFvQjtBQUM5Qyx1REFBc0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9wcm92aWRlcnMvZmFpbG92ZXItcnBjLXByb3ZpZGVyLmpzPzQ3NjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkZhaWxvdmVyUnBjUHJvdmlkZXIgPSB2b2lkIDA7XG52YXIgcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvcHJvdmlkZXJzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmFpbG92ZXJScGNQcm92aWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvdmlkZXJzXzEuRmFpbG92ZXJScGNQcm92aWRlcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/providers/failover-rpc-provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/providers/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/near-api-js/lib/providers/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/** @hidden @module */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.getTransactionLastResult = exports.FinalExecutionStatusBasic = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.Provider = void 0;\nconst provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/near-api-js/lib/providers/provider.js\");\nObject.defineProperty(exports, \"Provider\", ({ enumerable: true, get: function () { return provider_1.Provider; } }));\nObject.defineProperty(exports, \"getTransactionLastResult\", ({ enumerable: true, get: function () { return provider_1.getTransactionLastResult; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return provider_1.FinalExecutionStatusBasic; } }));\nconst json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/near-api-js/lib/providers/json-rpc-provider.js\");\nObject.defineProperty(exports, \"JsonRpcProvider\", ({ enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } }));\nObject.defineProperty(exports, \"TypedError\", ({ enumerable: true, get: function () { return json_rpc_provider_1.TypedError; } }));\nObject.defineProperty(exports, \"ErrorContext\", ({ enumerable: true, get: function () { return json_rpc_provider_1.ErrorContext; } }));\nconst failover_rpc_provider_1 = __webpack_require__(/*! ./failover-rpc-provider */ \"./node_modules/near-api-js/lib/providers/failover-rpc-provider.js\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", ({ enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLGtCQUFrQixHQUFHLGdDQUFnQyxHQUFHLGlDQUFpQyxHQUFHLDJCQUEyQixHQUFHLHVCQUF1QixHQUFHLGdCQUFnQjtBQUMzTCxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN2Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDbEgsNERBQTJELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ2xKLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNwSiw0QkFBNEIsbUJBQU8sQ0FBQywwRkFBcUI7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ3pJLDhDQUE2QyxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUMvSCxnREFBK0MsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsa0dBQXlCO0FBQ2pFLHVEQUFzRCxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9pbmRleC5qcz9lYTk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqIEBoaWRkZW4gQG1vZHVsZSAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5FcnJvckNvbnRleHQgPSBleHBvcnRzLlR5cGVkRXJyb3IgPSBleHBvcnRzLmdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmFpbG92ZXJScGNQcm92aWRlciA9IGV4cG9ydHMuSnNvblJwY1Byb3ZpZGVyID0gZXhwb3J0cy5Qcm92aWRlciA9IHZvaWQgMDtcbmNvbnN0IHByb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9wcm92aWRlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm92aWRlcl8xLlByb3ZpZGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm92aWRlcl8xLmdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3ZpZGVyXzEuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYzsgfSB9KTtcbmNvbnN0IGpzb25fcnBjX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9qc29uLXJwYy1wcm92aWRlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkpzb25ScGNQcm92aWRlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4ganNvbl9ycGNfcHJvdmlkZXJfMS5Kc29uUnBjUHJvdmlkZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUeXBlZEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uX3JwY19wcm92aWRlcl8xLlR5cGVkRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJFcnJvckNvbnRleHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGpzb25fcnBjX3Byb3ZpZGVyXzEuRXJyb3JDb250ZXh0OyB9IH0pO1xuY29uc3QgZmFpbG92ZXJfcnBjX3Byb3ZpZGVyXzEgPSByZXF1aXJlKFwiLi9mYWlsb3Zlci1ycGMtcHJvdmlkZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGYWlsb3ZlclJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBmYWlsb3Zlcl9ycGNfcHJvdmlkZXJfMS5GYWlsb3ZlclJwY1Byb3ZpZGVyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/providers/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/providers/json-rpc-provider.js":
/*!*********************************************************************!*\
  !*** ./node_modules/near-api-js/lib/providers/json-rpc-provider.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcProvider = exports.TypedError = exports.ErrorContext = void 0;\nvar types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nObject.defineProperty(exports, \"ErrorContext\", ({ enumerable: true, get: function () { return types_1.ErrorContext; } }));\nObject.defineProperty(exports, \"TypedError\", ({ enumerable: true, get: function () { return types_1.TypedError; } }));\nvar providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js\");\nObject.defineProperty(exports, \"JsonRpcProvider\", ({ enumerable: true, get: function () { return providers_1.JsonRpcProvider; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9qc29uLXJwYy1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyxrQkFBa0IsR0FBRyxvQkFBb0I7QUFDbkUsY0FBYyxtQkFBTyxDQUFDLDJGQUFnQjtBQUN0QyxnREFBK0MsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDdkgsOENBQTZDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ25ILGtCQUFrQixtQkFBTyxDQUFDLG1HQUFvQjtBQUM5QyxtREFBa0QsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi9wcm92aWRlcnMvanNvbi1ycGMtcHJvdmlkZXIuanM/M2Y1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSnNvblJwY1Byb3ZpZGVyID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5FcnJvckNvbnRleHQgPSB2b2lkIDA7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkVycm9yQ29udGV4dFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXNfMS5FcnJvckNvbnRleHQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUeXBlZEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLlR5cGVkRXJyb3I7IH0gfSk7XG52YXIgcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvcHJvdmlkZXJzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSnNvblJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm92aWRlcnNfMS5Kc29uUnBjUHJvdmlkZXI7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/providers/json-rpc-provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/providers/provider.js":
/*!************************************************************!*\
  !*** ./node_modules/near-api-js/lib/providers/provider.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = exports.Provider = exports.getTransactionLastResult = void 0;\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"getTransactionLastResult\", ({ enumerable: true, get: function () { return utils_1.getTransactionLastResult; } }));\nvar providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js\");\nObject.defineProperty(exports, \"Provider\", ({ enumerable: true, get: function () { return providers_1.Provider; } }));\nvar types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return types_1.IdType; } }));\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return types_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return types_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsZ0NBQWdDO0FBQ3ZJLGNBQWMsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDdEMsNERBQTJELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQy9JLGtCQUFrQixtQkFBTyxDQUFDLG1HQUFvQjtBQUM5Qyw0Q0FBMkMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDbkgsY0FBYyxtQkFBTyxDQUFDLDJGQUFnQjtBQUN0QywwQ0FBeUMsRUFBRSxxQ0FBcUMsMEJBQTBCLEVBQUM7QUFDM0csd0RBQXVELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ3ZJLDZEQUE0RCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3Byb3ZpZGVycy9wcm92aWRlci5qcz9lOWJiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gZXhwb3J0cy5Qcm92aWRlciA9IGV4cG9ydHMuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0ID0gdm9pZCAwO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0OyB9IH0pO1xudmFyIHByb3ZpZGVyc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3Byb3ZpZGVyc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm92aWRlcnNfMS5Qcm92aWRlcjsgfSB9KTtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLklkVHlwZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLkV4ZWN1dGlvblN0YXR1c0Jhc2ljOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXNfMS5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/providers/provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/signer.js":
/*!************************************************!*\
  !*** ./node_modules/near-api-js/lib/signer.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = exports.InMemorySigner = void 0;\nvar signers_1 = __webpack_require__(/*! @near-js/signers */ \"./node_modules/near-api-js/node_modules/@near-js/signers/lib/index.js\");\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return signers_1.InMemorySigner; } }));\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signers_1.Signer; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsc0JBQXNCO0FBQ3ZDLGdCQUFnQixtQkFBTyxDQUFDLCtGQUFrQjtBQUMxQyxrREFBaUQsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDN0gsMENBQXlDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvc2lnbmVyLmpzPzMwODciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpZ25lciA9IGV4cG9ydHMuSW5NZW1vcnlTaWduZXIgPSB2b2lkIDA7XG52YXIgc2lnbmVyc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3NpZ25lcnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJJbk1lbW9yeVNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmVyc18xLkluTWVtb3J5U2lnbmVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2lnbmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduZXJzXzEuU2lnbmVyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/signer.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/transaction.js":
/*!*****************************************************!*\
  !*** ./node_modules/near-api-js/lib/transaction.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.transfer = exports.stake = exports.functionCallAccessKey = exports.functionCall = exports.fullAccessKey = exports.deployContract = exports.deleteKey = exports.deleteAccount = exports.createAccount = exports.addKey = exports.encodeTransaction = exports.encodeDelegateAction = exports.encodeSignedDelegate = exports.Transaction = exports.SignedTransaction = exports.Signature = exports.signTransaction = exports.createTransaction = exports.SCHEMA = exports.Transfer = exports.Stake = exports.FunctionCallPermission = exports.FunctionCall = exports.FullAccessPermission = exports.DeployContract = exports.DeleteKey = exports.DeleteAccount = exports.CreateAccount = exports.AddKey = exports.AccessKeyPermission = exports.AccessKey = exports.Action = exports.stringifyJsonOrBytes = void 0;\nvar transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/index.js\");\nObject.defineProperty(exports, \"stringifyJsonOrBytes\", ({ enumerable: true, get: function () { return transactions_1.stringifyJsonOrBytes; } }));\nObject.defineProperty(exports, \"Action\", ({ enumerable: true, get: function () { return transactions_1.Action; } }));\nObject.defineProperty(exports, \"AccessKey\", ({ enumerable: true, get: function () { return transactions_1.AccessKey; } }));\nObject.defineProperty(exports, \"AccessKeyPermission\", ({ enumerable: true, get: function () { return transactions_1.AccessKeyPermission; } }));\nObject.defineProperty(exports, \"AddKey\", ({ enumerable: true, get: function () { return transactions_1.AddKey; } }));\nObject.defineProperty(exports, \"CreateAccount\", ({ enumerable: true, get: function () { return transactions_1.CreateAccount; } }));\nObject.defineProperty(exports, \"DeleteAccount\", ({ enumerable: true, get: function () { return transactions_1.DeleteAccount; } }));\nObject.defineProperty(exports, \"DeleteKey\", ({ enumerable: true, get: function () { return transactions_1.DeleteKey; } }));\nObject.defineProperty(exports, \"DeployContract\", ({ enumerable: true, get: function () { return transactions_1.DeployContract; } }));\nObject.defineProperty(exports, \"FullAccessPermission\", ({ enumerable: true, get: function () { return transactions_1.FullAccessPermission; } }));\nObject.defineProperty(exports, \"FunctionCall\", ({ enumerable: true, get: function () { return transactions_1.FunctionCall; } }));\nObject.defineProperty(exports, \"FunctionCallPermission\", ({ enumerable: true, get: function () { return transactions_1.FunctionCallPermission; } }));\nObject.defineProperty(exports, \"Stake\", ({ enumerable: true, get: function () { return transactions_1.Stake; } }));\nObject.defineProperty(exports, \"Transfer\", ({ enumerable: true, get: function () { return transactions_1.Transfer; } }));\nObject.defineProperty(exports, \"SCHEMA\", ({ enumerable: true, get: function () { return transactions_1.SCHEMA; } }));\nObject.defineProperty(exports, \"createTransaction\", ({ enumerable: true, get: function () { return transactions_1.createTransaction; } }));\nObject.defineProperty(exports, \"signTransaction\", ({ enumerable: true, get: function () { return transactions_1.signTransaction; } }));\nObject.defineProperty(exports, \"Signature\", ({ enumerable: true, get: function () { return transactions_1.Signature; } }));\nObject.defineProperty(exports, \"SignedTransaction\", ({ enumerable: true, get: function () { return transactions_1.SignedTransaction; } }));\nObject.defineProperty(exports, \"Transaction\", ({ enumerable: true, get: function () { return transactions_1.Transaction; } }));\nObject.defineProperty(exports, \"encodeSignedDelegate\", ({ enumerable: true, get: function () { return transactions_1.encodeSignedDelegate; } }));\nObject.defineProperty(exports, \"encodeDelegateAction\", ({ enumerable: true, get: function () { return transactions_1.encodeDelegateAction; } }));\nObject.defineProperty(exports, \"encodeTransaction\", ({ enumerable: true, get: function () { return transactions_1.encodeTransaction; } }));\nconst transactions_2 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/index.js\");\nconst addKey = (publicKey, accessKey) => transactions_2.actionCreators.addKey(publicKey, accessKey);\nexports.addKey = addKey;\nconst createAccount = () => transactions_2.actionCreators.createAccount();\nexports.createAccount = createAccount;\nconst deleteAccount = (beneficiaryId) => transactions_2.actionCreators.deleteAccount(beneficiaryId);\nexports.deleteAccount = deleteAccount;\nconst deleteKey = (publicKey) => transactions_2.actionCreators.deleteKey(publicKey);\nexports.deleteKey = deleteKey;\nconst deployContract = (code) => transactions_2.actionCreators.deployContract(code);\nexports.deployContract = deployContract;\nconst fullAccessKey = () => transactions_2.actionCreators.fullAccessKey();\nexports.fullAccessKey = fullAccessKey;\nconst functionCall = (methodName, args, gas, deposit, stringify, jsContract) => transactions_2.actionCreators.functionCall(methodName, args, gas, deposit, stringify, jsContract);\nexports.functionCall = functionCall;\nconst functionCallAccessKey = (receiverId, methodNames, allowance) => transactions_2.actionCreators.functionCallAccessKey(receiverId, methodNames, allowance);\nexports.functionCallAccessKey = functionCallAccessKey;\nconst stake = (stake, publicKey) => transactions_2.actionCreators.stake(stake, publicKey);\nexports.stake = stake;\nconst transfer = (deposit) => transactions_2.actionCreators.transfer(deposit);\nexports.transfer = transfer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/transaction.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/enums.js":
/*!*****************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/enums.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Enum = exports.Assignable = void 0;\nvar types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nObject.defineProperty(exports, \"Assignable\", ({ enumerable: true, get: function () { return types_1.Assignable; } }));\n/** @hidden @module */\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexports.Enum = Enum;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2VudW1zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELFlBQVksR0FBRyxrQkFBa0I7QUFDakMsY0FBYyxtQkFBTyxDQUFDLDJGQUFnQjtBQUN0Qyw4Q0FBNkMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvdXRpbHMvZW51bXMuanM/ZWFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW51bSA9IGV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbnZhciB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXNzaWduYWJsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXNfMS5Bc3NpZ25hYmxlOyB9IH0pO1xuLyoqIEBoaWRkZW4gQG1vZHVsZSAqL1xuY2xhc3MgRW51bSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcGVydGllcykubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VudW0gY2FuIG9ubHkgdGFrZSBzaW5nbGUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICAgICAgdGhpcy5lbnVtID0ga2V5O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLkVudW0gPSBFbnVtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/enums.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/errors.js":
/*!******************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/errors.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = exports.TypedError = exports.PositionalArgsError = exports.ErrorContext = exports.ArgumentTypeError = exports.UnsupportedSerializationError = exports.UnknownArgumentError = exports.ConflictingOptions = exports.ArgumentSchemaError = void 0;\nvar accounts_1 = __webpack_require__(/*! @near-js/accounts */ \"./node_modules/@near-js/accounts/lib/index.js\");\nObject.defineProperty(exports, \"ArgumentSchemaError\", ({ enumerable: true, get: function () { return accounts_1.ArgumentSchemaError; } }));\nObject.defineProperty(exports, \"ConflictingOptions\", ({ enumerable: true, get: function () { return accounts_1.ConflictingOptions; } }));\nObject.defineProperty(exports, \"UnknownArgumentError\", ({ enumerable: true, get: function () { return accounts_1.UnknownArgumentError; } }));\nObject.defineProperty(exports, \"UnsupportedSerializationError\", ({ enumerable: true, get: function () { return accounts_1.UnsupportedSerializationError; } }));\nvar types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nObject.defineProperty(exports, \"ArgumentTypeError\", ({ enumerable: true, get: function () { return types_1.ArgumentTypeError; } }));\nObject.defineProperty(exports, \"ErrorContext\", ({ enumerable: true, get: function () { return types_1.ErrorContext; } }));\nObject.defineProperty(exports, \"PositionalArgsError\", ({ enumerable: true, get: function () { return types_1.PositionalArgsError; } }));\nObject.defineProperty(exports, \"TypedError\", ({ enumerable: true, get: function () { return types_1.TypedError; } }));\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return utils_1.logWarning; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxrQkFBa0IsR0FBRywyQkFBMkIsR0FBRyxvQkFBb0IsR0FBRyx5QkFBeUIsR0FBRyxxQ0FBcUMsR0FBRyw0QkFBNEIsR0FBRywwQkFBMEIsR0FBRywyQkFBMkI7QUFDMVAsaUJBQWlCLG1CQUFPLENBQUMsd0VBQW1CO0FBQzVDLHVEQUFzRCxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUN4SSxzREFBcUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdEksd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLGlFQUFnRSxFQUFFLHFDQUFxQyxvREFBb0QsRUFBQztBQUM1SixjQUFjLG1CQUFPLENBQUMsMkZBQWdCO0FBQ3RDLHFEQUFvRCxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUNqSSxnREFBK0MsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDdkgsdURBQXNELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3JJLDhDQUE2QyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNuSCxjQUFjLG1CQUFPLENBQUMsMkZBQWdCO0FBQ3RDLDhDQUE2QyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2Vycm9ycy5qcz9jOGRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5sb2dXYXJuaW5nID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Qb3NpdGlvbmFsQXJnc0Vycm9yID0gZXhwb3J0cy5FcnJvckNvbnRleHQgPSBleHBvcnRzLkFyZ3VtZW50VHlwZUVycm9yID0gZXhwb3J0cy5VbnN1cHBvcnRlZFNlcmlhbGl6YXRpb25FcnJvciA9IGV4cG9ydHMuVW5rbm93bkFyZ3VtZW50RXJyb3IgPSBleHBvcnRzLkNvbmZsaWN0aW5nT3B0aW9ucyA9IGV4cG9ydHMuQXJndW1lbnRTY2hlbWFFcnJvciA9IHZvaWQgMDtcbnZhciBhY2NvdW50c18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2FjY291bnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXJndW1lbnRTY2hlbWFFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYWNjb3VudHNfMS5Bcmd1bWVudFNjaGVtYUVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29uZmxpY3RpbmdPcHRpb25zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLkNvbmZsaWN0aW5nT3B0aW9uczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVua25vd25Bcmd1bWVudEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhY2NvdW50c18xLlVua25vd25Bcmd1bWVudEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRzXzEuVW5zdXBwb3J0ZWRTZXJpYWxpemF0aW9uRXJyb3I7IH0gfSk7XG52YXIgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFyZ3VtZW50VHlwZUVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLkFyZ3VtZW50VHlwZUVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXJyb3JDb250ZXh0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0eXBlc18xLkVycm9yQ29udGV4dDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlBvc2l0aW9uYWxBcmdzRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVzXzEuUG9zaXRpb25hbEFyZ3NFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlR5cGVkRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVzXzEuVHlwZWRFcnJvcjsgfSB9KTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5sb2dXYXJuaW5nOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/errors.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/format.js":
/*!******************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/format.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION_EXP = exports.NEAR_NOMINATION = void 0;\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"NEAR_NOMINATION\", ({ enumerable: true, get: function () { return utils_1.NEAR_NOMINATION; } }));\nObject.defineProperty(exports, \"NEAR_NOMINATION_EXP\", ({ enumerable: true, get: function () { return utils_1.NEAR_NOMINATION_EXP; } }));\nObject.defineProperty(exports, \"formatNearAmount\", ({ enumerable: true, get: function () { return utils_1.formatNearAmount; } }));\nObject.defineProperty(exports, \"parseNearAmount\", ({ enumerable: true, get: function () { return utils_1.parseNearAmount; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2Zvcm1hdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRyx3QkFBd0IsR0FBRywyQkFBMkIsR0FBRyx1QkFBdUI7QUFDMUcsY0FBYyxtQkFBTyxDQUFDLDJGQUFnQjtBQUN0QyxtREFBa0QsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDN0gsdURBQXNELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3JJLG9EQUFtRCxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMvSCxtREFBa0QsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi91dGlscy9mb3JtYXQuanM/NmM3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VOZWFyQW1vdW50ID0gZXhwb3J0cy5mb3JtYXROZWFyQW1vdW50ID0gZXhwb3J0cy5ORUFSX05PTUlOQVRJT05fRVhQID0gZXhwb3J0cy5ORUFSX05PTUlOQVRJT04gPSB2b2lkIDA7XG52YXIgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk5FQVJfTk9NSU5BVElPTlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5ORUFSX05PTUlOQVRJT047IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJORUFSX05PTUlOQVRJT05fRVhQXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLk5FQVJfTk9NSU5BVElPTl9FWFA7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmb3JtYXROZWFyQW1vdW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmZvcm1hdE5lYXJBbW91bnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXJzZU5lYXJBbW91bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEucGFyc2VOZWFyQW1vdW50OyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/format.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = exports.logWarning = exports.rpc_errors = exports.KeyPairEd25519 = exports.KeyPair = exports.PublicKey = exports.format = exports.enums = exports.web = exports.serialize = exports.key_pair = void 0;\nconst key_pair = __importStar(__webpack_require__(/*! ./key_pair */ \"./node_modules/near-api-js/lib/utils/key_pair.js\"));\nexports.key_pair = key_pair;\nconst serialize = __importStar(__webpack_require__(/*! ./serialize */ \"./node_modules/near-api-js/lib/utils/serialize.js\"));\nexports.serialize = serialize;\nconst web = __importStar(__webpack_require__(/*! ./web */ \"./node_modules/near-api-js/lib/utils/web.js\"));\nexports.web = web;\nconst enums = __importStar(__webpack_require__(/*! ./enums */ \"./node_modules/near-api-js/lib/utils/enums.js\"));\nexports.enums = enums;\nconst format = __importStar(__webpack_require__(/*! ./format */ \"./node_modules/near-api-js/lib/utils/format.js\"));\nexports.format = format;\nconst rpc_errors = __importStar(__webpack_require__(/*! ./rpc_errors */ \"./node_modules/near-api-js/lib/utils/rpc_errors.js\"));\nexports.rpc_errors = rpc_errors;\nconst key_pair_1 = __webpack_require__(/*! ./key_pair */ \"./node_modules/near-api-js/lib/utils/key_pair.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return key_pair_1.PublicKey; } }));\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_1.KeyPairEd25519; } }));\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/near-api-js/lib/utils/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/near-api-js/lib/utils/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsa0JBQWtCLEdBQUcsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGlCQUFpQixHQUFHLGNBQWMsR0FBRyxhQUFhLEdBQUcsV0FBVyxHQUFHLGlCQUFpQixHQUFHLGdCQUFnQjtBQUM3TSw4QkFBOEIsbUJBQU8sQ0FBQyxvRUFBWTtBQUNsRCxnQkFBZ0I7QUFDaEIsK0JBQStCLG1CQUFPLENBQUMsc0VBQWE7QUFDcEQsaUJBQWlCO0FBQ2pCLHlCQUF5QixtQkFBTyxDQUFDLDBEQUFPO0FBQ3hDLFdBQVc7QUFDWCwyQkFBMkIsbUJBQU8sQ0FBQyw4REFBUztBQUM1QyxhQUFhO0FBQ2IsNEJBQTRCLG1CQUFPLENBQUMsZ0VBQVU7QUFDOUMsY0FBYztBQUNkLGdDQUFnQyxtQkFBTyxDQUFDLHdFQUFjO0FBQ3RELGtCQUFrQjtBQUNsQixtQkFBbUIsbUJBQU8sQ0FBQyxvRUFBWTtBQUN2Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDcEgsMkNBQTBDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ2hILGtEQUFpRCxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM5SCxpQkFBaUIsbUJBQU8sQ0FBQyxnRUFBVTtBQUNuQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsaUJBQWlCLG1CQUFPLENBQUMsZ0VBQVU7QUFDbkMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvdXRpbHMvaW5kZXguanM/ZGE2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Mb2dnZXIgPSBleHBvcnRzLmxvZ1dhcm5pbmcgPSBleHBvcnRzLnJwY19lcnJvcnMgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLmZvcm1hdCA9IGV4cG9ydHMuZW51bXMgPSBleHBvcnRzLndlYiA9IGV4cG9ydHMuc2VyaWFsaXplID0gZXhwb3J0cy5rZXlfcGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2tleV9wYWlyXCIpKTtcbmV4cG9ydHMua2V5X3BhaXIgPSBrZXlfcGFpcjtcbmNvbnN0IHNlcmlhbGl6ZSA9IF9faW1wb3J0U3RhcihyZXF1aXJlKFwiLi9zZXJpYWxpemVcIikpO1xuZXhwb3J0cy5zZXJpYWxpemUgPSBzZXJpYWxpemU7XG5jb25zdCB3ZWIgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vd2ViXCIpKTtcbmV4cG9ydHMud2ViID0gd2ViO1xuY29uc3QgZW51bXMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vZW51bXNcIikpO1xuZXhwb3J0cy5lbnVtcyA9IGVudW1zO1xuY29uc3QgZm9ybWF0ID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2Zvcm1hdFwiKSk7XG5leHBvcnRzLmZvcm1hdCA9IGZvcm1hdDtcbmNvbnN0IHJwY19lcnJvcnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4vcnBjX2Vycm9yc1wiKSk7XG5leHBvcnRzLnJwY19lcnJvcnMgPSBycGNfZXJyb3JzO1xuY29uc3Qga2V5X3BhaXJfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHVibGljS2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLlB1YmxpY0tleTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleV9wYWlyXzEuS2V5UGFpcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXJFZDI1NTE5OyB9IH0pO1xuY29uc3QgZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJsb2dXYXJuaW5nXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5sb2dXYXJuaW5nOyB9IH0pO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMb2dnZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGxvZ2dlcl8xLkxvZ2dlcjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/key_pair.js":
/*!********************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/key_pair.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyType = exports.KeyPairEd25519 = exports.KeyPair = void 0;\nvar crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return crypto_1.KeyPair; } }));\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return crypto_1.KeyPairEd25519; } }));\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return crypto_1.KeyType; } }));\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return crypto_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2tleV9wYWlyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGVBQWUsR0FBRyxzQkFBc0IsR0FBRyxlQUFlO0FBQzlFLGVBQWUsbUJBQU8sQ0FBQyw2RkFBaUI7QUFDeEMsMkNBQTBDLEVBQUUscUNBQXFDLDRCQUE0QixFQUFDO0FBQzlHLGtEQUFpRCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUM1SCwyQ0FBMEMsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDOUcsNkNBQTRDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvdXRpbHMva2V5X3BhaXIuanM/OGRhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5ID0gZXhwb3J0cy5LZXlUeXBlID0gZXhwb3J0cy5LZXlQYWlyRWQyNTUxOSA9IGV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbnZhciBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcnlwdG9fMS5LZXlQYWlyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5UGFpckVkMjU1MTlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNyeXB0b18xLktleVBhaXJFZDI1NTE5OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY3J5cHRvXzEuS2V5VHlwZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlB1YmxpY0tleVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY3J5cHRvXzEuUHVibGljS2V5OyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/key_pair.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/logger.js":
/*!******************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/logger.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return utils_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2QsY0FBYyxtQkFBTyxDQUFDLDJGQUFnQjtBQUN0QywwQ0FBeUMsRUFBRSxxQ0FBcUMsMEJBQTBCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL2xpYi91dGlscy9sb2dnZXIuanM/OWNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTG9nZ2VyID0gdm9pZCAwO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJMb2dnZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/logger.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/rpc_errors.js":
/*!**********************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/rpc_errors.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ServerError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = void 0;\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return utils_1.parseRpcError; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return utils_1.parseResultError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return utils_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return utils_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return utils_1.ServerError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL3JwY19lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsd0JBQXdCLEdBQUcscUJBQXFCO0FBQ25JLGNBQWMsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDdEMsaURBQWdELEVBQUUscUNBQXFDLGlDQUFpQyxFQUFDO0FBQ3pILG9EQUFtRCxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMvSCwrQ0FBOEMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDckgsZ0VBQStELEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQ3ZKLCtDQUE4QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL3JwY19lcnJvcnMuanM/ODczMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2VydmVyRXJyb3IgPSBleHBvcnRzLmdldEVycm9yVHlwZUZyb21FcnJvck1lc3NhZ2UgPSBleHBvcnRzLmZvcm1hdEVycm9yID0gZXhwb3J0cy5wYXJzZVJlc3VsdEVycm9yID0gZXhwb3J0cy5wYXJzZVJwY0Vycm9yID0gdm9pZCAwO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXJzZVJwY0Vycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXJzZVJlc3VsdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLnBhcnNlUmVzdWx0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmb3JtYXRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5mb3JtYXRFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldEVycm9yVHlwZUZyb21FcnJvck1lc3NhZ2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNlcnZlckVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLlNlcnZlckVycm9yOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/rpc_errors.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/serialize.js":
/*!*********************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/serialize.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.base_decode = exports.base_encode = exports.deserialize = exports.serialize = void 0;\nvar borsh_1 = __webpack_require__(/*! borsh */ \"./node_modules/borsh/lib/cjs/index.js\");\nObject.defineProperty(exports, \"serialize\", ({ enumerable: true, get: function () { return borsh_1.serialize; } }));\nObject.defineProperty(exports, \"deserialize\", ({ enumerable: true, get: function () { return borsh_1.deserialize; } }));\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"base_encode\", ({ enumerable: true, get: function () { return utils_1.baseEncode; } }));\nObject.defineProperty(exports, \"base_decode\", ({ enumerable: true, get: function () { return utils_1.baseDecode; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL3NlcmlhbGl6ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRyxpQkFBaUI7QUFDbkYsY0FBYyxtQkFBTyxDQUFDLG9EQUFPO0FBQzdCLDZDQUE0QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUNqSCwrQ0FBOEMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDckgsY0FBYyxtQkFBTyxDQUFDLDJGQUFnQjtBQUN0QywrQ0FBOEMsRUFBRSxxQ0FBcUMsOEJBQThCLEVBQUM7QUFDcEgsK0NBQThDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9saWIvdXRpbHMvc2VyaWFsaXplLmpzP2ZmNWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJhc2VfZGVjb2RlID0gZXhwb3J0cy5iYXNlX2VuY29kZSA9IGV4cG9ydHMuZGVzZXJpYWxpemUgPSBleHBvcnRzLnNlcmlhbGl6ZSA9IHZvaWQgMDtcbnZhciBib3JzaF8xID0gcmVxdWlyZShcImJvcnNoXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2VyaWFsaXplXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBib3JzaF8xLnNlcmlhbGl6ZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlc2VyaWFsaXplXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBib3JzaF8xLmRlc2VyaWFsaXplOyB9IH0pO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJiYXNlX2VuY29kZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5iYXNlRW5jb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYmFzZV9kZWNvZGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuYmFzZURlY29kZTsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/serialize.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/utils/web.js":
/*!***************************************************!*\
  !*** ./node_modules/near-api-js/lib/utils/web.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = void 0;\nvar providers_1 = __webpack_require__(/*! @near-js/providers */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js\");\nObject.defineProperty(exports, \"fetchJson\", ({ enumerable: true, get: function () { return providers_1.fetchJson; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL3dlYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsa0JBQWtCLG1CQUFPLENBQUMsbUdBQW9CO0FBQzlDLDZDQUE0QyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3V0aWxzL3dlYi5qcz8wZWMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mZXRjaEpzb24gPSB2b2lkIDA7XG52YXIgcHJvdmlkZXJzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvcHJvdmlkZXJzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZmV0Y2hKc29uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm92aWRlcnNfMS5mZXRjaEpzb247IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/utils/web.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/validators.js":
/*!****************************************************!*\
  !*** ./node_modules/near-api-js/lib/validators.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.findSeatPrice = exports.diffEpochValidators = void 0;\nvar utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nObject.defineProperty(exports, \"diffEpochValidators\", ({ enumerable: true, get: function () { return utils_1.diffEpochValidators; } }));\nObject.defineProperty(exports, \"findSeatPrice\", ({ enumerable: true, get: function () { return utils_1.findSeatPrice; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3ZhbGlkYXRvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsMkJBQTJCO0FBQ25ELGNBQWMsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDdEMsdURBQXNELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3JJLGlEQUFnRCxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3ZhbGlkYXRvcnMuanM/YjBkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmluZFNlYXRQcmljZSA9IGV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IHZvaWQgMDtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3V0aWxzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGlmZkVwb2NoVmFsaWRhdG9yc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5kaWZmRXBvY2hWYWxpZGF0b3JzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZmluZFNlYXRQcmljZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRpbHNfMS5maW5kU2VhdFByaWNlOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/validators.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/lib/wallet-account.js":
/*!********************************************************!*\
  !*** ./node_modules/near-api-js/lib/wallet-account.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WalletConnection = exports.ConnectedWalletAccount = void 0;\nvar wallet_account_1 = __webpack_require__(/*! @near-js/wallet-account */ \"./node_modules/@near-js/wallet-account/lib/index.js\");\nObject.defineProperty(exports, \"ConnectedWalletAccount\", ({ enumerable: true, get: function () { return wallet_account_1.ConnectedWalletAccount; } }));\nObject.defineProperty(exports, \"WalletConnection\", ({ enumerable: true, get: function () { return wallet_account_1.WalletConnection; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3dhbGxldC1hY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLDhCQUE4QjtBQUN6RCx1QkFBdUIsbUJBQU8sQ0FBQyxvRkFBeUI7QUFDeEQsMERBQXlELEVBQUUscUNBQXFDLG1EQUFtRCxFQUFDO0FBQ3BKLG9EQUFtRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbGliL3dhbGxldC1hY2NvdW50LmpzPzA1NjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldhbGxldENvbm5lY3Rpb24gPSBleHBvcnRzLkNvbm5lY3RlZFdhbGxldEFjY291bnQgPSB2b2lkIDA7XG52YXIgd2FsbGV0X2FjY291bnRfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbm5lY3RlZFdhbGxldEFjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuQ29ubmVjdGVkV2FsbGV0QWNjb3VudDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIldhbGxldENvbm5lY3Rpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHdhbGxldF9hY2NvdW50XzEuV2FsbGV0Q29ubmVjdGlvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/lib/wallet-account.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js":
/*!********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeySize = exports.KeyType = void 0;\n/** All supported key types */\nvar KeyType;\n(function (KeyType) {\n    KeyType[KeyType[\"ED25519\"] = 0] = \"ED25519\";\n    KeyType[KeyType[\"SECP256K1\"] = 1] = \"SECP256K1\";\n})(KeyType = exports.KeyType || (exports.KeyType = {}));\nvar KeySize;\n(function (KeySize) {\n    KeySize[KeySize[\"SECRET_KEY\"] = 32] = \"SECRET_KEY\";\n    KeySize[KeySize[\"ED25519_PUBLIC_KEY\"] = 32] = \"ED25519_PUBLIC_KEY\";\n    KeySize[KeySize[\"SECP256k1_PUBLIC_KEY\"] = 64] = \"SECP256k1_PUBLIC_KEY\";\n})(KeySize = exports.KeySize || (exports.KeySize = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGVBQWUsR0FBRyxlQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyxlQUFlLEtBQUs7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDLGVBQWUsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvY29uc3RhbnRzLmpzP2M0YTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVNpemUgPSBleHBvcnRzLktleVR5cGUgPSB2b2lkIDA7XG4vKiogQWxsIHN1cHBvcnRlZCBrZXkgdHlwZXMgKi9cbnZhciBLZXlUeXBlO1xuKGZ1bmN0aW9uIChLZXlUeXBlKSB7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiRUQyNTUxOVwiXSA9IDBdID0gXCJFRDI1NTE5XCI7XG4gICAgS2V5VHlwZVtLZXlUeXBlW1wiU0VDUDI1NksxXCJdID0gMV0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoS2V5VHlwZSA9IGV4cG9ydHMuS2V5VHlwZSB8fCAoZXhwb3J0cy5LZXlUeXBlID0ge30pKTtcbnZhciBLZXlTaXplO1xuKGZ1bmN0aW9uIChLZXlTaXplKSB7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUkVUX0tFWVwiXSA9IDMyXSA9IFwiU0VDUkVUX0tFWVwiO1xuICAgIEtleVNpemVbS2V5U2l6ZVtcIkVEMjU1MTlfUFVCTElDX0tFWVwiXSA9IDMyXSA9IFwiRUQyNTUxOV9QVUJMSUNfS0VZXCI7XG4gICAgS2V5U2l6ZVtLZXlTaXplW1wiU0VDUDI1NmsxX1BVQkxJQ19LRVlcIl0gPSA2NF0gPSBcIlNFQ1AyNTZrMV9QVUJMSUNfS0VZXCI7XG59KShLZXlTaXplID0gZXhwb3J0cy5LZXlTaXplIHx8IChleHBvcnRzLktleVNpemUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = exports.KeyPairSecp256k1 = exports.KeyPairEd25519 = exports.KeyPair = exports.KeyType = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js\");\nObject.defineProperty(exports, \"KeyType\", ({ enumerable: true, get: function () { return constants_1.KeyType; } }));\nvar key_pair_1 = __webpack_require__(/*! ./key_pair */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair.js\");\nObject.defineProperty(exports, \"KeyPair\", ({ enumerable: true, get: function () { return key_pair_1.KeyPair; } }));\nvar key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nObject.defineProperty(exports, \"KeyPairEd25519\", ({ enumerable: true, get: function () { return key_pair_ed25519_1.KeyPairEd25519; } }));\nvar key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nObject.defineProperty(exports, \"KeyPairSecp256k1\", ({ enumerable: true, get: function () { return key_pair_secp256k1_1.KeyPairSecp256k1; } }));\nvar public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/public_key.js\");\nObject.defineProperty(exports, \"PublicKey\", ({ enumerable: true, get: function () { return public_key_1.PublicKey; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsd0JBQXdCLEdBQUcsc0JBQXNCLEdBQUcsZUFBZSxHQUFHLGVBQWU7QUFDekcsa0JBQWtCLG1CQUFPLENBQUMsNkZBQWE7QUFDdkMsMkNBQTBDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2pILGlCQUFpQixtQkFBTyxDQUFDLDJGQUFZO0FBQ3JDLDJDQUEwQyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNoSCx5QkFBeUIsbUJBQU8sQ0FBQywyR0FBb0I7QUFDckQsa0RBQWlELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3RJLDJCQUEyQixtQkFBTyxDQUFDLCtHQUFzQjtBQUN6RCxvREFBbUQsRUFBRSxxQ0FBcUMsaURBQWlELEVBQUM7QUFDNUksbUJBQW1CLG1CQUFPLENBQUMsK0ZBQWM7QUFDekMsNkNBQTRDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9pbmRleC5qcz82ZWMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5QdWJsaWNLZXkgPSBleHBvcnRzLktleVBhaXJTZWNwMjU2azEgPSBleHBvcnRzLktleVBhaXJFZDI1NTE5ID0gZXhwb3J0cy5LZXlQYWlyID0gZXhwb3J0cy5LZXlUeXBlID0gdm9pZCAwO1xudmFyIGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY29uc3RhbnRzXzEuS2V5VHlwZTsgfSB9KTtcbnZhciBrZXlfcGFpcl8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl8xLktleVBhaXI7IH0gfSk7XG52YXIga2V5X3BhaXJfZWQyNTUxOV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfZWQyNTUxOVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIktleVBhaXJFZDI1NTE5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9lZDI1NTE5XzEuS2V5UGFpckVkMjU1MTk7IH0gfSk7XG52YXIga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJLZXlQYWlyU2VjcDI1NmsxXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxOyB9IH0pO1xudmFyIHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQdWJsaWNLZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmxpY19rZXlfMS5QdWJsaWNLZXk7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPair = void 0;\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst key_pair_ed25519_1 = __webpack_require__(/*! ./key_pair_ed25519 */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\");\nconst key_pair_secp256k1_1 = __webpack_require__(/*! ./key_pair_secp256k1 */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\");\nclass KeyPair extends key_pair_base_1.KeyPairBase {\n    /**\n     * @param curve Name of elliptical curve, case-insensitive\n     * @returns Random KeyPair based on the curve\n     */\n    static fromRandom(curve) {\n        switch (curve.toUpperCase()) {\n            case 'ED25519': return key_pair_ed25519_1.KeyPairEd25519.fromRandom();\n            case 'SECP256K1': return key_pair_secp256k1_1.KeyPairSecp256k1.fromRandom();\n            default: throw new Error(`Unknown curve ${curve}`);\n        }\n    }\n    /**\n     * Creates a key pair from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {KeyPair} The key pair created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        if (parts.length === 2) {\n            switch (parts[0].toUpperCase()) {\n                case 'ED25519': return new key_pair_ed25519_1.KeyPairEd25519(parts[1]);\n                case 'SECP256K1': return new key_pair_secp256k1_1.KeyPairSecp256k1(parts[1]);\n                default: throw new Error(`Unknown curve: ${parts[0]}`);\n            }\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n    }\n}\nexports.KeyPair = KeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZTtBQUNmLHdCQUF3QixtQkFBTyxDQUFDLHFHQUFpQjtBQUNqRCwyQkFBMkIsbUJBQU8sQ0FBQywyR0FBb0I7QUFDdkQsNkJBQTZCLG1CQUFPLENBQUMsK0dBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxNQUFNO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxTQUFTO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXIuanM/YmRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpciA9IHZvaWQgMDtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBrZXlfcGFpcl9lZDI1NTE5XzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9lZDI1NTE5XCIpO1xuY29uc3Qga2V5X3BhaXJfc2VjcDI1NmsxXzEgPSByZXF1aXJlKFwiLi9rZXlfcGFpcl9zZWNwMjU2azFcIik7XG5jbGFzcyBLZXlQYWlyIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gY3VydmUgTmFtZSBvZiBlbGxpcHRpY2FsIGN1cnZlLCBjYXNlLWluc2Vuc2l0aXZlXG4gICAgICogQHJldHVybnMgUmFuZG9tIEtleVBhaXIgYmFzZWQgb24gdGhlIGN1cnZlXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oY3VydmUpIHtcbiAgICAgICAgc3dpdGNoIChjdXJ2ZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICAgICAgICBjYXNlICdFRDI1NTE5JzogcmV0dXJuIGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBjYXNlICdTRUNQMjU2SzEnOiByZXR1cm4ga2V5X3BhaXJfc2VjcDI1NmsxXzEuS2V5UGFpclNlY3AyNTZrMS5mcm9tUmFuZG9tKCk7XG4gICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmUgJHtjdXJ2ZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEga2V5IHBhaXIgZnJvbSBhbiBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHBhcmFtIGVuY29kZWRLZXkgVGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKiBAcmV0dXJucyB7S2V5UGFpcn0gVGhlIGtleSBwYWlyIGNyZWF0ZWQgZnJvbSB0aGUgZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGVuY29kZWRLZXkpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSBlbmNvZGVkS2V5LnNwbGl0KCc6Jyk7XG4gICAgICAgIGlmIChwYXJ0cy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIHN3aXRjaCAocGFydHNbMF0udG9VcHBlckNhc2UoKSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0VEMjU1MTknOiByZXR1cm4gbmV3IGtleV9wYWlyX2VkMjU1MTlfMS5LZXlQYWlyRWQyNTUxOShwYXJ0c1sxXSk7XG4gICAgICAgICAgICAgICAgY2FzZSAnU0VDUDI1NksxJzogcmV0dXJuIG5ldyBrZXlfcGFpcl9zZWNwMjU2azFfMS5LZXlQYWlyU2VjcDI1NmsxKHBhcnRzWzFdKTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY3VydmU6ICR7cGFydHNbMF19YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgZW5jb2RlZCBrZXkgZm9ybWF0LCBtdXN0IGJlIDxjdXJ2ZT46PGVuY29kZWQga2V5PicpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyID0gS2V5UGFpcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_base.js":
/*!************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_base.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairBase = void 0;\nclass KeyPairBase {\n}\nexports.KeyPairBase = KeyPairBase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfYmFzZS5qcz8yZDEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5LZXlQYWlyQmFzZSA9IHZvaWQgMDtcbmNsYXNzIEtleVBhaXJCYXNlIHtcbn1cbmV4cG9ydHMuS2V5UGFpckJhc2UgPSBLZXlQYWlyQmFzZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_base.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_ed25519.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_ed25519.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairEd25519 = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/public_key.js\");\n/**\n * This class provides key pair functionality for Ed25519 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n */\nclass KeyPairEd25519 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        this.publicKey = new public_key_1.PublicKey({ keyType: constants_1.KeyType.ED25519, data: publicKey });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const publicKey = ed25519_1.ed25519.getPublicKey(new Uint8Array(secretKey));\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairEd25519((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    /**\n     * Signs a message using the key pair's secret key.\n     * @param message The message to be signed.\n     * @returns {Signature} The signature object containing the signature and the public key.\n     */\n    sign(message) {\n        const signature = ed25519_1.ed25519.sign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature, publicKey: this.publicKey };\n    }\n    /**\n     * Verifies the signature of a message using the key pair's public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    /**\n     * Returns a string representation of the key pair in the format 'ed25519:[extendedSecretKey]'.\n     * @returns {string} The string representation of the key pair.\n     */\n    toString() {\n        return `ed25519:${this.extendedSecretKey}`;\n    }\n    /**\n     * Retrieves the public key associated with the key pair.\n     * @returns {PublicKey} The public key.\n     */\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairEd25519 = KeyPairEd25519;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfZWQyNTUxOS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixnQkFBZ0IsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQXVCO0FBQ2pELHNDQUFzQyxtQkFBTyxDQUFDLDBEQUFhO0FBQzNELG9CQUFvQixtQkFBTyxDQUFDLDZGQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHFHQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQywrRkFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0QsdURBQXVEO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFdBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsU0FBUztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0EsMEJBQTBCLHVCQUF1QjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9lZDI1NTE5LmpzPzdkNWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCByYW5kb21ieXRlc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyYW5kb21ieXRlc1wiKSk7XG5jb25zdCBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmNvbnN0IGtleV9wYWlyX2Jhc2VfMSA9IHJlcXVpcmUoXCIuL2tleV9wYWlyX2Jhc2VcIik7XG5jb25zdCBwdWJsaWNfa2V5XzEgPSByZXF1aXJlKFwiLi9wdWJsaWNfa2V5XCIpO1xuLyoqXG4gKiBUaGlzIGNsYXNzIHByb3ZpZGVzIGtleSBwYWlyIGZ1bmN0aW9uYWxpdHkgZm9yIEVkMjU1MTkgY3VydmU6XG4gKiBnZW5lcmF0aW5nIGtleSBwYWlycywgZW5jb2Rpbmcga2V5IHBhaXJzLCBzaWduaW5nIGFuZCB2ZXJpZnlpbmcuXG4gKi9cbmNsYXNzIEtleVBhaXJFZDI1NTE5IGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3QgcHVibGljS2V5ID0gZWQyNTUxOV8xLmVkMjU1MTkuZ2V0UHVibGljS2V5KG5ldyBVaW50OEFycmF5KHNlY3JldEtleSkpO1xuICAgICAgICB0aGlzLnB1YmxpY0tleSA9IG5ldyBwdWJsaWNfa2V5XzEuUHVibGljS2V5KHsga2V5VHlwZTogY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5LCBkYXRhOiBwdWJsaWNLZXkgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9ICgwLCByYW5kb21ieXRlc18xLmRlZmF1bHQpKGNvbnN0YW50c18xLktleVNpemUuU0VDUkVUX0tFWSk7XG4gICAgICAgIGNvbnN0IHB1YmxpY0tleSA9IGVkMjU1MTlfMS5lZDI1NTE5LmdldFB1YmxpY0tleShuZXcgVWludDhBcnJheShzZWNyZXRLZXkpKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyRWQyNTUxOSgoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKShleHRlbmRlZFNlY3JldEtleSkpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTaWducyBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3Mgc2VjcmV0IGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSBzaWduZWQuXG4gICAgICogQHJldHVybnMge1NpZ25hdHVyZX0gVGhlIHNpZ25hdHVyZSBvYmplY3QgY29udGFpbmluZyB0aGUgc2lnbmF0dXJlIGFuZCB0aGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBzaWduKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gZWQyNTUxOV8xLmVkMjU1MTkuc2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmUsIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmVyaWZpZXMgdGhlIHNpZ25hdHVyZSBvZiBhIG1lc3NhZ2UgdXNpbmcgdGhlIGtleSBwYWlyJ3MgcHVibGljIGtleS5cbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBUaGUgbWVzc2FnZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcGFyYW0gc2lnbmF0dXJlIFRoZSBzaWduYXR1cmUgdG8gYmUgdmVyaWZpZWQuXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IGB0cnVlYCBpZiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAgICAgKi9cbiAgICB2ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleS52ZXJpZnkobWVzc2FnZSwgc2lnbmF0dXJlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUga2V5IHBhaXIgaW4gdGhlIGZvcm1hdCAnZWQyNTUxOTpbZXh0ZW5kZWRTZWNyZXRLZXldJy5cbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBrZXkgcGFpci5cbiAgICAgKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBlZDI1NTE5OiR7dGhpcy5leHRlbmRlZFNlY3JldEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgdGhlIHB1YmxpYyBrZXkgYXNzb2NpYXRlZCB3aXRoIHRoZSBrZXkgcGFpci5cbiAgICAgKiBAcmV0dXJucyB7UHVibGljS2V5fSBUaGUgcHVibGljIGtleS5cbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnB1YmxpY0tleTtcbiAgICB9XG59XG5leHBvcnRzLktleVBhaXJFZDI1NTE5ID0gS2V5UGFpckVkMjU1MTk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_ed25519.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyPairSecp256k1 = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js\");\nconst key_pair_base_1 = __webpack_require__(/*! ./key_pair_base */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_base.js\");\nconst public_key_1 = __webpack_require__(/*! ./public_key */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/public_key.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst randombytes_1 = __importDefault(__webpack_require__(/*! randombytes */ \"./node_modules/randombytes/browser.js\"));\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\n/**\n * This class provides key pair functionality for secp256k1 curve:\n * generating key pairs, encoding key pairs, signing and verifying.\n * nearcore expects secp256k1 public keys to be 64 bytes at all times,\n * even when string encoded the secp256k1 library returns 65 byte keys\n * (including a 1 byte header that indicates how the pubkey was encoded).\n * We'll force the secp256k1 library to always encode uncompressed\n * keys with the corresponding 0x04 header byte, then manually\n * insert/remove that byte as needed.\n */\nclass KeyPairSecp256k1 extends key_pair_base_1.KeyPairBase {\n    /**\n     * Construct an instance of key pair given a secret key.\n     * It's generally assumed that these are encoded in base58.\n     * @param {string} extendedSecretKey\n     */\n    constructor(extendedSecretKey) {\n        super();\n        const decoded = (0, utils_1.baseDecode)(extendedSecretKey);\n        const secretKey = new Uint8Array(decoded.slice(0, constants_1.KeySize.SECRET_KEY));\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const data = withHeader.subarray(1, withHeader.length); // remove the 0x04 header byte\n        this.publicKey = new public_key_1.PublicKey({\n            keyType: constants_1.KeyType.SECP256K1,\n            data\n        });\n        this.secretKey = (0, utils_1.baseEncode)(secretKey);\n        this.extendedSecretKey = extendedSecretKey;\n    }\n    /**\n     * Generate a new random keypair.\n     * @example\n     * const keyRandom = KeyPair.fromRandom();\n     * keyRandom.publicKey\n     * // returns [PUBLIC_KEY]\n     *\n     * keyRandom.secretKey\n     * // returns [SECRET_KEY]\n     */\n    static fromRandom() {\n        // TODO: find better way to generate PK\n        const secretKey = (0, randombytes_1.default)(constants_1.KeySize.SECRET_KEY);\n        const withHeader = secp256k1_1.default.publicKeyCreate(new Uint8Array(secretKey), false);\n        const publicKey = withHeader.subarray(1, withHeader.length);\n        const extendedSecretKey = new Uint8Array([...secretKey, ...publicKey]);\n        return new KeyPairSecp256k1((0, utils_1.baseEncode)(extendedSecretKey));\n    }\n    sign(message) {\n        // nearcore expects 65 byte signatures formed by appending the recovery id to the 64 byte signature\n        const { signature, recid } = secp256k1_1.default.ecdsaSign(message, (0, utils_1.baseDecode)(this.secretKey));\n        return { signature: new Uint8Array([...signature, recid]), publicKey: this.publicKey };\n    }\n    verify(message, signature) {\n        return this.publicKey.verify(message, signature);\n    }\n    toString() {\n        return `secp256k1:${this.extendedSecretKey}`;\n    }\n    getPublicKey() {\n        return this.publicKey;\n    }\n}\nexports.KeyPairSecp256k1 = KeyPairSecp256k1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIva2V5X3BhaXJfc2VjcDI1NmsxLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLG9CQUFvQixtQkFBTyxDQUFDLDZGQUFhO0FBQ3pDLHdCQUF3QixtQkFBTyxDQUFDLHFHQUFpQjtBQUNqRCxxQkFBcUIsbUJBQU8sQ0FBQywrRkFBYztBQUMzQyxvQ0FBb0MsbUJBQU8sQ0FBQyx1REFBVztBQUN2RCxzQ0FBc0MsbUJBQU8sQ0FBQywwREFBYTtBQUMzRCxnQkFBZ0IsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsbUJBQW1CO0FBQ25DLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHVCQUF1QjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvY3J5cHRvL2xpYi9rZXlfcGFpcl9zZWNwMjU2azEuanM/YWZiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuS2V5UGFpclNlY3AyNTZrMSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3Qga2V5X3BhaXJfYmFzZV8xID0gcmVxdWlyZShcIi4va2V5X3BhaXJfYmFzZVwiKTtcbmNvbnN0IHB1YmxpY19rZXlfMSA9IHJlcXVpcmUoXCIuL3B1YmxpY19rZXlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IHJhbmRvbWJ5dGVzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInJhbmRvbWJ5dGVzXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdXRpbHNcIik7XG4vKipcbiAqIFRoaXMgY2xhc3MgcHJvdmlkZXMga2V5IHBhaXIgZnVuY3Rpb25hbGl0eSBmb3Igc2VjcDI1NmsxIGN1cnZlOlxuICogZ2VuZXJhdGluZyBrZXkgcGFpcnMsIGVuY29kaW5nIGtleSBwYWlycywgc2lnbmluZyBhbmQgdmVyaWZ5aW5nLlxuICogbmVhcmNvcmUgZXhwZWN0cyBzZWNwMjU2azEgcHVibGljIGtleXMgdG8gYmUgNjQgYnl0ZXMgYXQgYWxsIHRpbWVzLFxuICogZXZlbiB3aGVuIHN0cmluZyBlbmNvZGVkIHRoZSBzZWNwMjU2azEgbGlicmFyeSByZXR1cm5zIDY1IGJ5dGUga2V5c1xuICogKGluY2x1ZGluZyBhIDEgYnl0ZSBoZWFkZXIgdGhhdCBpbmRpY2F0ZXMgaG93IHRoZSBwdWJrZXkgd2FzIGVuY29kZWQpLlxuICogV2UnbGwgZm9yY2UgdGhlIHNlY3AyNTZrMSBsaWJyYXJ5IHRvIGFsd2F5cyBlbmNvZGUgdW5jb21wcmVzc2VkXG4gKiBrZXlzIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgMHgwNCBoZWFkZXIgYnl0ZSwgdGhlbiBtYW51YWxseVxuICogaW5zZXJ0L3JlbW92ZSB0aGF0IGJ5dGUgYXMgbmVlZGVkLlxuICovXG5jbGFzcyBLZXlQYWlyU2VjcDI1NmsxIGV4dGVuZHMga2V5X3BhaXJfYmFzZV8xLktleVBhaXJCYXNlIHtcbiAgICAvKipcbiAgICAgKiBDb25zdHJ1Y3QgYW4gaW5zdGFuY2Ugb2Yga2V5IHBhaXIgZ2l2ZW4gYSBzZWNyZXQga2V5LlxuICAgICAqIEl0J3MgZ2VuZXJhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgZW5jb2RlZCBpbiBiYXNlNTguXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4dGVuZGVkU2VjcmV0S2V5XG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZXh0ZW5kZWRTZWNyZXRLZXkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9ICgwLCB1dGlsc18xLmJhc2VEZWNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KTtcbiAgICAgICAgY29uc3Qgc2VjcmV0S2V5ID0gbmV3IFVpbnQ4QXJyYXkoZGVjb2RlZC5zbGljZSgwLCBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpKTtcbiAgICAgICAgY29uc3Qgd2l0aEhlYWRlciA9IHNlY3AyNTZrMV8xLmRlZmF1bHQucHVibGljS2V5Q3JlYXRlKG5ldyBVaW50OEFycmF5KHNlY3JldEtleSksIGZhbHNlKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHdpdGhIZWFkZXIuc3ViYXJyYXkoMSwgd2l0aEhlYWRlci5sZW5ndGgpOyAvLyByZW1vdmUgdGhlIDB4MDQgaGVhZGVyIGJ5dGVcbiAgICAgICAgdGhpcy5wdWJsaWNLZXkgPSBuZXcgcHVibGljX2tleV8xLlB1YmxpY0tleSh7XG4gICAgICAgICAgICBrZXlUeXBlOiBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSxcbiAgICAgICAgICAgIGRhdGFcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2VjcmV0S2V5ID0gKDAsIHV0aWxzXzEuYmFzZUVuY29kZSkoc2VjcmV0S2V5KTtcbiAgICAgICAgdGhpcy5leHRlbmRlZFNlY3JldEtleSA9IGV4dGVuZGVkU2VjcmV0S2V5O1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZSBhIG5ldyByYW5kb20ga2V5cGFpci5cbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGNvbnN0IGtleVJhbmRvbSA9IEtleVBhaXIuZnJvbVJhbmRvbSgpO1xuICAgICAqIGtleVJhbmRvbS5wdWJsaWNLZXlcbiAgICAgKiAvLyByZXR1cm5zIFtQVUJMSUNfS0VZXVxuICAgICAqXG4gICAgICoga2V5UmFuZG9tLnNlY3JldEtleVxuICAgICAqIC8vIHJldHVybnMgW1NFQ1JFVF9LRVldXG4gICAgICovXG4gICAgc3RhdGljIGZyb21SYW5kb20oKSB7XG4gICAgICAgIC8vIFRPRE86IGZpbmQgYmV0dGVyIHdheSB0byBnZW5lcmF0ZSBQS1xuICAgICAgICBjb25zdCBzZWNyZXRLZXkgPSAoMCwgcmFuZG9tYnl0ZXNfMS5kZWZhdWx0KShjb25zdGFudHNfMS5LZXlTaXplLlNFQ1JFVF9LRVkpO1xuICAgICAgICBjb25zdCB3aXRoSGVhZGVyID0gc2VjcDI1NmsxXzEuZGVmYXVsdC5wdWJsaWNLZXlDcmVhdGUobmV3IFVpbnQ4QXJyYXkoc2VjcmV0S2V5KSwgZmFsc2UpO1xuICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB3aXRoSGVhZGVyLnN1YmFycmF5KDEsIHdpdGhIZWFkZXIubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgZXh0ZW5kZWRTZWNyZXRLZXkgPSBuZXcgVWludDhBcnJheShbLi4uc2VjcmV0S2V5LCAuLi5wdWJsaWNLZXldKTtcbiAgICAgICAgcmV0dXJuIG5ldyBLZXlQYWlyU2VjcDI1NmsxKCgwLCB1dGlsc18xLmJhc2VFbmNvZGUpKGV4dGVuZGVkU2VjcmV0S2V5KSk7XG4gICAgfVxuICAgIHNpZ24obWVzc2FnZSkge1xuICAgICAgICAvLyBuZWFyY29yZSBleHBlY3RzIDY1IGJ5dGUgc2lnbmF0dXJlcyBmb3JtZWQgYnkgYXBwZW5kaW5nIHRoZSByZWNvdmVyeSBpZCB0byB0aGUgNjQgYnl0ZSBzaWduYXR1cmVcbiAgICAgICAgY29uc3QgeyBzaWduYXR1cmUsIHJlY2lkIH0gPSBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhU2lnbihtZXNzYWdlLCAoMCwgdXRpbHNfMS5iYXNlRGVjb2RlKSh0aGlzLnNlY3JldEtleSkpO1xuICAgICAgICByZXR1cm4geyBzaWduYXR1cmU6IG5ldyBVaW50OEFycmF5KFsuLi5zaWduYXR1cmUsIHJlY2lkXSksIHB1YmxpY0tleTogdGhpcy5wdWJsaWNLZXkgfTtcbiAgICB9XG4gICAgdmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXkudmVyaWZ5KG1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYHNlY3AyNTZrMToke3RoaXMuZXh0ZW5kZWRTZWNyZXRLZXl9YDtcbiAgICB9XG4gICAgZ2V0UHVibGljS2V5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wdWJsaWNLZXk7XG4gICAgfVxufVxuZXhwb3J0cy5LZXlQYWlyU2VjcDI1NmsxID0gS2V5UGFpclNlY3AyNTZrMTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/key_pair_secp256k1.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/crypto/lib/public_key.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/crypto/lib/public_key.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PublicKey = void 0;\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nconst ed25519_1 = __webpack_require__(/*! @noble/curves/ed25519 */ \"./node_modules/@noble/curves/ed25519.js\");\nconst secp256k1_1 = __importDefault(__webpack_require__(/*! secp256k1 */ \"./node_modules/secp256k1/elliptic.js\"));\nconst constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/constants.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nfunction key_type_to_str(keyType) {\n    switch (keyType) {\n        case constants_1.KeyType.ED25519: return 'ed25519';\n        case constants_1.KeyType.SECP256K1: return 'secp256k1';\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nfunction str_to_key_type(keyType) {\n    switch (keyType.toLowerCase()) {\n        case 'ed25519': return constants_1.KeyType.ED25519;\n        case 'secp256k1': return constants_1.KeyType.SECP256K1;\n        default: throw new Error(`Unknown key type ${keyType}`);\n    }\n}\nclass ED25519PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1PublicKey extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = constants_1.KeyType.SECP256K1;\n    }\n}\n/**\n * PublicKey representation that has type and bytes of the key.\n */\nclass PublicKey extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === constants_1.KeyType.ED25519) {\n            this.ed25519Key = { keyType, data };\n        }\n        else if (keyType === constants_1.KeyType.SECP256K1) {\n            this.secp256k1Key = { keyType, data };\n        }\n    }\n    /**\n     * Creates a PublicKey instance from a string or an existing PublicKey instance.\n     * @param value The string or PublicKey instance to create a PublicKey from.\n     * @returns {PublicKey} The PublicKey instance.\n     */\n    static from(value) {\n        if (typeof value === 'string') {\n            return PublicKey.fromString(value);\n        }\n        return value;\n    }\n    /**\n     * Creates a PublicKey instance from an encoded key string.\n     * @param encodedKey The encoded key string.\n     * @returns {PublicKey} The PublicKey instance created from the encoded key string.\n     */\n    static fromString(encodedKey) {\n        const parts = encodedKey.split(':');\n        let publicKey;\n        let keyType;\n        if (parts.length === 1) {\n            publicKey = parts[0];\n        }\n        else if (parts.length === 2) {\n            publicKey = parts[1];\n            keyType = str_to_key_type(parts[0]);\n        }\n        else {\n            throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');\n        }\n        const decodedPublicKey = (0, utils_1.baseDecode)(publicKey);\n        if (!keyType) {\n            keyType = decodedPublicKey.length === constants_1.KeySize.SECP256k1_PUBLIC_KEY ? constants_1.KeyType.SECP256K1 : constants_1.KeyType.ED25519;\n        }\n        const keySize = keyType === constants_1.KeyType.ED25519 ? constants_1.KeySize.ED25519_PUBLIC_KEY : constants_1.KeySize.SECP256k1_PUBLIC_KEY;\n        if (decodedPublicKey.length !== keySize) {\n            throw new Error(`Invalid public key size (${decodedPublicKey.length}), must be ${keySize}`);\n        }\n        return new PublicKey({ keyType, data: decodedPublicKey });\n    }\n    /**\n     * Returns a string representation of the public key.\n     * @returns {string} The string representation of the public key.\n     */\n    toString() {\n        const encodedKey = (0, utils_1.baseEncode)(this.data);\n        return `${key_type_to_str(this.keyType)}:${encodedKey}`;\n    }\n    /**\n     * Verifies a message signature using the public key.\n     * @param message The message to be verified.\n     * @param signature The signature to be verified.\n     * @returns {boolean} `true` if the signature is valid, otherwise `false`.\n     */\n    verify(message, signature) {\n        const keyType = this.keyType;\n        const data = this.data;\n        switch (keyType) {\n            case constants_1.KeyType.ED25519:\n                return ed25519_1.ed25519.verify(signature, message, data);\n            case constants_1.KeyType.SECP256K1:\n                return secp256k1_1.default.ecdsaVerify(signature.subarray(0, 64), message, new Uint8Array([0x04, ...data]));\n            default:\n                throw new Error(`Unknown key type: ${keyType}`);\n        }\n    }\n    get keyPair() {\n        return this.ed25519Key || this.secp256k1Key;\n    }\n    get keyType() {\n        return this.keyPair.keyType;\n    }\n    get data() {\n        return this.keyPair.data;\n    }\n}\nexports.PublicKey = PublicKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2NyeXB0by9saWIvcHVibGljX2tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixnQkFBZ0IsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDeEMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQXVCO0FBQ2pELG9DQUFvQyxtQkFBTyxDQUFDLHVEQUFXO0FBQ3ZELG9CQUFvQixtQkFBTyxDQUFDLDZGQUFhO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLDJGQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxRQUFRO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxRQUFRO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDLGdCQUFnQjtBQUNoQjtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixXQUFXO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCx3QkFBd0IsYUFBYSxRQUFRO0FBQ3JHO0FBQ0EsK0JBQStCLGlDQUFpQztBQUNoRTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsUUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOEJBQThCLEdBQUcsV0FBVztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsUUFBUTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9jcnlwdG8vbGliL3B1YmxpY19rZXkuanM/MmNkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHVibGljS2V5ID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy91dGlsc1wiKTtcbmNvbnN0IGVkMjU1MTlfMSA9IHJlcXVpcmUoXCJAbm9ibGUvY3VydmVzL2VkMjU1MTlcIik7XG5jb25zdCBzZWNwMjU2azFfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2VjcDI1NmsxXCIpKTtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmZ1bmN0aW9uIGtleV90eXBlX3RvX3N0cihrZXlUeXBlKSB7XG4gICAgc3dpdGNoIChrZXlUeXBlKSB7XG4gICAgICAgIGNhc2UgY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5OiByZXR1cm4gJ2VkMjU1MTknO1xuICAgICAgICBjYXNlIGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxOiByZXR1cm4gJ3NlY3AyNTZrMSc7XG4gICAgICAgIGRlZmF1bHQ6IHRocm93IG5ldyBFcnJvcihgVW5rbm93biBrZXkgdHlwZSAke2tleVR5cGV9YCk7XG4gICAgfVxufVxuZnVuY3Rpb24gc3RyX3RvX2tleV90eXBlKGtleVR5cGUpIHtcbiAgICBzd2l0Y2ggKGtleVR5cGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICBjYXNlICdlZDI1NTE5JzogcmV0dXJuIGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOTtcbiAgICAgICAgY2FzZSAnc2VjcDI1NmsxJzogcmV0dXJuIGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgICAgICBkZWZhdWx0OiB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24ga2V5IHR5cGUgJHtrZXlUeXBlfWApO1xuICAgIH1cbn1cbmNsYXNzIEVEMjU1MTlQdWJsaWNLZXkgZXh0ZW5kcyB0eXBlc18xLkFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmtleVR5cGUgPSBjb25zdGFudHNfMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgfVxufVxuY2xhc3MgU0VDUDI1NksxUHVibGljS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5rZXlUeXBlID0gY29uc3RhbnRzXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgfVxufVxuLyoqXG4gKiBQdWJsaWNLZXkgcmVwcmVzZW50YXRpb24gdGhhdCBoYXMgdHlwZSBhbmQgYnl0ZXMgb2YgdGhlIGtleS5cbiAqL1xuY2xhc3MgUHVibGljS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGtleVR5cGUsIGRhdGEgfSkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgICAgIGlmIChrZXlUeXBlID09PSBjb25zdGFudHNfMS5LZXlUeXBlLkVEMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuZWQyNTUxOUtleSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleVR5cGUgPT09IGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3AyNTZrMUtleSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBQdWJsaWNLZXkgaW5zdGFuY2UgZnJvbSBhIHN0cmluZyBvciBhbiBleGlzdGluZyBQdWJsaWNLZXkgaW5zdGFuY2UuXG4gICAgICogQHBhcmFtIHZhbHVlIFRoZSBzdHJpbmcgb3IgUHVibGljS2V5IGluc3RhbmNlIHRvIGNyZWF0ZSBhIFB1YmxpY0tleSBmcm9tLlxuICAgICAqIEByZXR1cm5zIHtQdWJsaWNLZXl9IFRoZSBQdWJsaWNLZXkgaW5zdGFuY2UuXG4gICAgICovXG4gICAgc3RhdGljIGZyb20odmFsdWUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJldHVybiBQdWJsaWNLZXkuZnJvbVN0cmluZyh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgUHVibGljS2V5IGluc3RhbmNlIGZyb20gYW4gZW5jb2RlZCBrZXkgc3RyaW5nLlxuICAgICAqIEBwYXJhbSBlbmNvZGVkS2V5IFRoZSBlbmNvZGVkIGtleSBzdHJpbmcuXG4gICAgICogQHJldHVybnMge1B1YmxpY0tleX0gVGhlIFB1YmxpY0tleSBpbnN0YW5jZSBjcmVhdGVkIGZyb20gdGhlIGVuY29kZWQga2V5IHN0cmluZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbVN0cmluZyhlbmNvZGVkS2V5KSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gZW5jb2RlZEtleS5zcGxpdCgnOicpO1xuICAgICAgICBsZXQgcHVibGljS2V5O1xuICAgICAgICBsZXQga2V5VHlwZTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgcHVibGljS2V5ID0gcGFydHNbMF07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocGFydHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgICAgICBwdWJsaWNLZXkgPSBwYXJ0c1sxXTtcbiAgICAgICAgICAgIGtleVR5cGUgPSBzdHJfdG9fa2V5X3R5cGUocGFydHNbMF0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGVuY29kZWQga2V5IGZvcm1hdCwgbXVzdCBiZSA8Y3VydmU+OjxlbmNvZGVkIGtleT4nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZWNvZGVkUHVibGljS2V5ID0gKDAsIHV0aWxzXzEuYmFzZURlY29kZSkocHVibGljS2V5KTtcbiAgICAgICAgaWYgKCFrZXlUeXBlKSB7XG4gICAgICAgICAgICBrZXlUeXBlID0gZGVjb2RlZFB1YmxpY0tleS5sZW5ndGggPT09IGNvbnN0YW50c18xLktleVNpemUuU0VDUDI1NmsxX1BVQkxJQ19LRVkgPyBjb25zdGFudHNfMS5LZXlUeXBlLlNFQ1AyNTZLMSA6IGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBrZXlTaXplID0ga2V5VHlwZSA9PT0gY29uc3RhbnRzXzEuS2V5VHlwZS5FRDI1NTE5ID8gY29uc3RhbnRzXzEuS2V5U2l6ZS5FRDI1NTE5X1BVQkxJQ19LRVkgOiBjb25zdGFudHNfMS5LZXlTaXplLlNFQ1AyNTZrMV9QVUJMSUNfS0VZO1xuICAgICAgICBpZiAoZGVjb2RlZFB1YmxpY0tleS5sZW5ndGggIT09IGtleVNpemUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBwdWJsaWMga2V5IHNpemUgKCR7ZGVjb2RlZFB1YmxpY0tleS5sZW5ndGh9KSwgbXVzdCBiZSAke2tleVNpemV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQdWJsaWNLZXkoeyBrZXlUeXBlLCBkYXRhOiBkZWNvZGVkUHVibGljS2V5IH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBwdWJsaWMga2V5LlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIHB1YmxpYyBrZXkuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIGNvbnN0IGVuY29kZWRLZXkgPSAoMCwgdXRpbHNfMS5iYXNlRW5jb2RlKSh0aGlzLmRhdGEpO1xuICAgICAgICByZXR1cm4gYCR7a2V5X3R5cGVfdG9fc3RyKHRoaXMua2V5VHlwZSl9OiR7ZW5jb2RlZEtleX1gO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZmllcyBhIG1lc3NhZ2Ugc2lnbmF0dXJlIHVzaW5nIHRoZSBwdWJsaWMga2V5LlxuICAgICAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIGJlIHZlcmlmaWVkLlxuICAgICAqIEBwYXJhbSBzaWduYXR1cmUgVGhlIHNpZ25hdHVyZSB0byBiZSB2ZXJpZmllZC5cbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gYHRydWVgIGlmIHRoZSBzaWduYXR1cmUgaXMgdmFsaWQsIG90aGVyd2lzZSBgZmFsc2VgLlxuICAgICAqL1xuICAgIHZlcmlmeShtZXNzYWdlLCBzaWduYXR1cmUpIHtcbiAgICAgICAgY29uc3Qga2V5VHlwZSA9IHRoaXMua2V5VHlwZTtcbiAgICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICAgICAgc3dpdGNoIChrZXlUeXBlKSB7XG4gICAgICAgICAgICBjYXNlIGNvbnN0YW50c18xLktleVR5cGUuRUQyNTUxOTpcbiAgICAgICAgICAgICAgICByZXR1cm4gZWQyNTUxOV8xLmVkMjU1MTkudmVyaWZ5KHNpZ25hdHVyZSwgbWVzc2FnZSwgZGF0YSk7XG4gICAgICAgICAgICBjYXNlIGNvbnN0YW50c18xLktleVR5cGUuU0VDUDI1NksxOlxuICAgICAgICAgICAgICAgIHJldHVybiBzZWNwMjU2azFfMS5kZWZhdWx0LmVjZHNhVmVyaWZ5KHNpZ25hdHVyZS5zdWJhcnJheSgwLCA2NCksIG1lc3NhZ2UsIG5ldyBVaW50OEFycmF5KFsweDA0LCAuLi5kYXRhXSkpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24ga2V5IHR5cGU6ICR7a2V5VHlwZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQga2V5UGFpcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZWQyNTUxOUtleSB8fCB0aGlzLnNlY3AyNTZrMUtleTtcbiAgICB9XG4gICAgZ2V0IGtleVR5cGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleVBhaXIua2V5VHlwZTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmtleVBhaXIuZGF0YTtcbiAgICB9XG59XG5leHBvcnRzLlB1YmxpY0tleSA9IFB1YmxpY0tleTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/crypto/lib/public_key.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/keystores/lib/in_memory_key_store.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/keystores/lib/in_memory_key_store.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemoryKeyStore = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js\");\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/keystore.js\");\n/**\n * Simple in-memory keystore for mainly for testing purposes.\n *\n * @see [https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store](https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store)\n * @example\n * ```js\n * import { connect, keyStores, utils } from 'near-api-js';\n *\n * const privateKey = '.......';\n * const keyPair = utils.KeyPair.fromString(privateKey);\n *\n * const keyStore = new keyStores.InMemoryKeyStore();\n * keyStore.setKey('testnet', 'example-account.testnet', keyPair);\n *\n * const config = {\n *   keyStore, // instance of InMemoryKeyStore\n *   networkId: 'testnet',\n *   nodeUrl: 'https://rpc.testnet.near.org',\n *   walletUrl: 'https://wallet.testnet.near.org',\n *   helperUrl: 'https://helper.testnet.near.org',\n *   explorerUrl: 'https://explorer.testnet.near.org'\n * };\n *\n * // inside an async function\n * const near = await connect(config)\n * ```\n */\nclass InMemoryKeyStore extends keystore_1.KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Stores a {@link KeyPair} in in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return crypto_1.KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Removes all {@link KeyPair} from in-memory storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    /** @hidden */\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\nexports.InMemoryKeyStore = InMemoryKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/keystores/lib/in_memory_key_store.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = exports.MergeKeyStore = exports.KeyStore = exports.InMemoryKeyStore = void 0;\nvar in_memory_key_store_1 = __webpack_require__(/*! ./in_memory_key_store */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/in_memory_key_store.js\");\nObject.defineProperty(exports, \"InMemoryKeyStore\", ({ enumerable: true, get: function () { return in_memory_key_store_1.InMemoryKeyStore; } }));\nvar keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/keystore.js\");\nObject.defineProperty(exports, \"KeyStore\", ({ enumerable: true, get: function () { return keystore_1.KeyStore; } }));\nvar merge_key_store_1 = __webpack_require__(/*! ./merge_key_store */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/merge_key_store.js\");\nObject.defineProperty(exports, \"MergeKeyStore\", ({ enumerable: true, get: function () { return merge_key_store_1.MergeKeyStore; } }));\nvar multi_contract_keystore_1 = __webpack_require__(/*! ./multi_contract_keystore */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\");\nObject.defineProperty(exports, \"MultiContractKeyStore\", ({ enumerable: true, get: function () { return multi_contract_keystore_1.MultiContractKeyStore; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcscUJBQXFCLEdBQUcsZ0JBQWdCLEdBQUcsd0JBQXdCO0FBQ25HLDRCQUE0QixtQkFBTyxDQUFDLG9IQUF1QjtBQUMzRCxvREFBbUQsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDN0ksaUJBQWlCLG1CQUFPLENBQUMsOEZBQVk7QUFDckMsNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILHdCQUF3QixtQkFBTyxDQUFDLDRHQUFtQjtBQUNuRCxpREFBZ0QsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDbkksZ0NBQWdDLG1CQUFPLENBQUMsNEhBQTJCO0FBQ25FLHlEQUF3RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvaW5kZXguanM/ODMxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXVsdGlDb250cmFjdEtleVN0b3JlID0gZXhwb3J0cy5NZXJnZUtleVN0b3JlID0gZXhwb3J0cy5LZXlTdG9yZSA9IGV4cG9ydHMuSW5NZW1vcnlLZXlTdG9yZSA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfa2V5X3N0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW5fbWVtb3J5X2tleV9zdG9yZV8xLkluTWVtb3J5S2V5U3RvcmU7IH0gfSk7XG52YXIga2V5c3RvcmVfMSA9IHJlcXVpcmUoXCIuL2tleXN0b3JlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiS2V5U3RvcmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGtleXN0b3JlXzEuS2V5U3RvcmU7IH0gfSk7XG52YXIgbWVyZ2Vfa2V5X3N0b3JlXzEgPSByZXF1aXJlKFwiLi9tZXJnZV9rZXlfc3RvcmVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXJnZUtleVN0b3JlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtZXJnZV9rZXlfc3RvcmVfMS5NZXJnZUtleVN0b3JlOyB9IH0pO1xudmFyIG11bHRpX2NvbnRyYWN0X2tleXN0b3JlXzEgPSByZXF1aXJlKFwiLi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIk11bHRpQ29udHJhY3RLZXlTdG9yZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbXVsdGlfY29udHJhY3Rfa2V5c3RvcmVfMS5NdWx0aUNvbnRyYWN0S2V5U3RvcmU7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/keystores/lib/keystore.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/keystores/lib/keystore.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KeyStore = void 0;\n/**\n * KeyStores are passed to {@link \"@near-js/wallet-account\".near.Near | Near} via {@link \"@near-js/wallet-account\".near.NearConfig | NearConfig}\n * and are used by the {@link \"@near-js/signers\".in_memory_signer.InMemorySigner | InMemorySigner} to sign transactions.\n *\n */\nclass KeyStore {\n}\nexports.KeyStore = KeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIva2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCO0FBQ0EsNEJBQTRCLGtEQUFrRCxLQUFLO0FBQ25GLHdCQUF3QiwyRUFBMkU7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL2tleXN0b3JlLmpzP2RjZDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLktleVN0b3JlID0gdm9pZCAwO1xuLyoqXG4gKiBLZXlTdG9yZXMgYXJlIHBhc3NlZCB0byB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhciB8IE5lYXJ9IHZpYSB7QGxpbmsgXCJAbmVhci1qcy93YWxsZXQtYWNjb3VudFwiLm5lYXIuTmVhckNvbmZpZyB8IE5lYXJDb25maWd9XG4gKiBhbmQgYXJlIHVzZWQgYnkgdGhlIHtAbGluayBcIkBuZWFyLWpzL3NpZ25lcnNcIi5pbl9tZW1vcnlfc2lnbmVyLkluTWVtb3J5U2lnbmVyIHwgSW5NZW1vcnlTaWduZXJ9IHRvIHNpZ24gdHJhbnNhY3Rpb25zLlxuICpcbiAqL1xuY2xhc3MgS2V5U3RvcmUge1xufVxuZXhwb3J0cy5LZXlTdG9yZSA9IEtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/keystores/lib/keystore.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/keystores/lib/merge_key_store.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/keystores/lib/merge_key_store.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MergeKeyStore = void 0;\nconst keystore_1 = __webpack_require__(/*! ./keystore */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/keystore.js\");\nclass MergeKeyStore extends keystore_1.KeyStore {\n    /**\n     * @param keyStores read calls are attempted from start to end of array\n     * @param options KeyStore options\n     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls\n     */\n    constructor(keyStores, options = { writeKeyStoreIndex: 0 }) {\n        super();\n        this.options = options;\n        this.keyStores = keyStores;\n    }\n    /**\n     * Store a {@link KeyPair} to the first index of a key store array\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);\n        });\n    }\n    /**\n     * Gets a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                const keyPair = yield keyStore.getKey(networkId, accountId);\n                if (keyPair) {\n                    return keyPair;\n                }\n            }\n            return null;\n        });\n    }\n    /**\n     * Removes a {@link KeyPair} from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.removeKey(networkId, accountId);\n            }\n        });\n    }\n    /**\n     * Removes all items from each key store\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const keyStore of this.keyStores) {\n                yield keyStore.clear();\n            }\n        });\n    }\n    /**\n     * Get the network(s) from the array of key stores\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const network of yield keyStore.getNetworks()) {\n                    result.add(network);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /**\n     * Gets the account(s) from the array of key stores\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const keyStore of this.keyStores) {\n                for (const account of yield keyStore.getAccounts(networkId)) {\n                    result.add(account);\n                }\n            }\n            return Array.from(result);\n        });\n    }\n    /** @hidden */\n    toString() {\n        return `MergeKeyStore(${this.keyStores.join(', ')})`;\n    }\n}\nexports.MergeKeyStore = MergeKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbWVyZ2Vfa2V5X3N0b3JlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsbUJBQW1CLG1CQUFPLENBQUMsOEZBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVCQUF1QjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGVBQWU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMEJBQTBCO0FBQzFEO0FBQ0E7QUFDQSxxQkFBcUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9rZXlzdG9yZXMvbGliL21lcmdlX2tleV9zdG9yZS5qcz9kMTRlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSB2b2lkIDA7XG5jb25zdCBrZXlzdG9yZV8xID0gcmVxdWlyZShcIi4va2V5c3RvcmVcIik7XG5jbGFzcyBNZXJnZUtleVN0b3JlIGV4dGVuZHMga2V5c3RvcmVfMS5LZXlTdG9yZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGtleVN0b3JlcyByZWFkIGNhbGxzIGFyZSBhdHRlbXB0ZWQgZnJvbSBzdGFydCB0byBlbmQgb2YgYXJyYXlcbiAgICAgKiBAcGFyYW0gb3B0aW9ucyBLZXlTdG9yZSBvcHRpb25zXG4gICAgICogQHBhcmFtIG9wdGlvbnMud3JpdGVLZXlTdG9yZUluZGV4IHRoZSBrZXlzdG9yZSBpbmRleCB0aGF0IHdpbGwgcmVjZWl2ZSBhbGwgd3JpdGUgY2FsbHNcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihrZXlTdG9yZXMsIG9wdGlvbnMgPSB7IHdyaXRlS2V5U3RvcmVJbmRleDogMCB9KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMua2V5U3RvcmVzID0ga2V5U3RvcmVzO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTdG9yZSBhIHtAbGluayBLZXlQYWlyfSB0byB0aGUgZmlyc3QgaW5kZXggb2YgYSBrZXkgc3RvcmUgYXJyYXlcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdGllZCB0byB0aGUga2V5IHBhaXJcbiAgICAgKiBAcGFyYW0ga2V5UGFpciBUaGUga2V5IHBhaXIgdG8gc3RvcmUgaW4gbG9jYWwgc3RvcmFnZVxuICAgICAqL1xuICAgIHNldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZXNbdGhpcy5vcHRpb25zLndyaXRlS2V5U3RvcmVJbmRleF0uc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgYSB7QGxpbmsgS2V5UGFpcn0gZnJvbSB0aGUgYXJyYXkgb2Yga2V5IHN0b3Jlc1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEBwYXJhbSBhY2NvdW50SWQgVGhlIE5FQVIgYWNjb3VudCB0aWVkIHRvIHRoZSBrZXkgcGFpclxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPEtleVBhaXI+fVxuICAgICAqL1xuICAgIGdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBrZXlTdG9yZSBvZiB0aGlzLmtleVN0b3Jlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCBrZXlTdG9yZS5nZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQpO1xuICAgICAgICAgICAgICAgIGlmIChrZXlQYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBrZXlQYWlyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyBhIHtAbGluayBLZXlQYWlyfSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRpZWQgdG8gdGhlIGtleSBwYWlyXG4gICAgICovXG4gICAgcmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQga2V5U3RvcmUucmVtb3ZlS2V5KG5ldHdvcmtJZCwgYWNjb3VudElkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbW92ZXMgYWxsIGl0ZW1zIGZyb20gZWFjaCBrZXkgc3RvcmVcbiAgICAgKi9cbiAgICBjbGVhcigpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5U3RvcmUgb2YgdGhpcy5rZXlTdG9yZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBrZXlTdG9yZS5jbGVhcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0IHRoZSBuZXR3b3JrKHMpIGZyb20gdGhlIGFycmF5IG9mIGtleSBzdG9yZXNcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxzdHJpbmdbXT59XG4gICAgICovXG4gICAgZ2V0TmV0d29ya3MoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBuZXR3b3JrIG9mIHlpZWxkIGtleVN0b3JlLmdldE5ldHdvcmtzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChuZXR3b3JrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgYWNjb3VudChzKSBmcm9tIHRoZSBhcnJheSBvZiBrZXkgc3RvcmVzXG4gICAgICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gICAgICovXG4gICAgZ2V0QWNjb3VudHMobmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleVN0b3JlIG9mIHRoaXMua2V5U3RvcmVzKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhY2NvdW50IG9mIHlpZWxkIGtleVN0b3JlLmdldEFjY291bnRzKG5ldHdvcmtJZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LmFkZChhY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIEBoaWRkZW4gKi9cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGBNZXJnZUtleVN0b3JlKCR7dGhpcy5rZXlTdG9yZXMuam9pbignLCAnKX0pYDtcbiAgICB9XG59XG5leHBvcnRzLk1lcmdlS2V5U3RvcmUgPSBNZXJnZUtleVN0b3JlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/keystores/lib/merge_key_store.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/keystores/lib/multi_contract_keystore.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/keystores/lib/multi_contract_keystore.js ***!
  \*************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MultiContractKeyStore = void 0;\n/**\n * KeyStores are passed to {@link near!Near} via {@link near!NearConfig}\n * and are used by the {@link signer!InMemorySigner} to sign transactions.\n *\n * @see {@link connect}\n */\nclass MultiContractKeyStore {\n}\nexports.MultiContractKeyStore = MultiContractKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL2tleXN0b3Jlcy9saWIvbXVsdGlfY29udHJhY3Rfa2V5c3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCO0FBQ0EsNEJBQTRCLGlCQUFpQixLQUFLO0FBQ2xELHdCQUF3Qiw2QkFBNkI7QUFDckQ7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMva2V5c3RvcmVzL2xpYi9tdWx0aV9jb250cmFjdF9rZXlzdG9yZS5qcz84YTY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSB2b2lkIDA7XG4vKipcbiAqIEtleVN0b3JlcyBhcmUgcGFzc2VkIHRvIHtAbGluayBuZWFyIU5lYXJ9IHZpYSB7QGxpbmsgbmVhciFOZWFyQ29uZmlnfVxuICogYW5kIGFyZSB1c2VkIGJ5IHRoZSB7QGxpbmsgc2lnbmVyIUluTWVtb3J5U2lnbmVyfSB0byBzaWduIHRyYW5zYWN0aW9ucy5cbiAqXG4gKiBAc2VlIHtAbGluayBjb25uZWN0fVxuICovXG5jbGFzcyBNdWx0aUNvbnRyYWN0S2V5U3RvcmUge1xufVxuZXhwb3J0cy5NdWx0aUNvbnRyYWN0S2V5U3RvcmUgPSBNdWx0aUNvbnRyYWN0S2V5U3RvcmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/keystores/lib/multi_contract_keystore.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/exponential-backoff.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/exponential-backoff.js ***!
  \*********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.exponentialBackoff = void 0;\nfunction exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: jitter?\n        let waitTime = startWaitTime;\n        for (let i = 0; i < retryNumber; i++) {\n            const result = yield getResult();\n            if (result) {\n                return result;\n            }\n            yield sleep(waitTime);\n            waitTime *= waitBackoff;\n        }\n        return null;\n    });\n}\nexports.exponentialBackoff = exponentialBackoff;\n// Sleep given number of millis.\nfunction sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvZXhwb25lbnRpYWwtYmFja29mZi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9leHBvbmVudGlhbC1iYWNrb2ZmLmpzPzhlMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xuZnVuY3Rpb24gZXhwb25lbnRpYWxCYWNrb2ZmKHN0YXJ0V2FpdFRpbWUsIHJldHJ5TnVtYmVyLCB3YWl0QmFja29mZiwgZ2V0UmVzdWx0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgLy8gVE9ETzogaml0dGVyP1xuICAgICAgICBsZXQgd2FpdFRpbWUgPSBzdGFydFdhaXRUaW1lO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJldHJ5TnVtYmVyOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIGdldFJlc3VsdCgpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCBzbGVlcCh3YWl0VGltZSk7XG4gICAgICAgICAgICB3YWl0VGltZSAqPSB3YWl0QmFja29mZjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gZXhwb25lbnRpYWxCYWNrb2ZmO1xuLy8gU2xlZXAgZ2l2ZW4gbnVtYmVyIG9mIG1pbGxpcy5cbmZ1bmN0aW9uIHNsZWVwKG1pbGxpcykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbWlsbGlzKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/exponential-backoff.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/failover-rpc-provider.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/failover-rpc-provider.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FailoverRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link FailoverRpcProvider} client class\n * which can be used to interact with multiple [NEAR RPC APIs](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/provider.js\");\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass FailoverRpcProvider extends provider_1.Provider {\n    /**\n     * @param providers list of providers\n     */\n    constructor(providers) {\n        super();\n        if (providers.length === 0) {\n            throw new Error('At least one provider must be specified');\n        }\n        this.providers = providers;\n        this.currentProviderIndex = 0;\n    }\n    switchToNextProvider() {\n        if (this.providers.length === 1)\n            return;\n        if (this.providers.length - 1 <= this.currentProviderIndex) {\n            this.currentProviderIndex = 0;\n        }\n        else {\n            this.currentProviderIndex += 1;\n        }\n        utils_1.Logger.debug(`Switched to provider at the index ${this.currentProviderIndex}`);\n    }\n    get currentProvider() {\n        const provider = this.providers[this.currentProviderIndex];\n        if (!provider)\n            throw new Error(`Provider wasn't found at index ${this.currentProviderIndex}`);\n        return provider;\n    }\n    withBackoff(getResult) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let i = 0; i < this.providers.length; i++) {\n                try {\n                    // each provider implements own retry logic\n                    const result = yield getResult(this.currentProvider);\n                    if (result)\n                        return result;\n                }\n                catch (_a) {\n                    this.switchToNextProvider();\n                }\n            }\n            throw new types_1.TypedError(`Exceeded ${this.providers.length} providers to execute request`, 'RetriesExceeded');\n        });\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.status());\n        });\n    }\n    sendTransactionUntil(signedTransaction, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransactionUntil(signedTransaction, waitUntil));\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransaction(signedTransaction));\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransactionAsync(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.sendTransactionAsync(signedTransaction));\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     */\n    txStatus(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.txStatus(txHash, accountId, waitUntil));\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatusReceipts(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.txStatusReceipts(txHash, accountId, waitUntil));\n        });\n    }\n    query(paramsOrPath, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (data) {\n                return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath, data));\n            }\n            return this.withBackoff((currentProvider) => currentProvider.query(paramsOrPath));\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.block(blockQuery));\n        });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    blockChanges(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.blockChanges(blockQuery));\n        });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.chunk(chunkId));\n        });\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.validators(blockId));\n        });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    experimental_protocolConfig(blockReference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.experimental_protocolConfig(blockReference));\n        });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.lightClientProof(request));\n        });\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    nextLightClientBlock(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.nextLightClientBlock(request));\n        });\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    accessKeyChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.accessKeyChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.singleAccessKeyChanges(accessKeyArray, blockQuery));\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    accountChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.accountChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.contractStateChanges(accountIdArray, blockQuery, keyPrefix));\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractCodeChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.contractCodeChanges(accountIdArray, blockQuery));\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    gasPrice(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.withBackoff((currentProvider) => currentProvider.gasPrice(blockId));\n        });\n    }\n}\nexports.FailoverRpcProvider = FailoverRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/failover-rpc-provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst node_fetch_1 = __importDefault(__webpack_require__(/*! node-fetch */ \"./node_modules/node-fetch/browser.js\"));\nconst http_1 = __importDefault(__webpack_require__(/*! http */ \"./node_modules/next/dist/compiled/stream-http/index.js\"));\nconst https_1 = __importDefault(__webpack_require__(/*! https */ \"./node_modules/next/dist/compiled/https-browserify/index.js\"));\nconst httpAgent = new http_1.default.Agent({ keepAlive: true });\nconst httpsAgent = new https_1.default.Agent({ keepAlive: true });\nfunction agent(_parsedURL) {\n    if (_parsedURL.protocol === 'http:') {\n        return httpAgent;\n    }\n    else {\n        return httpsAgent;\n    }\n}\nfunction default_1(resource, init) {\n    return (0, node_fetch_1.default)(resource, Object.assign({ agent: agent(new URL(resource.toString())) }, init));\n}\nexports[\"default\"] = default_1;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvZmV0Y2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsbUJBQU8sQ0FBQyx3REFBWTtBQUN6RCwrQkFBK0IsbUJBQU8sQ0FBQyxvRUFBTTtBQUM3QyxnQ0FBZ0MsbUJBQU8sQ0FBQywwRUFBTztBQUMvQyw2Q0FBNkMsaUJBQWlCO0FBQzlELCtDQUErQyxpQkFBaUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELDRDQUE0QztBQUMzRztBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9mZXRjaC5qcz9iZDcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgbm9kZV9mZXRjaF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJub2RlLWZldGNoXCIpKTtcbmNvbnN0IGh0dHBfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiaHR0cFwiKSk7XG5jb25zdCBodHRwc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJodHRwc1wiKSk7XG5jb25zdCBodHRwQWdlbnQgPSBuZXcgaHR0cF8xLmRlZmF1bHQuQWdlbnQoeyBrZWVwQWxpdmU6IHRydWUgfSk7XG5jb25zdCBodHRwc0FnZW50ID0gbmV3IGh0dHBzXzEuZGVmYXVsdC5BZ2VudCh7IGtlZXBBbGl2ZTogdHJ1ZSB9KTtcbmZ1bmN0aW9uIGFnZW50KF9wYXJzZWRVUkwpIHtcbiAgICBpZiAoX3BhcnNlZFVSTC5wcm90b2NvbCA9PT0gJ2h0dHA6Jykge1xuICAgICAgICByZXR1cm4gaHR0cEFnZW50O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGh0dHBzQWdlbnQ7XG4gICAgfVxufVxuZnVuY3Rpb24gZGVmYXVsdF8xKHJlc291cmNlLCBpbml0KSB7XG4gICAgcmV0dXJuICgwLCBub2RlX2ZldGNoXzEuZGVmYXVsdCkocmVzb3VyY2UsIE9iamVjdC5hc3NpZ24oeyBhZ2VudDogYWdlbnQobmV3IFVSTChyZXNvdXJjZS50b1N0cmluZygpKSkgfSwgaW5pdCkpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gZGVmYXVsdF8xO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch_json.js":
/*!************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch_json.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nconst http_errors_1 = __importDefault(__webpack_require__(/*! http-errors */ \"./node_modules/http-errors/index.js\"));\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nconst START_WAIT_TIME_MS = 1000;\nconst BACKOFF_MULTIPLIER = 1.5;\nconst RETRY_NUMBER = 10;\n/**\n * Performs an HTTP request to a specified URL or connection and returns the parsed JSON response.\n * @param connectionInfoOrUrl The connection information or URL for the HTTP request.\n * @param json The JSON payload to be included in the request body for POST requests.\n * @returns A Promise that resolves to the parsed JSON response from the HTTP request.\n */\nfunction fetchJson(connectionInfoOrUrl, json) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let connectionInfo = { url: null };\n        if (typeof (connectionInfoOrUrl) === 'string') {\n            connectionInfo.url = connectionInfoOrUrl;\n        }\n        else {\n            connectionInfo = connectionInfoOrUrl;\n        }\n        const response = yield (0, exponential_backoff_1.exponentialBackoff)(START_WAIT_TIME_MS, RETRY_NUMBER, BACKOFF_MULTIPLIER, () => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                const response = yield ((_a = __webpack_require__.g.fetch) !== null && _a !== void 0 ? _a : (yield Promise.resolve().then(() => __importStar(__webpack_require__(/*! ./fetch */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch.js\")))).default)(connectionInfo.url, {\n                    method: json ? 'POST' : 'GET',\n                    body: json ? json : undefined,\n                    headers: Object.assign(Object.assign({}, connectionInfo.headers), { 'Content-Type': 'application/json' })\n                });\n                if (!response.ok) {\n                    if (response.status === 503) {\n                        utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} as it's not available now`);\n                        return null;\n                    }\n                    else if (response.status === 408) {\n                        utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} as the previous connection was unused for some time`);\n                        return null;\n                    }\n                    throw (0, http_errors_1.default)(response.status, yield response.text());\n                }\n                return response;\n            }\n            catch (error) {\n                if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {\n                    utils_1.Logger.warn(`Retrying HTTP request for ${connectionInfo.url} because of error: ${error}`);\n                    return null;\n                }\n                throw error;\n            }\n        }));\n        if (!response) {\n            throw new types_1.TypedError(`Exceeded ${RETRY_NUMBER} attempts for ${connectionInfo.url}.`, 'RetriesExceeded');\n        }\n        return yield response.json();\n    });\n}\nexports.fetchJson = fetchJson;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch_json.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchJson = exports.Provider = exports.FailoverRpcProvider = exports.JsonRpcProvider = exports.exponentialBackoff = void 0;\nvar exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nObject.defineProperty(exports, \"exponentialBackoff\", ({ enumerable: true, get: function () { return exponential_backoff_1.exponentialBackoff; } }));\nvar json_rpc_provider_1 = __webpack_require__(/*! ./json-rpc-provider */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/json-rpc-provider.js\");\nObject.defineProperty(exports, \"JsonRpcProvider\", ({ enumerable: true, get: function () { return json_rpc_provider_1.JsonRpcProvider; } }));\nvar failover_rpc_provider_1 = __webpack_require__(/*! ./failover-rpc-provider */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/failover-rpc-provider.js\");\nObject.defineProperty(exports, \"FailoverRpcProvider\", ({ enumerable: true, get: function () { return failover_rpc_provider_1.FailoverRpcProvider; } }));\nvar provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/provider.js\");\nObject.defineProperty(exports, \"Provider\", ({ enumerable: true, get: function () { return provider_1.Provider; } }));\nvar fetch_json_1 = __webpack_require__(/*! ./fetch_json */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch_json.js\");\nObject.defineProperty(exports, \"fetchJson\", ({ enumerable: true, get: function () { return fetch_json_1.fetchJson; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsZ0JBQWdCLEdBQUcsMkJBQTJCLEdBQUcsdUJBQXVCLEdBQUcsMEJBQTBCO0FBQ3pILDRCQUE0QixtQkFBTyxDQUFDLG9IQUF1QjtBQUMzRCxzREFBcUQsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDakosMEJBQTBCLG1CQUFPLENBQUMsZ0hBQXFCO0FBQ3ZELG1EQUFrRCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUN6SSw4QkFBOEIsbUJBQU8sQ0FBQyx3SEFBeUI7QUFDL0QsdURBQXNELEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3JKLGlCQUFpQixtQkFBTyxDQUFDLDhGQUFZO0FBQ3JDLDRDQUEyQyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNsSCxtQkFBbUIsbUJBQU8sQ0FBQyxrR0FBYztBQUN6Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9wcm92aWRlcnMvbGliL2luZGV4LmpzP2EyNGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZldGNoSnNvbiA9IGV4cG9ydHMuUHJvdmlkZXIgPSBleHBvcnRzLkZhaWxvdmVyUnBjUHJvdmlkZXIgPSBleHBvcnRzLkpzb25ScGNQcm92aWRlciA9IGV4cG9ydHMuZXhwb25lbnRpYWxCYWNrb2ZmID0gdm9pZCAwO1xudmFyIGV4cG9uZW50aWFsX2JhY2tvZmZfMSA9IHJlcXVpcmUoXCIuL2V4cG9uZW50aWFsLWJhY2tvZmZcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHBvbmVudGlhbEJhY2tvZmZcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGV4cG9uZW50aWFsX2JhY2tvZmZfMS5leHBvbmVudGlhbEJhY2tvZmY7IH0gfSk7XG52YXIganNvbl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2pzb24tcnBjLXByb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSnNvblJwY1Byb3ZpZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBqc29uX3JwY19wcm92aWRlcl8xLkpzb25ScGNQcm92aWRlcjsgfSB9KTtcbnZhciBmYWlsb3Zlcl9ycGNfcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL2ZhaWxvdmVyLXJwYy1wcm92aWRlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZhaWxvdmVyUnBjUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZhaWxvdmVyX3JwY19wcm92aWRlcl8xLkZhaWxvdmVyUnBjUHJvdmlkZXI7IH0gfSk7XG52YXIgcHJvdmlkZXJfMSA9IHJlcXVpcmUoXCIuL3Byb3ZpZGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJvdmlkZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3ZpZGVyXzEuUHJvdmlkZXI7IH0gfSk7XG52YXIgZmV0Y2hfanNvbl8xID0gcmVxdWlyZShcIi4vZmV0Y2hfanNvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZldGNoSnNvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmV0Y2hfanNvbl8xLmZldGNoSnNvbjsgfSB9KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/json-rpc-provider.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/json-rpc-provider.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcProvider = void 0;\n/**\n * @module\n * @description\n * This module contains the {@link JsonRpcProvider} client class\n * which can be used to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see {@link \"@near-js/types\".provider | provider} for a list of request and response types\n */\nconst utils_1 = __webpack_require__(/*! @near-js/utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst transactions_1 = __webpack_require__(/*! @near-js/transactions */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/index.js\");\nconst exponential_backoff_1 = __webpack_require__(/*! ./exponential-backoff */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/exponential-backoff.js\");\nconst provider_1 = __webpack_require__(/*! ./provider */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/provider.js\");\nconst fetch_json_1 = __webpack_require__(/*! ./fetch_json */ \"./node_modules/near-api-js/node_modules/@near-js/providers/lib/fetch_json.js\");\n/** @hidden */\n// Default number of retries before giving up on a request.\nconst REQUEST_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst REQUEST_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst REQUEST_RETRY_WAIT_BACKOFF = 1.5;\n/// Keep ids unique across all connections.\nlet _nextId = 123;\n/**\n * Client class to interact with the [NEAR RPC API](https://docs.near.org/api/rpc/introduction).\n * @see [https://github.com/near/nearcore/tree/master/chain/jsonrpc](https://github.com/near/nearcore/tree/master/chain/jsonrpc)\n */\nclass JsonRpcProvider extends provider_1.Provider {\n    /**\n     * @param connectionInfo Connection info\n     */\n    constructor(connectionInfo, options) {\n        super();\n        this.connection = connectionInfo || { url: '' };\n        const defaultOptions = {\n            retries: REQUEST_RETRY_NUMBER,\n            wait: REQUEST_RETRY_WAIT,\n            backoff: REQUEST_RETRY_WAIT_BACKOFF\n        };\n        this.options = Object.assign({}, defaultOptions, options);\n    }\n    /**\n     * Gets the RPC's status\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#general-validator-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('status', []);\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     *\n     * @param signedTransaction The signed transaction being sent\n     * @param waitUntil\n     */\n    sendTransactionUntil(signedTransaction, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = (0, transactions_1.encodeTransaction)(signedTransaction);\n            return this.sendJsonRpc('send_tx', { signed_tx_base64: Buffer.from(bytes).toString('base64'), wait_until: waitUntil });\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and waits until transaction is fully complete\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param signedTransaction The signed transaction being sent\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionUntil(signedTransaction, 'EXECUTED_OPTIMISTIC');\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC and immediately returns transaction hash\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransactionAsync(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendTransactionUntil(signedTransaction, 'NONE');\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * @see [https://docs.near.org/docs/develop/front-end/rpc#transaction-status](https://docs.near.org/docs/develop/front-end/rpc#general-validator-status)\n     *\n     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     */\n    txStatus(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof txHash === 'string') {\n                return this.txStatusString(txHash, accountId, waitUntil);\n            }\n            else {\n                return this.txStatusUint8Array(txHash, accountId, waitUntil);\n            }\n        });\n    }\n    txStatusUint8Array(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n        });\n    }\n    txStatusString(txHash, accountId, waitUntil) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC with receipts\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @param waitUntil\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatusReceipts(txHash, accountId, waitUntil = 'EXECUTED_OPTIMISTIC') {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof txHash === 'string') {\n                return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: txHash, sender_account_id: accountId, wait_until: waitUntil });\n            }\n            else {\n                return this.sendJsonRpc('EXPERIMENTAL_tx_status', { tx_hash: (0, utils_1.baseEncode)(txHash), sender_account_id: accountId, wait_until: waitUntil });\n            }\n        });\n    }\n    /**\n     * Query the RPC by passing an {@link \"@near-js/types\".provider/request.RpcQueryRequest | RpcQueryRequest }\n     * @see [https://docs.near.org/api/rpc/contracts](https://docs.near.org/api/rpc/contracts)\n     *\n     * @typeParam T the shape of the returned query response\n     */\n    query(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            if (args.length === 1) {\n                const _a = args[0], { block_id, blockId } = _a, otherParams = __rest(_a, [\"block_id\", \"blockId\"]);\n                result = yield this.sendJsonRpc('query', Object.assign(Object.assign({}, otherParams), { block_id: block_id || blockId }));\n            }\n            else {\n                const [path, data] = args;\n                result = yield this.sendJsonRpc('query', [path, data]);\n            }\n            if (result && result.error) {\n                throw new types_1.TypedError(`Querying failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`, (0, utils_1.getErrorTypeFromErrorMessage)(result.error, result.error.name));\n            }\n            return result;\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Query changes in block from the RPC\n     * pass block_id OR finality as blockQuery, not both\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     */\n    blockChanges(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * @see [https://docs.near.org/api/rpc/block-chunk](https://docs.near.org/api/rpc/block-chunk)\n     *\n     * @param chunkId Hash of a chunk ID or shard ID\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('chunk', [chunkId]);\n        });\n    }\n    /**\n     * Query validators of the epoch defined by the given block id.\n     * @see [https://docs.near.org/api/rpc/network#validation-status](https://docs.near.org/api/rpc/network#validation-status)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('validators', [blockId]);\n        });\n    }\n    /**\n     * Gets the protocol config at a block from RPC\n     *\n     * @param blockReference specifies the block to get the protocol config for\n     */\n    experimental_protocolConfig(blockReference) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const _a = blockReference, { blockId } = _a, otherParams = __rest(_a, [\"blockId\"]);\n            return yield this.sendJsonRpc('EXPERIMENTAL_protocol_config', Object.assign(Object.assign({}, otherParams), { block_id: blockId }));\n        });\n    }\n    /**\n     * Gets a light client execution proof for verifying execution outcomes\n     * @see [https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof](https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n        });\n    }\n    /**\n     * Returns the next light client block as far in the future as possible from the last known hash\n     * to still be able to validate from that hash. This will either return the last block of the\n     * next epoch, or the last final known block.\n     *\n     * @see [https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block](https://github.com/near/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-block)\n     */\n    nextLightClientBlock(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('next_light_client_block', request);\n        });\n    }\n    /**\n     * Gets access key changes for a given array of accountIds\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)\n     * @returns {Promise<ChangeResult>}\n     */\n    accessKeyChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'all_access_key_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets single access key changes for a given array of access keys\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)\n     * @returns {Promise<ChangeResult>}\n     */\n    singleAccessKeyChanges(accessKeyArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'single_access_key_changes',\n                keys: accessKeyArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets account changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    accountChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'account_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets contract state changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: If you pass a keyPrefix it must be base64 encoded\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'data_changes',\n                account_ids: accountIdArray,\n                key_prefix_base64: keyPrefix,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Gets contract code changes for a given array of accountIds\n     * pass block_id OR finality as blockQuery, not both\n     * Note: Change is returned in a base64 encoded WASM file\n     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)\n     * @returns {Promise<ChangeResult>}\n     */\n    contractCodeChanges(accountIdArray, blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            const { blockId } = blockQuery;\n            return this.sendJsonRpc('EXPERIMENTAL_changes', {\n                changes_type: 'contract_code_changes',\n                account_ids: accountIdArray,\n                block_id: blockId,\n                finality\n            });\n        });\n    }\n    /**\n     * Returns gas price for a specific block_height or block_hash.\n     * @see [https://docs.near.org/api/rpc/gas](https://docs.near.org/api/rpc/gas)\n     *\n     * @param blockId Block hash or height, or null for latest.\n     */\n    gasPrice(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('gas_price', [blockId]);\n        });\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     *\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    sendJsonRpc(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield (0, exponential_backoff_1.exponentialBackoff)(this.options.wait, this.options.retries, this.options.backoff, () => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                try {\n                    const request = {\n                        method,\n                        params,\n                        id: (_nextId++),\n                        jsonrpc: '2.0'\n                    };\n                    const response = yield (0, fetch_json_1.fetchJson)(this.connection, JSON.stringify(request));\n                    if (response.error) {\n                        if (typeof response.error.data === 'object') {\n                            if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                                throw new types_1.TypedError(response.error.data.error_message, response.error.data.error_type);\n                            }\n                            throw (0, utils_1.parseRpcError)(response.error.data);\n                        }\n                        else {\n                            const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                            // NOTE: All this hackery is happening because structured errors not implemented\n                            // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                            if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')\n                                || errorMessage.includes('query has timed out')) {\n                                throw new types_1.TypedError(errorMessage, 'TimeoutError');\n                            }\n                            const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.error.data, '');\n                            if (errorType) {\n                                throw new types_1.TypedError((0, utils_1.formatError)(errorType, params), errorType);\n                            }\n                            throw new types_1.TypedError(errorMessage, response.error.name);\n                        }\n                    }\n                    else if (typeof ((_a = response.result) === null || _a === void 0 ? void 0 : _a.error) === 'string') {\n                        const errorType = (0, utils_1.getErrorTypeFromErrorMessage)(response.result.error, '');\n                        if (errorType) {\n                            throw new utils_1.ServerError((0, utils_1.formatError)(errorType, params), errorType);\n                        }\n                    }\n                    // Success when response.error is not exist\n                    return response;\n                }\n                catch (error) {\n                    if (error.type === 'TimeoutError') {\n                        utils_1.Logger.warn(`Retrying request to ${method} as it has timed out`, params);\n                        return null;\n                    }\n                    throw error;\n                }\n            }));\n            const { result } = response;\n            // From jsonrpc spec:\n            // result\n            //   This member is REQUIRED on success.\n            //   This member MUST NOT exist if there was an error invoking the method.\n            if (typeof result === 'undefined') {\n                throw new types_1.TypedError(`Exceeded ${this.options.retries} attempts for request to ${method}.`, 'RetriesExceeded');\n            }\n            return result;\n        });\n    }\n}\nexports.JsonRpcProvider = JsonRpcProvider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/json-rpc-provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/providers/lib/provider.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/providers/lib/provider.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Provider = void 0;\n/** @hidden */\nclass Provider {\n}\nexports.Provider = Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3Byb3ZpZGVycy9saWIvcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvcHJvdmlkZXJzL2xpYi9wcm92aWRlci5qcz9iOWMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyoqXG4gKiBORUFSIFJQQyBBUEkgcmVxdWVzdCB0eXBlcyBhbmQgcmVzcG9uc2VzXG4gKiBAbW9kdWxlXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUHJvdmlkZXIgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuY2xhc3MgUHJvdmlkZXIge1xufVxuZXhwb3J0cy5Qcm92aWRlciA9IFByb3ZpZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/providers/lib/provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/signers/lib/in_memory_signer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/signers/lib/in_memory_signer.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InMemorySigner = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js\");\nconst keystores_1 = __webpack_require__(/*! @near-js/keystores */ \"./node_modules/near-api-js/node_modules/@near-js/keystores/lib/index.js\");\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"./node_modules/@noble/hashes/sha256.js\");\nconst signer_1 = __webpack_require__(/*! ./signer */ \"./node_modules/near-api-js/node_modules/@near-js/signers/lib/signer.js\");\n/**\n * Signs using in memory key store.\n */\nclass InMemorySigner extends signer_1.Signer {\n    constructor(keyStore) {\n        super();\n        this.keyStore = keyStore;\n    }\n    /**\n     * Creates a single account Signer instance with account, network and keyPair provided.\n     *\n     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).\n     *\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account to assign the key pair to\n     * @param keyPair The keyPair to use for signing\n     */\n    static fromKeyPair(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyStore = new keystores_1.InMemoryKeyStore();\n            yield keyStore.setKey(networkId, accountId, keyPair);\n            return new InMemorySigner(keyStore);\n        });\n    }\n    /**\n     * Creates a public key for the account given\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>}\n     */\n    createKey(accountId, networkId, keyType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = keyType === crypto_1.KeyType.SECP256K1 ? crypto_1.KeyPair.fromRandom('secp256k1') : crypto_1.KeyPair.fromRandom('ed25519');\n            yield this.keyStore.setKey(networkId, accountId, keyPair);\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * Gets the existing public key for a given account\n     * @param accountId The NEAR account to assign a public key to\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<PublicKey>} Returns the public key or null if not found\n     */\n    getPublicKey(accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                return null;\n            }\n            return keyPair.getPublicKey();\n        });\n    }\n    /**\n     * @param message A message to be signed, typically a serialized transaction\n     * @param accountId the NEAR account signing the message\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns {Promise<Signature>}\n     */\n    signMessage(message, accountId, networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const hash = new Uint8Array((0, sha256_1.sha256)(message));\n            if (!accountId) {\n                throw new Error('InMemorySigner requires provided account id');\n            }\n            const keyPair = yield this.keyStore.getKey(networkId, accountId);\n            if (keyPair === null) {\n                throw new Error(`Key for ${accountId} not found in ${networkId}`);\n            }\n            return keyPair.sign(hash);\n        });\n    }\n    toString() {\n        return `InMemorySigner(${this.keyStore})`;\n    }\n}\nexports.InMemorySigner = InMemorySigner;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2luX21lbW9yeV9zaWduZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QixpQkFBaUIsbUJBQU8sQ0FBQyw2RkFBaUI7QUFDMUMsb0JBQW9CLG1CQUFPLENBQUMsbUdBQW9CO0FBQ2hELGlCQUFpQixtQkFBTyxDQUFDLG9FQUFzQjtBQUMvQyxpQkFBaUIsbUJBQU8sQ0FBQyx3RkFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFdBQVcsZUFBZSxVQUFVO0FBQy9FO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGlDQUFpQyxjQUFjO0FBQy9DO0FBQ0E7QUFDQSxzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9pbl9tZW1vcnlfc2lnbmVyLmpzP2I3NTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSW5NZW1vcnlTaWduZXIgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9jcnlwdG9cIik7XG5jb25zdCBrZXlzdG9yZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy9rZXlzdG9yZXNcIik7XG5jb25zdCBzaGEyNTZfMSA9IHJlcXVpcmUoXCJAbm9ibGUvaGFzaGVzL3NoYTI1NlwiKTtcbmNvbnN0IHNpZ25lcl8xID0gcmVxdWlyZShcIi4vc2lnbmVyXCIpO1xuLyoqXG4gKiBTaWducyB1c2luZyBpbiBtZW1vcnkga2V5IHN0b3JlLlxuICovXG5jbGFzcyBJbk1lbW9yeVNpZ25lciBleHRlbmRzIHNpZ25lcl8xLlNpZ25lciB7XG4gICAgY29uc3RydWN0b3Ioa2V5U3RvcmUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5rZXlTdG9yZSA9IGtleVN0b3JlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgc2luZ2xlIGFjY291bnQgU2lnbmVyIGluc3RhbmNlIHdpdGggYWNjb3VudCwgbmV0d29yayBhbmQga2V5UGFpciBwcm92aWRlZC5cbiAgICAgKlxuICAgICAqIEludGVuZGVkIHRvIGJlIHVzZWZ1bCBmb3IgdGVtcG9yYXJ5IGtleXMgKGUuZy4gY2xhaW1pbmcgYSBMaW5rZHJvcCkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIHRoZSBrZXkgcGFpciB0b1xuICAgICAqIEBwYXJhbSBrZXlQYWlyIFRoZSBrZXlQYWlyIHRvIHVzZSBmb3Igc2lnbmluZ1xuICAgICAqL1xuICAgIHN0YXRpYyBmcm9tS2V5UGFpcihuZXR3b3JrSWQsIGFjY291bnRJZCwga2V5UGFpcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qga2V5U3RvcmUgPSBuZXcga2V5c3RvcmVzXzEuSW5NZW1vcnlLZXlTdG9yZSgpO1xuICAgICAgICAgICAgeWllbGQga2V5U3RvcmUuc2V0S2V5KG5ldHdvcmtJZCwgYWNjb3VudElkLCBrZXlQYWlyKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgSW5NZW1vcnlTaWduZXIoa2V5U3RvcmUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHB1YmxpYyBrZXkgZm9yIHRoZSBhY2NvdW50IGdpdmVuXG4gICAgICogQHBhcmFtIGFjY291bnRJZCBUaGUgTkVBUiBhY2NvdW50IHRvIGFzc2lnbiBhIHB1YmxpYyBrZXkgdG9cbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxQdWJsaWNLZXk+fVxuICAgICAqL1xuICAgIGNyZWF0ZUtleShhY2NvdW50SWQsIG5ldHdvcmtJZCwga2V5VHlwZSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3Qga2V5UGFpciA9IGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxID8gY3J5cHRvXzEuS2V5UGFpci5mcm9tUmFuZG9tKCdzZWNwMjU2azEnKSA6IGNyeXB0b18xLktleVBhaXIuZnJvbVJhbmRvbSgnZWQyNTUxOScpO1xuICAgICAgICAgICAgeWllbGQgdGhpcy5rZXlTdG9yZS5zZXRLZXkobmV0d29ya0lkLCBhY2NvdW50SWQsIGtleVBhaXIpO1xuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBleGlzdGluZyBwdWJsaWMga2V5IGZvciBhIGdpdmVuIGFjY291bnRcbiAgICAgKiBAcGFyYW0gYWNjb3VudElkIFRoZSBORUFSIGFjY291bnQgdG8gYXNzaWduIGEgcHVibGljIGtleSB0b1xuICAgICAqIEBwYXJhbSBuZXR3b3JrSWQgVGhlIHRhcmdldGVkIG5ldHdvcmsuIChleC4gZGVmYXVsdCwgYmV0YW5ldCwgZXRj4oCmKVxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlPFB1YmxpY0tleT59IFJldHVybnMgdGhlIHB1YmxpYyBrZXkgb3IgbnVsbCBpZiBub3QgZm91bmRcbiAgICAgKi9cbiAgICBnZXRQdWJsaWNLZXkoYWNjb3VudElkLCBuZXR3b3JrSWQpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuZ2V0UHVibGljS2V5KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gbWVzc2FnZSBBIG1lc3NhZ2UgdG8gYmUgc2lnbmVkLCB0eXBpY2FsbHkgYSBzZXJpYWxpemVkIHRyYW5zYWN0aW9uXG4gICAgICogQHBhcmFtIGFjY291bnRJZCB0aGUgTkVBUiBhY2NvdW50IHNpZ25pbmcgdGhlIG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0gbmV0d29ya0lkIFRoZSB0YXJnZXRlZCBuZXR3b3JrLiAoZXguIGRlZmF1bHQsIGJldGFuZXQsIGV0Y+KApilcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxTaWduYXR1cmU+fVxuICAgICAqL1xuICAgIHNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBoYXNoID0gbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpO1xuICAgICAgICAgICAgaWYgKCFhY2NvdW50SWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0luTWVtb3J5U2lnbmVyIHJlcXVpcmVzIHByb3ZpZGVkIGFjY291bnQgaWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGtleVBhaXIgPSB5aWVsZCB0aGlzLmtleVN0b3JlLmdldEtleShuZXR3b3JrSWQsIGFjY291bnRJZCk7XG4gICAgICAgICAgICBpZiAoa2V5UGFpciA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5IGZvciAke2FjY291bnRJZH0gbm90IGZvdW5kIGluICR7bmV0d29ya0lkfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGtleVBhaXIuc2lnbihoYXNoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gYEluTWVtb3J5U2lnbmVyKCR7dGhpcy5rZXlTdG9yZX0pYDtcbiAgICB9XG59XG5leHBvcnRzLkluTWVtb3J5U2lnbmVyID0gSW5NZW1vcnlTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/signers/lib/in_memory_signer.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/signers/lib/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/signers/lib/index.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = exports.InMemorySigner = void 0;\nvar in_memory_signer_1 = __webpack_require__(/*! ./in_memory_signer */ \"./node_modules/near-api-js/node_modules/@near-js/signers/lib/in_memory_signer.js\");\nObject.defineProperty(exports, \"InMemorySigner\", ({ enumerable: true, get: function () { return in_memory_signer_1.InMemorySigner; } }));\nvar signer_1 = __webpack_require__(/*! ./signer */ \"./node_modules/near-api-js/node_modules/@near-js/signers/lib/signer.js\");\nObject.defineProperty(exports, \"Signer\", ({ enumerable: true, get: function () { return signer_1.Signer; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxzQkFBc0I7QUFDdkMseUJBQXlCLG1CQUFPLENBQUMsNEdBQW9CO0FBQ3JELGtEQUFpRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN0SSxlQUFlLG1CQUFPLENBQUMsd0ZBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvc2lnbmVycy9saWIvaW5kZXguanM/NmQ1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gZXhwb3J0cy5Jbk1lbW9yeVNpZ25lciA9IHZvaWQgMDtcbnZhciBpbl9tZW1vcnlfc2lnbmVyXzEgPSByZXF1aXJlKFwiLi9pbl9tZW1vcnlfc2lnbmVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW5NZW1vcnlTaWduZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGluX21lbW9yeV9zaWduZXJfMS5Jbk1lbW9yeVNpZ25lcjsgfSB9KTtcbnZhciBzaWduZXJfMSA9IHJlcXVpcmUoXCIuL3NpZ25lclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlNpZ25lclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2lnbmVyXzEuU2lnbmVyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/signers/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/signers/lib/signer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/signers/lib/signer.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signer = void 0;\n/**\n * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.\n */\nclass Signer {\n}\nexports.Signer = Signer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3NpZ25lcnMvbGliL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy9zaWduZXJzL2xpYi9zaWduZXIuanM/NmIzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmVyID0gdm9pZCAwO1xuLyoqXG4gKiBHZW5lcmFsIHNpZ25pbmcgaW50ZXJmYWNlLCBjYW4gYmUgdXNlZCBmb3IgaW4gbWVtb3J5IHNpZ25pbmcsIFJQQyBzaW5naW5nLCBleHRlcm5hbCB3YWxsZXQsIEhTTSwgZXRjLlxuICovXG5jbGFzcyBTaWduZXIge1xufVxuZXhwb3J0cy5TaWduZXIgPSBTaWduZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/signers/lib/signer.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/action_creators.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/action_creators.js ***!
  \********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.actionCreators = exports.stringifyJsonOrBytes = void 0;\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/actions.js\");\n/**\n * Creates a full access key with full access permissions.\n * @returns A new full access key.\n */\nfunction fullAccessKey() {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            fullAccess: new actions_1.FullAccessPermission({}),\n        }),\n    });\n}\n/**\n * Creates an access key with function call permission for a specific receiver and method names.\n * @param receiverId The NEAR account ID of the function call receiver.\n * @param methodNames An array of method names allowed for function calls.\n * @param allowance An optional allowance (maximum amount) for the function call. Default: Unlimited.\n * @returns A new access key with function call permission.\n */\nfunction functionCallAccessKey(receiverId, methodNames, allowance) {\n    return new actions_1.AccessKey({\n        nonce: 0,\n        permission: new actions_1.AccessKeyPermission({\n            functionCall: new actions_1.FunctionCallPermission({\n                receiverId,\n                allowance,\n                methodNames,\n            }),\n        }),\n    });\n}\n/**\n * Creates a new action for creating a new NEAR account.\n * @returns A new action for creating a new account.\n */\nfunction createAccount() {\n    return new actions_1.Action({ createAccount: new actions_1.CreateAccount({}) });\n}\n/**\n * Creates a new action for deploying a contract with the provided code.\n * @param code The Uint8Array representing the code of the contract.\n * @returns A new action for deploying a contract.\n */\nfunction deployContract(code) {\n    return new actions_1.Action({ deployContract: new actions_1.DeployContract({ code }) });\n}\n/**\n * Converts an input argument to a Buffer, handling cases for both JSON and Uint8Array.\n * @param args The input argument, either JSON object or Uint8Array.\n * @returns A Buffer representation of the input argument.\n */\nfunction stringifyJsonOrBytes(args) {\n    const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n    return isUint8Array ? args : Buffer.from(JSON.stringify(args));\n}\nexports.stringifyJsonOrBytes = stringifyJsonOrBytes;\n/**\n * Constructs {@link Action} instance representing contract method call.\n *\n * @param methodName the name of the method to call\n * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n *  or `Uint8Array` instance which represents bytes passed as is.\n * @param gas max amount of gas that method call can use\n * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n * @param stringify Convert input arguments into bytes array.\n * @param jsContract  Is contract from JS SDK, skips stringification of arguments.\n */\nfunction functionCall(methodName, args, gas = BigInt(0), deposit = BigInt(0), stringify = stringifyJsonOrBytes, jsContract = false) {\n    if (jsContract) {\n        return new actions_1.Action({\n            functionCall: new actions_1.FunctionCall({ methodName, args, gas, deposit }),\n        });\n    }\n    return new actions_1.Action({\n        functionCall: new actions_1.FunctionCall({\n            methodName,\n            args: stringify(args),\n            gas,\n            deposit,\n        }),\n    });\n}\n/**\n * Creates a new action for transferring funds, optionally specifying a deposit amount.\n * @param deposit The amount to be deposited along with the transfer. Default: 0.\n * @returns A new action for transferring funds.\n */\nfunction transfer(deposit = BigInt(0)) {\n    return new actions_1.Action({ transfer: new actions_1.Transfer({ deposit }) });\n}\n/**\n * Creates a new action for staking tokens, specifying the stake amount and public key.\n * @param stake The amount to be staked. Default: 0.\n * @param publicKey The public key associated with the staking action.\n * @returns A new action for staking tokens.\n */\nfunction stake(stake = BigInt(0), publicKey) {\n    return new actions_1.Action({ stake: new actions_1.Stake({ stake, publicKey }) });\n}\n/**\n * Creates a new action for adding a public key with a specified access key.\n * @param publicKey The public key to be added.\n * @param accessKey The access key associated with the added public key.\n * @returns A new action for adding a public key.\n */\nfunction addKey(publicKey, accessKey) {\n    return new actions_1.Action({ addKey: new actions_1.AddKey({ publicKey, accessKey }) });\n}\n/**\n * Creates a new action for deleting a public key.\n * @param publicKey The public key to be deleted.\n * @returns A new action for deleting a public key.\n */\nfunction deleteKey(publicKey) {\n    return new actions_1.Action({ deleteKey: new actions_1.DeleteKey({ publicKey }) });\n}\n/**\n * Creates a new action for deleting an account with the specified beneficiary ID.\n * @param beneficiaryId The NEAR account ID of the beneficiary.\n * @returns A new action for deleting an account.\n */\nfunction deleteAccount(beneficiaryId) {\n    return new actions_1.Action({ deleteAccount: new actions_1.DeleteAccount({ beneficiaryId }) });\n}\n/**\n * Creates a new action for a signed delegation, specifying the delegate action and signature.\n * @param delegateAction The delegate action to be performed.\n * @param signature The signature associated with the delegate action.\n * @returns A new action for a signed delegation.\n */\nfunction signedDelegate({ delegateAction, signature, }) {\n    return new actions_1.Action({\n        signedDelegate: new actions_1.SignedDelegate({ delegateAction, signature }),\n    });\n}\nexports.actionCreators = {\n    addKey,\n    createAccount,\n    deleteAccount,\n    deleteKey,\n    deployContract,\n    fullAccessKey,\n    functionCall,\n    functionCallAccessKey,\n    signedDelegate,\n    stake,\n    transfer,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/action_creators.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/actions.js":
/*!************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/actions.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Action = exports.SignedDelegate = exports.DeleteAccount = exports.DeleteKey = exports.AddKey = exports.Stake = exports.Transfer = exports.FunctionCall = exports.DeployContract = exports.CreateAccount = exports.IAction = exports.AccessKey = exports.AccessKeyPermission = exports.FullAccessPermission = exports.FunctionCallPermission = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nclass Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nclass FunctionCallPermission extends types_1.Assignable {\n}\nexports.FunctionCallPermission = FunctionCallPermission;\nclass FullAccessPermission extends types_1.Assignable {\n}\nexports.FullAccessPermission = FullAccessPermission;\nclass AccessKeyPermission extends Enum {\n}\nexports.AccessKeyPermission = AccessKeyPermission;\nclass AccessKey extends types_1.Assignable {\n}\nexports.AccessKey = AccessKey;\nclass IAction extends types_1.Assignable {\n}\nexports.IAction = IAction;\nclass CreateAccount extends IAction {\n}\nexports.CreateAccount = CreateAccount;\nclass DeployContract extends IAction {\n}\nexports.DeployContract = DeployContract;\nclass FunctionCall extends IAction {\n}\nexports.FunctionCall = FunctionCall;\nclass Transfer extends IAction {\n}\nexports.Transfer = Transfer;\nclass Stake extends IAction {\n}\nexports.Stake = Stake;\nclass AddKey extends IAction {\n}\nexports.AddKey = AddKey;\nclass DeleteKey extends IAction {\n}\nexports.DeleteKey = DeleteKey;\nclass DeleteAccount extends IAction {\n}\nexports.DeleteAccount = DeleteAccount;\nclass SignedDelegate extends IAction {\n}\nexports.SignedDelegate = SignedDelegate;\n/**\n * Contains a list of the valid transaction Actions available with this API\n * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}\n */\nclass Action extends Enum {\n}\nexports.Action = Action;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvYWN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsc0JBQXNCLEdBQUcscUJBQXFCLEdBQUcsaUJBQWlCLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxnQkFBZ0IsR0FBRyxvQkFBb0IsR0FBRyxzQkFBc0IsR0FBRyxxQkFBcUIsR0FBRyxlQUFlLEdBQUcsaUJBQWlCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCO0FBQ25WLGdCQUFnQixtQkFBTyxDQUFDLDJGQUFnQjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxjQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9hY3Rpb25zLmpzPzUxZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjdGlvbiA9IGV4cG9ydHMuU2lnbmVkRGVsZWdhdGUgPSBleHBvcnRzLkRlbGV0ZUFjY291bnQgPSBleHBvcnRzLkRlbGV0ZUtleSA9IGV4cG9ydHMuQWRkS2V5ID0gZXhwb3J0cy5TdGFrZSA9IGV4cG9ydHMuVHJhbnNmZXIgPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbCA9IGV4cG9ydHMuRGVwbG95Q29udHJhY3QgPSBleHBvcnRzLkNyZWF0ZUFjY291bnQgPSBleHBvcnRzLklBY3Rpb24gPSBleHBvcnRzLkFjY2Vzc0tleSA9IGV4cG9ydHMuQWNjZXNzS2V5UGVybWlzc2lvbiA9IGV4cG9ydHMuRnVsbEFjY2Vzc1Blcm1pc3Npb24gPSBleHBvcnRzLkZ1bmN0aW9uQ2FsbFBlcm1pc3Npb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY2xhc3MgRW51bSB7XG4gICAgY29uc3RydWN0b3IocHJvcGVydGllcykge1xuICAgICAgICBpZiAoT2JqZWN0LmtleXMocHJvcGVydGllcykubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VudW0gY2FuIG9ubHkgdGFrZSBzaW5nbGUgdmFsdWUnKTtcbiAgICAgICAgfVxuICAgICAgICBPYmplY3Qua2V5cyhwcm9wZXJ0aWVzKS5tYXAoKGtleSkgPT4ge1xuICAgICAgICAgICAgdGhpc1trZXldID0gcHJvcGVydGllc1trZXldO1xuICAgICAgICAgICAgdGhpcy5lbnVtID0ga2V5O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5jbGFzcyBGdW5jdGlvbkNhbGxQZXJtaXNzaW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsUGVybWlzc2lvbiA9IEZ1bmN0aW9uQ2FsbFBlcm1pc3Npb247XG5jbGFzcyBGdWxsQWNjZXNzUGVybWlzc2lvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLkZ1bGxBY2Nlc3NQZXJtaXNzaW9uID0gRnVsbEFjY2Vzc1Blcm1pc3Npb247XG5jbGFzcyBBY2Nlc3NLZXlQZXJtaXNzaW9uIGV4dGVuZHMgRW51bSB7XG59XG5leHBvcnRzLkFjY2Vzc0tleVBlcm1pc3Npb24gPSBBY2Nlc3NLZXlQZXJtaXNzaW9uO1xuY2xhc3MgQWNjZXNzS2V5IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuQWNjZXNzS2V5ID0gQWNjZXNzS2V5O1xuY2xhc3MgSUFjdGlvbiBleHRlbmRzIHR5cGVzXzEuQXNzaWduYWJsZSB7XG59XG5leHBvcnRzLklBY3Rpb24gPSBJQWN0aW9uO1xuY2xhc3MgQ3JlYXRlQWNjb3VudCBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5DcmVhdGVBY2NvdW50ID0gQ3JlYXRlQWNjb3VudDtcbmNsYXNzIERlcGxveUNvbnRyYWN0IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlcGxveUNvbnRyYWN0ID0gRGVwbG95Q29udHJhY3Q7XG5jbGFzcyBGdW5jdGlvbkNhbGwgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRnVuY3Rpb25DYWxsID0gRnVuY3Rpb25DYWxsO1xuY2xhc3MgVHJhbnNmZXIgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuVHJhbnNmZXIgPSBUcmFuc2ZlcjtcbmNsYXNzIFN0YWtlIGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLlN0YWtlID0gU3Rha2U7XG5jbGFzcyBBZGRLZXkgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuQWRkS2V5ID0gQWRkS2V5O1xuY2xhc3MgRGVsZXRlS2V5IGV4dGVuZHMgSUFjdGlvbiB7XG59XG5leHBvcnRzLkRlbGV0ZUtleSA9IERlbGV0ZUtleTtcbmNsYXNzIERlbGV0ZUFjY291bnQgZXh0ZW5kcyBJQWN0aW9uIHtcbn1cbmV4cG9ydHMuRGVsZXRlQWNjb3VudCA9IERlbGV0ZUFjY291bnQ7XG5jbGFzcyBTaWduZWREZWxlZ2F0ZSBleHRlbmRzIElBY3Rpb24ge1xufVxuZXhwb3J0cy5TaWduZWREZWxlZ2F0ZSA9IFNpZ25lZERlbGVnYXRlO1xuLyoqXG4gKiBDb250YWlucyBhIGxpc3Qgb2YgdGhlIHZhbGlkIHRyYW5zYWN0aW9uIEFjdGlvbnMgYXZhaWxhYmxlIHdpdGggdGhpcyBBUElcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vbm9taWNvbi5pby9SdW50aW1lU3BlYy9BY3Rpb25zLmh0bWwgfCBBY3Rpb25zIFNwZWN9XG4gKi9cbmNsYXNzIEFjdGlvbiBleHRlbmRzIEVudW0ge1xufVxuZXhwb3J0cy5BY3Rpb24gPSBBY3Rpb247XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/actions.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/create_transaction.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/create_transaction.js ***!
  \***********************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTransaction = void 0;\nconst schema_1 = __webpack_require__(/*! ./schema */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/schema.js\");\n/**\n * Creates a new transaction object with the provided parameters.\n * @param signerId The NEAR account ID of the transaction signer.\n * @param publicKey The public key associated with the signer.\n * @param receiverId The NEAR account ID of the transaction receiver.\n * @param nonce The nonce value for the transaction, represented as a BN, string, or number.\n * @param actions An array of transaction actions to be performed.\n * @param blockHash The hash of the block where the transaction will be included.\n * @returns A new transaction object initialized with the provided parameters.\n */\nfunction createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {\n    const txNonce = typeof nonce === 'bigint' ? nonce : BigInt(nonce);\n    return new schema_1.Transaction({\n        signerId,\n        publicKey,\n        nonce: txNonce,\n        receiverId,\n        actions,\n        blockHash,\n    });\n}\nexports.createTransaction = createTransaction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQyw2RkFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHlCQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvY3JlYXRlX3RyYW5zYWN0aW9uLmpzPzIyNjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVRyYW5zYWN0aW9uID0gdm9pZCAwO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgdHJhbnNhY3Rpb24gb2JqZWN0IHdpdGggdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gc2lnbmVySWQgVGhlIE5FQVIgYWNjb3VudCBJRCBvZiB0aGUgdHJhbnNhY3Rpb24gc2lnbmVyLlxuICogQHBhcmFtIHB1YmxpY0tleSBUaGUgcHVibGljIGtleSBhc3NvY2lhdGVkIHdpdGggdGhlIHNpZ25lci5cbiAqIEBwYXJhbSByZWNlaXZlcklkIFRoZSBORUFSIGFjY291bnQgSUQgb2YgdGhlIHRyYW5zYWN0aW9uIHJlY2VpdmVyLlxuICogQHBhcmFtIG5vbmNlIFRoZSBub25jZSB2YWx1ZSBmb3IgdGhlIHRyYW5zYWN0aW9uLCByZXByZXNlbnRlZCBhcyBhIEJOLCBzdHJpbmcsIG9yIG51bWJlci5cbiAqIEBwYXJhbSBhY3Rpb25zIEFuIGFycmF5IG9mIHRyYW5zYWN0aW9uIGFjdGlvbnMgdG8gYmUgcGVyZm9ybWVkLlxuICogQHBhcmFtIGJsb2NrSGFzaCBUaGUgaGFzaCBvZiB0aGUgYmxvY2sgd2hlcmUgdGhlIHRyYW5zYWN0aW9uIHdpbGwgYmUgaW5jbHVkZWQuXG4gKiBAcmV0dXJucyBBIG5ldyB0cmFuc2FjdGlvbiBvYmplY3QgaW5pdGlhbGl6ZWQgd2l0aCB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlVHJhbnNhY3Rpb24oc2lnbmVySWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCkge1xuICAgIGNvbnN0IHR4Tm9uY2UgPSB0eXBlb2Ygbm9uY2UgPT09ICdiaWdpbnQnID8gbm9uY2UgOiBCaWdJbnQobm9uY2UpO1xuICAgIHJldHVybiBuZXcgc2NoZW1hXzEuVHJhbnNhY3Rpb24oe1xuICAgICAgICBzaWduZXJJZCxcbiAgICAgICAgcHVibGljS2V5LFxuICAgICAgICBub25jZTogdHhOb25jZSxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9ucyxcbiAgICAgICAgYmxvY2tIYXNoLFxuICAgIH0pO1xufVxuZXhwb3J0cy5jcmVhdGVUcmFuc2FjdGlvbiA9IGNyZWF0ZVRyYW5zYWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/create_transaction.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/delegate.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/delegate.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildDelegateAction = exports.DelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst action_creators_1 = __webpack_require__(/*! ./action_creators */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/action_creators.js\");\nconst { addKey, createAccount, deleteAccount, deleteKey, deployContract, functionCall, stake, transfer, } = action_creators_1.actionCreators;\nclass DelegateAction extends types_1.Assignable {\n}\nexports.DelegateAction = DelegateAction;\n/**\n * Compose a delegate action for inclusion with a meta transaction signed on the sender's behalf\n * @param actions The set of actions to be included in the meta transaction\n * @param maxBlockHeight The maximum block height for which this action can be executed as part of a transaction\n * @param nonce Current nonce on the access key used to sign the delegate action\n * @param publicKey Public key for the access key used to sign the delegate action\n * @param receiverId Account ID for the intended receiver of the meta transaction\n * @param senderId Account ID for the intended signer of the delegate action\n */\nfunction buildDelegateAction({ actions, maxBlockHeight, nonce, publicKey, receiverId, senderId, }) {\n    return new DelegateAction({\n        senderId,\n        receiverId,\n        actions: actions.map((a) => {\n            // @ts-expect-error type workaround\n            if (!a.type && !a.params) {\n                return a;\n            }\n            // @ts-expect-error type workaround\n            switch (a.type) {\n                case 'AddKey': {\n                    // @ts-expect-error type workaround\n                    const { publicKey, accessKey } = a.params;\n                    return addKey(publicKey, accessKey);\n                }\n                case 'CreateAccount': {\n                    // @ts-expect-error type workaround\n                    return createAccount(a.params.createAccount);\n                }\n                case 'DeleteAccount': {\n                    // @ts-expect-error type workaround\n                    return deleteAccount(a.params.deleteAccount);\n                }\n                case 'DeleteKey': {\n                    // @ts-expect-error type workaround\n                    return deleteKey(a.params.publicKey);\n                }\n                case 'DeployContract': {\n                    // @ts-expect-error type workaround\n                    return deployContract(a.params.code);\n                }\n                case 'FunctionCall': {\n                    // @ts-expect-error type workaround\n                    const { methodName, args, gas, deposit } = a.params;\n                    return functionCall(methodName, args, gas, deposit);\n                }\n                case 'Stake': {\n                    // @ts-expect-error type workaround\n                    return stake(a.params.stake, a.params.publicKey);\n                }\n                case 'Transfer': {\n                    // @ts-expect-error type workaround\n                    const { deposit } = a.params;\n                    return transfer(deposit);\n                }\n            }\n            throw new Error('Unrecognized action');\n        }),\n        nonce,\n        maxBlockHeight,\n        publicKey,\n    });\n}\nexports.buildDelegateAction = buildDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsc0JBQXNCO0FBQ3BELGdCQUFnQixtQkFBTyxDQUFDLDJGQUFnQjtBQUN4QywwQkFBMEIsbUJBQU8sQ0FBQywrR0FBbUI7QUFDckQsUUFBUSxrR0FBa0c7QUFDMUc7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isa0VBQWtFO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix1QkFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQ0FBaUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvZGVsZWdhdGUuanM/Y2EwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGREZWxlZ2F0ZUFjdGlvbiA9IGV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSB2b2lkIDA7XG5jb25zdCB0eXBlc18xID0gcmVxdWlyZShcIkBuZWFyLWpzL3R5cGVzXCIpO1xuY29uc3QgYWN0aW9uX2NyZWF0b3JzXzEgPSByZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIik7XG5jb25zdCB7IGFkZEtleSwgY3JlYXRlQWNjb3VudCwgZGVsZXRlQWNjb3VudCwgZGVsZXRlS2V5LCBkZXBsb3lDb250cmFjdCwgZnVuY3Rpb25DYWxsLCBzdGFrZSwgdHJhbnNmZXIsIH0gPSBhY3Rpb25fY3JlYXRvcnNfMS5hY3Rpb25DcmVhdG9ycztcbmNsYXNzIERlbGVnYXRlQWN0aW9uIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbmV4cG9ydHMuRGVsZWdhdGVBY3Rpb24gPSBEZWxlZ2F0ZUFjdGlvbjtcbi8qKlxuICogQ29tcG9zZSBhIGRlbGVnYXRlIGFjdGlvbiBmb3IgaW5jbHVzaW9uIHdpdGggYSBtZXRhIHRyYW5zYWN0aW9uIHNpZ25lZCBvbiB0aGUgc2VuZGVyJ3MgYmVoYWxmXG4gKiBAcGFyYW0gYWN0aW9ucyBUaGUgc2V0IG9mIGFjdGlvbnMgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBtYXhCbG9ja0hlaWdodCBUaGUgbWF4aW11bSBibG9jayBoZWlnaHQgZm9yIHdoaWNoIHRoaXMgYWN0aW9uIGNhbiBiZSBleGVjdXRlZCBhcyBwYXJ0IG9mIGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBub25jZSBDdXJyZW50IG5vbmNlIG9uIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcHVibGljS2V5IFB1YmxpYyBrZXkgZm9yIHRoZSBhY2Nlc3Mga2V5IHVzZWQgdG8gc2lnbiB0aGUgZGVsZWdhdGUgYWN0aW9uXG4gKiBAcGFyYW0gcmVjZWl2ZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgcmVjZWl2ZXIgb2YgdGhlIG1ldGEgdHJhbnNhY3Rpb25cbiAqIEBwYXJhbSBzZW5kZXJJZCBBY2NvdW50IElEIGZvciB0aGUgaW50ZW5kZWQgc2lnbmVyIG9mIHRoZSBkZWxlZ2F0ZSBhY3Rpb25cbiAqL1xuZnVuY3Rpb24gYnVpbGREZWxlZ2F0ZUFjdGlvbih7IGFjdGlvbnMsIG1heEJsb2NrSGVpZ2h0LCBub25jZSwgcHVibGljS2V5LCByZWNlaXZlcklkLCBzZW5kZXJJZCwgfSkge1xuICAgIHJldHVybiBuZXcgRGVsZWdhdGVBY3Rpb24oe1xuICAgICAgICBzZW5kZXJJZCxcbiAgICAgICAgcmVjZWl2ZXJJZCxcbiAgICAgICAgYWN0aW9uczogYWN0aW9ucy5tYXAoKGEpID0+IHtcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBpZiAoIWEudHlwZSAmJiAhYS5wYXJhbXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICBzd2l0Y2ggKGEudHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ0FkZEtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwdWJsaWNLZXksIGFjY2Vzc0tleSB9ID0gYS5wYXJhbXM7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhZGRLZXkocHVibGljS2V5LCBhY2Nlc3NLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdDcmVhdGVBY2NvdW50Jzoge1xuICAgICAgICAgICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIHR5cGUgd29ya2Fyb3VuZFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQWNjb3VudChhLnBhcmFtcy5jcmVhdGVBY2NvdW50KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FzZSAnRGVsZXRlQWNjb3VudCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUFjY291bnQoYS5wYXJhbXMuZGVsZXRlQWNjb3VudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ0RlbGV0ZUtleSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlbGV0ZUtleShhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdEZXBsb3lDb250cmFjdCc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlcGxveUNvbnRyYWN0KGEucGFyYW1zLmNvZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdGdW5jdGlvbkNhbGwnOiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgdHlwZSB3b3JrYXJvdW5kXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgbWV0aG9kTmFtZSwgYXJncywgZ2FzLCBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uQ2FsbChtZXRob2ROYW1lLCBhcmdzLCBnYXMsIGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdTdGFrZSc6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0YWtlKGEucGFyYW1zLnN0YWtlLCBhLnBhcmFtcy5wdWJsaWNLZXkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXNlICdUcmFuc2Zlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIHdvcmthcm91bmRcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBkZXBvc2l0IH0gPSBhLnBhcmFtcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zZmVyKGRlcG9zaXQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5yZWNvZ25pemVkIGFjdGlvbicpO1xuICAgICAgICB9KSxcbiAgICAgICAgbm9uY2UsXG4gICAgICAgIG1heEJsb2NrSGVpZ2h0LFxuICAgICAgICBwdWJsaWNLZXksXG4gICAgfSk7XG59XG5leHBvcnRzLmJ1aWxkRGVsZWdhdGVBY3Rpb24gPSBidWlsZERlbGVnYXRlQWN0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/delegate.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./action_creators */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/action_creators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./actions */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/actions.js\"), exports);\n__exportStar(__webpack_require__(/*! ./create_transaction */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/create_transaction.js\"), exports);\n__exportStar(__webpack_require__(/*! ./delegate */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/delegate.js\"), exports);\n__exportStar(__webpack_require__(/*! ./schema */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/schema.js\"), exports);\n__exportStar(__webpack_require__(/*! ./sign */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/sign.js\"), exports);\n__exportStar(__webpack_require__(/*! ./signature */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/signature.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLCtHQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsK0ZBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLHFIQUFzQjtBQUMzQyxhQUFhLG1CQUFPLENBQUMsaUdBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLDZGQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyx5RkFBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMsbUdBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL2luZGV4LmpzPzU3YzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY3Rpb25fY3JlYXRvcnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjdGlvbnNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NyZWF0ZV90cmFuc2FjdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZGVsZWdhdGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3NjaGVtYVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2lnbmF0dXJlXCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/prefix.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/prefix.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DelegateActionPrefix = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst ACTIONABLE_MESSAGE_BASE = Math.pow(2, 30);\n// const NON_ACTIONABLE_MESSAGE_BASE = Math.pow(2, 31);\n/** The set of NEPs for which an [NEP-461](https://github.com/near/NEPs/pull/461) prefix is required on the message prior to hashing **/\nconst NEP = {\n    MetaTransactions: 366,\n};\n/** Base class for NEP message prefixes **/\nclass NEPPrefix extends types_1.Assignable {\n}\n/** Class for constructing prefixes on actionable (on-chain) messages **/\nclass ActionableMessagePrefix extends NEPPrefix {\n    /** Given the NEP number, set the prefix using 2^30 as the offset **/\n    constructor(prefix) {\n        super({ prefix: ACTIONABLE_MESSAGE_BASE + prefix });\n    }\n}\n/**\n * Class for constructing prefixes on non-actionable (off-chain) messages\n * @todo uncomment when off-chain messages are supported\n * **/\n// abstract class NonActionableMessagePrefix extends NEPPrefix {\n//     /** Given the NEP number, set the prefix using 2^31 as the offset **/\n//     protected constructor(prefix: number) {\n//         super({ prefix: NON_ACTIONABLE_MESSAGE_BASE + prefix });\n//     }\n// }\n/** Prefix for delegate actions whose signatures must always be distinguishable from valid transaction signatures **/\nclass DelegateActionPrefix extends ActionableMessagePrefix {\n    constructor() { super(NEP.MetaTransactions); }\n}\nexports.DelegateActionPrefix = DelegateActionPrefix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvcHJlZml4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QixnQkFBZ0IsbUJBQU8sQ0FBQywyRkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMENBQTBDO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4Q0FBOEM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3ByZWZpeC5qcz9mZGU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IHZvaWQgMDtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiQG5lYXItanMvdHlwZXNcIik7XG5jb25zdCBBQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMwKTtcbi8vIGNvbnN0IE5PTl9BQ1RJT05BQkxFX01FU1NBR0VfQkFTRSA9IE1hdGgucG93KDIsIDMxKTtcbi8qKiBUaGUgc2V0IG9mIE5FUHMgZm9yIHdoaWNoIGFuIFtORVAtNDYxXShodHRwczovL2dpdGh1Yi5jb20vbmVhci9ORVBzL3B1bGwvNDYxKSBwcmVmaXggaXMgcmVxdWlyZWQgb24gdGhlIG1lc3NhZ2UgcHJpb3IgdG8gaGFzaGluZyAqKi9cbmNvbnN0IE5FUCA9IHtcbiAgICBNZXRhVHJhbnNhY3Rpb25zOiAzNjYsXG59O1xuLyoqIEJhc2UgY2xhc3MgZm9yIE5FUCBtZXNzYWdlIHByZWZpeGVzICoqL1xuY2xhc3MgTkVQUHJlZml4IGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbn1cbi8qKiBDbGFzcyBmb3IgY29uc3RydWN0aW5nIHByZWZpeGVzIG9uIGFjdGlvbmFibGUgKG9uLWNoYWluKSBtZXNzYWdlcyAqKi9cbmNsYXNzIEFjdGlvbmFibGVNZXNzYWdlUHJlZml4IGV4dGVuZHMgTkVQUHJlZml4IHtcbiAgICAvKiogR2l2ZW4gdGhlIE5FUCBudW1iZXIsIHNldCB0aGUgcHJlZml4IHVzaW5nIDJeMzAgYXMgdGhlIG9mZnNldCAqKi9cbiAgICBjb25zdHJ1Y3RvcihwcmVmaXgpIHtcbiAgICAgICAgc3VwZXIoeyBwcmVmaXg6IEFDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIGNvbnN0cnVjdGluZyBwcmVmaXhlcyBvbiBub24tYWN0aW9uYWJsZSAob2ZmLWNoYWluKSBtZXNzYWdlc1xuICogQHRvZG8gdW5jb21tZW50IHdoZW4gb2ZmLWNoYWluIG1lc3NhZ2VzIGFyZSBzdXBwb3J0ZWRcbiAqICoqL1xuLy8gYWJzdHJhY3QgY2xhc3MgTm9uQWN0aW9uYWJsZU1lc3NhZ2VQcmVmaXggZXh0ZW5kcyBORVBQcmVmaXgge1xuLy8gICAgIC8qKiBHaXZlbiB0aGUgTkVQIG51bWJlciwgc2V0IHRoZSBwcmVmaXggdXNpbmcgMl4zMSBhcyB0aGUgb2Zmc2V0ICoqL1xuLy8gICAgIHByb3RlY3RlZCBjb25zdHJ1Y3RvcihwcmVmaXg6IG51bWJlcikge1xuLy8gICAgICAgICBzdXBlcih7IHByZWZpeDogTk9OX0FDVElPTkFCTEVfTUVTU0FHRV9CQVNFICsgcHJlZml4IH0pO1xuLy8gICAgIH1cbi8vIH1cbi8qKiBQcmVmaXggZm9yIGRlbGVnYXRlIGFjdGlvbnMgd2hvc2Ugc2lnbmF0dXJlcyBtdXN0IGFsd2F5cyBiZSBkaXN0aW5ndWlzaGFibGUgZnJvbSB2YWxpZCB0cmFuc2FjdGlvbiBzaWduYXR1cmVzICoqL1xuY2xhc3MgRGVsZWdhdGVBY3Rpb25QcmVmaXggZXh0ZW5kcyBBY3Rpb25hYmxlTWVzc2FnZVByZWZpeCB7XG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKE5FUC5NZXRhVHJhbnNhY3Rpb25zKTsgfVxufVxuZXhwb3J0cy5EZWxlZ2F0ZUFjdGlvblByZWZpeCA9IERlbGVnYXRlQWN0aW9uUHJlZml4O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/prefix.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/schema.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/schema.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SCHEMA = exports.SignedTransaction = exports.Transaction = exports.decodeSignedTransaction = exports.decodeTransaction = exports.encodeTransaction = exports.encodeSignedDelegate = exports.encodeDelegateAction = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst borsh_1 = __webpack_require__(/*! borsh */ \"./node_modules/borsh/lib/cjs/index.js\");\nconst prefix_1 = __webpack_require__(/*! ./prefix */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/prefix.js\");\n/**\n * Borsh-encode a delegate action for inclusion as an action within a meta transaction\n * NB per NEP-461 this requires a Borsh-serialized prefix specific to delegate actions, ensuring\n *  signed delegate actions may never be identical to signed transactions with the same fields\n * @param delegateAction Delegate action to be signed by the meta transaction sender\n */\nfunction encodeDelegateAction(delegateAction) {\n    return new Uint8Array([\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateActionPrefix, new prefix_1.DelegateActionPrefix()),\n        ...(0, borsh_1.serialize)(exports.SCHEMA.DelegateAction, delegateAction),\n    ]);\n}\nexports.encodeDelegateAction = encodeDelegateAction;\n/**\n * Borsh-encode a signed delegate for validation and execution by a relayer\n * @param signedDelegate Signed delegate to be executed in a meta transaction\n */\nfunction encodeSignedDelegate(signedDelegate) {\n    return (0, borsh_1.serialize)(exports.SCHEMA.SignedDelegate, signedDelegate);\n}\nexports.encodeSignedDelegate = encodeSignedDelegate;\n/**\n* Borsh-encode a transaction or signed transaction into a serialized form.\n* @param transaction The transaction or signed transaction object to be encoded.\n* @returns A serialized representation of the input transaction.\n*/\nfunction encodeTransaction(transaction) {\n    const schema = transaction instanceof SignedTransaction ? exports.SCHEMA.SignedTransaction : exports.SCHEMA.Transaction;\n    return (0, borsh_1.serialize)(schema, transaction);\n}\nexports.encodeTransaction = encodeTransaction;\n/**\n * Borsh-decode a Transaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeTransaction(bytes) {\n    return new Transaction((0, borsh_1.deserialize)(exports.SCHEMA.Transaction, bytes));\n}\nexports.decodeTransaction = decodeTransaction;\n/**\n * Borsh-decode a SignedTransaction instance from a buffer\n * @param bytes Uint8Array data to be decoded\n */\nfunction decodeSignedTransaction(bytes) {\n    return new SignedTransaction((0, borsh_1.deserialize)(exports.SCHEMA.SignedTransaction, bytes));\n}\nexports.decodeSignedTransaction = decodeSignedTransaction;\nclass Transaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeTransaction(bytes);\n    }\n}\nexports.Transaction = Transaction;\nclass SignedTransaction extends types_1.Assignable {\n    encode() {\n        return encodeTransaction(this);\n    }\n    static decode(bytes) {\n        return decodeSignedTransaction(bytes);\n    }\n}\nexports.SignedTransaction = SignedTransaction;\nexports.SCHEMA = new class BorshSchema {\n    constructor() {\n        this.Ed25519Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.Secp256k1Signature = {\n            struct: {\n                data: { array: { type: 'u8', len: 65 } },\n            }\n        };\n        this.Signature = {\n            enum: [\n                { struct: { ed25519Signature: this.Ed25519Signature } },\n                { struct: { secp256k1Signature: this.Secp256k1Signature } },\n            ]\n        };\n        this.Ed25519Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 32 } },\n            }\n        };\n        this.Secp256k1Data = {\n            struct: {\n                data: { array: { type: 'u8', len: 64 } },\n            }\n        };\n        this.PublicKey = {\n            enum: [\n                { struct: { ed25519Key: this.Ed25519Data } },\n                { struct: { secp256k1Key: this.Secp256k1Data } },\n            ]\n        };\n        this.FunctionCallPermission = {\n            struct: {\n                allowance: { option: 'u128' },\n                receiverId: 'string',\n                methodNames: { array: { type: 'string' } },\n            }\n        };\n        this.FullAccessPermission = {\n            struct: {}\n        };\n        this.AccessKeyPermission = {\n            enum: [\n                { struct: { functionCall: this.FunctionCallPermission } },\n                { struct: { fullAccess: this.FullAccessPermission } },\n            ]\n        };\n        this.AccessKey = {\n            struct: {\n                nonce: 'u64',\n                permission: this.AccessKeyPermission,\n            }\n        };\n        this.CreateAccount = {\n            struct: {}\n        };\n        this.DeployContract = {\n            struct: {\n                code: { array: { type: 'u8' } },\n            }\n        };\n        this.FunctionCall = {\n            struct: {\n                methodName: 'string',\n                args: { array: { type: 'u8' } },\n                gas: 'u64',\n                deposit: 'u128',\n            }\n        };\n        this.Transfer = {\n            struct: {\n                deposit: 'u128',\n            }\n        };\n        this.Stake = {\n            struct: {\n                stake: 'u128',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.AddKey = {\n            struct: {\n                publicKey: this.PublicKey,\n                accessKey: this.AccessKey,\n            }\n        };\n        this.DeleteKey = {\n            struct: {\n                publicKey: this.PublicKey,\n            }\n        };\n        this.DeleteAccount = {\n            struct: {\n                beneficiaryId: 'string',\n            }\n        };\n        this.DelegateActionPrefix = {\n            struct: {\n                prefix: 'u32',\n            }\n        };\n        this.ClassicActions = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n            ]\n        };\n        this.DelegateAction = {\n            struct: {\n                senderId: 'string',\n                receiverId: 'string',\n                actions: { array: { type: this.ClassicActions } },\n                nonce: 'u64',\n                maxBlockHeight: 'u64',\n                publicKey: this.PublicKey,\n            }\n        };\n        this.SignedDelegate = {\n            struct: {\n                delegateAction: this.DelegateAction,\n                signature: this.Signature,\n            }\n        };\n        this.Action = {\n            enum: [\n                { struct: { createAccount: this.CreateAccount } },\n                { struct: { deployContract: this.DeployContract } },\n                { struct: { functionCall: this.FunctionCall } },\n                { struct: { transfer: this.Transfer } },\n                { struct: { stake: this.Stake } },\n                { struct: { addKey: this.AddKey } },\n                { struct: { deleteKey: this.DeleteKey } },\n                { struct: { deleteAccount: this.DeleteAccount } },\n                { struct: { signedDelegate: this.SignedDelegate } },\n            ]\n        };\n        this.Transaction = {\n            struct: {\n                signerId: 'string',\n                publicKey: this.PublicKey,\n                nonce: 'u64',\n                receiverId: 'string',\n                blockHash: { array: { type: 'u8', len: 32 } },\n                actions: { array: { type: this.Action } },\n            }\n        };\n        this.SignedTransaction = {\n            struct: {\n                transaction: this.Transaction,\n                signature: this.Signature,\n            }\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/schema.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/sign.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/sign.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signDelegateAction = exports.signTransaction = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"./node_modules/@noble/hashes/sha256.js\");\nconst actions_1 = __webpack_require__(/*! ./actions */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/actions.js\");\nconst create_transaction_1 = __webpack_require__(/*! ./create_transaction */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/create_transaction.js\");\nconst schema_1 = __webpack_require__(/*! ./schema */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/schema.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"./node_modules/near-api-js/node_modules/@near-js/transactions/lib/signature.js\");\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js\");\n/**\n * Signs a given transaction from an account with given keys, applied to the given network\n * @param transaction The Transaction object to sign\n * @param signer The {Signer} object that assists with signing keys\n * @param accountId The human-readable NEAR account name\n * @param networkId The targeted network. (ex. default, betanet, etc…)\n */\nfunction signTransactionObject(transaction, signer, accountId, networkId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeTransaction)(transaction);\n        const hash = new Uint8Array((0, sha256_1.sha256)(message));\n        const signature = yield signer.signMessage(message, accountId, networkId);\n        const keyType = transaction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedTx = new schema_1.SignedTransaction({\n            transaction,\n            signature: new signature_1.Signature({ keyType, data: signature.signature })\n        });\n        return [hash, signedTx];\n    });\n}\nfunction signTransaction(...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (args[0].constructor === schema_1.Transaction) {\n            const [transaction, signer, accountId, networkId] = args;\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n        else {\n            const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;\n            const publicKey = yield signer.getPublicKey(accountId, networkId);\n            const transaction = (0, create_transaction_1.createTransaction)(accountId, publicKey, receiverId, nonce, actions, blockHash);\n            return signTransactionObject(transaction, signer, accountId, networkId);\n        }\n    });\n}\nexports.signTransaction = signTransaction;\n/**\n * Sign a delegate action\n * @options SignDelegate options\n * @param options.delegateAction Delegate action to be signed by the meta transaction sender\n * @param options.signer Signer instance for the meta transaction sender\n */\nfunction signDelegateAction({ delegateAction, signer }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const message = (0, schema_1.encodeDelegateAction)(delegateAction);\n        const signature = yield signer.sign(message);\n        const keyType = delegateAction.publicKey.ed25519Key ? crypto_1.KeyType.ED25519 : crypto_1.KeyType.SECP256K1;\n        const signedDelegateAction = new actions_1.SignedDelegate({\n            delegateAction,\n            signature: new signature_1.Signature({\n                keyType,\n                data: signature,\n            }),\n        });\n        return {\n            hash: new Uint8Array((0, sha256_1.sha256)(message)),\n            signedDelegateAction,\n        };\n    });\n}\nexports.signDelegateAction = signDelegateAction;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsdUJBQXVCO0FBQ3BELGlCQUFpQixtQkFBTyxDQUFDLG9FQUFzQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQywrRkFBVztBQUNyQyw2QkFBNkIsbUJBQU8sQ0FBQyxxSEFBc0I7QUFDM0QsaUJBQWlCLG1CQUFPLENBQUMsNkZBQVU7QUFDbkMsb0JBQW9CLG1CQUFPLENBQUMsbUdBQWE7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsNkZBQWlCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixRQUFRO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsb0NBQW9DO0FBQ3ZGLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsd0JBQXdCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90cmFuc2FjdGlvbnMvbGliL3NpZ24uanM/YmFkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zaWduRGVsZWdhdGVBY3Rpb24gPSBleHBvcnRzLnNpZ25UcmFuc2FjdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3QgYWN0aW9uc18xID0gcmVxdWlyZShcIi4vYWN0aW9uc1wiKTtcbmNvbnN0IGNyZWF0ZV90cmFuc2FjdGlvbl8xID0gcmVxdWlyZShcIi4vY3JlYXRlX3RyYW5zYWN0aW9uXCIpO1xuY29uc3Qgc2NoZW1hXzEgPSByZXF1aXJlKFwiLi9zY2hlbWFcIik7XG5jb25zdCBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBuZWFyLWpzL2NyeXB0b1wiKTtcbi8qKlxuICogU2lnbnMgYSBnaXZlbiB0cmFuc2FjdGlvbiBmcm9tIGFuIGFjY291bnQgd2l0aCBnaXZlbiBrZXlzLCBhcHBsaWVkIHRvIHRoZSBnaXZlbiBuZXR3b3JrXG4gKiBAcGFyYW0gdHJhbnNhY3Rpb24gVGhlIFRyYW5zYWN0aW9uIG9iamVjdCB0byBzaWduXG4gKiBAcGFyYW0gc2lnbmVyIFRoZSB7U2lnbmVyfSBvYmplY3QgdGhhdCBhc3Npc3RzIHdpdGggc2lnbmluZyBrZXlzXG4gKiBAcGFyYW0gYWNjb3VudElkIFRoZSBodW1hbi1yZWFkYWJsZSBORUFSIGFjY291bnQgbmFtZVxuICogQHBhcmFtIG5ldHdvcmtJZCBUaGUgdGFyZ2V0ZWQgbmV0d29yay4gKGV4LiBkZWZhdWx0LCBiZXRhbmV0LCBldGPigKYpXG4gKi9cbmZ1bmN0aW9uIHNpZ25UcmFuc2FjdGlvbk9iamVjdCh0cmFuc2FjdGlvbiwgc2lnbmVyLCBhY2NvdW50SWQsIG5ldHdvcmtJZCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlVHJhbnNhY3Rpb24pKHRyYW5zYWN0aW9uKTtcbiAgICAgICAgY29uc3QgaGFzaCA9IG5ldyBVaW50OEFycmF5KCgwLCBzaGEyNTZfMS5zaGEyNTYpKG1lc3NhZ2UpKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ25NZXNzYWdlKG1lc3NhZ2UsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgY29uc3Qga2V5VHlwZSA9IHRyYW5zYWN0aW9uLnB1YmxpY0tleS5lZDI1NTE5S2V5ID8gY3J5cHRvXzEuS2V5VHlwZS5FRDI1NTE5IDogY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgICAgIGNvbnN0IHNpZ25lZFR4ID0gbmV3IHNjaGVtYV8xLlNpZ25lZFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIHRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBuZXcgc2lnbmF0dXJlXzEuU2lnbmF0dXJlKHsga2V5VHlwZSwgZGF0YTogc2lnbmF0dXJlLnNpZ25hdHVyZSB9KVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFtoYXNoLCBzaWduZWRUeF07XG4gICAgfSk7XG59XG5mdW5jdGlvbiBzaWduVHJhbnNhY3Rpb24oLi4uYXJncykge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGlmIChhcmdzWzBdLmNvbnN0cnVjdG9yID09PSBzY2hlbWFfMS5UcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgY29uc3QgW3RyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IFtyZWNlaXZlcklkLCBub25jZSwgYWN0aW9ucywgYmxvY2tIYXNoLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkXSA9IGFyZ3M7XG4gICAgICAgICAgICBjb25zdCBwdWJsaWNLZXkgPSB5aWVsZCBzaWduZXIuZ2V0UHVibGljS2V5KGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gKDAsIGNyZWF0ZV90cmFuc2FjdGlvbl8xLmNyZWF0ZVRyYW5zYWN0aW9uKShhY2NvdW50SWQsIHB1YmxpY0tleSwgcmVjZWl2ZXJJZCwgbm9uY2UsIGFjdGlvbnMsIGJsb2NrSGFzaCk7XG4gICAgICAgICAgICByZXR1cm4gc2lnblRyYW5zYWN0aW9uT2JqZWN0KHRyYW5zYWN0aW9uLCBzaWduZXIsIGFjY291bnRJZCwgbmV0d29ya0lkKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0cy5zaWduVHJhbnNhY3Rpb24gPSBzaWduVHJhbnNhY3Rpb247XG4vKipcbiAqIFNpZ24gYSBkZWxlZ2F0ZSBhY3Rpb25cbiAqIEBvcHRpb25zIFNpZ25EZWxlZ2F0ZSBvcHRpb25zXG4gKiBAcGFyYW0gb3B0aW9ucy5kZWxlZ2F0ZUFjdGlvbiBEZWxlZ2F0ZSBhY3Rpb24gdG8gYmUgc2lnbmVkIGJ5IHRoZSBtZXRhIHRyYW5zYWN0aW9uIHNlbmRlclxuICogQHBhcmFtIG9wdGlvbnMuc2lnbmVyIFNpZ25lciBpbnN0YW5jZSBmb3IgdGhlIG1ldGEgdHJhbnNhY3Rpb24gc2VuZGVyXG4gKi9cbmZ1bmN0aW9uIHNpZ25EZWxlZ2F0ZUFjdGlvbih7IGRlbGVnYXRlQWN0aW9uLCBzaWduZXIgfSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAoMCwgc2NoZW1hXzEuZW5jb2RlRGVsZWdhdGVBY3Rpb24pKGRlbGVnYXRlQWN0aW9uKTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0geWllbGQgc2lnbmVyLnNpZ24obWVzc2FnZSk7XG4gICAgICAgIGNvbnN0IGtleVR5cGUgPSBkZWxlZ2F0ZUFjdGlvbi5wdWJsaWNLZXkuZWQyNTUxOUtleSA/IGNyeXB0b18xLktleVR5cGUuRUQyNTUxOSA6IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxO1xuICAgICAgICBjb25zdCBzaWduZWREZWxlZ2F0ZUFjdGlvbiA9IG5ldyBhY3Rpb25zXzEuU2lnbmVkRGVsZWdhdGUoe1xuICAgICAgICAgICAgZGVsZWdhdGVBY3Rpb24sXG4gICAgICAgICAgICBzaWduYXR1cmU6IG5ldyBzaWduYXR1cmVfMS5TaWduYXR1cmUoe1xuICAgICAgICAgICAgICAgIGtleVR5cGUsXG4gICAgICAgICAgICAgICAgZGF0YTogc2lnbmF0dXJlLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaGFzaDogbmV3IFVpbnQ4QXJyYXkoKDAsIHNoYTI1Nl8xLnNoYTI1NikobWVzc2FnZSkpLFxuICAgICAgICAgICAgc2lnbmVkRGVsZWdhdGVBY3Rpb24sXG4gICAgICAgIH07XG4gICAgfSk7XG59XG5leHBvcnRzLnNpZ25EZWxlZ2F0ZUFjdGlvbiA9IHNpZ25EZWxlZ2F0ZUFjdGlvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/sign.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/transactions/lib/signature.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/transactions/lib/signature.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Signature = void 0;\nconst crypto_1 = __webpack_require__(/*! @near-js/crypto */ \"./node_modules/near-api-js/node_modules/@near-js/crypto/lib/index.js\");\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nclass ED25519Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.ED25519;\n    }\n}\nclass SECP256K1Signature extends types_1.Assignable {\n    constructor() {\n        super(...arguments);\n        this.keyType = crypto_1.KeyType.SECP256K1;\n    }\n}\nclass Signature extends types_1.Assignable {\n    constructor({ keyType, data }) {\n        super({});\n        if (keyType === crypto_1.KeyType.ED25519) {\n            this.ed25519Signature = { keyType, data };\n        }\n        else if (keyType === crypto_1.KeyType.SECP256K1) {\n            this.secp256k1Signature = { keyType, data };\n        }\n    }\n    get signature() {\n        return this.ed25519Signature || this.secp256k1Signature;\n    }\n    get signatureType() {\n        return this.signature.keyType;\n    }\n    get data() {\n        return this.signature.data;\n    }\n}\nexports.Signature = Signature;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3RyYW5zYWN0aW9ucy9saWIvc2lnbmF0dXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixpQkFBaUIsbUJBQU8sQ0FBQyw2RkFBaUI7QUFDMUMsZ0JBQWdCLG1CQUFPLENBQUMsMkZBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGVBQWU7QUFDakMsZ0JBQWdCO0FBQ2hCO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdHJhbnNhY3Rpb25zL2xpYi9zaWduYXR1cmUuanM/NGU3OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU2lnbmF0dXJlID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQG5lYXItanMvY3J5cHRvXCIpO1xuY29uc3QgdHlwZXNfMSA9IHJlcXVpcmUoXCJAbmVhci1qcy90eXBlc1wiKTtcbmNsYXNzIEVEMjU1MTlTaWduYXR1cmUgZXh0ZW5kcyB0eXBlc18xLkFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmtleVR5cGUgPSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTk7XG4gICAgfVxufVxuY2xhc3MgU0VDUDI1NksxU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5rZXlUeXBlID0gY3J5cHRvXzEuS2V5VHlwZS5TRUNQMjU2SzE7XG4gICAgfVxufVxuY2xhc3MgU2lnbmF0dXJlIGV4dGVuZHMgdHlwZXNfMS5Bc3NpZ25hYmxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IGtleVR5cGUsIGRhdGEgfSkge1xuICAgICAgICBzdXBlcih7fSk7XG4gICAgICAgIGlmIChrZXlUeXBlID09PSBjcnlwdG9fMS5LZXlUeXBlLkVEMjU1MTkpIHtcbiAgICAgICAgICAgIHRoaXMuZWQyNTUxOVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleVR5cGUgPT09IGNyeXB0b18xLktleVR5cGUuU0VDUDI1NksxKSB7XG4gICAgICAgICAgICB0aGlzLnNlY3AyNTZrMVNpZ25hdHVyZSA9IHsga2V5VHlwZSwgZGF0YSB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVkMjU1MTlTaWduYXR1cmUgfHwgdGhpcy5zZWNwMjU2azFTaWduYXR1cmU7XG4gICAgfVxuICAgIGdldCBzaWduYXR1cmVUeXBlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zaWduYXR1cmUua2V5VHlwZTtcbiAgICB9XG4gICAgZ2V0IGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNpZ25hdHVyZS5kYXRhO1xuICAgIH1cbn1cbmV4cG9ydHMuU2lnbmF0dXJlID0gU2lnbmF0dXJlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/transactions/lib/signature.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/types/lib/assignable.js":
/*!********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/types/lib/assignable.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Assignable = void 0;\nclass Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\nexports.Assignable = Assignable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9hc3NpZ25hYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdHlwZXMvbGliL2Fzc2lnbmFibGUuanM/ZTI4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXNzaWduYWJsZSA9IHZvaWQgMDtcbmNsYXNzIEFzc2lnbmFibGUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BlcnRpZXMpIHtcbiAgICAgICAgT2JqZWN0LmtleXMocHJvcGVydGllcykubWFwKChrZXkpID0+IHtcbiAgICAgICAgICAgIHRoaXNba2V5XSA9IHByb3BlcnRpZXNba2V5XTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5Bc3NpZ25hYmxlID0gQXNzaWduYWJsZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/types/lib/assignable.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/types/lib/errors.js":
/*!****************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/types/lib/errors.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ErrorContext = exports.TypedError = exports.ArgumentTypeError = exports.PositionalArgsError = void 0;\nclass PositionalArgsError extends Error {\n    constructor() {\n        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');\n    }\n}\nexports.PositionalArgsError = PositionalArgsError;\nclass ArgumentTypeError extends Error {\n    constructor(argName, argType, argValue) {\n        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);\n    }\n}\nexports.ArgumentTypeError = ArgumentTypeError;\nclass TypedError extends Error {\n    constructor(message, type, context) {\n        super(message);\n        this.type = type || 'UntypedError';\n        this.context = context;\n    }\n}\nexports.TypedError = TypedError;\nclass ErrorContext {\n    constructor(transactionHash) {\n        this.transactionHash = transactionHash;\n    }\n}\nexports.ErrorContext = ErrorContext;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsMkJBQTJCO0FBQ25HO0FBQ0E7QUFDQSxzRkFBc0YsMENBQTBDO0FBQ2hJO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBLDBCQUEwQixTQUFTLE9BQU8sUUFBUSx1QkFBdUIseUJBQXlCO0FBQ2xHO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9lcnJvcnMuanM/ZDRjOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRXJyb3JDb250ZXh0ID0gZXhwb3J0cy5UeXBlZEVycm9yID0gZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IGV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IHZvaWQgMDtcbmNsYXNzIFBvc2l0aW9uYWxBcmdzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdDb250cmFjdCBtZXRob2QgY2FsbHMgZXhwZWN0IG5hbWVkIGFyZ3VtZW50cyB3cmFwcGVkIGluIG9iamVjdCwgZS5nLiB7IGFyZ05hbWUxOiBhcmdWYWx1ZTEsIGFyZ05hbWUyOiBhcmdWYWx1ZTIgfScpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9zaXRpb25hbEFyZ3NFcnJvciA9IFBvc2l0aW9uYWxBcmdzRXJyb3I7XG5jbGFzcyBBcmd1bWVudFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihhcmdOYW1lLCBhcmdUeXBlLCBhcmdWYWx1ZSkge1xuICAgICAgICBzdXBlcihgRXhwZWN0ZWQgJHthcmdUeXBlfSBmb3IgJyR7YXJnTmFtZX0nIGFyZ3VtZW50LCBidXQgZ290ICcke0pTT04uc3RyaW5naWZ5KGFyZ1ZhbHVlKX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5Bcmd1bWVudFR5cGVFcnJvciA9IEFyZ3VtZW50VHlwZUVycm9yO1xuY2xhc3MgVHlwZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCB0eXBlLCBjb250ZXh0KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnR5cGUgPSB0eXBlIHx8ICdVbnR5cGVkRXJyb3InO1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbn1cbmV4cG9ydHMuVHlwZWRFcnJvciA9IFR5cGVkRXJyb3I7XG5jbGFzcyBFcnJvckNvbnRleHQge1xuICAgIGNvbnN0cnVjdG9yKHRyYW5zYWN0aW9uSGFzaCkge1xuICAgICAgICB0aGlzLnRyYW5zYWN0aW9uSGFzaCA9IHRyYW5zYWN0aW9uSGFzaDtcbiAgICB9XG59XG5leHBvcnRzLkVycm9yQ29udGV4dCA9IEVycm9yQ29udGV4dDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/types/lib/errors.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./assignable */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/assignable.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/errors.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsOEZBQWM7QUFDbkMsYUFBYSxtQkFBTyxDQUFDLHNGQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxnR0FBWSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9pbmRleC5qcz8wZGU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYXNzaWduYWJsZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZXJyb3JzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/index.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = exports.IdType = void 0;\nvar light_client_1 = __webpack_require__(/*! ./light_client */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/light_client.js\");\nObject.defineProperty(exports, \"IdType\", ({ enumerable: true, get: function () { return light_client_1.IdType; } }));\nvar response_1 = __webpack_require__(/*! ./response */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/response.js\");\nObject.defineProperty(exports, \"ExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.ExecutionStatusBasic; } }));\nObject.defineProperty(exports, \"FinalExecutionStatusBasic\", ({ enumerable: true, get: function () { return response_1.FinalExecutionStatusBasic; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEIsR0FBRyxjQUFjO0FBQ2pGLHFCQUFxQixtQkFBTyxDQUFDLDJHQUFnQjtBQUM3QywwQ0FBeUMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDbEgsaUJBQWlCLG1CQUFPLENBQUMsbUdBQVk7QUFDckMsd0RBQXVELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzFJLDZEQUE0RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9pbmRleC5qcz81ZjRhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuSWRUeXBlID0gdm9pZCAwO1xudmFyIGxpZ2h0X2NsaWVudF8xID0gcmVxdWlyZShcIi4vbGlnaHRfY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBsaWdodF9jbGllbnRfMS5JZFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRXhlY3V0aW9uU3RhdHVzQmFzaWNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlXzEuRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZV8xLkZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWM7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/light_client.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/light_client.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * NEAR RPC API request types and responses\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdType = void 0;\nvar IdType;\n(function (IdType) {\n    IdType[\"Transaction\"] = \"transaction\";\n    IdType[\"Receipt\"] = \"receipt\";\n})(IdType = exports.IdType || (exports.IdType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9saWdodF9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUsiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy90eXBlcy9saWIvcHJvdmlkZXIvbGlnaHRfY2xpZW50LmpzP2JlMzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIE5FQVIgUlBDIEFQSSByZXF1ZXN0IHR5cGVzIGFuZCByZXNwb25zZXNcbiAqIEBtb2R1bGVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JZFR5cGUgPSB2b2lkIDA7XG52YXIgSWRUeXBlO1xuKGZ1bmN0aW9uIChJZFR5cGUpIHtcbiAgICBJZFR5cGVbXCJUcmFuc2FjdGlvblwiXSA9IFwidHJhbnNhY3Rpb25cIjtcbiAgICBJZFR5cGVbXCJSZWNlaXB0XCJdID0gXCJyZWNlaXB0XCI7XG59KShJZFR5cGUgPSBleHBvcnRzLklkVHlwZSB8fCAoZXhwb3J0cy5JZFR5cGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/light_client.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/response.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/response.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FinalExecutionStatusBasic = exports.ExecutionStatusBasic = void 0;\nvar ExecutionStatusBasic;\n(function (ExecutionStatusBasic) {\n    ExecutionStatusBasic[\"Unknown\"] = \"Unknown\";\n    ExecutionStatusBasic[\"Pending\"] = \"Pending\";\n    ExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(ExecutionStatusBasic = exports.ExecutionStatusBasic || (exports.ExecutionStatusBasic = {}));\nvar FinalExecutionStatusBasic;\n(function (FinalExecutionStatusBasic) {\n    FinalExecutionStatusBasic[\"NotStarted\"] = \"NotStarted\";\n    FinalExecutionStatusBasic[\"Started\"] = \"Started\";\n    FinalExecutionStatusBasic[\"Failure\"] = \"Failure\";\n})(FinalExecutionStatusBasic = exports.FinalExecutionStatusBasic || (exports.FinalExecutionStatusBasic = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyw0QkFBNEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMERBQTBELDRCQUE0QixLQUFLO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9FQUFvRSxpQ0FBaUMsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3R5cGVzL2xpYi9wcm92aWRlci9yZXNwb25zZS5qcz9lZjk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHZvaWQgMDtcbnZhciBFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRXhlY3V0aW9uU3RhdHVzQmFzaWMpIHtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlVua25vd25cIl0gPSBcIlVua25vd25cIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlBlbmRpbmdcIl0gPSBcIlBlbmRpbmdcIjtcbiAgICBFeGVjdXRpb25TdGF0dXNCYXNpY1tcIkZhaWx1cmVcIl0gPSBcIkZhaWx1cmVcIjtcbn0pKEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0gZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5FeGVjdXRpb25TdGF0dXNCYXNpYyA9IHt9KSk7XG52YXIgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYztcbihmdW5jdGlvbiAoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYykge1xuICAgIEZpbmFsRXhlY3V0aW9uU3RhdHVzQmFzaWNbXCJOb3RTdGFydGVkXCJdID0gXCJOb3RTdGFydGVkXCI7XG4gICAgRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpY1tcIlN0YXJ0ZWRcIl0gPSBcIlN0YXJ0ZWRcIjtcbiAgICBGaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljW1wiRmFpbHVyZVwiXSA9IFwiRmFpbHVyZVwiO1xufSkoRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyA9IGV4cG9ydHMuRmluYWxFeGVjdXRpb25TdGF0dXNCYXNpYyB8fCAoZXhwb3J0cy5GaW5hbEV4ZWN1dGlvblN0YXR1c0Jhc2ljID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/types/lib/provider/response.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/constants.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/constants.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DEFAULT_FUNCTION_CALL_GAS = void 0;\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nexports.DEFAULT_FUNCTION_CALL_GAS = BigInt('30000000000000');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9jb25zdGFudHMuanM/MDRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuREVGQVVMVF9GVU5DVElPTl9DQUxMX0dBUyA9IHZvaWQgMDtcbi8vIERlZmF1bHQgYW1vdW50IG9mIGdhcyB0byBiZSBzZW50IHdpdGggdGhlIGZ1bmN0aW9uIGNhbGxzLiBVc2VkIHRvIHBheSBmb3IgdGhlIGZlZXNcbi8vIGluY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIGNvbnRyYWN0IGV4ZWN1dGlvbi4gVGhlIHVudXNlZCBhbW91bnQgd2lsbCBiZSByZWZ1bmRlZCBiYWNrIHRvXG4vLyB0aGUgb3JpZ2luYXRvci5cbi8vIER1ZSB0byBwcm90b2NvbCBjaGFuZ2VzIHRoYXQgY2hhcmdlIHVwZnJvbnQgZm9yIHRoZSBtYXhpbXVtIHBvc3NpYmxlIGdhcyBwcmljZSBpbmZsYXRpb24gZHVlIHRvXG4vLyBmdWxsIGJsb2NrcywgdGhlIHByaWNlIG9mIG1heF9wcmVwYWlkX2dhcyBpcyBkZWNyZWFzZWQgdG8gYDMwMCAqIDEwKioxMmAuXG4vLyBGb3IgZGlzY3Vzc2lvbiBzZWUgaHR0cHM6Ly9naXRodWIuY29tL25lYXJwcm90b2NvbC9ORVBzL2lzc3Vlcy82N1xuZXhwb3J0cy5ERUZBVUxUX0ZVTkNUSU9OX0NBTExfR0FTID0gQmlnSW50KCczMDAwMDAwMDAwMDAwMCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/constants.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/errors.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/errors.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.logWarning = void 0;\nconst logger_1 = __webpack_require__(/*! ../logger */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/index.js\");\n/** @deprecated */\nfunction logWarning(...args) {\n    const [message, ...optionalParams] = args;\n    logger_1.Logger.warn(message, ...optionalParams);\n}\nexports.logWarning = logWarning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixpQkFBaUIsbUJBQU8sQ0FBQyw2RkFBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2Vycm9ycy9lcnJvcnMuanM/ZDg0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubG9nV2FybmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4uL2xvZ2dlclwiKTtcbi8qKiBAZGVwcmVjYXRlZCAqL1xuZnVuY3Rpb24gbG9nV2FybmluZyguLi5hcmdzKSB7XG4gICAgY29uc3QgW21lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zXSA9IGFyZ3M7XG4gICAgbG9nZ2VyXzEuTG9nZ2VyLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xufVxuZXhwb3J0cy5sb2dXYXJuaW5nID0gbG9nV2FybmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/errors.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRpcError = exports.parseResultError = exports.getErrorTypeFromErrorMessage = exports.formatError = exports.ServerError = exports.logWarning = void 0;\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/errors.js\");\nObject.defineProperty(exports, \"logWarning\", ({ enumerable: true, get: function () { return errors_1.logWarning; } }));\nvar rpc_errors_1 = __webpack_require__(/*! ./rpc_errors */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_errors.js\");\nObject.defineProperty(exports, \"ServerError\", ({ enumerable: true, get: function () { return rpc_errors_1.ServerError; } }));\nObject.defineProperty(exports, \"formatError\", ({ enumerable: true, get: function () { return rpc_errors_1.formatError; } }));\nObject.defineProperty(exports, \"getErrorTypeFromErrorMessage\", ({ enumerable: true, get: function () { return rpc_errors_1.getErrorTypeFromErrorMessage; } }));\nObject.defineProperty(exports, \"parseResultError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseResultError; } }));\nObject.defineProperty(exports, \"parseRpcError\", ({ enumerable: true, get: function () { return rpc_errors_1.parseRpcError; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsd0JBQXdCLEdBQUcsb0NBQW9DLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsa0JBQWtCO0FBQ3hKLGVBQWUsbUJBQU8sQ0FBQyw2RkFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMscUdBQWM7QUFDekMsK0NBQThDLEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzFILCtDQUE4QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUMxSCxnRUFBK0QsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDNUosb0RBQW1ELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3BJLGlEQUFnRCxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9lcnJvcnMvaW5kZXguanM/MzE1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VScGNFcnJvciA9IGV4cG9ydHMucGFyc2VSZXN1bHRFcnJvciA9IGV4cG9ydHMuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZSA9IGV4cG9ydHMuZm9ybWF0RXJyb3IgPSBleHBvcnRzLlNlcnZlckVycm9yID0gZXhwb3J0cy5sb2dXYXJuaW5nID0gdm9pZCAwO1xudmFyIGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nV2FybmluZ1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEubG9nV2FybmluZzsgfSB9KTtcbnZhciBycGNfZXJyb3JzXzEgPSByZXF1aXJlKFwiLi9ycGNfZXJyb3JzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2VydmVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5TZXJ2ZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZvcm1hdEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZm9ybWF0RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJnZXRFcnJvclR5cGVGcm9tRXJyb3JNZXNzYWdlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNfZXJyb3JzXzEuZ2V0RXJyb3JUeXBlRnJvbUVycm9yTWVzc2FnZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlUmVzdWx0RXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJwY19lcnJvcnNfMS5wYXJzZVJlc3VsdEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VScGNFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcnBjX2Vycm9yc18xLnBhcnNlUnBjRXJyb3I7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_errors.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_errors.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getErrorTypeFromErrorMessage = exports.formatError = exports.parseResultError = exports.parseRpcError = exports.ServerError = void 0;\nconst types_1 = __webpack_require__(/*! @near-js/types */ \"./node_modules/near-api-js/node_modules/@near-js/types/lib/index.js\");\nconst mustache_1 = __importDefault(__webpack_require__(/*! mustache */ \"./node_modules/mustache/mustache.js\"));\nconst format_1 = __webpack_require__(/*! ../format */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/format.js\");\nconst error_messages_json_1 = __importDefault(__webpack_require__(/*! ./error_messages.json */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/error_messages.json\"));\nconst rpc_error_schema_json_1 = __importDefault(__webpack_require__(/*! ./rpc_error_schema.json */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json\"));\nconst mustacheHelpers = {\n    formatNear: () => (n, render) => (0, format_1.formatNearAmount)(render(n))\n};\nclass ServerError extends types_1.TypedError {\n}\nexports.ServerError = ServerError;\nclass ServerTransactionError extends ServerError {\n}\nfunction parseRpcError(errorObj) {\n    const result = {};\n    const errorClassName = walkSubtype(errorObj, rpc_error_schema_json_1.default.schema, result, '');\n    // NOTE: This assumes that all errors extend TypedError\n    const error = new ServerError(formatError(errorClassName, result), errorClassName);\n    Object.assign(error, result);\n    return error;\n}\nexports.parseRpcError = parseRpcError;\nfunction parseResultError(result) {\n    const server_error = parseRpcError(result.status.Failure);\n    const server_tx_error = new ServerTransactionError();\n    Object.assign(server_tx_error, server_error);\n    server_tx_error.type = server_error.type;\n    server_tx_error.message = server_error.message;\n    server_tx_error.transaction_outcome = result.transaction_outcome;\n    return server_tx_error;\n}\nexports.parseResultError = parseResultError;\nfunction formatError(errorClassName, errorData) {\n    if (typeof error_messages_json_1.default[errorClassName] === 'string') {\n        return mustache_1.default.render(error_messages_json_1.default[errorClassName], Object.assign(Object.assign({}, errorData), mustacheHelpers));\n    }\n    return JSON.stringify(errorData);\n}\nexports.formatError = formatError;\n/**\n * Walks through defined schema returning error(s) recursively\n * @param errorObj The error to be parsed\n * @param schema A defined schema in JSON mapping to the RPC errors\n * @param result An object used in recursion or called directly\n * @param typeName The human-readable error type name as defined in the JSON mapping\n */\nfunction walkSubtype(errorObj, schema, result, typeName) {\n    let error;\n    let type;\n    let errorTypeName;\n    for (const errorName in schema) {\n        if (isString(errorObj[errorName])) {\n            // Return early if error type is in a schema\n            return errorObj[errorName];\n        }\n        if (isObject(errorObj[errorName])) {\n            error = errorObj[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else if (isObject(errorObj.kind) && isObject(errorObj.kind[errorName])) {\n            error = errorObj.kind[errorName];\n            type = schema[errorName];\n            errorTypeName = errorName;\n        }\n        else {\n            continue;\n        }\n    }\n    if (error && type) {\n        for (const prop of Object.keys(type.props)) {\n            result[prop] = error[prop];\n        }\n        return walkSubtype(error, schema, result, errorTypeName);\n    }\n    else {\n        // TODO: is this the right thing to do?\n        result.kind = errorObj;\n        return typeName;\n    }\n}\nfunction getErrorTypeFromErrorMessage(errorMessage, errorType) {\n    // This function should be removed when JSON RPC starts returning typed errors.\n    switch (true) {\n        case /^account .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^Account .*? doesn't exist$/.test(errorMessage):\n            return 'AccountDoesNotExist';\n        case /^access key .*? does not exist while viewing$/.test(errorMessage):\n            return 'AccessKeyDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: CompilationError\\(CodeDoesNotExist/.test(errorMessage):\n            return 'CodeDoesNotExist';\n        case /wasm execution failed with error: FunctionCallError\\(MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /wasm execution failed with error: MethodResolveError\\(MethodNotFound/.test(errorMessage):\n            return 'MethodNotFound';\n        case /Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/.test(errorMessage):\n            return 'InvalidNonce';\n        default:\n            return errorType;\n    }\n}\nexports.getErrorTypeFromErrorMessage = getErrorTypeFromErrorMessage;\n/**\n * Helper function determining if the argument is an object\n * @param n Value to check\n */\nfunction isObject(n) {\n    return Object.prototype.toString.call(n) === '[object Object]';\n}\n/**\n * Helper function determining if the argument is a string\n * @param n Value to check\n */\nfunction isString(n) {\n    return Object.prototype.toString.call(n) === '[object String]';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_errors.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/format.js":
/*!****************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/format.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.baseDecode = exports.baseEncode = exports.parseNearAmount = exports.formatNearAmount = exports.NEAR_NOMINATION = exports.NEAR_NOMINATION_EXP = void 0;\nconst bs58_1 = __importDefault(__webpack_require__(/*! bs58 */ \"./node_modules/bs58/index.js\"));\n/**\n * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.\n */\nexports.NEAR_NOMINATION_EXP = 24;\n/**\n * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.\n */\nexports.NEAR_NOMINATION = BigInt(10) ** BigInt(exports.NEAR_NOMINATION_EXP);\n// Pre-calculate offsets used for rounding to different number of digits\nconst ROUNDING_OFFSETS = [];\nconst BN10 = BigInt(10);\nfor (let i = 0, offset = BigInt(5); i < exports.NEAR_NOMINATION_EXP; i++, offset = offset * BN10) {\n    ROUNDING_OFFSETS[i] = offset;\n}\n/**\n * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.\n * Effectively this divides given amount by {@link NEAR_NOMINATION}.\n *\n * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})\n * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.\n * @returns Value in Ⓝ\n */\nfunction formatNearAmount(balance, fracDigits = exports.NEAR_NOMINATION_EXP) {\n    let balanceBN = BigInt(balance);\n    if (fracDigits !== exports.NEAR_NOMINATION_EXP) {\n        // Adjust balance for rounding at given number of digits\n        const roundingExp = exports.NEAR_NOMINATION_EXP - fracDigits - 1;\n        if (roundingExp > 0) {\n            balanceBN += ROUNDING_OFFSETS[roundingExp];\n        }\n    }\n    balance = balanceBN.toString();\n    const wholeStr = balance.substring(0, balance.length - exports.NEAR_NOMINATION_EXP) || \"0\";\n    const fractionStr = balance\n        .substring(balance.length - exports.NEAR_NOMINATION_EXP)\n        .padStart(exports.NEAR_NOMINATION_EXP, \"0\")\n        .substring(0, fracDigits);\n    return trimTrailingZeroes(`${formatWithCommas(wholeStr)}.${fractionStr}`);\n}\nexports.formatNearAmount = formatNearAmount;\n/**\n * Convert human readable NEAR amount to internal indivisible units.\n * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.\n *\n * @param amt decimal string (potentially fractional) denominated in NEAR.\n * @returns The parsed yoctoⓃ amount or null if no amount was passed in\n */\nfunction parseNearAmount(amt) {\n    if (!amt) {\n        return null;\n    }\n    amt = cleanupAmount(amt);\n    const split = amt.split(\".\");\n    const wholePart = split[0];\n    const fracPart = split[1] || \"\";\n    if (split.length > 2 || fracPart.length > exports.NEAR_NOMINATION_EXP) {\n        throw new Error(`Cannot parse '${amt}' as NEAR amount`);\n    }\n    return trimLeadingZeroes(wholePart + fracPart.padEnd(exports.NEAR_NOMINATION_EXP, \"0\"));\n}\nexports.parseNearAmount = parseNearAmount;\n/**\n * Removes commas from the input\n * @param amount A value or amount that may contain commas\n * @returns string The cleaned value\n */\nfunction cleanupAmount(amount) {\n    return amount.replace(/,/g, \"\").trim();\n}\n/**\n * Removes .000… from an input\n * @param value A value that may contain trailing zeroes in the decimals place\n * @returns string The value without the trailing zeros\n */\nfunction trimTrailingZeroes(value) {\n    return value.replace(/\\.?0*$/, \"\");\n}\n/**\n * Removes leading zeroes from an input\n * @param value A value that may contain leading zeroes\n * @returns string The value without the leading zeroes\n */\nfunction trimLeadingZeroes(value) {\n    value = value.replace(/^0+/, \"\");\n    if (value === \"\") {\n        return \"0\";\n    }\n    return value;\n}\n/**\n * Returns a human-readable value with commas\n * @param value A value that may not contain commas\n * @returns string A value with commas\n */\nfunction formatWithCommas(value) {\n    const pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(value)) {\n        value = value.replace(pattern, \"$1,$2\");\n    }\n    return value;\n}\n/**\n * Encodes a Uint8Array or string into base58\n * @param value Uint8Array or string representing a borsh encoded object\n * @returns string base58 encoding of the value\n */\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        const bytes = [];\n        for (let c = 0; c < value.length; c++) {\n            bytes.push(value.charCodeAt(c));\n        }\n        value = new Uint8Array(bytes);\n    }\n    return bs58_1.default.encode(value);\n}\nexports.baseEncode = baseEncode;\n/**\n * Decodes a base58 string into a Uint8Array\n * @param value base58 encoded string\n * @returns Uint8Array representing the decoded value\n */\nfunction baseDecode(value) {\n    return new Uint8Array(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/format.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./constants */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/constants.js\"), exports);\n__exportStar(__webpack_require__(/*! ./errors */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./format */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/format.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logging */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/logging.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/provider.js\"), exports);\n__exportStar(__webpack_require__(/*! ./validators */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/validators.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsNEZBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLDRGQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyxzRkFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsd0ZBQVc7QUFDaEMsYUFBYSxtQkFBTyxDQUFDLDBGQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyw4RkFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsNEZBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLG9GQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2luZGV4LmpzPzBiM2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb25zdGFudHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2Vycm9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vZm9ybWF0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9sb2dnaW5nXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9wcm92aWRlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdmFsaWRhdG9yc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/console.logger.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/console.logger.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ConsoleLogger = void 0;\nclass ConsoleLogger {\n    constructor(logLevels) {\n        this.logLevels = logLevels;\n        this.isLevelEnabled = (level) => {\n            return this.logLevels.includes(level);\n        };\n    }\n    print(level, message, ...optionalParams) {\n        switch (level) {\n            case 'error':\n            case 'fatal':\n                return console.error(message, ...optionalParams);\n            case 'warn':\n                return console.warn(message, ...optionalParams);\n            case 'log':\n                return console.log(message, ...optionalParams);\n            case 'debug':\n            case 'verbose':\n                return console.debug(message, ...optionalParams);\n        }\n    }\n    verbose(message, ...optionalParams) {\n        if (!this.isLevelEnabled('verbose'))\n            return;\n        this.print('verbose', message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        if (!this.isLevelEnabled('debug'))\n            return;\n        this.print('debug', message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        if (!this.isLevelEnabled('log'))\n            return;\n        this.print('log', message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        if (!this.isLevelEnabled('warn'))\n            return;\n        this.print('warn', message, ...optionalParams);\n    }\n    error(message, ...optionalParams) {\n        if (!this.isLevelEnabled('error'))\n            return;\n        this.print('error', message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        if (!this.isLevelEnabled('fatal'))\n            return;\n        this.print('fatal', message, ...optionalParams);\n    }\n}\nexports.ConsoleLogger = ConsoleLogger;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvY29uc29sZS5sb2dnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dlci9jb25zb2xlLmxvZ2dlci5qcz9iNTNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gdm9pZCAwO1xuY2xhc3MgQ29uc29sZUxvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWxzKSB7XG4gICAgICAgIHRoaXMubG9nTGV2ZWxzID0gbG9nTGV2ZWxzO1xuICAgICAgICB0aGlzLmlzTGV2ZWxFbmFibGVkID0gKGxldmVsKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5sb2dMZXZlbHMuaW5jbHVkZXMobGV2ZWwpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBwcmludChsZXZlbCwgbWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgc3dpdGNoIChsZXZlbCkge1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgY2FzZSAnZmF0YWwnOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgICAgIGNhc2UgJ3dhcm4nOlxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnbG9nJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICAgICAgY2FzZSAnZGVidWcnOlxuICAgICAgICAgICAgY2FzZSAndmVyYm9zZSc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZGVidWcobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZlcmJvc2UobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd2ZXJib3NlJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3ZlcmJvc2UnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZGVidWcnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZGVidWcnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGxvZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuaXNMZXZlbEVuYWJsZWQoJ2xvZycpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByaW50KCdsb2cnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIHdhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzTGV2ZWxFbmFibGVkKCd3YXJuJykpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIHRoaXMucHJpbnQoJ3dhcm4nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGVycm9yKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZXJyb3InKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZXJyb3InLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICghdGhpcy5pc0xldmVsRW5hYmxlZCgnZmF0YWwnKSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5wcmludCgnZmF0YWwnLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxufVxuZXhwb3J0cy5Db25zb2xlTG9nZ2VyID0gQ29uc29sZUxvZ2dlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/console.logger.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/index.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/index.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nvar logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/logger.js\");\nObject.defineProperty(exports, \"Logger\", ({ enumerable: true, get: function () { return logger_1.Logger; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGVBQWUsbUJBQU8sQ0FBQyw2RkFBVTtBQUNqQywwQ0FBeUMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2luZGV4LmpzPzRlYTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkxvZ2dlciA9IHZvaWQgMDtcbnZhciBsb2dnZXJfMSA9IHJlcXVpcmUoXCIuL2xvZ2dlclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkxvZ2dlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbG9nZ2VyXzEuTG9nZ2VyOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/index.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/logger.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/logger.js ***!
  \***********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\nvar _a;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Logger = void 0;\nconst console_logger_1 = __webpack_require__(/*! ./console.logger */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/console.logger.js\");\nconst DEFAULT_LOG_LEVELS = [\n    'verbose',\n    'debug',\n    'log',\n    'warn',\n    'error',\n    'fatal',\n];\nconst DEFAULT_LOGGER = typeof process === 'object' && process.env.NEAR_NO_LOGS\n    ? undefined\n    : new console_logger_1.ConsoleLogger(DEFAULT_LOG_LEVELS);\n/**\n * Used to log the library messages\n */\nclass Logger {\n    static error(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.error(message, ...optionalParams);\n    }\n    /**\n     * Write a 'log' level log.\n     */\n    static log(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.log(message, ...optionalParams);\n    }\n    /**\n     * Write a 'warn' level log.\n     */\n    static warn(message, ...optionalParams) {\n        var _b;\n        (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.warn(message, ...optionalParams);\n    }\n    /**\n     * Write a 'debug' level log.\n     */\n    static debug(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.debug) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    /**\n     * Write a 'verbose' level log.\n     */\n    static verbose(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.verbose) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        var _b, _c;\n        (_c = (_b = this.instanceRef) === null || _b === void 0 ? void 0 : _b.fatal) === null || _c === void 0 ? void 0 : _c.call(_b, message, ...optionalParams);\n    }\n}\nexports.Logger = Logger;\n_a = Logger;\nLogger.instanceRef = DEFAULT_LOGGER;\nLogger.overrideLogger = (logger) => {\n    _a.instanceRef = logger;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnZXIvbG9nZ2VyLmpzIiwibWFwcGluZ3MiOiI7QUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCx5QkFBeUIsbUJBQU8sQ0FBQyw2R0FBa0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixPQUFPLGlCQUFpQixPQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25lYXItYXBpLWpzL25vZGVfbW9kdWxlcy9AbmVhci1qcy91dGlscy9saWIvbG9nZ2VyL2xvZ2dlci5qcz9hNThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9hO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Mb2dnZXIgPSB2b2lkIDA7XG5jb25zdCBjb25zb2xlX2xvZ2dlcl8xID0gcmVxdWlyZShcIi4vY29uc29sZS5sb2dnZXJcIik7XG5jb25zdCBERUZBVUxUX0xPR19MRVZFTFMgPSBbXG4gICAgJ3ZlcmJvc2UnLFxuICAgICdkZWJ1ZycsXG4gICAgJ2xvZycsXG4gICAgJ3dhcm4nLFxuICAgICdlcnJvcicsXG4gICAgJ2ZhdGFsJyxcbl07XG5jb25zdCBERUZBVUxUX0xPR0dFUiA9IHR5cGVvZiBwcm9jZXNzID09PSAnb2JqZWN0JyAmJiBwcm9jZXNzLmVudi5ORUFSX05PX0xPR1NcbiAgICA/IHVuZGVmaW5lZFxuICAgIDogbmV3IGNvbnNvbGVfbG9nZ2VyXzEuQ29uc29sZUxvZ2dlcihERUZBVUxUX0xPR19MRVZFTFMpO1xuLyoqXG4gKiBVc2VkIHRvIGxvZyB0aGUgbGlicmFyeSBtZXNzYWdlc1xuICovXG5jbGFzcyBMb2dnZXIge1xuICAgIHN0YXRpYyBlcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2I7XG4gICAgICAgIChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5lcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ2xvZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBsb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpIHtcbiAgICAgICAgdmFyIF9iO1xuICAgICAgICAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogV3JpdGUgYSAnd2FybicgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyB3YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYjtcbiAgICAgICAgKF9iID0gdGhpcy5pbnN0YW5jZVJlZikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhICdkZWJ1ZycgbGV2ZWwgbG9nLlxuICAgICAqL1xuICAgIHN0YXRpYyBkZWJ1ZyhtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuZGVidWcpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5jYWxsKF9iLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgJ3ZlcmJvc2UnIGxldmVsIGxvZy5cbiAgICAgKi9cbiAgICBzdGF0aWMgdmVyYm9zZShtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICB2YXIgX2IsIF9jO1xuICAgICAgICAoX2MgPSAoX2IgPSB0aGlzLmluc3RhbmNlUmVmKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudmVyYm9zZSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG4gICAgc3RhdGljIGZhdGFsKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIHZhciBfYiwgX2M7XG4gICAgICAgIChfYyA9IChfYiA9IHRoaXMuaW5zdGFuY2VSZWYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5mYXRhbCkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhbGwoX2IsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICB9XG59XG5leHBvcnRzLkxvZ2dlciA9IExvZ2dlcjtcbl9hID0gTG9nZ2VyO1xuTG9nZ2VyLmluc3RhbmNlUmVmID0gREVGQVVMVF9MT0dHRVI7XG5Mb2dnZXIub3ZlcnJpZGVMb2dnZXIgPSAobG9nZ2VyKSA9PiB7XG4gICAgX2EuaW5zdGFuY2VSZWYgPSBsb2dnZXI7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/logger.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/logging.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/logging.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.printTxOutcomeLogs = exports.printTxOutcomeLogsAndFailures = void 0;\nconst errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/index.js\");\nconst logger_1 = __webpack_require__(/*! ./logger */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/logger/index.js\");\n/**\n * Parse and print details from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.outcome the query execution response\n */\nfunction printTxOutcomeLogsAndFailures({ contractId, outcome, }) {\n    const flatLogs = [outcome.transaction_outcome, ...outcome.receipts_outcome]\n        .reduce((acc, it) => {\n        const isFailure = typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object';\n        if (it.outcome.logs.length || isFailure) {\n            return acc.concat({\n                receiptIds: it.outcome.receipt_ids,\n                logs: it.outcome.logs,\n                failure: typeof it.outcome.status === 'object' && it.outcome.status.Failure !== undefined\n                    ? (0, errors_1.parseRpcError)(it.outcome.status.Failure)\n                    : null\n            });\n        }\n        else {\n            return acc;\n        }\n    }, []);\n    for (const result of flatLogs) {\n        logger_1.Logger.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n        printTxOutcomeLogs({\n            contractId,\n            logs: result.logs,\n            prefix: '\\t',\n        });\n        if (result.failure) {\n            logger_1.Logger.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n        }\n    }\n}\nexports.printTxOutcomeLogsAndFailures = printTxOutcomeLogsAndFailures;\n/**\n * Format and print log output from a query execution response\n * @param params\n * @param params.contractId ID of the account/contract which made the query\n * @param params.logs log output from a query execution response\n * @param params.prefix string to append to the beginning of each log\n */\nfunction printTxOutcomeLogs({ contractId, logs, prefix = '', }) {\n    for (const log of logs) {\n        logger_1.Logger.log(`${prefix}Log [${contractId}]: ${log}`);\n    }\n}\nexports.printTxOutcomeLogs = printTxOutcomeLogs;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQixHQUFHLHFDQUFxQztBQUNsRSxpQkFBaUIsbUJBQU8sQ0FBQyw0RkFBVTtBQUNuQyxpQkFBaUIsbUJBQU8sQ0FBQyw0RkFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsc0JBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esc0NBQXNDLHdDQUF3QyxJQUFJLDZCQUE2QjtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLCtDQUErQyxXQUFXLEtBQUssZUFBZTtBQUM5RTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlEO0FBQ0EsK0JBQStCLE9BQU8sT0FBTyxXQUFXLEtBQUssSUFBSTtBQUNqRTtBQUNBO0FBQ0EsMEJBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL2xvZ2dpbmcuanM/MzM0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzID0gZXhwb3J0cy5wcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcyA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgbG9nZ2VyXzEgPSByZXF1aXJlKFwiLi9sb2dnZXJcIik7XG4vKipcbiAqIFBhcnNlIGFuZCBwcmludCBkZXRhaWxzIGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5vdXRjb21lIHRoZSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gcHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMoeyBjb250cmFjdElkLCBvdXRjb21lLCB9KSB7XG4gICAgY29uc3QgZmxhdExvZ3MgPSBbb3V0Y29tZS50cmFuc2FjdGlvbl9vdXRjb21lLCAuLi5vdXRjb21lLnJlY2VpcHRzX291dGNvbWVdXG4gICAgICAgIC5yZWR1Y2UoKGFjYywgaXQpID0+IHtcbiAgICAgICAgY29uc3QgaXNGYWlsdXJlID0gdHlwZW9mIGl0Lm91dGNvbWUuc3RhdHVzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSA9PT0gJ29iamVjdCc7XG4gICAgICAgIGlmIChpdC5vdXRjb21lLmxvZ3MubGVuZ3RoIHx8IGlzRmFpbHVyZSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoe1xuICAgICAgICAgICAgICAgIHJlY2VpcHRJZHM6IGl0Lm91dGNvbWUucmVjZWlwdF9pZHMsXG4gICAgICAgICAgICAgICAgbG9nczogaXQub3V0Y29tZS5sb2dzLFxuICAgICAgICAgICAgICAgIGZhaWx1cmU6IHR5cGVvZiBpdC5vdXRjb21lLnN0YXR1cyA9PT0gJ29iamVjdCcgJiYgaXQub3V0Y29tZS5zdGF0dXMuRmFpbHVyZSAhPT0gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgID8gKDAsIGVycm9yc18xLnBhcnNlUnBjRXJyb3IpKGl0Lm91dGNvbWUuc3RhdHVzLkZhaWx1cmUpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9XG4gICAgfSwgW10pO1xuICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIGZsYXRMb2dzKSB7XG4gICAgICAgIGxvZ2dlcl8xLkxvZ2dlci5sb2coYFJlY2VpcHQke3Jlc3VsdC5yZWNlaXB0SWRzLmxlbmd0aCA+IDEgPyAncycgOiAnJ306ICR7cmVzdWx0LnJlY2VpcHRJZHMuam9pbignLCAnKX1gKTtcbiAgICAgICAgcHJpbnRUeE91dGNvbWVMb2dzKHtcbiAgICAgICAgICAgIGNvbnRyYWN0SWQsXG4gICAgICAgICAgICBsb2dzOiByZXN1bHQubG9ncyxcbiAgICAgICAgICAgIHByZWZpeDogJ1xcdCcsXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAocmVzdWx0LmZhaWx1cmUpIHtcbiAgICAgICAgICAgIGxvZ2dlcl8xLkxvZ2dlci53YXJuKGBcXHRGYWlsdXJlIFske2NvbnRyYWN0SWR9XTogJHtyZXN1bHQuZmFpbHVyZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMucHJpbnRUeE91dGNvbWVMb2dzQW5kRmFpbHVyZXMgPSBwcmludFR4T3V0Y29tZUxvZ3NBbmRGYWlsdXJlcztcbi8qKlxuICogRm9ybWF0IGFuZCBwcmludCBsb2cgb3V0cHV0IGZyb20gYSBxdWVyeSBleGVjdXRpb24gcmVzcG9uc2VcbiAqIEBwYXJhbSBwYXJhbXNcbiAqIEBwYXJhbSBwYXJhbXMuY29udHJhY3RJZCBJRCBvZiB0aGUgYWNjb3VudC9jb250cmFjdCB3aGljaCBtYWRlIHRoZSBxdWVyeVxuICogQHBhcmFtIHBhcmFtcy5sb2dzIGxvZyBvdXRwdXQgZnJvbSBhIHF1ZXJ5IGV4ZWN1dGlvbiByZXNwb25zZVxuICogQHBhcmFtIHBhcmFtcy5wcmVmaXggc3RyaW5nIHRvIGFwcGVuZCB0byB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggbG9nXG4gKi9cbmZ1bmN0aW9uIHByaW50VHhPdXRjb21lTG9ncyh7IGNvbnRyYWN0SWQsIGxvZ3MsIHByZWZpeCA9ICcnLCB9KSB7XG4gICAgZm9yIChjb25zdCBsb2cgb2YgbG9ncykge1xuICAgICAgICBsb2dnZXJfMS5Mb2dnZXIubG9nKGAke3ByZWZpeH1Mb2cgWyR7Y29udHJhY3RJZH1dOiAke2xvZ31gKTtcbiAgICB9XG59XG5leHBvcnRzLnByaW50VHhPdXRjb21lTG9ncyA9IHByaW50VHhPdXRjb21lTG9ncztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/logging.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/provider.js":
/*!******************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/provider.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getTransactionLastResult = void 0;\n/** @hidden */\nfunction getTransactionLastResult(txResult) {\n    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {\n        const value = Buffer.from(txResult.status.SuccessValue, 'base64').toString();\n        try {\n            return JSON.parse(value);\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return null;\n}\nexports.getTransactionLastResult = getTransactionLastResult;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiO0FBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixNQUFNO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi9wcm92aWRlci5qcz8wYWJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRUcmFuc2FjdGlvbkxhc3RSZXN1bHQgPSB2b2lkIDA7XG4vKiogQGhpZGRlbiAqL1xuZnVuY3Rpb24gZ2V0VHJhbnNhY3Rpb25MYXN0UmVzdWx0KHR4UmVzdWx0KSB7XG4gICAgaWYgKHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMgPT09ICdvYmplY3QnICYmIHR5cGVvZiB0eFJlc3VsdC5zdGF0dXMuU3VjY2Vzc1ZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IEJ1ZmZlci5mcm9tKHR4UmVzdWx0LnN0YXR1cy5TdWNjZXNzVmFsdWUsICdiYXNlNjQnKS50b1N0cmluZygpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5leHBvcnRzLmdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdCA9IGdldFRyYW5zYWN0aW9uTGFzdFJlc3VsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/provider.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/utils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/utils.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sortBigIntAsc = void 0;\nfunction sortBigIntAsc(a, b) {\n    return (a < b ? -1 : a > b ? 1 : 0);\n}\nexports.sortBigIntAsc = sortBigIntAsc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3V0aWxzLmpzP2RiYWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNvcnRCaWdJbnRBc2MgPSB2b2lkIDA7XG5mdW5jdGlvbiBzb3J0QmlnSW50QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gKGEgPCBiID8gLTEgOiBhID4gYiA/IDEgOiAwKTtcbn1cbmV4cG9ydHMuc29ydEJpZ0ludEFzYyA9IHNvcnRCaWdJbnRBc2M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/utils.js\n"));

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/validators.js":
/*!********************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/validators.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.diffEpochValidators = exports.findSeatPrice = void 0;\nconst depd_1 = __importDefault(__webpack_require__(/*! depd */ \"./node_modules/depd/lib/browser/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/near-api-js/node_modules/@near-js/utils/lib/utils.js\");\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @param validators: current or next epoch validators.\n * @param maxNumberOfSeats: maximum number of seats in the network.\n * @param minimumStakeRatio: minimum stake ratio\n * @param protocolVersion: version of the protocol from genesis config\n */\nfunction findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio, protocolVersion) {\n    if (protocolVersion && protocolVersion < 49) {\n        return findSeatPriceForProtocolBefore49(validators, maxNumberOfSeats);\n    }\n    if (!minimumStakeRatio) {\n        const deprecate = (0, depd_1.default)('findSeatPrice(validators, maxNumberOfSeats)');\n        deprecate('`use `findSeatPrice(validators, maxNumberOfSeats, minimumStakeRatio)` instead');\n        minimumStakeRatio = [1, 6250]; // hardcoded minimumStakeRation from 12/7/21\n    }\n    return findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio);\n}\nexports.findSeatPrice = findSeatPrice;\nfunction findSeatPriceForProtocolBefore49(validators, numSeats) {\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const num = BigInt(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (stakesSum < num) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = BigInt(1), right = stakesSum + BigInt(1);\n    while (left !== right - BigInt(1)) {\n        const mid = (left + right) / BigInt(2);\n        let found = false;\n        let currentSum = BigInt(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum + (stakes[i] / mid);\n            if (currentSum >= num) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n// nearcore reference: https://github.com/near/nearcore/blob/5a8ae263ec07930cd34d0dcf5bcee250c67c02aa/chain/epoch_manager/src/validator_selection.rs#L308;L315\nfunction findSeatPriceForProtocolAfter49(validators, maxNumberOfSeats, minimumStakeRatio) {\n    if (minimumStakeRatio.length != 2) {\n        throw Error('minimumStakeRatio should have 2 elements');\n    }\n    const stakes = validators.map(v => BigInt(v.stake)).sort(utils_1.sortBigIntAsc);\n    const stakesSum = stakes.reduce((a, b) => a + b);\n    if (validators.length < maxNumberOfSeats) {\n        return stakesSum * BigInt(minimumStakeRatio[0]) / BigInt(minimumStakeRatio[1]);\n    }\n    else {\n        return stakes[0] + BigInt(1);\n    }\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @param currentValidators: list of current validators.\n * @param nextValidators: list of next validators.\n */\nfunction diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\nexports.diffEpochValidators = diffEpochValidators;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmVhci1hcGktanMvbm9kZV9tb2R1bGVzL0BuZWFyLWpzL3V0aWxzL2xpYi92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcscUJBQXFCO0FBQ25ELCtCQUErQixtQkFBTyxDQUFDLHNEQUFNO0FBQzdDLGdCQUFnQixtQkFBTyxDQUFDLG9GQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG1EQUFtRDtBQUM1RTtBQUNBO0FBQ0EsMkJBQTJCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZWFyLWFwaS1qcy9ub2RlX21vZHVsZXMvQG5lYXItanMvdXRpbHMvbGliL3ZhbGlkYXRvcnMuanM/MzNmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGlmZkVwb2NoVmFsaWRhdG9ycyA9IGV4cG9ydHMuZmluZFNlYXRQcmljZSA9IHZvaWQgMDtcbmNvbnN0IGRlcGRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVwZFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG4vKiogRmluZHMgc2VhdCBwcmljZSBnaXZlbiB2YWxpZGF0b3JzIHN0YWtlcyBhbmQgbnVtYmVyIG9mIHNlYXRzLlxuICogIENhbGN1bGF0aW9uIGZvbGxvdyB0aGUgc3BlYzogaHR0cHM6Ly9ub21pY29uLmlvL0Vjb25vbWljcy9SRUFETUUuaHRtbCN2YWxpZGF0b3Itc2VsZWN0aW9uXG4gKiBAcGFyYW0gdmFsaWRhdG9yczogY3VycmVudCBvciBuZXh0IGVwb2NoIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0gbWF4TnVtYmVyT2ZTZWF0czogbWF4aW11bSBudW1iZXIgb2Ygc2VhdHMgaW4gdGhlIG5ldHdvcmsuXG4gKiBAcGFyYW0gbWluaW11bVN0YWtlUmF0aW86IG1pbmltdW0gc3Rha2UgcmF0aW9cbiAqIEBwYXJhbSBwcm90b2NvbFZlcnNpb246IHZlcnNpb24gb2YgdGhlIHByb3RvY29sIGZyb20gZ2VuZXNpcyBjb25maWdcbiAqL1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbywgcHJvdG9jb2xWZXJzaW9uKSB7XG4gICAgaWYgKHByb3RvY29sVmVyc2lvbiAmJiBwcm90b2NvbFZlcnNpb24gPCA0OSkge1xuICAgICAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cyk7XG4gICAgfVxuICAgIGlmICghbWluaW11bVN0YWtlUmF0aW8pIHtcbiAgICAgICAgY29uc3QgZGVwcmVjYXRlID0gKDAsIGRlcGRfMS5kZWZhdWx0KSgnZmluZFNlYXRQcmljZSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzKScpO1xuICAgICAgICBkZXByZWNhdGUoJ2B1c2UgYGZpbmRTZWF0UHJpY2UodmFsaWRhdG9ycywgbWF4TnVtYmVyT2ZTZWF0cywgbWluaW11bVN0YWtlUmF0aW8pYCBpbnN0ZWFkJyk7XG4gICAgICAgIG1pbmltdW1TdGFrZVJhdGlvID0gWzEsIDYyNTBdOyAvLyBoYXJkY29kZWQgbWluaW11bVN0YWtlUmF0aW9uIGZyb20gMTIvNy8yMVxuICAgIH1cbiAgICByZXR1cm4gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbyk7XG59XG5leHBvcnRzLmZpbmRTZWF0UHJpY2UgPSBmaW5kU2VhdFByaWNlO1xuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQmVmb3JlNDkodmFsaWRhdG9ycywgbnVtU2VhdHMpIHtcbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IG51bSA9IEJpZ0ludChudW1TZWF0cyk7XG4gICAgY29uc3Qgc3Rha2VzU3VtID0gc3Rha2VzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpO1xuICAgIGlmIChzdGFrZXNTdW0gPCBudW0pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTdGFrZXMgYXJlIGJlbG93IHNlYXRzJyk7XG4gICAgfVxuICAgIC8vIGFzc2VydCBzdGFrZXNTdW0gPj0gbnVtU2VhdHNcbiAgICBsZXQgbGVmdCA9IEJpZ0ludCgxKSwgcmlnaHQgPSBzdGFrZXNTdW0gKyBCaWdJbnQoMSk7XG4gICAgd2hpbGUgKGxlZnQgIT09IHJpZ2h0IC0gQmlnSW50KDEpKSB7XG4gICAgICAgIGNvbnN0IG1pZCA9IChsZWZ0ICsgcmlnaHQpIC8gQmlnSW50KDIpO1xuICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTtcbiAgICAgICAgbGV0IGN1cnJlbnRTdW0gPSBCaWdJbnQoMCk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3Rha2VzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICBjdXJyZW50U3VtID0gY3VycmVudFN1bSArIChzdGFrZXNbaV0gLyBtaWQpO1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRTdW0gPj0gbnVtKSB7XG4gICAgICAgICAgICAgICAgbGVmdCA9IG1pZDtcbiAgICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFmb3VuZCkge1xuICAgICAgICAgICAgcmlnaHQgPSBtaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGxlZnQ7XG59XG4vLyBuZWFyY29yZSByZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9uZWFyL25lYXJjb3JlL2Jsb2IvNWE4YWUyNjNlYzA3OTMwY2QzNGQwZGNmNWJjZWUyNTBjNjdjMDJhYS9jaGFpbi9lcG9jaF9tYW5hZ2VyL3NyYy92YWxpZGF0b3Jfc2VsZWN0aW9uLnJzI0wzMDg7TDMxNVxuZnVuY3Rpb24gZmluZFNlYXRQcmljZUZvclByb3RvY29sQWZ0ZXI0OSh2YWxpZGF0b3JzLCBtYXhOdW1iZXJPZlNlYXRzLCBtaW5pbXVtU3Rha2VSYXRpbykge1xuICAgIGlmIChtaW5pbXVtU3Rha2VSYXRpby5sZW5ndGggIT0gMikge1xuICAgICAgICB0aHJvdyBFcnJvcignbWluaW11bVN0YWtlUmF0aW8gc2hvdWxkIGhhdmUgMiBlbGVtZW50cycpO1xuICAgIH1cbiAgICBjb25zdCBzdGFrZXMgPSB2YWxpZGF0b3JzLm1hcCh2ID0+IEJpZ0ludCh2LnN0YWtlKSkuc29ydCh1dGlsc18xLnNvcnRCaWdJbnRBc2MpO1xuICAgIGNvbnN0IHN0YWtlc1N1bSA9IHN0YWtlcy5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiKTtcbiAgICBpZiAodmFsaWRhdG9ycy5sZW5ndGggPCBtYXhOdW1iZXJPZlNlYXRzKSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNTdW0gKiBCaWdJbnQobWluaW11bVN0YWtlUmF0aW9bMF0pIC8gQmlnSW50KG1pbmltdW1TdGFrZVJhdGlvWzFdKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBzdGFrZXNbMF0gKyBCaWdJbnQoMSk7XG4gICAgfVxufVxuLyoqIERpZmYgdmFsaWRhdG9ycyBiZXR3ZWVuIGN1cnJlbnQgYW5kIG5leHQgZXBvY2guXG4gKiBSZXR1cm5zIGFkZGl0aW9ucywgc3VidHJhY3Rpb25zIGFuZCBjaGFuZ2VzIHRvIHZhbGlkYXRvciBzZXQuXG4gKiBAcGFyYW0gY3VycmVudFZhbGlkYXRvcnM6IGxpc3Qgb2YgY3VycmVudCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIG5leHRWYWxpZGF0b3JzOiBsaXN0IG9mIG5leHQgdmFsaWRhdG9ycy5cbiAqL1xuZnVuY3Rpb24gZGlmZkVwb2NoVmFsaWRhdG9ycyhjdXJyZW50VmFsaWRhdG9ycywgbmV4dFZhbGlkYXRvcnMpIHtcbiAgICBjb25zdCB2YWxpZGF0b3JzTWFwID0gbmV3IE1hcCgpO1xuICAgIGN1cnJlbnRWYWxpZGF0b3JzLmZvckVhY2godiA9PiB2YWxpZGF0b3JzTWFwLnNldCh2LmFjY291bnRfaWQsIHYpKTtcbiAgICBjb25zdCBuZXh0VmFsaWRhdG9yc1NldCA9IG5ldyBTZXQobmV4dFZhbGlkYXRvcnMubWFwKHYgPT4gdi5hY2NvdW50X2lkKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV3VmFsaWRhdG9yczogbmV4dFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIXZhbGlkYXRvcnNNYXAuaGFzKHYuYWNjb3VudF9pZCkpLFxuICAgICAgICByZW1vdmVkVmFsaWRhdG9yczogY3VycmVudFZhbGlkYXRvcnMuZmlsdGVyKHYgPT4gIW5leHRWYWxpZGF0b3JzU2V0Lmhhcyh2LmFjY291bnRfaWQpKSxcbiAgICAgICAgY2hhbmdlZFZhbGlkYXRvcnM6IG5leHRWYWxpZGF0b3JzLmZpbHRlcih2ID0+ICh2YWxpZGF0b3JzTWFwLmhhcyh2LmFjY291bnRfaWQpICYmIHZhbGlkYXRvcnNNYXAuZ2V0KHYuYWNjb3VudF9pZCkuc3Rha2UgIT0gdi5zdGFrZSkpXG4gICAgICAgICAgICAubWFwKHYgPT4gKHsgY3VycmVudDogdmFsaWRhdG9yc01hcC5nZXQodi5hY2NvdW50X2lkKSwgbmV4dDogdiB9KSlcbiAgICB9O1xufVxuZXhwb3J0cy5kaWZmRXBvY2hWYWxpZGF0b3JzID0gZGlmZkVwb2NoVmFsaWRhdG9ycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/near-api-js/node_modules/@near-js/utils/lib/validators.js\n"));

/***/ }),

/***/ "./src/context/Web3AuthContext.js":
/*!****************************************!*\
  !*** ./src/context/Web3AuthContext.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3AuthProvider: function() { return /* binding */ Web3AuthProvider; },\n/* harmony export */   useWeb3Auth: function() { return /* binding */ useWeb3Auth; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _web3auth_modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @web3auth/modal */ \"./node_modules/@web3auth/modal/dist/lib.esm/index.js\");\n/* harmony import */ var _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @web3auth/base-provider */ \"./node_modules/@web3auth/base-provider/dist/lib.esm/index.js\");\n/* harmony import */ var _web3auth_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @web3auth/base */ \"./node_modules/@web3auth/base/dist/lib.esm/index.js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! near-api-js */ \"./node_modules/near-api-js/lib/browser-index.js\");\n/* harmony import */ var near_api_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(near_api_js__WEBPACK_IMPORTED_MODULE_3__);\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\nconst Web3AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({});\nconst chainConfig = {\n    chainNamespace: _web3auth_base__WEBPACK_IMPORTED_MODULE_4__.CHAIN_NAMESPACES.OTHER,\n    chainId: \"0x4e454153\",\n    rpcTarget: \"https://test.rpc.fastnear.com\",\n    displayName: \"Near\",\n    blockExplorerUrl: \"https://testnet.nearblocks.io/\",\n    ticker: \"NEAR\",\n    tickerName: \"NEAR\",\n    decimals: 24,\n    isTestnet: true\n};\nconst privateKeyProvider = new _web3auth_base_provider__WEBPACK_IMPORTED_MODULE_5__.CommonPrivateKeyProvider({\n    config: {\n        chainConfig: chainConfig\n    }\n});\nif (false) {}\nconst web3auth = new _web3auth_modal__WEBPACK_IMPORTED_MODULE_2__.Web3Auth({\n    clientId: \"BHDI_oBW-sxBNeATLSc4Ze5AvYuRWzp95pdYqiugZsyO9yC9nEtiW3z4gV2IlGSb0a1Mod-MQrW5mEvIEp2zrl0\",\n    web3AuthNetwork: _web3auth_base__WEBPACK_IMPORTED_MODULE_4__.WEB3AUTH_NETWORK.SAPPHIRE_DEVNET,\n    privateKeyProvider: privateKeyProvider\n});\nfunction Web3AuthProvider(param) {\n    let { children } = param;\n    _s();\n    const [provider, setProvider] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoggedIn, setIsLoggedIn] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [nearKeyPair, setNearKeyPair] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [accountId, setAccountId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const getNearCredentials = async (web3authProvider)=>{\n        try {\n            const privateKey = await web3authProvider.request({\n                method: \"private_key\"\n            });\n            // Convert the secp256k1 key to ed25519 key\n            const privateKeyEd25519 = (0,_web3auth_base_provider__WEBPACK_IMPORTED_MODULE_5__.getED25519Key)(privateKey).sk.toString(\"hex\");\n            // Convert the private key to Buffer\n            const privateKeyEd25519Buffer = Buffer.from(privateKeyEd25519, \"hex\");\n            // Convert the private key to base58\n            const bs58encode = near_api_js__WEBPACK_IMPORTED_MODULE_3__.utils.serialize.base_encode(privateKeyEd25519Buffer);\n            // Convert the base58 private key to KeyPair\n            const keyPair = near_api_js__WEBPACK_IMPORTED_MODULE_3__.KeyPair.fromString(\"ed25519:\".concat(bs58encode));\n            // Get public key data\n            const publicKey = keyPair.getPublicKey();\n            const pk58 = publicKey.data;\n            // Get account ID\n            const newAccountId = Buffer.from(pk58 || []).toString(\"hex\");\n            setNearKeyPair(keyPair);\n            setAccountId(newAccountId);\n            return {\n                keyPair,\n                accountId: newAccountId\n            };\n        } catch (error) {\n            console.error(\"Error getting NEAR credentials:\", error);\n            throw error;\n        }\n    };\n    const login = async ()=>{\n        try {\n            await web3auth.initModal();\n            const web3authProvider = await web3auth.connect();\n            setProvider(web3authProvider);\n            setIsLoggedIn(true);\n            // Get NEAR credentials after successful login\n            await getNearCredentials(web3authProvider);\n            return web3authProvider;\n        } catch (error) {\n            console.error(\"Login failed:\", error);\n            throw error;\n        }\n    };\n    const logout = async ()=>{\n        try {\n            await web3auth.logout();\n            setProvider(null);\n            setIsLoggedIn(false);\n            setNearKeyPair(null);\n            setAccountId(null);\n        } catch (error) {\n            console.error(\"Logout failed:\", error);\n            throw error;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Web3AuthContext.Provider, {\n        value: {\n            web3auth,\n            provider,\n            isLoggedIn,\n            login,\n            logout,\n            nearKeyPair,\n            accountId,\n            getNearCredentials\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/owen/projects/fun/web3-auth/src/context/Web3AuthContext.js\",\n        lineNumber: 106,\n        columnNumber: 5\n    }, this);\n}\n_s(Web3AuthProvider, \"cUthTjhJ9JgQ105SBBzcfjNTxI4=\");\n_c = Web3AuthProvider;\nfunction useWeb3Auth() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Web3AuthContext);\n    if (context === undefined) {\n        throw new Error(\"useWeb3Auth must be used within a Web3AuthProvider\");\n    }\n    return context;\n}\n_s1(useWeb3Auth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"Web3AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/context/Web3AuthContext.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/crypto-browserify/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/crypto-browserify/index.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n(function(){var e={7160:function(e,t,r){var i=t;i.bignum=r(711);i.define=r(495).define;i.base=r(853);i.constants=r(7335);i.decoders=r(6701);i.encoders=r(3418)},495:function(e,t,r){var i=r(7160);var n=r(3782);var a=t;a.define=function define(e,t){return new Entity(e,t)};function Entity(e,t){this.name=e;this.body=t;this.decoders={};this.encoders={}}Entity.prototype._createNamed=function createNamed(e){var t;try{t=r(6144).runInThisContext(\"(function \"+this.name+\"(entity) {\\n\"+\"  this._initNamed(entity);\\n\"+\"})\")}catch(e){t=function(e){this._initNamed(e)}}n(t,e);t.prototype._initNamed=function initnamed(t){e.call(this,t)};return new t(this)};Entity.prototype._getDecoder=function _getDecoder(e){e=e||\"der\";if(!this.decoders.hasOwnProperty(e))this.decoders[e]=this._createNamed(i.decoders[e]);return this.decoders[e]};Entity.prototype.decode=function decode(e,t,r){return this._getDecoder(t).decode(e,r)};Entity.prototype._getEncoder=function _getEncoder(e){e=e||\"der\";if(!this.encoders.hasOwnProperty(e))this.encoders[e]=this._createNamed(i.encoders[e]);return this.encoders[e]};Entity.prototype.encode=function encode(e,t,r){return this._getEncoder(t).encode(e,r)}},6483:function(e,t,r){var i=r(3782);var n=r(853).Reporter;var a=r(4300).Buffer;function DecoderBuffer(e,t){n.call(this,t);if(!a.isBuffer(e)){this.error(\"Input not Buffer\");return}this.base=e;this.offset=0;this.length=e.length}i(DecoderBuffer,n);t.C=DecoderBuffer;DecoderBuffer.prototype.save=function save(){return{offset:this.offset,reporter:n.prototype.save.call(this)}};DecoderBuffer.prototype.restore=function restore(e){var t=new DecoderBuffer(this.base);t.offset=e.offset;t.length=this.offset;this.offset=e.offset;n.prototype.restore.call(this,e.reporter);return t};DecoderBuffer.prototype.isEmpty=function isEmpty(){return this.offset===this.length};DecoderBuffer.prototype.readUInt8=function readUInt8(e){if(this.offset+1<=this.length)return this.base.readUInt8(this.offset++,true);else return this.error(e||\"DecoderBuffer overrun\")};DecoderBuffer.prototype.skip=function skip(e,t){if(!(this.offset+e<=this.length))return this.error(t||\"DecoderBuffer overrun\");var r=new DecoderBuffer(this.base);r._reporterState=this._reporterState;r.offset=this.offset;r.length=this.offset+e;this.offset+=e;return r};DecoderBuffer.prototype.raw=function raw(e){return this.base.slice(e?e.offset:this.offset,this.length)};function EncoderBuffer(e,t){if(Array.isArray(e)){this.length=0;this.value=e.map((function(e){if(!(e instanceof EncoderBuffer))e=new EncoderBuffer(e,t);this.length+=e.length;return e}),this)}else if(typeof e===\"number\"){if(!(0<=e&&e<=255))return t.error(\"non-byte EncoderBuffer value\");this.value=e;this.length=1}else if(typeof e===\"string\"){this.value=e;this.length=a.byteLength(e)}else if(a.isBuffer(e)){this.value=e;this.length=e.length}else{return t.error(\"Unsupported type: \"+typeof e)}}t.R=EncoderBuffer;EncoderBuffer.prototype.join=function join(e,t){if(!e)e=new a(this.length);if(!t)t=0;if(this.length===0)return e;if(Array.isArray(this.value)){this.value.forEach((function(r){r.join(e,t);t+=r.length}))}else{if(typeof this.value===\"number\")e[t]=this.value;else if(typeof this.value===\"string\")e.write(this.value,t);else if(a.isBuffer(this.value))this.value.copy(e,t);t+=this.length}return e}},853:function(e,t,r){var i=t;i.Reporter=r(1293).b;i.DecoderBuffer=r(6483).C;i.EncoderBuffer=r(6483).R;i.Node=r(9374)},9374:function(e,t,r){var i=r(853).Reporter;var n=r(853).EncoderBuffer;var a=r(853).DecoderBuffer;var s=r(3523);var o=[\"seq\",\"seqof\",\"set\",\"setof\",\"objid\",\"bool\",\"gentime\",\"utctime\",\"null_\",\"enum\",\"int\",\"objDesc\",\"bitstr\",\"bmpstr\",\"charstr\",\"genstr\",\"graphstr\",\"ia5str\",\"iso646str\",\"numstr\",\"octstr\",\"printstr\",\"t61str\",\"unistr\",\"utf8str\",\"videostr\"];var h=[\"key\",\"obj\",\"use\",\"optional\",\"explicit\",\"implicit\",\"def\",\"choice\",\"any\",\"contains\"].concat(o);var u=[\"_peekTag\",\"_decodeTag\",\"_use\",\"_decodeStr\",\"_decodeObjid\",\"_decodeTime\",\"_decodeNull\",\"_decodeInt\",\"_decodeBool\",\"_decodeList\",\"_encodeComposite\",\"_encodeStr\",\"_encodeObjid\",\"_encodeTime\",\"_encodeNull\",\"_encodeInt\",\"_encodeBool\"];function Node(e,t){var r={};this._baseState=r;r.enc=e;r.parent=t||null;r.children=null;r.tag=null;r.args=null;r.reverseArgs=null;r.choice=null;r.optional=false;r.any=false;r.obj=false;r.use=null;r.useDecoder=null;r.key=null;r[\"default\"]=null;r.explicit=null;r.implicit=null;r.contains=null;if(!r.parent){r.children=[];this._wrap()}}e.exports=Node;var d=[\"enc\",\"parent\",\"children\",\"tag\",\"args\",\"reverseArgs\",\"choice\",\"optional\",\"any\",\"obj\",\"use\",\"alteredUse\",\"key\",\"default\",\"explicit\",\"implicit\",\"contains\"];Node.prototype.clone=function clone(){var e=this._baseState;var t={};d.forEach((function(r){t[r]=e[r]}));var r=new this.constructor(t.parent);r._baseState=t;return r};Node.prototype._wrap=function wrap(){var e=this._baseState;h.forEach((function(t){this[t]=function _wrappedMethod(){var r=new this.constructor(this);e.children.push(r);return r[t].apply(r,arguments)}}),this)};Node.prototype._init=function init(e){var t=this._baseState;s(t.parent===null);e.call(this);t.children=t.children.filter((function(e){return e._baseState.parent===this}),this);s.equal(t.children.length,1,\"Root node can have only one child\")};Node.prototype._useArgs=function useArgs(e){var t=this._baseState;var r=e.filter((function(e){return e instanceof this.constructor}),this);e=e.filter((function(e){return!(e instanceof this.constructor)}),this);if(r.length!==0){s(t.children===null);t.children=r;r.forEach((function(e){e._baseState.parent=this}),this)}if(e.length!==0){s(t.args===null);t.args=e;t.reverseArgs=e.map((function(e){if(typeof e!==\"object\"||e.constructor!==Object)return e;var t={};Object.keys(e).forEach((function(r){if(r==(r|0))r|=0;var i=e[r];t[i]=r}));return t}))}};u.forEach((function(e){Node.prototype[e]=function _overrided(){var t=this._baseState;throw new Error(e+\" not implemented for encoding: \"+t.enc)}}));o.forEach((function(e){Node.prototype[e]=function _tagMethod(){var t=this._baseState;var r=Array.prototype.slice.call(arguments);s(t.tag===null);t.tag=e;this._useArgs(r);return this}}));Node.prototype.use=function use(e){s(e);var t=this._baseState;s(t.use===null);t.use=e;return this};Node.prototype.optional=function optional(){var e=this._baseState;e.optional=true;return this};Node.prototype.def=function def(e){var t=this._baseState;s(t[\"default\"]===null);t[\"default\"]=e;t.optional=true;return this};Node.prototype.explicit=function explicit(e){var t=this._baseState;s(t.explicit===null&&t.implicit===null);t.explicit=e;return this};Node.prototype.implicit=function implicit(e){var t=this._baseState;s(t.explicit===null&&t.implicit===null);t.implicit=e;return this};Node.prototype.obj=function obj(){var e=this._baseState;var t=Array.prototype.slice.call(arguments);e.obj=true;if(t.length!==0)this._useArgs(t);return this};Node.prototype.key=function key(e){var t=this._baseState;s(t.key===null);t.key=e;return this};Node.prototype.any=function any(){var e=this._baseState;e.any=true;return this};Node.prototype.choice=function choice(e){var t=this._baseState;s(t.choice===null);t.choice=e;this._useArgs(Object.keys(e).map((function(t){return e[t]})));return this};Node.prototype.contains=function contains(e){var t=this._baseState;s(t.use===null);t.contains=e;return this};Node.prototype._decode=function decode(e,t){var r=this._baseState;if(r.parent===null)return e.wrapResult(r.children[0]._decode(e,t));var i=r[\"default\"];var n=true;var s=null;if(r.key!==null)s=e.enterKey(r.key);if(r.optional){var o=null;if(r.explicit!==null)o=r.explicit;else if(r.implicit!==null)o=r.implicit;else if(r.tag!==null)o=r.tag;if(o===null&&!r.any){var h=e.save();try{if(r.choice===null)this._decodeGeneric(r.tag,e,t);else this._decodeChoice(e,t);n=true}catch(e){n=false}e.restore(h)}else{n=this._peekTag(e,o,r.any);if(e.isError(n))return n}}var u;if(r.obj&&n)u=e.enterObject();if(n){if(r.explicit!==null){var d=this._decodeTag(e,r.explicit);if(e.isError(d))return d;e=d}var c=e.offset;if(r.use===null&&r.choice===null){if(r.any)var h=e.save();var l=this._decodeTag(e,r.implicit!==null?r.implicit:r.tag,r.any);if(e.isError(l))return l;if(r.any)i=e.raw(h);else e=l}if(t&&t.track&&r.tag!==null)t.track(e.path(),c,e.length,\"tagged\");if(t&&t.track&&r.tag!==null)t.track(e.path(),e.offset,e.length,\"content\");if(r.any)i=i;else if(r.choice===null)i=this._decodeGeneric(r.tag,e,t);else i=this._decodeChoice(e,t);if(e.isError(i))return i;if(!r.any&&r.choice===null&&r.children!==null){r.children.forEach((function decodeChildren(r){r._decode(e,t)}))}if(r.contains&&(r.tag===\"octstr\"||r.tag===\"bitstr\")){var p=new a(i);i=this._getUse(r.contains,e._reporterState.obj)._decode(p,t)}}if(r.obj&&n)i=e.leaveObject(u);if(r.key!==null&&(i!==null||n===true))e.leaveKey(s,r.key,i);else if(s!==null)e.exitKey(s);return i};Node.prototype._decodeGeneric=function decodeGeneric(e,t,r){var i=this._baseState;if(e===\"seq\"||e===\"set\")return null;if(e===\"seqof\"||e===\"setof\")return this._decodeList(t,e,i.args[0],r);else if(/str$/.test(e))return this._decodeStr(t,e,r);else if(e===\"objid\"&&i.args)return this._decodeObjid(t,i.args[0],i.args[1],r);else if(e===\"objid\")return this._decodeObjid(t,null,null,r);else if(e===\"gentime\"||e===\"utctime\")return this._decodeTime(t,e,r);else if(e===\"null_\")return this._decodeNull(t,r);else if(e===\"bool\")return this._decodeBool(t,r);else if(e===\"objDesc\")return this._decodeStr(t,e,r);else if(e===\"int\"||e===\"enum\")return this._decodeInt(t,i.args&&i.args[0],r);if(i.use!==null){return this._getUse(i.use,t._reporterState.obj)._decode(t,r)}else{return t.error(\"unknown tag: \"+e)}};Node.prototype._getUse=function _getUse(e,t){var r=this._baseState;r.useDecoder=this._use(e,t);s(r.useDecoder._baseState.parent===null);r.useDecoder=r.useDecoder._baseState.children[0];if(r.implicit!==r.useDecoder._baseState.implicit){r.useDecoder=r.useDecoder.clone();r.useDecoder._baseState.implicit=r.implicit}return r.useDecoder};Node.prototype._decodeChoice=function decodeChoice(e,t){var r=this._baseState;var i=null;var n=false;Object.keys(r.choice).some((function(a){var s=e.save();var o=r.choice[a];try{var h=o._decode(e,t);if(e.isError(h))return false;i={type:a,value:h};n=true}catch(t){e.restore(s);return false}return true}),this);if(!n)return e.error(\"Choice not matched\");return i};Node.prototype._createEncoderBuffer=function createEncoderBuffer(e){return new n(e,this.reporter)};Node.prototype._encode=function encode(e,t,r){var i=this._baseState;if(i[\"default\"]!==null&&i[\"default\"]===e)return;var n=this._encodeValue(e,t,r);if(n===undefined)return;if(this._skipDefault(n,t,r))return;return n};Node.prototype._encodeValue=function encode(e,t,r){var n=this._baseState;if(n.parent===null)return n.children[0]._encode(e,t||new i);var a=null;this.reporter=t;if(n.optional&&e===undefined){if(n[\"default\"]!==null)e=n[\"default\"];else return}var s=null;var o=false;if(n.any){a=this._createEncoderBuffer(e)}else if(n.choice){a=this._encodeChoice(e,t)}else if(n.contains){s=this._getUse(n.contains,r)._encode(e,t);o=true}else if(n.children){s=n.children.map((function(r){if(r._baseState.tag===\"null_\")return r._encode(null,t,e);if(r._baseState.key===null)return t.error(\"Child should have a key\");var i=t.enterKey(r._baseState.key);if(typeof e!==\"object\")return t.error(\"Child expected, but input is not object\");var n=r._encode(e[r._baseState.key],t,e);t.leaveKey(i);return n}),this).filter((function(e){return e}));s=this._createEncoderBuffer(s)}else{if(n.tag===\"seqof\"||n.tag===\"setof\"){if(!(n.args&&n.args.length===1))return t.error(\"Too many args for : \"+n.tag);if(!Array.isArray(e))return t.error(\"seqof/setof, but data is not Array\");var h=this.clone();h._baseState.implicit=null;s=this._createEncoderBuffer(e.map((function(r){var i=this._baseState;return this._getUse(i.args[0],e)._encode(r,t)}),h))}else if(n.use!==null){a=this._getUse(n.use,r)._encode(e,t)}else{s=this._encodePrimitive(n.tag,e);o=true}}var a;if(!n.any&&n.choice===null){var u=n.implicit!==null?n.implicit:n.tag;var d=n.implicit===null?\"universal\":\"context\";if(u===null){if(n.use===null)t.error(\"Tag could be omitted only for .use()\")}else{if(n.use===null)a=this._encodeComposite(u,o,d,s)}}if(n.explicit!==null)a=this._encodeComposite(n.explicit,false,\"context\",a);return a};Node.prototype._encodeChoice=function encodeChoice(e,t){var r=this._baseState;var i=r.choice[e.type];if(!i){s(false,e.type+\" not found in \"+JSON.stringify(Object.keys(r.choice)))}return i._encode(e.value,t)};Node.prototype._encodePrimitive=function encodePrimitive(e,t){var r=this._baseState;if(/str$/.test(e))return this._encodeStr(t,e);else if(e===\"objid\"&&r.args)return this._encodeObjid(t,r.reverseArgs[0],r.args[1]);else if(e===\"objid\")return this._encodeObjid(t,null,null);else if(e===\"gentime\"||e===\"utctime\")return this._encodeTime(t,e);else if(e===\"null_\")return this._encodeNull();else if(e===\"int\"||e===\"enum\")return this._encodeInt(t,r.args&&r.reverseArgs[0]);else if(e===\"bool\")return this._encodeBool(t);else if(e===\"objDesc\")return this._encodeStr(t,e);else throw new Error(\"Unsupported tag: \"+e)};Node.prototype._isNumstr=function isNumstr(e){return/^[0-9 ]*$/.test(e)};Node.prototype._isPrintstr=function isPrintstr(e){return/^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(e)}},1293:function(e,t,r){var i=r(3782);function Reporter(e){this._reporterState={obj:null,path:[],options:e||{},errors:[]}}t.b=Reporter;Reporter.prototype.isError=function isError(e){return e instanceof ReporterError};Reporter.prototype.save=function save(){var e=this._reporterState;return{obj:e.obj,pathLen:e.path.length}};Reporter.prototype.restore=function restore(e){var t=this._reporterState;t.obj=e.obj;t.path=t.path.slice(0,e.pathLen)};Reporter.prototype.enterKey=function enterKey(e){return this._reporterState.path.push(e)};Reporter.prototype.exitKey=function exitKey(e){var t=this._reporterState;t.path=t.path.slice(0,e-1)};Reporter.prototype.leaveKey=function leaveKey(e,t,r){var i=this._reporterState;this.exitKey(e);if(i.obj!==null)i.obj[t]=r};Reporter.prototype.path=function path(){return this._reporterState.path.join(\"/\")};Reporter.prototype.enterObject=function enterObject(){var e=this._reporterState;var t=e.obj;e.obj={};return t};Reporter.prototype.leaveObject=function leaveObject(e){var t=this._reporterState;var r=t.obj;t.obj=e;return r};Reporter.prototype.error=function error(e){var t;var r=this._reporterState;var i=e instanceof ReporterError;if(i){t=e}else{t=new ReporterError(r.path.map((function(e){return\"[\"+JSON.stringify(e)+\"]\"})).join(\"\"),e.message||e,e.stack)}if(!r.options.partial)throw t;if(!i)r.errors.push(t);return t};Reporter.prototype.wrapResult=function wrapResult(e){var t=this._reporterState;if(!t.options.partial)return e;return{result:this.isError(e)?null:e,errors:t.errors}};function ReporterError(e,t){this.path=e;this.rethrow(t)}i(ReporterError,Error);ReporterError.prototype.rethrow=function rethrow(e){this.message=e+\" at: \"+(this.path||\"(shallow)\");if(Error.captureStackTrace)Error.captureStackTrace(this,ReporterError);if(!this.stack){try{throw new Error(this.message)}catch(e){this.stack=e.stack}}return this}},9791:function(e,t,r){var i=r(7335);t.tagClass={0:\"universal\",1:\"application\",2:\"context\",3:\"private\"};t.tagClassByName=i._reverse(t.tagClass);t.tag={0:\"end\",1:\"bool\",2:\"int\",3:\"bitstr\",4:\"octstr\",5:\"null_\",6:\"objid\",7:\"objDesc\",8:\"external\",9:\"real\",10:\"enum\",11:\"embed\",12:\"utf8str\",13:\"relativeOid\",16:\"seq\",17:\"set\",18:\"numstr\",19:\"printstr\",20:\"t61str\",21:\"videostr\",22:\"ia5str\",23:\"utctime\",24:\"gentime\",25:\"graphstr\",26:\"iso646str\",27:\"genstr\",28:\"unistr\",29:\"charstr\",30:\"bmpstr\"};t.tagByName=i._reverse(t.tag)},7335:function(e,t,r){var i=t;i._reverse=function reverse(e){var t={};Object.keys(e).forEach((function(r){if((r|0)==r)r=r|0;var i=e[r];t[i]=r}));return t};i.der=r(9791)},2259:function(e,t,r){var i=r(3782);var n=r(7160);var a=n.base;var s=n.bignum;var o=n.constants.der;function DERDecoder(e){this.enc=\"der\";this.name=e.name;this.entity=e;this.tree=new DERNode;this.tree._init(e.body)}e.exports=DERDecoder;DERDecoder.prototype.decode=function decode(e,t){if(!(e instanceof a.DecoderBuffer))e=new a.DecoderBuffer(e,t);return this.tree._decode(e,t)};function DERNode(e){a.Node.call(this,\"der\",e)}i(DERNode,a.Node);DERNode.prototype._peekTag=function peekTag(e,t,r){if(e.isEmpty())return false;var i=e.save();var n=derDecodeTag(e,'Failed to peek tag: \"'+t+'\"');if(e.isError(n))return n;e.restore(i);return n.tag===t||n.tagStr===t||n.tagStr+\"of\"===t||r};DERNode.prototype._decodeTag=function decodeTag(e,t,r){var i=derDecodeTag(e,'Failed to decode tag of \"'+t+'\"');if(e.isError(i))return i;var n=derDecodeLen(e,i.primitive,'Failed to get length of \"'+t+'\"');if(e.isError(n))return n;if(!r&&i.tag!==t&&i.tagStr!==t&&i.tagStr+\"of\"!==t){return e.error('Failed to match tag: \"'+t+'\"')}if(i.primitive||n!==null)return e.skip(n,'Failed to match body of: \"'+t+'\"');var a=e.save();var s=this._skipUntilEnd(e,'Failed to skip indefinite length body: \"'+this.tag+'\"');if(e.isError(s))return s;n=e.offset-a.offset;e.restore(a);return e.skip(n,'Failed to match body of: \"'+t+'\"')};DERNode.prototype._skipUntilEnd=function skipUntilEnd(e,t){while(true){var r=derDecodeTag(e,t);if(e.isError(r))return r;var i=derDecodeLen(e,r.primitive,t);if(e.isError(i))return i;var n;if(r.primitive||i!==null)n=e.skip(i);else n=this._skipUntilEnd(e,t);if(e.isError(n))return n;if(r.tagStr===\"end\")break}};DERNode.prototype._decodeList=function decodeList(e,t,r,i){var n=[];while(!e.isEmpty()){var a=this._peekTag(e,\"end\");if(e.isError(a))return a;var s=r.decode(e,\"der\",i);if(e.isError(s)&&a)break;n.push(s)}return n};DERNode.prototype._decodeStr=function decodeStr(e,t){if(t===\"bitstr\"){var r=e.readUInt8();if(e.isError(r))return r;return{unused:r,data:e.raw()}}else if(t===\"bmpstr\"){var i=e.raw();if(i.length%2===1)return e.error(\"Decoding of string type: bmpstr length mismatch\");var n=\"\";for(var a=0;a<i.length/2;a++){n+=String.fromCharCode(i.readUInt16BE(a*2))}return n}else if(t===\"numstr\"){var s=e.raw().toString(\"ascii\");if(!this._isNumstr(s)){return e.error(\"Decoding of string type: \"+\"numstr unsupported characters\")}return s}else if(t===\"octstr\"){return e.raw()}else if(t===\"objDesc\"){return e.raw()}else if(t===\"printstr\"){var o=e.raw().toString(\"ascii\");if(!this._isPrintstr(o)){return e.error(\"Decoding of string type: \"+\"printstr unsupported characters\")}return o}else if(/str$/.test(t)){return e.raw().toString()}else{return e.error(\"Decoding of string type: \"+t+\" unsupported\")}};DERNode.prototype._decodeObjid=function decodeObjid(e,t,r){var i;var n=[];var a=0;while(!e.isEmpty()){var s=e.readUInt8();a<<=7;a|=s&127;if((s&128)===0){n.push(a);a=0}}if(s&128)n.push(a);var o=n[0]/40|0;var h=n[0]%40;if(r)i=n;else i=[o,h].concat(n.slice(1));if(t){var u=t[i.join(\" \")];if(u===undefined)u=t[i.join(\".\")];if(u!==undefined)i=u}return i};DERNode.prototype._decodeTime=function decodeTime(e,t){var r=e.raw().toString();if(t===\"gentime\"){var i=r.slice(0,4)|0;var n=r.slice(4,6)|0;var a=r.slice(6,8)|0;var s=r.slice(8,10)|0;var o=r.slice(10,12)|0;var h=r.slice(12,14)|0}else if(t===\"utctime\"){var i=r.slice(0,2)|0;var n=r.slice(2,4)|0;var a=r.slice(4,6)|0;var s=r.slice(6,8)|0;var o=r.slice(8,10)|0;var h=r.slice(10,12)|0;if(i<70)i=2e3+i;else i=1900+i}else{return e.error(\"Decoding \"+t+\" time is not supported yet\")}return Date.UTC(i,n-1,a,s,o,h,0)};DERNode.prototype._decodeNull=function decodeNull(e){return null};DERNode.prototype._decodeBool=function decodeBool(e){var t=e.readUInt8();if(e.isError(t))return t;else return t!==0};DERNode.prototype._decodeInt=function decodeInt(e,t){var r=e.raw();var i=new s(r);if(t)i=t[i.toString(10)]||i;return i};DERNode.prototype._use=function use(e,t){if(typeof e===\"function\")e=e(t);return e._getDecoder(\"der\").tree};function derDecodeTag(e,t){var r=e.readUInt8(t);if(e.isError(r))return r;var i=o.tagClass[r>>6];var n=(r&32)===0;if((r&31)===31){var a=r;r=0;while((a&128)===128){a=e.readUInt8(t);if(e.isError(a))return a;r<<=7;r|=a&127}}else{r&=31}var s=o.tag[r];return{cls:i,primitive:n,tag:r,tagStr:s}}function derDecodeLen(e,t,r){var i=e.readUInt8(r);if(e.isError(i))return i;if(!t&&i===128)return null;if((i&128)===0){return i}var n=i&127;if(n>4)return e.error(\"length octect is too long\");i=0;for(var a=0;a<n;a++){i<<=8;var s=e.readUInt8(r);if(e.isError(s))return s;i|=s}return i}},6701:function(e,t,r){var i=t;i.der=r(2259);i.pem=r(8527)},8527:function(e,t,r){var i=r(3782);var n=r(4300).Buffer;var a=r(2259);function PEMDecoder(e){a.call(this,e);this.enc=\"pem\"}i(PEMDecoder,a);e.exports=PEMDecoder;PEMDecoder.prototype.decode=function decode(e,t){var r=e.toString().split(/[\\r\\n]+/g);var i=t.label.toUpperCase();var s=/^-----(BEGIN|END) ([^-]+)-----$/;var o=-1;var h=-1;for(var u=0;u<r.length;u++){var d=r[u].match(s);if(d===null)continue;if(d[2]!==i)continue;if(o===-1){if(d[1]!==\"BEGIN\")break;o=u}else{if(d[1]!==\"END\")break;h=u;break}}if(o===-1||h===-1)throw new Error(\"PEM section not found for: \"+i);var c=r.slice(o+1,h).join(\"\");c.replace(/[^a-z0-9\\+\\/=]+/gi,\"\");var l=new n(c,\"base64\");return a.prototype.decode.call(this,l,t)}},7804:function(e,t,r){var i=r(3782);var n=r(4300).Buffer;var a=r(7160);var s=a.base;var o=a.constants.der;function DEREncoder(e){this.enc=\"der\";this.name=e.name;this.entity=e;this.tree=new DERNode;this.tree._init(e.body)}e.exports=DEREncoder;DEREncoder.prototype.encode=function encode(e,t){return this.tree._encode(e,t).join()};function DERNode(e){s.Node.call(this,\"der\",e)}i(DERNode,s.Node);DERNode.prototype._encodeComposite=function encodeComposite(e,t,r,i){var a=encodeTag(e,t,r,this.reporter);if(i.length<128){var s=new n(2);s[0]=a;s[1]=i.length;return this._createEncoderBuffer([s,i])}var o=1;for(var h=i.length;h>=256;h>>=8)o++;var s=new n(1+1+o);s[0]=a;s[1]=128|o;for(var h=1+o,u=i.length;u>0;h--,u>>=8)s[h]=u&255;return this._createEncoderBuffer([s,i])};DERNode.prototype._encodeStr=function encodeStr(e,t){if(t===\"bitstr\"){return this._createEncoderBuffer([e.unused|0,e.data])}else if(t===\"bmpstr\"){var r=new n(e.length*2);for(var i=0;i<e.length;i++){r.writeUInt16BE(e.charCodeAt(i),i*2)}return this._createEncoderBuffer(r)}else if(t===\"numstr\"){if(!this._isNumstr(e)){return this.reporter.error(\"Encoding of string type: numstr supports \"+\"only digits and space\")}return this._createEncoderBuffer(e)}else if(t===\"printstr\"){if(!this._isPrintstr(e)){return this.reporter.error(\"Encoding of string type: printstr supports \"+\"only latin upper and lower case letters, \"+\"digits, space, apostrophe, left and rigth \"+\"parenthesis, plus sign, comma, hyphen, \"+\"dot, slash, colon, equal sign, \"+\"question mark\")}return this._createEncoderBuffer(e)}else if(/str$/.test(t)){return this._createEncoderBuffer(e)}else if(t===\"objDesc\"){return this._createEncoderBuffer(e)}else{return this.reporter.error(\"Encoding of string type: \"+t+\" unsupported\")}};DERNode.prototype._encodeObjid=function encodeObjid(e,t,r){if(typeof e===\"string\"){if(!t)return this.reporter.error(\"string objid given, but no values map found\");if(!t.hasOwnProperty(e))return this.reporter.error(\"objid not found in values map\");e=t[e].split(/[\\s\\.]+/g);for(var i=0;i<e.length;i++)e[i]|=0}else if(Array.isArray(e)){e=e.slice();for(var i=0;i<e.length;i++)e[i]|=0}if(!Array.isArray(e)){return this.reporter.error(\"objid() should be either array or string, \"+\"got: \"+JSON.stringify(e))}if(!r){if(e[1]>=40)return this.reporter.error(\"Second objid identifier OOB\");e.splice(0,2,e[0]*40+e[1])}var a=0;for(var i=0;i<e.length;i++){var s=e[i];for(a++;s>=128;s>>=7)a++}var o=new n(a);var h=o.length-1;for(var i=e.length-1;i>=0;i--){var s=e[i];o[h--]=s&127;while((s>>=7)>0)o[h--]=128|s&127}return this._createEncoderBuffer(o)};function two(e){if(e<10)return\"0\"+e;else return e}DERNode.prototype._encodeTime=function encodeTime(e,t){var r;var i=new Date(e);if(t===\"gentime\"){r=[two(i.getFullYear()),two(i.getUTCMonth()+1),two(i.getUTCDate()),two(i.getUTCHours()),two(i.getUTCMinutes()),two(i.getUTCSeconds()),\"Z\"].join(\"\")}else if(t===\"utctime\"){r=[two(i.getFullYear()%100),two(i.getUTCMonth()+1),two(i.getUTCDate()),two(i.getUTCHours()),two(i.getUTCMinutes()),two(i.getUTCSeconds()),\"Z\"].join(\"\")}else{this.reporter.error(\"Encoding \"+t+\" time is not supported yet\")}return this._encodeStr(r,\"octstr\")};DERNode.prototype._encodeNull=function encodeNull(){return this._createEncoderBuffer(\"\")};DERNode.prototype._encodeInt=function encodeInt(e,t){if(typeof e===\"string\"){if(!t)return this.reporter.error(\"String int or enum given, but no values map\");if(!t.hasOwnProperty(e)){return this.reporter.error(\"Values map doesn't contain: \"+JSON.stringify(e))}e=t[e]}if(typeof e!==\"number\"&&!n.isBuffer(e)){var r=e.toArray();if(!e.sign&&r[0]&128){r.unshift(0)}e=new n(r)}if(n.isBuffer(e)){var i=e.length;if(e.length===0)i++;var a=new n(i);e.copy(a);if(e.length===0)a[0]=0;return this._createEncoderBuffer(a)}if(e<128)return this._createEncoderBuffer(e);if(e<256)return this._createEncoderBuffer([0,e]);var i=1;for(var s=e;s>=256;s>>=8)i++;var a=new Array(i);for(var s=a.length-1;s>=0;s--){a[s]=e&255;e>>=8}if(a[0]&128){a.unshift(0)}return this._createEncoderBuffer(new n(a))};DERNode.prototype._encodeBool=function encodeBool(e){return this._createEncoderBuffer(e?255:0)};DERNode.prototype._use=function use(e,t){if(typeof e===\"function\")e=e(t);return e._getEncoder(\"der\").tree};DERNode.prototype._skipDefault=function skipDefault(e,t,r){var i=this._baseState;var n;if(i[\"default\"]===null)return false;var a=e.join();if(i.defaultBuffer===undefined)i.defaultBuffer=this._encodeValue(i[\"default\"],t,r).join();if(a.length!==i.defaultBuffer.length)return false;for(n=0;n<a.length;n++)if(a[n]!==i.defaultBuffer[n])return false;return true};function encodeTag(e,t,r,i){var n;if(e===\"seqof\")e=\"seq\";else if(e===\"setof\")e=\"set\";if(o.tagByName.hasOwnProperty(e))n=o.tagByName[e];else if(typeof e===\"number\"&&(e|0)===e)n=e;else return i.error(\"Unknown tag: \"+e);if(n>=31)return i.error(\"Multi-octet tag encoding unsupported\");if(!t)n|=32;n|=o.tagClassByName[r||\"universal\"]<<6;return n}},3418:function(e,t,r){var i=t;i.der=r(7804);i.pem=r(1564)},1564:function(e,t,r){var i=r(3782);var n=r(7804);function PEMEncoder(e){n.call(this,e);this.enc=\"pem\"}i(PEMEncoder,n);e.exports=PEMEncoder;PEMEncoder.prototype.encode=function encode(e,t){var r=n.prototype.encode.call(this,e);var i=r.toString(\"base64\");var a=[\"-----BEGIN \"+t.label+\"-----\"];for(var s=0;s<i.length;s+=64)a.push(i.slice(s,s+64));a.push(\"-----END \"+t.label+\"-----\");return a.join(\"\\n\")}},711:function(e,t,r){e=r.nmd(e);(function(e,t){\"use strict\";function assert(e,t){if(!e)throw new Error(t||\"Assertion failed\")}function inherits(e,t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}function BN(e,t,r){if(BN.isBN(e)){return e}this.negative=0;this.words=null;this.length=0;this.red=null;if(e!==null){if(t===\"le\"||t===\"be\"){r=t;t=10}this._init(e||0,t||10,r||\"be\")}}if(typeof e===\"object\"){e.exports=BN}else{t.BN=BN}BN.BN=BN;BN.wordSize=26;var i;try{i=r(4300).Buffer}catch(e){}BN.isBN=function isBN(e){if(e instanceof BN){return true}return e!==null&&typeof e===\"object\"&&e.constructor.wordSize===BN.wordSize&&Array.isArray(e.words)};BN.max=function max(e,t){if(e.cmp(t)>0)return e;return t};BN.min=function min(e,t){if(e.cmp(t)<0)return e;return t};BN.prototype._init=function init(e,t,r){if(typeof e===\"number\"){return this._initNumber(e,t,r)}if(typeof e===\"object\"){return this._initArray(e,t,r)}if(t===\"hex\"){t=16}assert(t===(t|0)&&t>=2&&t<=36);e=e.toString().replace(/\\s+/g,\"\");var i=0;if(e[0]===\"-\"){i++}if(t===16){this._parseHex(e,i)}else{this._parseBase(e,t,i)}if(e[0]===\"-\"){this.negative=1}this.strip();if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initNumber=function _initNumber(e,t,r){if(e<0){this.negative=1;e=-e}if(e<67108864){this.words=[e&67108863];this.length=1}else if(e<4503599627370496){this.words=[e&67108863,e/67108864&67108863];this.length=2}else{assert(e<9007199254740992);this.words=[e&67108863,e/67108864&67108863,1];this.length=3}if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initArray=function _initArray(e,t,r){assert(typeof e.length===\"number\");if(e.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(e.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var n,a;var s=0;if(r===\"be\"){for(i=e.length-1,n=0;i>=0;i-=3){a=e[i]|e[i-1]<<8|e[i-2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}else if(r===\"le\"){for(i=0,n=0;i<e.length;i+=3){a=e[i]|e[i+1]<<8|e[i+2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}return this.strip()};function parseHex(e,t,r){var i=0;var n=Math.min(e.length,r);for(var a=t;a<n;a++){var s=e.charCodeAt(a)-48;i<<=4;if(s>=49&&s<=54){i|=s-49+10}else if(s>=17&&s<=22){i|=s-17+10}else{i|=s&15}}return i}BN.prototype._parseHex=function _parseHex(e,t){this.length=Math.ceil((e.length-t)/6);this.words=new Array(this.length);for(var r=0;r<this.length;r++){this.words[r]=0}var i,n;var a=0;for(r=e.length-6,i=0;r>=t;r-=6){n=parseHex(e,r,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303;a+=24;if(a>=26){a-=26;i++}}if(r+6!==t){n=parseHex(e,t,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303}this.strip()};function parseBase(e,t,r,i){var n=0;var a=Math.min(e.length,r);for(var s=t;s<a;s++){var o=e.charCodeAt(s)-48;n*=i;if(o>=49){n+=o-49+10}else if(o>=17){n+=o-17+10}else{n+=o}}return n}BN.prototype._parseBase=function _parseBase(e,t,r){this.words=[0];this.length=1;for(var i=0,n=1;n<=67108863;n*=t){i++}i--;n=n/t|0;var a=e.length-r;var s=a%i;var o=Math.min(a,a-s)+r;var h=0;for(var u=r;u<o;u+=i){h=parseBase(e,u,u+i,t);this.imuln(n);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}if(s!==0){var d=1;h=parseBase(e,u,e.length,t);for(u=0;u<s;u++){d*=t}this.imuln(d);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}};BN.prototype.copy=function copy(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++){e.words[t]=this.words[t]}e.length=this.length;e.negative=this.negative;e.red=this.red};BN.prototype.clone=function clone(){var e=new BN(null);this.copy(e);return e};BN.prototype._expand=function _expand(e){while(this.length<e){this.words[this.length++]=0}return this};BN.prototype.strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};BN.prototype.inspect=function inspect(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"};var n=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"];var a=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var s=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(e,t){e=e||10;t=t|0||1;var r;if(e===16||e===\"hex\"){r=\"\";var i=0;var o=0;for(var h=0;h<this.length;h++){var u=this.words[h];var d=((u<<i|o)&16777215).toString(16);o=u>>>24-i&16777215;if(o!==0||h!==this.length-1){r=n[6-d.length]+d+r}else{r=d+r}i+=2;if(i>=26){i-=26;h--}}if(o!==0){r=o.toString(16)+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}if(e===(e|0)&&e>=2&&e<=36){var c=a[e];var l=s[e];r=\"\";var p=this.clone();p.negative=0;while(!p.isZero()){var v=p.modn(l).toString(e);p=p.idivn(l);if(!p.isZero()){r=n[c-v.length]+v+r}else{r=v+r}}if(this.isZero()){r=\"0\"+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}assert(false,\"Base should be between 2 and 36\")};BN.prototype.toNumber=function toNumber(){var e=this.words[0];if(this.length===2){e+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){e+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,\"Number can only safely store up to 53 bits\")}return this.negative!==0?-e:e};BN.prototype.toJSON=function toJSON(){return this.toString(16)};BN.prototype.toBuffer=function toBuffer(e,t){assert(typeof i!==\"undefined\");return this.toArrayLike(i,e,t)};BN.prototype.toArray=function toArray(e,t){return this.toArrayLike(Array,e,t)};BN.prototype.toArrayLike=function toArrayLike(e,t,r){var i=this.byteLength();var n=r||Math.max(1,i);assert(i<=n,\"byte array longer than desired length\");assert(n>0,\"Requested array length <= 0\");this.strip();var a=t===\"le\";var s=new e(n);var o,h;var u=this.clone();if(!a){for(h=0;h<n-i;h++){s[h]=0}for(h=0;!u.isZero();h++){o=u.andln(255);u.iushrn(8);s[n-h-1]=o}}else{for(h=0;!u.isZero();h++){o=u.andln(255);u.iushrn(8);s[h]=o}for(;h<n;h++){s[h]=0}}return s};if(Math.clz32){BN.prototype._countBits=function _countBits(e){return 32-Math.clz32(e)}}else{BN.prototype._countBits=function _countBits(e){var t=e;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(e){if(e===0)return 26;var t=e;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var e=this.words[this.length-1];var t=this._countBits(e);return(this.length-1)*26+t};function toBitArray(e){var t=new Array(e.bitLength());for(var r=0;r<t.length;r++){var i=r/26|0;var n=r%26;t[r]=(e.words[i]&1<<n)>>>n}return t}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var e=0;for(var t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);e+=r;if(r!==26)break}return e};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(e){if(this.negative!==0){return this.abs().inotn(e).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(e){if(this.testn(e-1)){return this.notn(e).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(e){while(this.length<e.length){this.words[this.length++]=0}for(var t=0;t<e.length;t++){this.words[t]=this.words[t]|e.words[t]}return this.strip()};BN.prototype.ior=function ior(e){assert((this.negative|e.negative)===0);return this.iuor(e)};BN.prototype.or=function or(e){if(this.length>e.length)return this.clone().ior(e);return e.clone().ior(this)};BN.prototype.uor=function uor(e){if(this.length>e.length)return this.clone().iuor(e);return e.clone().iuor(this)};BN.prototype.iuand=function iuand(e){var t;if(this.length>e.length){t=e}else{t=this}for(var r=0;r<t.length;r++){this.words[r]=this.words[r]&e.words[r]}this.length=t.length;return this.strip()};BN.prototype.iand=function iand(e){assert((this.negative|e.negative)===0);return this.iuand(e)};BN.prototype.and=function and(e){if(this.length>e.length)return this.clone().iand(e);return e.clone().iand(this)};BN.prototype.uand=function uand(e){if(this.length>e.length)return this.clone().iuand(e);return e.clone().iuand(this)};BN.prototype.iuxor=function iuxor(e){var t;var r;if(this.length>e.length){t=this;r=e}else{t=e;r=this}for(var i=0;i<r.length;i++){this.words[i]=t.words[i]^r.words[i]}if(this!==t){for(;i<t.length;i++){this.words[i]=t.words[i]}}this.length=t.length;return this.strip()};BN.prototype.ixor=function ixor(e){assert((this.negative|e.negative)===0);return this.iuxor(e)};BN.prototype.xor=function xor(e){if(this.length>e.length)return this.clone().ixor(e);return e.clone().ixor(this)};BN.prototype.uxor=function uxor(e){if(this.length>e.length)return this.clone().iuxor(e);return e.clone().iuxor(this)};BN.prototype.inotn=function inotn(e){assert(typeof e===\"number\"&&e>=0);var t=Math.ceil(e/26)|0;var r=e%26;this._expand(t);if(r>0){t--}for(var i=0;i<t;i++){this.words[i]=~this.words[i]&67108863}if(r>0){this.words[i]=~this.words[i]&67108863>>26-r}return this.strip()};BN.prototype.notn=function notn(e){return this.clone().inotn(e)};BN.prototype.setn=function setn(e,t){assert(typeof e===\"number\"&&e>=0);var r=e/26|0;var i=e%26;this._expand(r+1);if(t){this.words[r]=this.words[r]|1<<i}else{this.words[r]=this.words[r]&~(1<<i)}return this.strip()};BN.prototype.iadd=function iadd(e){var t;if(this.negative!==0&&e.negative===0){this.negative=0;t=this.isub(e);this.negative^=1;return this._normSign()}else if(this.negative===0&&e.negative!==0){e.negative=0;t=this.isub(e);e.negative=1;return t._normSign()}var r,i;if(this.length>e.length){r=this;i=e}else{r=e;i=this}var n=0;for(var a=0;a<i.length;a++){t=(r.words[a]|0)+(i.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}for(;n!==0&&a<r.length;a++){t=(r.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}this.length=r.length;if(n!==0){this.words[this.length]=n;this.length++}else if(r!==this){for(;a<r.length;a++){this.words[a]=r.words[a]}}return this};BN.prototype.add=function add(e){var t;if(e.negative!==0&&this.negative===0){e.negative=0;t=this.sub(e);e.negative^=1;return t}else if(e.negative===0&&this.negative!==0){this.negative=0;t=e.sub(this);this.negative=1;return t}if(this.length>e.length)return this.clone().iadd(e);return e.clone().iadd(this)};BN.prototype.isub=function isub(e){if(e.negative!==0){e.negative=0;var t=this.iadd(e);e.negative=1;return t._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(e);this.negative=1;return this._normSign()}var r=this.cmp(e);if(r===0){this.negative=0;this.length=1;this.words[0]=0;return this}var i,n;if(r>0){i=this;n=e}else{i=e;n=this}var a=0;for(var s=0;s<n.length;s++){t=(i.words[s]|0)-(n.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}for(;a!==0&&s<i.length;s++){t=(i.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}if(a===0&&s<i.length&&i!==this){for(;s<i.length;s++){this.words[s]=i.words[s]}}this.length=Math.max(this.length,s);if(i!==this){this.negative=1}return this.strip()};BN.prototype.sub=function sub(e){return this.clone().isub(e)};function smallMulTo(e,t,r){r.negative=t.negative^e.negative;var i=e.length+t.length|0;r.length=i;i=i-1|0;var n=e.words[0]|0;var a=t.words[0]|0;var s=n*a;var o=s&67108863;var h=s/67108864|0;r.words[0]=o;for(var u=1;u<i;u++){var d=h>>>26;var c=h&67108863;var l=Math.min(u,t.length-1);for(var p=Math.max(0,u-e.length+1);p<=l;p++){var v=u-p|0;n=e.words[v]|0;a=t.words[p]|0;s=n*a+c;d+=s/67108864|0;c=s&67108863}r.words[u]=c|0;h=d|0}if(h!==0){r.words[u]=h|0}else{r.length--}return r.strip()}var o=function comb10MulTo(e,t,r){var i=e.words;var n=t.words;var a=r.words;var s=0;var o;var h;var u;var d=i[0]|0;var c=d&8191;var l=d>>>13;var p=i[1]|0;var v=p&8191;var b=p>>>13;var m=i[2]|0;var y=m&8191;var g=m>>>13;var _=i[3]|0;var w=_&8191;var M=_>>>13;var B=i[4]|0;var E=B&8191;var k=B>>>13;var A=i[5]|0;var N=A&8191;var P=A>>>13;var x=i[6]|0;var I=x&8191;var C=x>>>13;var D=i[7]|0;var T=D&8191;var j=D>>>13;var q=i[8]|0;var O=q&8191;var H=q>>>13;var L=i[9]|0;var z=L&8191;var F=L>>>13;var U=n[0]|0;var W=U&8191;var V=U>>>13;var G=n[1]|0;var J=G&8191;var Z=G>>>13;var X=n[2]|0;var Y=X&8191;var $=X>>>13;var Q=n[3]|0;var ee=Q&8191;var te=Q>>>13;var re=n[4]|0;var ie=re&8191;var ne=re>>>13;var ae=n[5]|0;var fe=ae&8191;var se=ae>>>13;var oe=n[6]|0;var he=oe&8191;var ue=oe>>>13;var de=n[7]|0;var ce=de&8191;var le=de>>>13;var pe=n[8]|0;var ve=pe&8191;var be=pe>>>13;var me=n[9]|0;var ye=me&8191;var ge=me>>>13;r.negative=e.negative^t.negative;r.length=19;o=Math.imul(c,W);h=Math.imul(c,V);h=h+Math.imul(l,W)|0;u=Math.imul(l,V);var _e=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(_e>>>26)|0;_e&=67108863;o=Math.imul(v,W);h=Math.imul(v,V);h=h+Math.imul(b,W)|0;u=Math.imul(b,V);o=o+Math.imul(c,J)|0;h=h+Math.imul(c,Z)|0;h=h+Math.imul(l,J)|0;u=u+Math.imul(l,Z)|0;var we=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(we>>>26)|0;we&=67108863;o=Math.imul(y,W);h=Math.imul(y,V);h=h+Math.imul(g,W)|0;u=Math.imul(g,V);o=o+Math.imul(v,J)|0;h=h+Math.imul(v,Z)|0;h=h+Math.imul(b,J)|0;u=u+Math.imul(b,Z)|0;o=o+Math.imul(c,Y)|0;h=h+Math.imul(c,$)|0;h=h+Math.imul(l,Y)|0;u=u+Math.imul(l,$)|0;var Me=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Me>>>26)|0;Me&=67108863;o=Math.imul(w,W);h=Math.imul(w,V);h=h+Math.imul(M,W)|0;u=Math.imul(M,V);o=o+Math.imul(y,J)|0;h=h+Math.imul(y,Z)|0;h=h+Math.imul(g,J)|0;u=u+Math.imul(g,Z)|0;o=o+Math.imul(v,Y)|0;h=h+Math.imul(v,$)|0;h=h+Math.imul(b,Y)|0;u=u+Math.imul(b,$)|0;o=o+Math.imul(c,ee)|0;h=h+Math.imul(c,te)|0;h=h+Math.imul(l,ee)|0;u=u+Math.imul(l,te)|0;var Se=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Se>>>26)|0;Se&=67108863;o=Math.imul(E,W);h=Math.imul(E,V);h=h+Math.imul(k,W)|0;u=Math.imul(k,V);o=o+Math.imul(w,J)|0;h=h+Math.imul(w,Z)|0;h=h+Math.imul(M,J)|0;u=u+Math.imul(M,Z)|0;o=o+Math.imul(y,Y)|0;h=h+Math.imul(y,$)|0;h=h+Math.imul(g,Y)|0;u=u+Math.imul(g,$)|0;o=o+Math.imul(v,ee)|0;h=h+Math.imul(v,te)|0;h=h+Math.imul(b,ee)|0;u=u+Math.imul(b,te)|0;o=o+Math.imul(c,ie)|0;h=h+Math.imul(c,ne)|0;h=h+Math.imul(l,ie)|0;u=u+Math.imul(l,ne)|0;var Be=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Be>>>26)|0;Be&=67108863;o=Math.imul(N,W);h=Math.imul(N,V);h=h+Math.imul(P,W)|0;u=Math.imul(P,V);o=o+Math.imul(E,J)|0;h=h+Math.imul(E,Z)|0;h=h+Math.imul(k,J)|0;u=u+Math.imul(k,Z)|0;o=o+Math.imul(w,Y)|0;h=h+Math.imul(w,$)|0;h=h+Math.imul(M,Y)|0;u=u+Math.imul(M,$)|0;o=o+Math.imul(y,ee)|0;h=h+Math.imul(y,te)|0;h=h+Math.imul(g,ee)|0;u=u+Math.imul(g,te)|0;o=o+Math.imul(v,ie)|0;h=h+Math.imul(v,ne)|0;h=h+Math.imul(b,ie)|0;u=u+Math.imul(b,ne)|0;o=o+Math.imul(c,fe)|0;h=h+Math.imul(c,se)|0;h=h+Math.imul(l,fe)|0;u=u+Math.imul(l,se)|0;var Ee=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ee>>>26)|0;Ee&=67108863;o=Math.imul(I,W);h=Math.imul(I,V);h=h+Math.imul(C,W)|0;u=Math.imul(C,V);o=o+Math.imul(N,J)|0;h=h+Math.imul(N,Z)|0;h=h+Math.imul(P,J)|0;u=u+Math.imul(P,Z)|0;o=o+Math.imul(E,Y)|0;h=h+Math.imul(E,$)|0;h=h+Math.imul(k,Y)|0;u=u+Math.imul(k,$)|0;o=o+Math.imul(w,ee)|0;h=h+Math.imul(w,te)|0;h=h+Math.imul(M,ee)|0;u=u+Math.imul(M,te)|0;o=o+Math.imul(y,ie)|0;h=h+Math.imul(y,ne)|0;h=h+Math.imul(g,ie)|0;u=u+Math.imul(g,ne)|0;o=o+Math.imul(v,fe)|0;h=h+Math.imul(v,se)|0;h=h+Math.imul(b,fe)|0;u=u+Math.imul(b,se)|0;o=o+Math.imul(c,he)|0;h=h+Math.imul(c,ue)|0;h=h+Math.imul(l,he)|0;u=u+Math.imul(l,ue)|0;var ke=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(ke>>>26)|0;ke&=67108863;o=Math.imul(T,W);h=Math.imul(T,V);h=h+Math.imul(j,W)|0;u=Math.imul(j,V);o=o+Math.imul(I,J)|0;h=h+Math.imul(I,Z)|0;h=h+Math.imul(C,J)|0;u=u+Math.imul(C,Z)|0;o=o+Math.imul(N,Y)|0;h=h+Math.imul(N,$)|0;h=h+Math.imul(P,Y)|0;u=u+Math.imul(P,$)|0;o=o+Math.imul(E,ee)|0;h=h+Math.imul(E,te)|0;h=h+Math.imul(k,ee)|0;u=u+Math.imul(k,te)|0;o=o+Math.imul(w,ie)|0;h=h+Math.imul(w,ne)|0;h=h+Math.imul(M,ie)|0;u=u+Math.imul(M,ne)|0;o=o+Math.imul(y,fe)|0;h=h+Math.imul(y,se)|0;h=h+Math.imul(g,fe)|0;u=u+Math.imul(g,se)|0;o=o+Math.imul(v,he)|0;h=h+Math.imul(v,ue)|0;h=h+Math.imul(b,he)|0;u=u+Math.imul(b,ue)|0;o=o+Math.imul(c,ce)|0;h=h+Math.imul(c,le)|0;h=h+Math.imul(l,ce)|0;u=u+Math.imul(l,le)|0;var Ae=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ae>>>26)|0;Ae&=67108863;o=Math.imul(O,W);h=Math.imul(O,V);h=h+Math.imul(H,W)|0;u=Math.imul(H,V);o=o+Math.imul(T,J)|0;h=h+Math.imul(T,Z)|0;h=h+Math.imul(j,J)|0;u=u+Math.imul(j,Z)|0;o=o+Math.imul(I,Y)|0;h=h+Math.imul(I,$)|0;h=h+Math.imul(C,Y)|0;u=u+Math.imul(C,$)|0;o=o+Math.imul(N,ee)|0;h=h+Math.imul(N,te)|0;h=h+Math.imul(P,ee)|0;u=u+Math.imul(P,te)|0;o=o+Math.imul(E,ie)|0;h=h+Math.imul(E,ne)|0;h=h+Math.imul(k,ie)|0;u=u+Math.imul(k,ne)|0;o=o+Math.imul(w,fe)|0;h=h+Math.imul(w,se)|0;h=h+Math.imul(M,fe)|0;u=u+Math.imul(M,se)|0;o=o+Math.imul(y,he)|0;h=h+Math.imul(y,ue)|0;h=h+Math.imul(g,he)|0;u=u+Math.imul(g,ue)|0;o=o+Math.imul(v,ce)|0;h=h+Math.imul(v,le)|0;h=h+Math.imul(b,ce)|0;u=u+Math.imul(b,le)|0;o=o+Math.imul(c,ve)|0;h=h+Math.imul(c,be)|0;h=h+Math.imul(l,ve)|0;u=u+Math.imul(l,be)|0;var Ne=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ne>>>26)|0;Ne&=67108863;o=Math.imul(z,W);h=Math.imul(z,V);h=h+Math.imul(F,W)|0;u=Math.imul(F,V);o=o+Math.imul(O,J)|0;h=h+Math.imul(O,Z)|0;h=h+Math.imul(H,J)|0;u=u+Math.imul(H,Z)|0;o=o+Math.imul(T,Y)|0;h=h+Math.imul(T,$)|0;h=h+Math.imul(j,Y)|0;u=u+Math.imul(j,$)|0;o=o+Math.imul(I,ee)|0;h=h+Math.imul(I,te)|0;h=h+Math.imul(C,ee)|0;u=u+Math.imul(C,te)|0;o=o+Math.imul(N,ie)|0;h=h+Math.imul(N,ne)|0;h=h+Math.imul(P,ie)|0;u=u+Math.imul(P,ne)|0;o=o+Math.imul(E,fe)|0;h=h+Math.imul(E,se)|0;h=h+Math.imul(k,fe)|0;u=u+Math.imul(k,se)|0;o=o+Math.imul(w,he)|0;h=h+Math.imul(w,ue)|0;h=h+Math.imul(M,he)|0;u=u+Math.imul(M,ue)|0;o=o+Math.imul(y,ce)|0;h=h+Math.imul(y,le)|0;h=h+Math.imul(g,ce)|0;u=u+Math.imul(g,le)|0;o=o+Math.imul(v,ve)|0;h=h+Math.imul(v,be)|0;h=h+Math.imul(b,ve)|0;u=u+Math.imul(b,be)|0;o=o+Math.imul(c,ye)|0;h=h+Math.imul(c,ge)|0;h=h+Math.imul(l,ye)|0;u=u+Math.imul(l,ge)|0;var Re=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Re>>>26)|0;Re&=67108863;o=Math.imul(z,J);h=Math.imul(z,Z);h=h+Math.imul(F,J)|0;u=Math.imul(F,Z);o=o+Math.imul(O,Y)|0;h=h+Math.imul(O,$)|0;h=h+Math.imul(H,Y)|0;u=u+Math.imul(H,$)|0;o=o+Math.imul(T,ee)|0;h=h+Math.imul(T,te)|0;h=h+Math.imul(j,ee)|0;u=u+Math.imul(j,te)|0;o=o+Math.imul(I,ie)|0;h=h+Math.imul(I,ne)|0;h=h+Math.imul(C,ie)|0;u=u+Math.imul(C,ne)|0;o=o+Math.imul(N,fe)|0;h=h+Math.imul(N,se)|0;h=h+Math.imul(P,fe)|0;u=u+Math.imul(P,se)|0;o=o+Math.imul(E,he)|0;h=h+Math.imul(E,ue)|0;h=h+Math.imul(k,he)|0;u=u+Math.imul(k,ue)|0;o=o+Math.imul(w,ce)|0;h=h+Math.imul(w,le)|0;h=h+Math.imul(M,ce)|0;u=u+Math.imul(M,le)|0;o=o+Math.imul(y,ve)|0;h=h+Math.imul(y,be)|0;h=h+Math.imul(g,ve)|0;u=u+Math.imul(g,be)|0;o=o+Math.imul(v,ye)|0;h=h+Math.imul(v,ge)|0;h=h+Math.imul(b,ye)|0;u=u+Math.imul(b,ge)|0;var Pe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Pe>>>26)|0;Pe&=67108863;o=Math.imul(z,Y);h=Math.imul(z,$);h=h+Math.imul(F,Y)|0;u=Math.imul(F,$);o=o+Math.imul(O,ee)|0;h=h+Math.imul(O,te)|0;h=h+Math.imul(H,ee)|0;u=u+Math.imul(H,te)|0;o=o+Math.imul(T,ie)|0;h=h+Math.imul(T,ne)|0;h=h+Math.imul(j,ie)|0;u=u+Math.imul(j,ne)|0;o=o+Math.imul(I,fe)|0;h=h+Math.imul(I,se)|0;h=h+Math.imul(C,fe)|0;u=u+Math.imul(C,se)|0;o=o+Math.imul(N,he)|0;h=h+Math.imul(N,ue)|0;h=h+Math.imul(P,he)|0;u=u+Math.imul(P,ue)|0;o=o+Math.imul(E,ce)|0;h=h+Math.imul(E,le)|0;h=h+Math.imul(k,ce)|0;u=u+Math.imul(k,le)|0;o=o+Math.imul(w,ve)|0;h=h+Math.imul(w,be)|0;h=h+Math.imul(M,ve)|0;u=u+Math.imul(M,be)|0;o=o+Math.imul(y,ye)|0;h=h+Math.imul(y,ge)|0;h=h+Math.imul(g,ye)|0;u=u+Math.imul(g,ge)|0;var xe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(xe>>>26)|0;xe&=67108863;o=Math.imul(z,ee);h=Math.imul(z,te);h=h+Math.imul(F,ee)|0;u=Math.imul(F,te);o=o+Math.imul(O,ie)|0;h=h+Math.imul(O,ne)|0;h=h+Math.imul(H,ie)|0;u=u+Math.imul(H,ne)|0;o=o+Math.imul(T,fe)|0;h=h+Math.imul(T,se)|0;h=h+Math.imul(j,fe)|0;u=u+Math.imul(j,se)|0;o=o+Math.imul(I,he)|0;h=h+Math.imul(I,ue)|0;h=h+Math.imul(C,he)|0;u=u+Math.imul(C,ue)|0;o=o+Math.imul(N,ce)|0;h=h+Math.imul(N,le)|0;h=h+Math.imul(P,ce)|0;u=u+Math.imul(P,le)|0;o=o+Math.imul(E,ve)|0;h=h+Math.imul(E,be)|0;h=h+Math.imul(k,ve)|0;u=u+Math.imul(k,be)|0;o=o+Math.imul(w,ye)|0;h=h+Math.imul(w,ge)|0;h=h+Math.imul(M,ye)|0;u=u+Math.imul(M,ge)|0;var Ie=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ie>>>26)|0;Ie&=67108863;o=Math.imul(z,ie);h=Math.imul(z,ne);h=h+Math.imul(F,ie)|0;u=Math.imul(F,ne);o=o+Math.imul(O,fe)|0;h=h+Math.imul(O,se)|0;h=h+Math.imul(H,fe)|0;u=u+Math.imul(H,se)|0;o=o+Math.imul(T,he)|0;h=h+Math.imul(T,ue)|0;h=h+Math.imul(j,he)|0;u=u+Math.imul(j,ue)|0;o=o+Math.imul(I,ce)|0;h=h+Math.imul(I,le)|0;h=h+Math.imul(C,ce)|0;u=u+Math.imul(C,le)|0;o=o+Math.imul(N,ve)|0;h=h+Math.imul(N,be)|0;h=h+Math.imul(P,ve)|0;u=u+Math.imul(P,be)|0;o=o+Math.imul(E,ye)|0;h=h+Math.imul(E,ge)|0;h=h+Math.imul(k,ye)|0;u=u+Math.imul(k,ge)|0;var Ce=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ce>>>26)|0;Ce&=67108863;o=Math.imul(z,fe);h=Math.imul(z,se);h=h+Math.imul(F,fe)|0;u=Math.imul(F,se);o=o+Math.imul(O,he)|0;h=h+Math.imul(O,ue)|0;h=h+Math.imul(H,he)|0;u=u+Math.imul(H,ue)|0;o=o+Math.imul(T,ce)|0;h=h+Math.imul(T,le)|0;h=h+Math.imul(j,ce)|0;u=u+Math.imul(j,le)|0;o=o+Math.imul(I,ve)|0;h=h+Math.imul(I,be)|0;h=h+Math.imul(C,ve)|0;u=u+Math.imul(C,be)|0;o=o+Math.imul(N,ye)|0;h=h+Math.imul(N,ge)|0;h=h+Math.imul(P,ye)|0;u=u+Math.imul(P,ge)|0;var De=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(De>>>26)|0;De&=67108863;o=Math.imul(z,he);h=Math.imul(z,ue);h=h+Math.imul(F,he)|0;u=Math.imul(F,ue);o=o+Math.imul(O,ce)|0;h=h+Math.imul(O,le)|0;h=h+Math.imul(H,ce)|0;u=u+Math.imul(H,le)|0;o=o+Math.imul(T,ve)|0;h=h+Math.imul(T,be)|0;h=h+Math.imul(j,ve)|0;u=u+Math.imul(j,be)|0;o=o+Math.imul(I,ye)|0;h=h+Math.imul(I,ge)|0;h=h+Math.imul(C,ye)|0;u=u+Math.imul(C,ge)|0;var Te=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Te>>>26)|0;Te&=67108863;o=Math.imul(z,ce);h=Math.imul(z,le);h=h+Math.imul(F,ce)|0;u=Math.imul(F,le);o=o+Math.imul(O,ve)|0;h=h+Math.imul(O,be)|0;h=h+Math.imul(H,ve)|0;u=u+Math.imul(H,be)|0;o=o+Math.imul(T,ye)|0;h=h+Math.imul(T,ge)|0;h=h+Math.imul(j,ye)|0;u=u+Math.imul(j,ge)|0;var je=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(je>>>26)|0;je&=67108863;o=Math.imul(z,ve);h=Math.imul(z,be);h=h+Math.imul(F,ve)|0;u=Math.imul(F,be);o=o+Math.imul(O,ye)|0;h=h+Math.imul(O,ge)|0;h=h+Math.imul(H,ye)|0;u=u+Math.imul(H,ge)|0;var qe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(qe>>>26)|0;qe&=67108863;o=Math.imul(z,ye);h=Math.imul(z,ge);h=h+Math.imul(F,ye)|0;u=Math.imul(F,ge);var Oe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Oe>>>26)|0;Oe&=67108863;a[0]=_e;a[1]=we;a[2]=Me;a[3]=Se;a[4]=Be;a[5]=Ee;a[6]=ke;a[7]=Ae;a[8]=Ne;a[9]=Re;a[10]=Pe;a[11]=xe;a[12]=Ie;a[13]=Ce;a[14]=De;a[15]=Te;a[16]=je;a[17]=qe;a[18]=Oe;if(s!==0){a[19]=s;r.length++}return r};if(!Math.imul){o=smallMulTo}function bigMulTo(e,t,r){r.negative=t.negative^e.negative;r.length=e.length+t.length;var i=0;var n=0;for(var a=0;a<r.length-1;a++){var s=n;n=0;var o=i&67108863;var h=Math.min(a,t.length-1);for(var u=Math.max(0,a-e.length+1);u<=h;u++){var d=a-u;var c=e.words[d]|0;var l=t.words[u]|0;var p=c*l;var v=p&67108863;s=s+(p/67108864|0)|0;v=v+o|0;o=v&67108863;s=s+(v>>>26)|0;n+=s>>>26;s&=67108863}r.words[a]=o;i=s;s=n}if(i!==0){r.words[a]=i}else{r.length--}return r.strip()}function jumboMulTo(e,t,r){var i=new FFTM;return i.mulp(e,t,r)}BN.prototype.mulTo=function mulTo(e,t){var r;var i=this.length+e.length;if(this.length===10&&e.length===10){r=o(this,e,t)}else if(i<63){r=smallMulTo(this,e,t)}else if(i<1024){r=bigMulTo(this,e,t)}else{r=jumboMulTo(this,e,t)}return r};function FFTM(e,t){this.x=e;this.y=t}FFTM.prototype.makeRBT=function makeRBT(e){var t=new Array(e);var r=BN.prototype._countBits(e)-1;for(var i=0;i<e;i++){t[i]=this.revBin(i,r,e)}return t};FFTM.prototype.revBin=function revBin(e,t,r){if(e===0||e===r-1)return e;var i=0;for(var n=0;n<t;n++){i|=(e&1)<<t-n-1;e>>=1}return i};FFTM.prototype.permute=function permute(e,t,r,i,n,a){for(var s=0;s<a;s++){i[s]=t[e[s]];n[s]=r[e[s]]}};FFTM.prototype.transform=function transform(e,t,r,i,n,a){this.permute(a,e,t,r,i,n);for(var s=1;s<n;s<<=1){var o=s<<1;var h=Math.cos(2*Math.PI/o);var u=Math.sin(2*Math.PI/o);for(var d=0;d<n;d+=o){var c=h;var l=u;for(var p=0;p<s;p++){var v=r[d+p];var b=i[d+p];var m=r[d+p+s];var y=i[d+p+s];var g=c*m-l*y;y=c*y+l*m;m=g;r[d+p]=v+m;i[d+p]=b+y;r[d+p+s]=v-m;i[d+p+s]=b-y;if(p!==o){g=h*c-u*l;l=h*l+u*c;c=g}}}}};FFTM.prototype.guessLen13b=function guessLen13b(e,t){var r=Math.max(t,e)|1;var i=r&1;var n=0;for(r=r/2|0;r;r=r>>>1){n++}return 1<<n+1+i};FFTM.prototype.conjugate=function conjugate(e,t,r){if(r<=1)return;for(var i=0;i<r/2;i++){var n=e[i];e[i]=e[r-i-1];e[r-i-1]=n;n=t[i];t[i]=-t[r-i-1];t[r-i-1]=-n}};FFTM.prototype.normalize13b=function normalize13b(e,t){var r=0;for(var i=0;i<t/2;i++){var n=Math.round(e[2*i+1]/t)*8192+Math.round(e[2*i]/t)+r;e[i]=n&67108863;if(n<67108864){r=0}else{r=n/67108864|0}}return e};FFTM.prototype.convert13b=function convert13b(e,t,r,i){var n=0;for(var a=0;a<t;a++){n=n+(e[a]|0);r[2*a]=n&8191;n=n>>>13;r[2*a+1]=n&8191;n=n>>>13}for(a=2*t;a<i;++a){r[a]=0}assert(n===0);assert((n&~8191)===0)};FFTM.prototype.stub=function stub(e){var t=new Array(e);for(var r=0;r<e;r++){t[r]=0}return t};FFTM.prototype.mulp=function mulp(e,t,r){var i=2*this.guessLen13b(e.length,t.length);var n=this.makeRBT(i);var a=this.stub(i);var s=new Array(i);var o=new Array(i);var h=new Array(i);var u=new Array(i);var d=new Array(i);var c=new Array(i);var l=r.words;l.length=i;this.convert13b(e.words,e.length,s,i);this.convert13b(t.words,t.length,u,i);this.transform(s,a,o,h,i,n);this.transform(u,a,d,c,i,n);for(var p=0;p<i;p++){var v=o[p]*d[p]-h[p]*c[p];h[p]=o[p]*c[p]+h[p]*d[p];o[p]=v}this.conjugate(o,h,i);this.transform(o,h,l,a,i,n);this.conjugate(l,a,i);this.normalize13b(l,i);r.negative=e.negative^t.negative;r.length=e.length+t.length;return r.strip()};BN.prototype.mul=function mul(e){var t=new BN(null);t.words=new Array(this.length+e.length);return this.mulTo(e,t)};BN.prototype.mulf=function mulf(e){var t=new BN(null);t.words=new Array(this.length+e.length);return jumboMulTo(this,e,t)};BN.prototype.imul=function imul(e){return this.clone().mulTo(e,this)};BN.prototype.imuln=function imuln(e){assert(typeof e===\"number\");assert(e<67108864);var t=0;for(var r=0;r<this.length;r++){var i=(this.words[r]|0)*e;var n=(i&67108863)+(t&67108863);t>>=26;t+=i/67108864|0;t+=n>>>26;this.words[r]=n&67108863}if(t!==0){this.words[r]=t;this.length++}return this};BN.prototype.muln=function muln(e){return this.clone().imuln(e)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(e){var t=toBitArray(e);if(t.length===0)return new BN(1);var r=this;for(var i=0;i<t.length;i++,r=r.sqr()){if(t[i]!==0)break}if(++i<t.length){for(var n=r.sqr();i<t.length;i++,n=n.sqr()){if(t[i]===0)continue;r=r.mul(n)}}return r};BN.prototype.iushln=function iushln(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=67108863>>>26-t<<26-t;var n;if(t!==0){var a=0;for(n=0;n<this.length;n++){var s=this.words[n]&i;var o=(this.words[n]|0)-s<<t;this.words[n]=o|a;a=s>>>26-t}if(a){this.words[n]=a;this.length++}}if(r!==0){for(n=this.length-1;n>=0;n--){this.words[n+r]=this.words[n]}for(n=0;n<r;n++){this.words[n]=0}this.length+=r}return this.strip()};BN.prototype.ishln=function ishln(e){assert(this.negative===0);return this.iushln(e)};BN.prototype.iushrn=function iushrn(e,t,r){assert(typeof e===\"number\"&&e>=0);var i;if(t){i=(t-t%26)/26}else{i=0}var n=e%26;var a=Math.min((e-n)/26,this.length);var s=67108863^67108863>>>n<<n;var o=r;i-=a;i=Math.max(0,i);if(o){for(var h=0;h<a;h++){o.words[h]=this.words[h]}o.length=a}if(a===0){}else if(this.length>a){this.length-=a;for(h=0;h<this.length;h++){this.words[h]=this.words[h+a]}}else{this.words[0]=0;this.length=1}var u=0;for(h=this.length-1;h>=0&&(u!==0||h>=i);h--){var d=this.words[h]|0;this.words[h]=u<<26-n|d>>>n;u=d&s}if(o&&u!==0){o.words[o.length++]=u}if(this.length===0){this.words[0]=0;this.length=1}return this.strip()};BN.prototype.ishrn=function ishrn(e,t,r){assert(this.negative===0);return this.iushrn(e,t,r)};BN.prototype.shln=function shln(e){return this.clone().ishln(e)};BN.prototype.ushln=function ushln(e){return this.clone().iushln(e)};BN.prototype.shrn=function shrn(e){return this.clone().ishrn(e)};BN.prototype.ushrn=function ushrn(e){return this.clone().iushrn(e)};BN.prototype.testn=function testn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r)return false;var n=this.words[r];return!!(n&i)};BN.prototype.imaskn=function imaskn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;assert(this.negative===0,\"imaskn works only with positive numbers\");if(this.length<=r){return this}if(t!==0){r++}this.length=Math.min(r,this.length);if(t!==0){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()};BN.prototype.maskn=function maskn(e){return this.clone().imaskn(e)};BN.prototype.iaddn=function iaddn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.isubn(-e);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<e){this.words[0]=e-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(e);this.negative=1;return this}return this._iaddn(e)};BN.prototype._iaddn=function _iaddn(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++){this.words[t]-=67108864;if(t===this.length-1){this.words[t+1]=1}else{this.words[t+1]++}}this.length=Math.max(this.length,t+1);return this};BN.prototype.isubn=function isubn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.iaddn(-e);if(this.negative!==0){this.negative=0;this.iaddn(e);this.negative=1;return this}this.words[0]-=e;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var t=0;t<this.length&&this.words[t]<0;t++){this.words[t]+=67108864;this.words[t+1]-=1}}return this.strip()};BN.prototype.addn=function addn(e){return this.clone().iaddn(e)};BN.prototype.subn=function subn(e){return this.clone().isubn(e)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(e,t,r){var i=e.length+r;var n;this._expand(i);var a;var s=0;for(n=0;n<e.length;n++){a=(this.words[n+r]|0)+s;var o=(e.words[n]|0)*t;a-=o&67108863;s=(a>>26)-(o/67108864|0);this.words[n+r]=a&67108863}for(;n<this.length-r;n++){a=(this.words[n+r]|0)+s;s=a>>26;this.words[n+r]=a&67108863}if(s===0)return this.strip();assert(s===-1);s=0;for(n=0;n<this.length;n++){a=-(this.words[n]|0)+s;s=a>>26;this.words[n]=a&67108863}this.negative=1;return this.strip()};BN.prototype._wordDiv=function _wordDiv(e,t){var r=this.length-e.length;var i=this.clone();var n=e;var a=n.words[n.length-1]|0;var s=this._countBits(a);r=26-s;if(r!==0){n=n.ushln(r);i.iushln(r);a=n.words[n.length-1]|0}var o=i.length-n.length;var h;if(t!==\"mod\"){h=new BN(null);h.length=o+1;h.words=new Array(h.length);for(var u=0;u<h.length;u++){h.words[u]=0}}var d=i.clone()._ishlnsubmul(n,1,o);if(d.negative===0){i=d;if(h){h.words[o]=1}}for(var c=o-1;c>=0;c--){var l=(i.words[n.length+c]|0)*67108864+(i.words[n.length+c-1]|0);l=Math.min(l/a|0,67108863);i._ishlnsubmul(n,l,c);while(i.negative!==0){l--;i.negative=0;i._ishlnsubmul(n,1,c);if(!i.isZero()){i.negative^=1}}if(h){h.words[c]=l}}if(h){h.strip()}i.strip();if(t!==\"div\"&&r!==0){i.iushrn(r)}return{div:h||null,mod:i}};BN.prototype.divmod=function divmod(e,t,r){assert(!e.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var i,n,a;if(this.negative!==0&&e.negative===0){a=this.neg().divmod(e,t);if(t!==\"mod\"){i=a.div.neg()}if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.iadd(e)}}return{div:i,mod:n}}if(this.negative===0&&e.negative!==0){a=this.divmod(e.neg(),t);if(t!==\"mod\"){i=a.div.neg()}return{div:i,mod:a.mod}}if((this.negative&e.negative)!==0){a=this.neg().divmod(e.neg(),t);if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.isub(e)}}return{div:a.div,mod:n}}if(e.length>this.length||this.cmp(e)<0){return{div:new BN(0),mod:this}}if(e.length===1){if(t===\"div\"){return{div:this.divn(e.words[0]),mod:null}}if(t===\"mod\"){return{div:null,mod:new BN(this.modn(e.words[0]))}}return{div:this.divn(e.words[0]),mod:new BN(this.modn(e.words[0]))}}return this._wordDiv(e,t)};BN.prototype.div=function div(e){return this.divmod(e,\"div\",false).div};BN.prototype.mod=function mod(e){return this.divmod(e,\"mod\",false).mod};BN.prototype.umod=function umod(e){return this.divmod(e,\"mod\",true).mod};BN.prototype.divRound=function divRound(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=t.div.negative!==0?t.mod.isub(e):t.mod;var i=e.ushrn(1);var n=e.andln(1);var a=r.cmp(i);if(a<0||n===1&&a===0)return t.div;return t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)};BN.prototype.modn=function modn(e){assert(e<=67108863);var t=(1<<26)%e;var r=0;for(var i=this.length-1;i>=0;i--){r=(t*r+(this.words[i]|0))%e}return r};BN.prototype.idivn=function idivn(e){assert(e<=67108863);var t=0;for(var r=this.length-1;r>=0;r--){var i=(this.words[r]|0)+t*67108864;this.words[r]=i/e|0;t=i%e}return this.strip()};BN.prototype.divn=function divn(e){return this.clone().idivn(e)};BN.prototype.egcd=function egcd(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=new BN(0);var s=new BN(1);var o=0;while(t.isEven()&&r.isEven()){t.iushrn(1);r.iushrn(1);++o}var h=r.clone();var u=t.clone();while(!t.isZero()){for(var d=0,c=1;(t.words[0]&c)===0&&d<26;++d,c<<=1);if(d>0){t.iushrn(d);while(d-- >0){if(i.isOdd()||n.isOdd()){i.iadd(h);n.isub(u)}i.iushrn(1);n.iushrn(1)}}for(var l=0,p=1;(r.words[0]&p)===0&&l<26;++l,p<<=1);if(l>0){r.iushrn(l);while(l-- >0){if(a.isOdd()||s.isOdd()){a.iadd(h);s.isub(u)}a.iushrn(1);s.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(a);n.isub(s)}else{r.isub(t);a.isub(i);s.isub(n)}}return{a:a,b:s,gcd:r.iushln(o)}};BN.prototype._invmp=function _invmp(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=r.clone();while(t.cmpn(1)>0&&r.cmpn(1)>0){for(var s=0,o=1;(t.words[0]&o)===0&&s<26;++s,o<<=1);if(s>0){t.iushrn(s);while(s-- >0){if(i.isOdd()){i.iadd(a)}i.iushrn(1)}}for(var h=0,u=1;(r.words[0]&u)===0&&h<26;++h,u<<=1);if(h>0){r.iushrn(h);while(h-- >0){if(n.isOdd()){n.iadd(a)}n.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(n)}else{r.isub(t);n.isub(i)}}var d;if(t.cmpn(1)===0){d=i}else{d=n}if(d.cmpn(0)<0){d.iadd(e)}return d};BN.prototype.gcd=function gcd(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone();var r=e.clone();t.negative=0;r.negative=0;for(var i=0;t.isEven()&&r.isEven();i++){t.iushrn(1);r.iushrn(1)}do{while(t.isEven()){t.iushrn(1)}while(r.isEven()){r.iushrn(1)}var n=t.cmp(r);if(n<0){var a=t;t=r;r=a}else if(n===0||r.cmpn(1)===0){break}t.isub(r)}while(true);return r.iushln(i)};BN.prototype.invm=function invm(e){return this.egcd(e).a.umod(e)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(e){return this.words[0]&e};BN.prototype.bincn=function bincn(e){assert(typeof e===\"number\");var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r){this._expand(r+1);this.words[r]|=i;return this}var n=i;for(var a=r;n!==0&&a<this.length;a++){var s=this.words[a]|0;s+=n;n=s>>>26;s&=67108863;this.words[a]=s}if(n!==0){this.words[a]=n;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(e){var t=e<0;if(this.negative!==0&&!t)return-1;if(this.negative===0&&t)return 1;this.strip();var r;if(this.length>1){r=1}else{if(t){e=-e}assert(e<=67108863,\"Number is too big\");var i=this.words[0]|0;r=i===e?0:i<e?-1:1}if(this.negative!==0)return-r|0;return r};BN.prototype.cmp=function cmp(e){if(this.negative!==0&&e.negative===0)return-1;if(this.negative===0&&e.negative!==0)return 1;var t=this.ucmp(e);if(this.negative!==0)return-t|0;return t};BN.prototype.ucmp=function ucmp(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;var t=0;for(var r=this.length-1;r>=0;r--){var i=this.words[r]|0;var n=e.words[r]|0;if(i===n)continue;if(i<n){t=-1}else if(i>n){t=1}break}return t};BN.prototype.gtn=function gtn(e){return this.cmpn(e)===1};BN.prototype.gt=function gt(e){return this.cmp(e)===1};BN.prototype.gten=function gten(e){return this.cmpn(e)>=0};BN.prototype.gte=function gte(e){return this.cmp(e)>=0};BN.prototype.ltn=function ltn(e){return this.cmpn(e)===-1};BN.prototype.lt=function lt(e){return this.cmp(e)===-1};BN.prototype.lten=function lten(e){return this.cmpn(e)<=0};BN.prototype.lte=function lte(e){return this.cmp(e)<=0};BN.prototype.eqn=function eqn(e){return this.cmpn(e)===0};BN.prototype.eq=function eq(e){return this.cmp(e)===0};BN.red=function red(e){return new Red(e)};BN.prototype.toRed=function toRed(e){assert(!this.red,\"Already a number in reduction context\");assert(this.negative===0,\"red works only with positives\");return e.convertTo(this)._forceRed(e)};BN.prototype.fromRed=function fromRed(){assert(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(e){this.red=e;return this};BN.prototype.forceRed=function forceRed(e){assert(!this.red,\"Already a number in reduction context\");return this._forceRed(e)};BN.prototype.redAdd=function redAdd(e){assert(this.red,\"redAdd works only with red numbers\");return this.red.add(this,e)};BN.prototype.redIAdd=function redIAdd(e){assert(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,e)};BN.prototype.redSub=function redSub(e){assert(this.red,\"redSub works only with red numbers\");return this.red.sub(this,e)};BN.prototype.redISub=function redISub(e){assert(this.red,\"redISub works only with red numbers\");return this.red.isub(this,e)};BN.prototype.redShl=function redShl(e){assert(this.red,\"redShl works only with red numbers\");return this.red.shl(this,e)};BN.prototype.redMul=function redMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.mul(this,e)};BN.prototype.redIMul=function redIMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.imul(this,e)};BN.prototype.redSqr=function redSqr(){assert(this.red,\"redSqr works only with red numbers\");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,\"redNeg works only with red numbers\");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(e){assert(this.red&&!e.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,e)};var h={k256:null,p224:null,p192:null,p25519:null};function MPrime(e,t){this.name=e;this.p=new BN(t,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var e=new BN(null);e.words=new Array(Math.ceil(this.n/13));return e};MPrime.prototype.ireduce=function ireduce(e){var t=e;var r;do{this.split(t,this.tmp);t=this.imulK(t);t=t.iadd(this.tmp);r=t.bitLength()}while(r>this.n);var i=r<this.n?-1:t.ucmp(this.p);if(i===0){t.words[0]=0;t.length=1}else if(i>0){t.isub(this.p)}else{if(t.strip!==undefined){t.strip()}else{t._strip()}}return t};MPrime.prototype.split=function split(e,t){e.iushrn(this.n,0,t)};MPrime.prototype.imulK=function imulK(e){return e.imul(this.k)};function K256(){MPrime.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}inherits(K256,MPrime);K256.prototype.split=function split(e,t){var r=4194303;var i=Math.min(e.length,9);for(var n=0;n<i;n++){t.words[n]=e.words[n]}t.length=i;if(e.length<=9){e.words[0]=0;e.length=1;return}var a=e.words[9];t.words[t.length++]=a&r;for(n=10;n<e.length;n++){var s=e.words[n]|0;e.words[n-10]=(s&r)<<4|a>>>22;a=s}a>>>=22;e.words[n-10]=a;if(a===0&&e.length>10){e.length-=10}else{e.length-=9}};K256.prototype.imulK=function imulK(e){e.words[e.length]=0;e.words[e.length+1]=0;e.length+=2;var t=0;for(var r=0;r<e.length;r++){var i=e.words[r]|0;t+=i*977;e.words[r]=t&67108863;t=i*64+(t/67108864|0)}if(e.words[e.length-1]===0){e.length--;if(e.words[e.length-1]===0){e.length--}}return e};function P224(){MPrime.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}inherits(P224,MPrime);function P192(){MPrime.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}inherits(P192,MPrime);function P25519(){MPrime.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(e){var t=0;for(var r=0;r<e.length;r++){var i=(e.words[r]|0)*19+t;var n=i&67108863;i>>>=26;e.words[r]=n;t=i}if(t!==0){e.words[e.length++]=t}return e};BN._prime=function prime(e){if(h[e])return h[e];var prime;if(e===\"k256\"){prime=new K256}else if(e===\"p224\"){prime=new P224}else if(e===\"p192\"){prime=new P192}else if(e===\"p25519\"){prime=new P25519}else{throw new Error(\"Unknown prime \"+e)}h[e]=prime;return prime};function Red(e){if(typeof e===\"string\"){var t=BN._prime(e);this.m=t.p;this.prime=t}else{assert(e.gtn(1),\"modulus must be greater than 1\");this.m=e;this.prime=null}}Red.prototype._verify1=function _verify1(e){assert(e.negative===0,\"red works only with positives\");assert(e.red,\"red works only with red numbers\")};Red.prototype._verify2=function _verify2(e,t){assert((e.negative|t.negative)===0,\"red works only with positives\");assert(e.red&&e.red===t.red,\"red works only with red numbers\")};Red.prototype.imod=function imod(e){if(this.prime)return this.prime.ireduce(e)._forceRed(this);return e.umod(this.m)._forceRed(this)};Red.prototype.neg=function neg(e){if(e.isZero()){return e.clone()}return this.m.sub(e)._forceRed(this)};Red.prototype.add=function add(e,t){this._verify2(e,t);var r=e.add(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r._forceRed(this)};Red.prototype.iadd=function iadd(e,t){this._verify2(e,t);var r=e.iadd(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r};Red.prototype.sub=function sub(e,t){this._verify2(e,t);var r=e.sub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r._forceRed(this)};Red.prototype.isub=function isub(e,t){this._verify2(e,t);var r=e.isub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r};Red.prototype.shl=function shl(e,t){this._verify1(e);return this.imod(e.ushln(t))};Red.prototype.imul=function imul(e,t){this._verify2(e,t);return this.imod(e.imul(t))};Red.prototype.mul=function mul(e,t){this._verify2(e,t);return this.imod(e.mul(t))};Red.prototype.isqr=function isqr(e){return this.imul(e,e.clone())};Red.prototype.sqr=function sqr(e){return this.mul(e,e)};Red.prototype.sqrt=function sqrt(e){if(e.isZero())return e.clone();var t=this.m.andln(3);assert(t%2===1);if(t===3){var r=this.m.add(new BN(1)).iushrn(2);return this.pow(e,r)}var i=this.m.subn(1);var n=0;while(!i.isZero()&&i.andln(1)===0){n++;i.iushrn(1)}assert(!i.isZero());var a=new BN(1).toRed(this);var s=a.redNeg();var o=this.m.subn(1).iushrn(1);var h=this.m.bitLength();h=new BN(2*h*h).toRed(this);while(this.pow(h,o).cmp(s)!==0){h.redIAdd(s)}var u=this.pow(h,i);var d=this.pow(e,i.addn(1).iushrn(1));var c=this.pow(e,i);var l=n;while(c.cmp(a)!==0){var p=c;for(var v=0;p.cmp(a)!==0;v++){p=p.redSqr()}assert(v<l);var b=this.pow(u,new BN(1).iushln(l-v-1));d=d.redMul(b);u=b.redSqr();c=c.redMul(u);l=v}return d};Red.prototype.invm=function invm(e){var t=e._invmp(this.m);if(t.negative!==0){t.negative=0;return this.imod(t).redNeg()}else{return this.imod(t)}};Red.prototype.pow=function pow(e,t){if(t.isZero())return new BN(1).toRed(this);if(t.cmpn(1)===0)return e.clone();var r=4;var i=new Array(1<<r);i[0]=new BN(1).toRed(this);i[1]=e;for(var n=2;n<i.length;n++){i[n]=this.mul(i[n-1],e)}var a=i[0];var s=0;var o=0;var h=t.bitLength()%26;if(h===0){h=26}for(n=t.length-1;n>=0;n--){var u=t.words[n];for(var d=h-1;d>=0;d--){var c=u>>d&1;if(a!==i[0]){a=this.sqr(a)}if(c===0&&s===0){o=0;continue}s<<=1;s|=c;o++;if(o!==r&&(n!==0||d!==0))continue;a=this.mul(a,i[s]);o=0;s=0}h=26}return a};Red.prototype.convertTo=function convertTo(e){var t=e.umod(this.m);return t===e?t.clone():t};Red.prototype.convertFrom=function convertFrom(e){var t=e.clone();t.red=null;return t};BN.mont=function mont(e){return new Mont(e)};function Mont(e){Red.call(this,e);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(e){return this.imod(e.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(e){var t=this.imod(e.mul(this.rinv));t.red=null;return t};Mont.prototype.imul=function imul(e,t){if(e.isZero()||t.isZero()){e.words[0]=0;e.length=1;return e}var r=e.imul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.mul=function mul(e,t){if(e.isZero()||t.isZero())return new BN(0)._forceRed(this);var r=e.mul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.invm=function invm(e){var t=this.imod(e._invmp(this.m).mul(this.r2));return t._forceRed(this)}})( false||e,this)},1670:function(e,t,r){e=r.nmd(e);(function(e,t){\"use strict\";function assert(e,t){if(!e)throw new Error(t||\"Assertion failed\")}function inherits(e,t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}function BN(e,t,r){if(BN.isBN(e)){return e}this.negative=0;this.words=null;this.length=0;this.red=null;if(e!==null){if(t===\"le\"||t===\"be\"){r=t;t=10}this._init(e||0,t||10,r||\"be\")}}if(typeof e===\"object\"){e.exports=BN}else{t.BN=BN}BN.BN=BN;BN.wordSize=26;var i;try{i=r(4300).Buffer}catch(e){}BN.isBN=function isBN(e){if(e instanceof BN){return true}return e!==null&&typeof e===\"object\"&&e.constructor.wordSize===BN.wordSize&&Array.isArray(e.words)};BN.max=function max(e,t){if(e.cmp(t)>0)return e;return t};BN.min=function min(e,t){if(e.cmp(t)<0)return e;return t};BN.prototype._init=function init(e,t,r){if(typeof e===\"number\"){return this._initNumber(e,t,r)}if(typeof e===\"object\"){return this._initArray(e,t,r)}if(t===\"hex\"){t=16}assert(t===(t|0)&&t>=2&&t<=36);e=e.toString().replace(/\\s+/g,\"\");var i=0;if(e[0]===\"-\"){i++}if(t===16){this._parseHex(e,i)}else{this._parseBase(e,t,i)}if(e[0]===\"-\"){this.negative=1}this._strip();if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initNumber=function _initNumber(e,t,r){if(e<0){this.negative=1;e=-e}if(e<67108864){this.words=[e&67108863];this.length=1}else if(e<4503599627370496){this.words=[e&67108863,e/67108864&67108863];this.length=2}else{assert(e<9007199254740992);this.words=[e&67108863,e/67108864&67108863,1];this.length=3}if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initArray=function _initArray(e,t,r){assert(typeof e.length===\"number\");if(e.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(e.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var n,a;var s=0;if(r===\"be\"){for(i=e.length-1,n=0;i>=0;i-=3){a=e[i]|e[i-1]<<8|e[i-2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}else if(r===\"le\"){for(i=0,n=0;i<e.length;i+=3){a=e[i]|e[i+1]<<8|e[i+2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}return this._strip()};function parseHex(e,t,r){var i=0;var n=Math.min(e.length,r);var a=0;for(var s=t;s<n;s++){var o=e.charCodeAt(s)-48;i<<=4;var h;if(o>=49&&o<=54){h=o-49+10}else if(o>=17&&o<=22){h=o-17+10}else{h=o}i|=h;a|=h}assert(!(a&240),\"Invalid character in \"+e);return i}BN.prototype._parseHex=function _parseHex(e,t){this.length=Math.ceil((e.length-t)/6);this.words=new Array(this.length);for(var r=0;r<this.length;r++){this.words[r]=0}var i,n;var a=0;for(r=e.length-6,i=0;r>=t;r-=6){n=parseHex(e,r,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303;a+=24;if(a>=26){a-=26;i++}}if(r+6!==t){n=parseHex(e,t,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303}this._strip()};function parseBase(e,t,r,i){var n=0;var a=0;var s=Math.min(e.length,r);for(var o=t;o<s;o++){var h=e.charCodeAt(o)-48;n*=i;if(h>=49){a=h-49+10}else if(h>=17){a=h-17+10}else{a=h}assert(h>=0&&a<i,\"Invalid character\");n+=a}return n}BN.prototype._parseBase=function _parseBase(e,t,r){this.words=[0];this.length=1;for(var i=0,n=1;n<=67108863;n*=t){i++}i--;n=n/t|0;var a=e.length-r;var s=a%i;var o=Math.min(a,a-s)+r;var h=0;for(var u=r;u<o;u+=i){h=parseBase(e,u,u+i,t);this.imuln(n);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}if(s!==0){var d=1;h=parseBase(e,u,e.length,t);for(u=0;u<s;u++){d*=t}this.imuln(d);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}};BN.prototype.copy=function copy(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++){e.words[t]=this.words[t]}e.length=this.length;e.negative=this.negative;e.red=this.red};function move(e,t){e.words=t.words;e.length=t.length;e.negative=t.negative;e.red=t.red}BN.prototype._move=function _move(e){move(e,this)};BN.prototype.clone=function clone(){var e=new BN(null);this.copy(e);return e};BN.prototype._expand=function _expand(e){while(this.length<e){this.words[this.length++]=0}return this};BN.prototype._strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};if(typeof Symbol!==\"undefined\"&&typeof Symbol.for===\"function\"){BN.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=inspect}else{BN.prototype.inspect=inspect}function inspect(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"}var n=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"];var a=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var s=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(e,t){e=e||10;t=t|0||1;var r;if(e===16||e===\"hex\"){r=\"\";var i=0;var o=0;for(var h=0;h<this.length;h++){var u=this.words[h];var d=((u<<i|o)&16777215).toString(16);o=u>>>24-i&16777215;if(o!==0||h!==this.length-1){r=n[6-d.length]+d+r}else{r=d+r}i+=2;if(i>=26){i-=26;h--}}if(o!==0){r=o.toString(16)+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}if(e===(e|0)&&e>=2&&e<=36){var c=a[e];var l=s[e];r=\"\";var p=this.clone();p.negative=0;while(!p.isZero()){var v=p.modrn(l).toString(e);p=p.idivn(l);if(!p.isZero()){r=n[c-v.length]+v+r}else{r=v+r}}if(this.isZero()){r=\"0\"+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}assert(false,\"Base should be between 2 and 36\")};BN.prototype.toNumber=function toNumber(){var e=this.words[0];if(this.length===2){e+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){e+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,\"Number can only safely store up to 53 bits\")}return this.negative!==0?-e:e};BN.prototype.toJSON=function toJSON(){return this.toString(16,2)};if(i){BN.prototype.toBuffer=function toBuffer(e,t){return this.toArrayLike(i,e,t)}}BN.prototype.toArray=function toArray(e,t){return this.toArrayLike(Array,e,t)};var o=function allocate(e,t){if(e.allocUnsafe){return e.allocUnsafe(t)}return new e(t)};BN.prototype.toArrayLike=function toArrayLike(e,t,r){this._strip();var i=this.byteLength();var n=r||Math.max(1,i);assert(i<=n,\"byte array longer than desired length\");assert(n>0,\"Requested array length <= 0\");var a=o(e,n);var s=t===\"le\"?\"LE\":\"BE\";this[\"_toArrayLike\"+s](a,i);return a};BN.prototype._toArrayLikeLE=function _toArrayLikeLE(e,t){var r=0;var i=0;for(var n=0,a=0;n<this.length;n++){var s=this.words[n]<<a|i;e[r++]=s&255;if(r<e.length){e[r++]=s>>8&255}if(r<e.length){e[r++]=s>>16&255}if(a===6){if(r<e.length){e[r++]=s>>24&255}i=0;a=0}else{i=s>>>24;a+=2}}if(r<e.length){e[r++]=i;while(r<e.length){e[r++]=0}}};BN.prototype._toArrayLikeBE=function _toArrayLikeBE(e,t){var r=e.length-1;var i=0;for(var n=0,a=0;n<this.length;n++){var s=this.words[n]<<a|i;e[r--]=s&255;if(r>=0){e[r--]=s>>8&255}if(r>=0){e[r--]=s>>16&255}if(a===6){if(r>=0){e[r--]=s>>24&255}i=0;a=0}else{i=s>>>24;a+=2}}if(r>=0){e[r--]=i;while(r>=0){e[r--]=0}}};if(Math.clz32){BN.prototype._countBits=function _countBits(e){return 32-Math.clz32(e)}}else{BN.prototype._countBits=function _countBits(e){var t=e;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(e){if(e===0)return 26;var t=e;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var e=this.words[this.length-1];var t=this._countBits(e);return(this.length-1)*26+t};function toBitArray(e){var t=new Array(e.bitLength());for(var r=0;r<t.length;r++){var i=r/26|0;var n=r%26;t[r]=e.words[i]>>>n&1}return t}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var e=0;for(var t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);e+=r;if(r!==26)break}return e};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(e){if(this.negative!==0){return this.abs().inotn(e).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(e){if(this.testn(e-1)){return this.notn(e).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(e){while(this.length<e.length){this.words[this.length++]=0}for(var t=0;t<e.length;t++){this.words[t]=this.words[t]|e.words[t]}return this._strip()};BN.prototype.ior=function ior(e){assert((this.negative|e.negative)===0);return this.iuor(e)};BN.prototype.or=function or(e){if(this.length>e.length)return this.clone().ior(e);return e.clone().ior(this)};BN.prototype.uor=function uor(e){if(this.length>e.length)return this.clone().iuor(e);return e.clone().iuor(this)};BN.prototype.iuand=function iuand(e){var t;if(this.length>e.length){t=e}else{t=this}for(var r=0;r<t.length;r++){this.words[r]=this.words[r]&e.words[r]}this.length=t.length;return this._strip()};BN.prototype.iand=function iand(e){assert((this.negative|e.negative)===0);return this.iuand(e)};BN.prototype.and=function and(e){if(this.length>e.length)return this.clone().iand(e);return e.clone().iand(this)};BN.prototype.uand=function uand(e){if(this.length>e.length)return this.clone().iuand(e);return e.clone().iuand(this)};BN.prototype.iuxor=function iuxor(e){var t;var r;if(this.length>e.length){t=this;r=e}else{t=e;r=this}for(var i=0;i<r.length;i++){this.words[i]=t.words[i]^r.words[i]}if(this!==t){for(;i<t.length;i++){this.words[i]=t.words[i]}}this.length=t.length;return this._strip()};BN.prototype.ixor=function ixor(e){assert((this.negative|e.negative)===0);return this.iuxor(e)};BN.prototype.xor=function xor(e){if(this.length>e.length)return this.clone().ixor(e);return e.clone().ixor(this)};BN.prototype.uxor=function uxor(e){if(this.length>e.length)return this.clone().iuxor(e);return e.clone().iuxor(this)};BN.prototype.inotn=function inotn(e){assert(typeof e===\"number\"&&e>=0);var t=Math.ceil(e/26)|0;var r=e%26;this._expand(t);if(r>0){t--}for(var i=0;i<t;i++){this.words[i]=~this.words[i]&67108863}if(r>0){this.words[i]=~this.words[i]&67108863>>26-r}return this._strip()};BN.prototype.notn=function notn(e){return this.clone().inotn(e)};BN.prototype.setn=function setn(e,t){assert(typeof e===\"number\"&&e>=0);var r=e/26|0;var i=e%26;this._expand(r+1);if(t){this.words[r]=this.words[r]|1<<i}else{this.words[r]=this.words[r]&~(1<<i)}return this._strip()};BN.prototype.iadd=function iadd(e){var t;if(this.negative!==0&&e.negative===0){this.negative=0;t=this.isub(e);this.negative^=1;return this._normSign()}else if(this.negative===0&&e.negative!==0){e.negative=0;t=this.isub(e);e.negative=1;return t._normSign()}var r,i;if(this.length>e.length){r=this;i=e}else{r=e;i=this}var n=0;for(var a=0;a<i.length;a++){t=(r.words[a]|0)+(i.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}for(;n!==0&&a<r.length;a++){t=(r.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}this.length=r.length;if(n!==0){this.words[this.length]=n;this.length++}else if(r!==this){for(;a<r.length;a++){this.words[a]=r.words[a]}}return this};BN.prototype.add=function add(e){var t;if(e.negative!==0&&this.negative===0){e.negative=0;t=this.sub(e);e.negative^=1;return t}else if(e.negative===0&&this.negative!==0){this.negative=0;t=e.sub(this);this.negative=1;return t}if(this.length>e.length)return this.clone().iadd(e);return e.clone().iadd(this)};BN.prototype.isub=function isub(e){if(e.negative!==0){e.negative=0;var t=this.iadd(e);e.negative=1;return t._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(e);this.negative=1;return this._normSign()}var r=this.cmp(e);if(r===0){this.negative=0;this.length=1;this.words[0]=0;return this}var i,n;if(r>0){i=this;n=e}else{i=e;n=this}var a=0;for(var s=0;s<n.length;s++){t=(i.words[s]|0)-(n.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}for(;a!==0&&s<i.length;s++){t=(i.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}if(a===0&&s<i.length&&i!==this){for(;s<i.length;s++){this.words[s]=i.words[s]}}this.length=Math.max(this.length,s);if(i!==this){this.negative=1}return this._strip()};BN.prototype.sub=function sub(e){return this.clone().isub(e)};function smallMulTo(e,t,r){r.negative=t.negative^e.negative;var i=e.length+t.length|0;r.length=i;i=i-1|0;var n=e.words[0]|0;var a=t.words[0]|0;var s=n*a;var o=s&67108863;var h=s/67108864|0;r.words[0]=o;for(var u=1;u<i;u++){var d=h>>>26;var c=h&67108863;var l=Math.min(u,t.length-1);for(var p=Math.max(0,u-e.length+1);p<=l;p++){var v=u-p|0;n=e.words[v]|0;a=t.words[p]|0;s=n*a+c;d+=s/67108864|0;c=s&67108863}r.words[u]=c|0;h=d|0}if(h!==0){r.words[u]=h|0}else{r.length--}return r._strip()}var h=function comb10MulTo(e,t,r){var i=e.words;var n=t.words;var a=r.words;var s=0;var o;var h;var u;var d=i[0]|0;var c=d&8191;var l=d>>>13;var p=i[1]|0;var v=p&8191;var b=p>>>13;var m=i[2]|0;var y=m&8191;var g=m>>>13;var _=i[3]|0;var w=_&8191;var M=_>>>13;var B=i[4]|0;var E=B&8191;var k=B>>>13;var A=i[5]|0;var N=A&8191;var P=A>>>13;var x=i[6]|0;var I=x&8191;var C=x>>>13;var D=i[7]|0;var T=D&8191;var j=D>>>13;var q=i[8]|0;var O=q&8191;var H=q>>>13;var L=i[9]|0;var z=L&8191;var F=L>>>13;var U=n[0]|0;var W=U&8191;var V=U>>>13;var G=n[1]|0;var J=G&8191;var Z=G>>>13;var X=n[2]|0;var Y=X&8191;var $=X>>>13;var Q=n[3]|0;var ee=Q&8191;var te=Q>>>13;var re=n[4]|0;var ie=re&8191;var ne=re>>>13;var ae=n[5]|0;var fe=ae&8191;var se=ae>>>13;var oe=n[6]|0;var he=oe&8191;var ue=oe>>>13;var de=n[7]|0;var ce=de&8191;var le=de>>>13;var pe=n[8]|0;var ve=pe&8191;var be=pe>>>13;var me=n[9]|0;var ye=me&8191;var ge=me>>>13;r.negative=e.negative^t.negative;r.length=19;o=Math.imul(c,W);h=Math.imul(c,V);h=h+Math.imul(l,W)|0;u=Math.imul(l,V);var _e=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(_e>>>26)|0;_e&=67108863;o=Math.imul(v,W);h=Math.imul(v,V);h=h+Math.imul(b,W)|0;u=Math.imul(b,V);o=o+Math.imul(c,J)|0;h=h+Math.imul(c,Z)|0;h=h+Math.imul(l,J)|0;u=u+Math.imul(l,Z)|0;var we=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(we>>>26)|0;we&=67108863;o=Math.imul(y,W);h=Math.imul(y,V);h=h+Math.imul(g,W)|0;u=Math.imul(g,V);o=o+Math.imul(v,J)|0;h=h+Math.imul(v,Z)|0;h=h+Math.imul(b,J)|0;u=u+Math.imul(b,Z)|0;o=o+Math.imul(c,Y)|0;h=h+Math.imul(c,$)|0;h=h+Math.imul(l,Y)|0;u=u+Math.imul(l,$)|0;var Me=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Me>>>26)|0;Me&=67108863;o=Math.imul(w,W);h=Math.imul(w,V);h=h+Math.imul(M,W)|0;u=Math.imul(M,V);o=o+Math.imul(y,J)|0;h=h+Math.imul(y,Z)|0;h=h+Math.imul(g,J)|0;u=u+Math.imul(g,Z)|0;o=o+Math.imul(v,Y)|0;h=h+Math.imul(v,$)|0;h=h+Math.imul(b,Y)|0;u=u+Math.imul(b,$)|0;o=o+Math.imul(c,ee)|0;h=h+Math.imul(c,te)|0;h=h+Math.imul(l,ee)|0;u=u+Math.imul(l,te)|0;var Se=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Se>>>26)|0;Se&=67108863;o=Math.imul(E,W);h=Math.imul(E,V);h=h+Math.imul(k,W)|0;u=Math.imul(k,V);o=o+Math.imul(w,J)|0;h=h+Math.imul(w,Z)|0;h=h+Math.imul(M,J)|0;u=u+Math.imul(M,Z)|0;o=o+Math.imul(y,Y)|0;h=h+Math.imul(y,$)|0;h=h+Math.imul(g,Y)|0;u=u+Math.imul(g,$)|0;o=o+Math.imul(v,ee)|0;h=h+Math.imul(v,te)|0;h=h+Math.imul(b,ee)|0;u=u+Math.imul(b,te)|0;o=o+Math.imul(c,ie)|0;h=h+Math.imul(c,ne)|0;h=h+Math.imul(l,ie)|0;u=u+Math.imul(l,ne)|0;var Be=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Be>>>26)|0;Be&=67108863;o=Math.imul(N,W);h=Math.imul(N,V);h=h+Math.imul(P,W)|0;u=Math.imul(P,V);o=o+Math.imul(E,J)|0;h=h+Math.imul(E,Z)|0;h=h+Math.imul(k,J)|0;u=u+Math.imul(k,Z)|0;o=o+Math.imul(w,Y)|0;h=h+Math.imul(w,$)|0;h=h+Math.imul(M,Y)|0;u=u+Math.imul(M,$)|0;o=o+Math.imul(y,ee)|0;h=h+Math.imul(y,te)|0;h=h+Math.imul(g,ee)|0;u=u+Math.imul(g,te)|0;o=o+Math.imul(v,ie)|0;h=h+Math.imul(v,ne)|0;h=h+Math.imul(b,ie)|0;u=u+Math.imul(b,ne)|0;o=o+Math.imul(c,fe)|0;h=h+Math.imul(c,se)|0;h=h+Math.imul(l,fe)|0;u=u+Math.imul(l,se)|0;var Ee=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ee>>>26)|0;Ee&=67108863;o=Math.imul(I,W);h=Math.imul(I,V);h=h+Math.imul(C,W)|0;u=Math.imul(C,V);o=o+Math.imul(N,J)|0;h=h+Math.imul(N,Z)|0;h=h+Math.imul(P,J)|0;u=u+Math.imul(P,Z)|0;o=o+Math.imul(E,Y)|0;h=h+Math.imul(E,$)|0;h=h+Math.imul(k,Y)|0;u=u+Math.imul(k,$)|0;o=o+Math.imul(w,ee)|0;h=h+Math.imul(w,te)|0;h=h+Math.imul(M,ee)|0;u=u+Math.imul(M,te)|0;o=o+Math.imul(y,ie)|0;h=h+Math.imul(y,ne)|0;h=h+Math.imul(g,ie)|0;u=u+Math.imul(g,ne)|0;o=o+Math.imul(v,fe)|0;h=h+Math.imul(v,se)|0;h=h+Math.imul(b,fe)|0;u=u+Math.imul(b,se)|0;o=o+Math.imul(c,he)|0;h=h+Math.imul(c,ue)|0;h=h+Math.imul(l,he)|0;u=u+Math.imul(l,ue)|0;var ke=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(ke>>>26)|0;ke&=67108863;o=Math.imul(T,W);h=Math.imul(T,V);h=h+Math.imul(j,W)|0;u=Math.imul(j,V);o=o+Math.imul(I,J)|0;h=h+Math.imul(I,Z)|0;h=h+Math.imul(C,J)|0;u=u+Math.imul(C,Z)|0;o=o+Math.imul(N,Y)|0;h=h+Math.imul(N,$)|0;h=h+Math.imul(P,Y)|0;u=u+Math.imul(P,$)|0;o=o+Math.imul(E,ee)|0;h=h+Math.imul(E,te)|0;h=h+Math.imul(k,ee)|0;u=u+Math.imul(k,te)|0;o=o+Math.imul(w,ie)|0;h=h+Math.imul(w,ne)|0;h=h+Math.imul(M,ie)|0;u=u+Math.imul(M,ne)|0;o=o+Math.imul(y,fe)|0;h=h+Math.imul(y,se)|0;h=h+Math.imul(g,fe)|0;u=u+Math.imul(g,se)|0;o=o+Math.imul(v,he)|0;h=h+Math.imul(v,ue)|0;h=h+Math.imul(b,he)|0;u=u+Math.imul(b,ue)|0;o=o+Math.imul(c,ce)|0;h=h+Math.imul(c,le)|0;h=h+Math.imul(l,ce)|0;u=u+Math.imul(l,le)|0;var Ae=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ae>>>26)|0;Ae&=67108863;o=Math.imul(O,W);h=Math.imul(O,V);h=h+Math.imul(H,W)|0;u=Math.imul(H,V);o=o+Math.imul(T,J)|0;h=h+Math.imul(T,Z)|0;h=h+Math.imul(j,J)|0;u=u+Math.imul(j,Z)|0;o=o+Math.imul(I,Y)|0;h=h+Math.imul(I,$)|0;h=h+Math.imul(C,Y)|0;u=u+Math.imul(C,$)|0;o=o+Math.imul(N,ee)|0;h=h+Math.imul(N,te)|0;h=h+Math.imul(P,ee)|0;u=u+Math.imul(P,te)|0;o=o+Math.imul(E,ie)|0;h=h+Math.imul(E,ne)|0;h=h+Math.imul(k,ie)|0;u=u+Math.imul(k,ne)|0;o=o+Math.imul(w,fe)|0;h=h+Math.imul(w,se)|0;h=h+Math.imul(M,fe)|0;u=u+Math.imul(M,se)|0;o=o+Math.imul(y,he)|0;h=h+Math.imul(y,ue)|0;h=h+Math.imul(g,he)|0;u=u+Math.imul(g,ue)|0;o=o+Math.imul(v,ce)|0;h=h+Math.imul(v,le)|0;h=h+Math.imul(b,ce)|0;u=u+Math.imul(b,le)|0;o=o+Math.imul(c,ve)|0;h=h+Math.imul(c,be)|0;h=h+Math.imul(l,ve)|0;u=u+Math.imul(l,be)|0;var Ne=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ne>>>26)|0;Ne&=67108863;o=Math.imul(z,W);h=Math.imul(z,V);h=h+Math.imul(F,W)|0;u=Math.imul(F,V);o=o+Math.imul(O,J)|0;h=h+Math.imul(O,Z)|0;h=h+Math.imul(H,J)|0;u=u+Math.imul(H,Z)|0;o=o+Math.imul(T,Y)|0;h=h+Math.imul(T,$)|0;h=h+Math.imul(j,Y)|0;u=u+Math.imul(j,$)|0;o=o+Math.imul(I,ee)|0;h=h+Math.imul(I,te)|0;h=h+Math.imul(C,ee)|0;u=u+Math.imul(C,te)|0;o=o+Math.imul(N,ie)|0;h=h+Math.imul(N,ne)|0;h=h+Math.imul(P,ie)|0;u=u+Math.imul(P,ne)|0;o=o+Math.imul(E,fe)|0;h=h+Math.imul(E,se)|0;h=h+Math.imul(k,fe)|0;u=u+Math.imul(k,se)|0;o=o+Math.imul(w,he)|0;h=h+Math.imul(w,ue)|0;h=h+Math.imul(M,he)|0;u=u+Math.imul(M,ue)|0;o=o+Math.imul(y,ce)|0;h=h+Math.imul(y,le)|0;h=h+Math.imul(g,ce)|0;u=u+Math.imul(g,le)|0;o=o+Math.imul(v,ve)|0;h=h+Math.imul(v,be)|0;h=h+Math.imul(b,ve)|0;u=u+Math.imul(b,be)|0;o=o+Math.imul(c,ye)|0;h=h+Math.imul(c,ge)|0;h=h+Math.imul(l,ye)|0;u=u+Math.imul(l,ge)|0;var Re=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Re>>>26)|0;Re&=67108863;o=Math.imul(z,J);h=Math.imul(z,Z);h=h+Math.imul(F,J)|0;u=Math.imul(F,Z);o=o+Math.imul(O,Y)|0;h=h+Math.imul(O,$)|0;h=h+Math.imul(H,Y)|0;u=u+Math.imul(H,$)|0;o=o+Math.imul(T,ee)|0;h=h+Math.imul(T,te)|0;h=h+Math.imul(j,ee)|0;u=u+Math.imul(j,te)|0;o=o+Math.imul(I,ie)|0;h=h+Math.imul(I,ne)|0;h=h+Math.imul(C,ie)|0;u=u+Math.imul(C,ne)|0;o=o+Math.imul(N,fe)|0;h=h+Math.imul(N,se)|0;h=h+Math.imul(P,fe)|0;u=u+Math.imul(P,se)|0;o=o+Math.imul(E,he)|0;h=h+Math.imul(E,ue)|0;h=h+Math.imul(k,he)|0;u=u+Math.imul(k,ue)|0;o=o+Math.imul(w,ce)|0;h=h+Math.imul(w,le)|0;h=h+Math.imul(M,ce)|0;u=u+Math.imul(M,le)|0;o=o+Math.imul(y,ve)|0;h=h+Math.imul(y,be)|0;h=h+Math.imul(g,ve)|0;u=u+Math.imul(g,be)|0;o=o+Math.imul(v,ye)|0;h=h+Math.imul(v,ge)|0;h=h+Math.imul(b,ye)|0;u=u+Math.imul(b,ge)|0;var Pe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Pe>>>26)|0;Pe&=67108863;o=Math.imul(z,Y);h=Math.imul(z,$);h=h+Math.imul(F,Y)|0;u=Math.imul(F,$);o=o+Math.imul(O,ee)|0;h=h+Math.imul(O,te)|0;h=h+Math.imul(H,ee)|0;u=u+Math.imul(H,te)|0;o=o+Math.imul(T,ie)|0;h=h+Math.imul(T,ne)|0;h=h+Math.imul(j,ie)|0;u=u+Math.imul(j,ne)|0;o=o+Math.imul(I,fe)|0;h=h+Math.imul(I,se)|0;h=h+Math.imul(C,fe)|0;u=u+Math.imul(C,se)|0;o=o+Math.imul(N,he)|0;h=h+Math.imul(N,ue)|0;h=h+Math.imul(P,he)|0;u=u+Math.imul(P,ue)|0;o=o+Math.imul(E,ce)|0;h=h+Math.imul(E,le)|0;h=h+Math.imul(k,ce)|0;u=u+Math.imul(k,le)|0;o=o+Math.imul(w,ve)|0;h=h+Math.imul(w,be)|0;h=h+Math.imul(M,ve)|0;u=u+Math.imul(M,be)|0;o=o+Math.imul(y,ye)|0;h=h+Math.imul(y,ge)|0;h=h+Math.imul(g,ye)|0;u=u+Math.imul(g,ge)|0;var xe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(xe>>>26)|0;xe&=67108863;o=Math.imul(z,ee);h=Math.imul(z,te);h=h+Math.imul(F,ee)|0;u=Math.imul(F,te);o=o+Math.imul(O,ie)|0;h=h+Math.imul(O,ne)|0;h=h+Math.imul(H,ie)|0;u=u+Math.imul(H,ne)|0;o=o+Math.imul(T,fe)|0;h=h+Math.imul(T,se)|0;h=h+Math.imul(j,fe)|0;u=u+Math.imul(j,se)|0;o=o+Math.imul(I,he)|0;h=h+Math.imul(I,ue)|0;h=h+Math.imul(C,he)|0;u=u+Math.imul(C,ue)|0;o=o+Math.imul(N,ce)|0;h=h+Math.imul(N,le)|0;h=h+Math.imul(P,ce)|0;u=u+Math.imul(P,le)|0;o=o+Math.imul(E,ve)|0;h=h+Math.imul(E,be)|0;h=h+Math.imul(k,ve)|0;u=u+Math.imul(k,be)|0;o=o+Math.imul(w,ye)|0;h=h+Math.imul(w,ge)|0;h=h+Math.imul(M,ye)|0;u=u+Math.imul(M,ge)|0;var Ie=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ie>>>26)|0;Ie&=67108863;o=Math.imul(z,ie);h=Math.imul(z,ne);h=h+Math.imul(F,ie)|0;u=Math.imul(F,ne);o=o+Math.imul(O,fe)|0;h=h+Math.imul(O,se)|0;h=h+Math.imul(H,fe)|0;u=u+Math.imul(H,se)|0;o=o+Math.imul(T,he)|0;h=h+Math.imul(T,ue)|0;h=h+Math.imul(j,he)|0;u=u+Math.imul(j,ue)|0;o=o+Math.imul(I,ce)|0;h=h+Math.imul(I,le)|0;h=h+Math.imul(C,ce)|0;u=u+Math.imul(C,le)|0;o=o+Math.imul(N,ve)|0;h=h+Math.imul(N,be)|0;h=h+Math.imul(P,ve)|0;u=u+Math.imul(P,be)|0;o=o+Math.imul(E,ye)|0;h=h+Math.imul(E,ge)|0;h=h+Math.imul(k,ye)|0;u=u+Math.imul(k,ge)|0;var Ce=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ce>>>26)|0;Ce&=67108863;o=Math.imul(z,fe);h=Math.imul(z,se);h=h+Math.imul(F,fe)|0;u=Math.imul(F,se);o=o+Math.imul(O,he)|0;h=h+Math.imul(O,ue)|0;h=h+Math.imul(H,he)|0;u=u+Math.imul(H,ue)|0;o=o+Math.imul(T,ce)|0;h=h+Math.imul(T,le)|0;h=h+Math.imul(j,ce)|0;u=u+Math.imul(j,le)|0;o=o+Math.imul(I,ve)|0;h=h+Math.imul(I,be)|0;h=h+Math.imul(C,ve)|0;u=u+Math.imul(C,be)|0;o=o+Math.imul(N,ye)|0;h=h+Math.imul(N,ge)|0;h=h+Math.imul(P,ye)|0;u=u+Math.imul(P,ge)|0;var De=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(De>>>26)|0;De&=67108863;o=Math.imul(z,he);h=Math.imul(z,ue);h=h+Math.imul(F,he)|0;u=Math.imul(F,ue);o=o+Math.imul(O,ce)|0;h=h+Math.imul(O,le)|0;h=h+Math.imul(H,ce)|0;u=u+Math.imul(H,le)|0;o=o+Math.imul(T,ve)|0;h=h+Math.imul(T,be)|0;h=h+Math.imul(j,ve)|0;u=u+Math.imul(j,be)|0;o=o+Math.imul(I,ye)|0;h=h+Math.imul(I,ge)|0;h=h+Math.imul(C,ye)|0;u=u+Math.imul(C,ge)|0;var Te=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Te>>>26)|0;Te&=67108863;o=Math.imul(z,ce);h=Math.imul(z,le);h=h+Math.imul(F,ce)|0;u=Math.imul(F,le);o=o+Math.imul(O,ve)|0;h=h+Math.imul(O,be)|0;h=h+Math.imul(H,ve)|0;u=u+Math.imul(H,be)|0;o=o+Math.imul(T,ye)|0;h=h+Math.imul(T,ge)|0;h=h+Math.imul(j,ye)|0;u=u+Math.imul(j,ge)|0;var je=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(je>>>26)|0;je&=67108863;o=Math.imul(z,ve);h=Math.imul(z,be);h=h+Math.imul(F,ve)|0;u=Math.imul(F,be);o=o+Math.imul(O,ye)|0;h=h+Math.imul(O,ge)|0;h=h+Math.imul(H,ye)|0;u=u+Math.imul(H,ge)|0;var qe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(qe>>>26)|0;qe&=67108863;o=Math.imul(z,ye);h=Math.imul(z,ge);h=h+Math.imul(F,ye)|0;u=Math.imul(F,ge);var Oe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Oe>>>26)|0;Oe&=67108863;a[0]=_e;a[1]=we;a[2]=Me;a[3]=Se;a[4]=Be;a[5]=Ee;a[6]=ke;a[7]=Ae;a[8]=Ne;a[9]=Re;a[10]=Pe;a[11]=xe;a[12]=Ie;a[13]=Ce;a[14]=De;a[15]=Te;a[16]=je;a[17]=qe;a[18]=Oe;if(s!==0){a[19]=s;r.length++}return r};if(!Math.imul){h=smallMulTo}function bigMulTo(e,t,r){r.negative=t.negative^e.negative;r.length=e.length+t.length;var i=0;var n=0;for(var a=0;a<r.length-1;a++){var s=n;n=0;var o=i&67108863;var h=Math.min(a,t.length-1);for(var u=Math.max(0,a-e.length+1);u<=h;u++){var d=a-u;var c=e.words[d]|0;var l=t.words[u]|0;var p=c*l;var v=p&67108863;s=s+(p/67108864|0)|0;v=v+o|0;o=v&67108863;s=s+(v>>>26)|0;n+=s>>>26;s&=67108863}r.words[a]=o;i=s;s=n}if(i!==0){r.words[a]=i}else{r.length--}return r._strip()}function jumboMulTo(e,t,r){return bigMulTo(e,t,r)}BN.prototype.mulTo=function mulTo(e,t){var r;var i=this.length+e.length;if(this.length===10&&e.length===10){r=h(this,e,t)}else if(i<63){r=smallMulTo(this,e,t)}else if(i<1024){r=bigMulTo(this,e,t)}else{r=jumboMulTo(this,e,t)}return r};function FFTM(e,t){this.x=e;this.y=t}FFTM.prototype.makeRBT=function makeRBT(e){var t=new Array(e);var r=BN.prototype._countBits(e)-1;for(var i=0;i<e;i++){t[i]=this.revBin(i,r,e)}return t};FFTM.prototype.revBin=function revBin(e,t,r){if(e===0||e===r-1)return e;var i=0;for(var n=0;n<t;n++){i|=(e&1)<<t-n-1;e>>=1}return i};FFTM.prototype.permute=function permute(e,t,r,i,n,a){for(var s=0;s<a;s++){i[s]=t[e[s]];n[s]=r[e[s]]}};FFTM.prototype.transform=function transform(e,t,r,i,n,a){this.permute(a,e,t,r,i,n);for(var s=1;s<n;s<<=1){var o=s<<1;var h=Math.cos(2*Math.PI/o);var u=Math.sin(2*Math.PI/o);for(var d=0;d<n;d+=o){var c=h;var l=u;for(var p=0;p<s;p++){var v=r[d+p];var b=i[d+p];var m=r[d+p+s];var y=i[d+p+s];var g=c*m-l*y;y=c*y+l*m;m=g;r[d+p]=v+m;i[d+p]=b+y;r[d+p+s]=v-m;i[d+p+s]=b-y;if(p!==o){g=h*c-u*l;l=h*l+u*c;c=g}}}}};FFTM.prototype.guessLen13b=function guessLen13b(e,t){var r=Math.max(t,e)|1;var i=r&1;var n=0;for(r=r/2|0;r;r=r>>>1){n++}return 1<<n+1+i};FFTM.prototype.conjugate=function conjugate(e,t,r){if(r<=1)return;for(var i=0;i<r/2;i++){var n=e[i];e[i]=e[r-i-1];e[r-i-1]=n;n=t[i];t[i]=-t[r-i-1];t[r-i-1]=-n}};FFTM.prototype.normalize13b=function normalize13b(e,t){var r=0;for(var i=0;i<t/2;i++){var n=Math.round(e[2*i+1]/t)*8192+Math.round(e[2*i]/t)+r;e[i]=n&67108863;if(n<67108864){r=0}else{r=n/67108864|0}}return e};FFTM.prototype.convert13b=function convert13b(e,t,r,i){var n=0;for(var a=0;a<t;a++){n=n+(e[a]|0);r[2*a]=n&8191;n=n>>>13;r[2*a+1]=n&8191;n=n>>>13}for(a=2*t;a<i;++a){r[a]=0}assert(n===0);assert((n&~8191)===0)};FFTM.prototype.stub=function stub(e){var t=new Array(e);for(var r=0;r<e;r++){t[r]=0}return t};FFTM.prototype.mulp=function mulp(e,t,r){var i=2*this.guessLen13b(e.length,t.length);var n=this.makeRBT(i);var a=this.stub(i);var s=new Array(i);var o=new Array(i);var h=new Array(i);var u=new Array(i);var d=new Array(i);var c=new Array(i);var l=r.words;l.length=i;this.convert13b(e.words,e.length,s,i);this.convert13b(t.words,t.length,u,i);this.transform(s,a,o,h,i,n);this.transform(u,a,d,c,i,n);for(var p=0;p<i;p++){var v=o[p]*d[p]-h[p]*c[p];h[p]=o[p]*c[p]+h[p]*d[p];o[p]=v}this.conjugate(o,h,i);this.transform(o,h,l,a,i,n);this.conjugate(l,a,i);this.normalize13b(l,i);r.negative=e.negative^t.negative;r.length=e.length+t.length;return r._strip()};BN.prototype.mul=function mul(e){var t=new BN(null);t.words=new Array(this.length+e.length);return this.mulTo(e,t)};BN.prototype.mulf=function mulf(e){var t=new BN(null);t.words=new Array(this.length+e.length);return jumboMulTo(this,e,t)};BN.prototype.imul=function imul(e){return this.clone().mulTo(e,this)};BN.prototype.imuln=function imuln(e){var t=e<0;if(t)e=-e;assert(typeof e===\"number\");assert(e<67108864);var r=0;for(var i=0;i<this.length;i++){var n=(this.words[i]|0)*e;var a=(n&67108863)+(r&67108863);r>>=26;r+=n/67108864|0;r+=a>>>26;this.words[i]=a&67108863}if(r!==0){this.words[i]=r;this.length++}return t?this.ineg():this};BN.prototype.muln=function muln(e){return this.clone().imuln(e)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(e){var t=toBitArray(e);if(t.length===0)return new BN(1);var r=this;for(var i=0;i<t.length;i++,r=r.sqr()){if(t[i]!==0)break}if(++i<t.length){for(var n=r.sqr();i<t.length;i++,n=n.sqr()){if(t[i]===0)continue;r=r.mul(n)}}return r};BN.prototype.iushln=function iushln(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=67108863>>>26-t<<26-t;var n;if(t!==0){var a=0;for(n=0;n<this.length;n++){var s=this.words[n]&i;var o=(this.words[n]|0)-s<<t;this.words[n]=o|a;a=s>>>26-t}if(a){this.words[n]=a;this.length++}}if(r!==0){for(n=this.length-1;n>=0;n--){this.words[n+r]=this.words[n]}for(n=0;n<r;n++){this.words[n]=0}this.length+=r}return this._strip()};BN.prototype.ishln=function ishln(e){assert(this.negative===0);return this.iushln(e)};BN.prototype.iushrn=function iushrn(e,t,r){assert(typeof e===\"number\"&&e>=0);var i;if(t){i=(t-t%26)/26}else{i=0}var n=e%26;var a=Math.min((e-n)/26,this.length);var s=67108863^67108863>>>n<<n;var o=r;i-=a;i=Math.max(0,i);if(o){for(var h=0;h<a;h++){o.words[h]=this.words[h]}o.length=a}if(a===0){}else if(this.length>a){this.length-=a;for(h=0;h<this.length;h++){this.words[h]=this.words[h+a]}}else{this.words[0]=0;this.length=1}var u=0;for(h=this.length-1;h>=0&&(u!==0||h>=i);h--){var d=this.words[h]|0;this.words[h]=u<<26-n|d>>>n;u=d&s}if(o&&u!==0){o.words[o.length++]=u}if(this.length===0){this.words[0]=0;this.length=1}return this._strip()};BN.prototype.ishrn=function ishrn(e,t,r){assert(this.negative===0);return this.iushrn(e,t,r)};BN.prototype.shln=function shln(e){return this.clone().ishln(e)};BN.prototype.ushln=function ushln(e){return this.clone().iushln(e)};BN.prototype.shrn=function shrn(e){return this.clone().ishrn(e)};BN.prototype.ushrn=function ushrn(e){return this.clone().iushrn(e)};BN.prototype.testn=function testn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r)return false;var n=this.words[r];return!!(n&i)};BN.prototype.imaskn=function imaskn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;assert(this.negative===0,\"imaskn works only with positive numbers\");if(this.length<=r){return this}if(t!==0){r++}this.length=Math.min(r,this.length);if(t!==0){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this._strip()};BN.prototype.maskn=function maskn(e){return this.clone().imaskn(e)};BN.prototype.iaddn=function iaddn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.isubn(-e);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<=e){this.words[0]=e-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(e);this.negative=1;return this}return this._iaddn(e)};BN.prototype._iaddn=function _iaddn(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++){this.words[t]-=67108864;if(t===this.length-1){this.words[t+1]=1}else{this.words[t+1]++}}this.length=Math.max(this.length,t+1);return this};BN.prototype.isubn=function isubn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.iaddn(-e);if(this.negative!==0){this.negative=0;this.iaddn(e);this.negative=1;return this}this.words[0]-=e;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var t=0;t<this.length&&this.words[t]<0;t++){this.words[t]+=67108864;this.words[t+1]-=1}}return this._strip()};BN.prototype.addn=function addn(e){return this.clone().iaddn(e)};BN.prototype.subn=function subn(e){return this.clone().isubn(e)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(e,t,r){var i=e.length+r;var n;this._expand(i);var a;var s=0;for(n=0;n<e.length;n++){a=(this.words[n+r]|0)+s;var o=(e.words[n]|0)*t;a-=o&67108863;s=(a>>26)-(o/67108864|0);this.words[n+r]=a&67108863}for(;n<this.length-r;n++){a=(this.words[n+r]|0)+s;s=a>>26;this.words[n+r]=a&67108863}if(s===0)return this._strip();assert(s===-1);s=0;for(n=0;n<this.length;n++){a=-(this.words[n]|0)+s;s=a>>26;this.words[n]=a&67108863}this.negative=1;return this._strip()};BN.prototype._wordDiv=function _wordDiv(e,t){var r=this.length-e.length;var i=this.clone();var n=e;var a=n.words[n.length-1]|0;var s=this._countBits(a);r=26-s;if(r!==0){n=n.ushln(r);i.iushln(r);a=n.words[n.length-1]|0}var o=i.length-n.length;var h;if(t!==\"mod\"){h=new BN(null);h.length=o+1;h.words=new Array(h.length);for(var u=0;u<h.length;u++){h.words[u]=0}}var d=i.clone()._ishlnsubmul(n,1,o);if(d.negative===0){i=d;if(h){h.words[o]=1}}for(var c=o-1;c>=0;c--){var l=(i.words[n.length+c]|0)*67108864+(i.words[n.length+c-1]|0);l=Math.min(l/a|0,67108863);i._ishlnsubmul(n,l,c);while(i.negative!==0){l--;i.negative=0;i._ishlnsubmul(n,1,c);if(!i.isZero()){i.negative^=1}}if(h){h.words[c]=l}}if(h){h._strip()}i._strip();if(t!==\"div\"&&r!==0){i.iushrn(r)}return{div:h||null,mod:i}};BN.prototype.divmod=function divmod(e,t,r){assert(!e.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var i,n,a;if(this.negative!==0&&e.negative===0){a=this.neg().divmod(e,t);if(t!==\"mod\"){i=a.div.neg()}if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.iadd(e)}}return{div:i,mod:n}}if(this.negative===0&&e.negative!==0){a=this.divmod(e.neg(),t);if(t!==\"mod\"){i=a.div.neg()}return{div:i,mod:a.mod}}if((this.negative&e.negative)!==0){a=this.neg().divmod(e.neg(),t);if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.isub(e)}}return{div:a.div,mod:n}}if(e.length>this.length||this.cmp(e)<0){return{div:new BN(0),mod:this}}if(e.length===1){if(t===\"div\"){return{div:this.divn(e.words[0]),mod:null}}if(t===\"mod\"){return{div:null,mod:new BN(this.modrn(e.words[0]))}}return{div:this.divn(e.words[0]),mod:new BN(this.modrn(e.words[0]))}}return this._wordDiv(e,t)};BN.prototype.div=function div(e){return this.divmod(e,\"div\",false).div};BN.prototype.mod=function mod(e){return this.divmod(e,\"mod\",false).mod};BN.prototype.umod=function umod(e){return this.divmod(e,\"mod\",true).mod};BN.prototype.divRound=function divRound(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=t.div.negative!==0?t.mod.isub(e):t.mod;var i=e.ushrn(1);var n=e.andln(1);var a=r.cmp(i);if(a<0||n===1&&a===0)return t.div;return t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)};BN.prototype.modrn=function modrn(e){var t=e<0;if(t)e=-e;assert(e<=67108863);var r=(1<<26)%e;var i=0;for(var n=this.length-1;n>=0;n--){i=(r*i+(this.words[n]|0))%e}return t?-i:i};BN.prototype.modn=function modn(e){return this.modrn(e)};BN.prototype.idivn=function idivn(e){var t=e<0;if(t)e=-e;assert(e<=67108863);var r=0;for(var i=this.length-1;i>=0;i--){var n=(this.words[i]|0)+r*67108864;this.words[i]=n/e|0;r=n%e}this._strip();return t?this.ineg():this};BN.prototype.divn=function divn(e){return this.clone().idivn(e)};BN.prototype.egcd=function egcd(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=new BN(0);var s=new BN(1);var o=0;while(t.isEven()&&r.isEven()){t.iushrn(1);r.iushrn(1);++o}var h=r.clone();var u=t.clone();while(!t.isZero()){for(var d=0,c=1;(t.words[0]&c)===0&&d<26;++d,c<<=1);if(d>0){t.iushrn(d);while(d-- >0){if(i.isOdd()||n.isOdd()){i.iadd(h);n.isub(u)}i.iushrn(1);n.iushrn(1)}}for(var l=0,p=1;(r.words[0]&p)===0&&l<26;++l,p<<=1);if(l>0){r.iushrn(l);while(l-- >0){if(a.isOdd()||s.isOdd()){a.iadd(h);s.isub(u)}a.iushrn(1);s.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(a);n.isub(s)}else{r.isub(t);a.isub(i);s.isub(n)}}return{a:a,b:s,gcd:r.iushln(o)}};BN.prototype._invmp=function _invmp(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=r.clone();while(t.cmpn(1)>0&&r.cmpn(1)>0){for(var s=0,o=1;(t.words[0]&o)===0&&s<26;++s,o<<=1);if(s>0){t.iushrn(s);while(s-- >0){if(i.isOdd()){i.iadd(a)}i.iushrn(1)}}for(var h=0,u=1;(r.words[0]&u)===0&&h<26;++h,u<<=1);if(h>0){r.iushrn(h);while(h-- >0){if(n.isOdd()){n.iadd(a)}n.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(n)}else{r.isub(t);n.isub(i)}}var d;if(t.cmpn(1)===0){d=i}else{d=n}if(d.cmpn(0)<0){d.iadd(e)}return d};BN.prototype.gcd=function gcd(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone();var r=e.clone();t.negative=0;r.negative=0;for(var i=0;t.isEven()&&r.isEven();i++){t.iushrn(1);r.iushrn(1)}do{while(t.isEven()){t.iushrn(1)}while(r.isEven()){r.iushrn(1)}var n=t.cmp(r);if(n<0){var a=t;t=r;r=a}else if(n===0||r.cmpn(1)===0){break}t.isub(r)}while(true);return r.iushln(i)};BN.prototype.invm=function invm(e){return this.egcd(e).a.umod(e)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(e){return this.words[0]&e};BN.prototype.bincn=function bincn(e){assert(typeof e===\"number\");var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r){this._expand(r+1);this.words[r]|=i;return this}var n=i;for(var a=r;n!==0&&a<this.length;a++){var s=this.words[a]|0;s+=n;n=s>>>26;s&=67108863;this.words[a]=s}if(n!==0){this.words[a]=n;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(e){var t=e<0;if(this.negative!==0&&!t)return-1;if(this.negative===0&&t)return 1;this._strip();var r;if(this.length>1){r=1}else{if(t){e=-e}assert(e<=67108863,\"Number is too big\");var i=this.words[0]|0;r=i===e?0:i<e?-1:1}if(this.negative!==0)return-r|0;return r};BN.prototype.cmp=function cmp(e){if(this.negative!==0&&e.negative===0)return-1;if(this.negative===0&&e.negative!==0)return 1;var t=this.ucmp(e);if(this.negative!==0)return-t|0;return t};BN.prototype.ucmp=function ucmp(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;var t=0;for(var r=this.length-1;r>=0;r--){var i=this.words[r]|0;var n=e.words[r]|0;if(i===n)continue;if(i<n){t=-1}else if(i>n){t=1}break}return t};BN.prototype.gtn=function gtn(e){return this.cmpn(e)===1};BN.prototype.gt=function gt(e){return this.cmp(e)===1};BN.prototype.gten=function gten(e){return this.cmpn(e)>=0};BN.prototype.gte=function gte(e){return this.cmp(e)>=0};BN.prototype.ltn=function ltn(e){return this.cmpn(e)===-1};BN.prototype.lt=function lt(e){return this.cmp(e)===-1};BN.prototype.lten=function lten(e){return this.cmpn(e)<=0};BN.prototype.lte=function lte(e){return this.cmp(e)<=0};BN.prototype.eqn=function eqn(e){return this.cmpn(e)===0};BN.prototype.eq=function eq(e){return this.cmp(e)===0};BN.red=function red(e){return new Red(e)};BN.prototype.toRed=function toRed(e){assert(!this.red,\"Already a number in reduction context\");assert(this.negative===0,\"red works only with positives\");return e.convertTo(this)._forceRed(e)};BN.prototype.fromRed=function fromRed(){assert(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(e){this.red=e;return this};BN.prototype.forceRed=function forceRed(e){assert(!this.red,\"Already a number in reduction context\");return this._forceRed(e)};BN.prototype.redAdd=function redAdd(e){assert(this.red,\"redAdd works only with red numbers\");return this.red.add(this,e)};BN.prototype.redIAdd=function redIAdd(e){assert(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,e)};BN.prototype.redSub=function redSub(e){assert(this.red,\"redSub works only with red numbers\");return this.red.sub(this,e)};BN.prototype.redISub=function redISub(e){assert(this.red,\"redISub works only with red numbers\");return this.red.isub(this,e)};BN.prototype.redShl=function redShl(e){assert(this.red,\"redShl works only with red numbers\");return this.red.shl(this,e)};BN.prototype.redMul=function redMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.mul(this,e)};BN.prototype.redIMul=function redIMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.imul(this,e)};BN.prototype.redSqr=function redSqr(){assert(this.red,\"redSqr works only with red numbers\");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,\"redNeg works only with red numbers\");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(e){assert(this.red&&!e.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,e)};var u={k256:null,p224:null,p192:null,p25519:null};function MPrime(e,t){this.name=e;this.p=new BN(t,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var e=new BN(null);e.words=new Array(Math.ceil(this.n/13));return e};MPrime.prototype.ireduce=function ireduce(e){var t=e;var r;do{this.split(t,this.tmp);t=this.imulK(t);t=t.iadd(this.tmp);r=t.bitLength()}while(r>this.n);var i=r<this.n?-1:t.ucmp(this.p);if(i===0){t.words[0]=0;t.length=1}else if(i>0){t.isub(this.p)}else{if(t.strip!==undefined){t.strip()}else{t._strip()}}return t};MPrime.prototype.split=function split(e,t){e.iushrn(this.n,0,t)};MPrime.prototype.imulK=function imulK(e){return e.imul(this.k)};function K256(){MPrime.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}inherits(K256,MPrime);K256.prototype.split=function split(e,t){var r=4194303;var i=Math.min(e.length,9);for(var n=0;n<i;n++){t.words[n]=e.words[n]}t.length=i;if(e.length<=9){e.words[0]=0;e.length=1;return}var a=e.words[9];t.words[t.length++]=a&r;for(n=10;n<e.length;n++){var s=e.words[n]|0;e.words[n-10]=(s&r)<<4|a>>>22;a=s}a>>>=22;e.words[n-10]=a;if(a===0&&e.length>10){e.length-=10}else{e.length-=9}};K256.prototype.imulK=function imulK(e){e.words[e.length]=0;e.words[e.length+1]=0;e.length+=2;var t=0;for(var r=0;r<e.length;r++){var i=e.words[r]|0;t+=i*977;e.words[r]=t&67108863;t=i*64+(t/67108864|0)}if(e.words[e.length-1]===0){e.length--;if(e.words[e.length-1]===0){e.length--}}return e};function P224(){MPrime.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}inherits(P224,MPrime);function P192(){MPrime.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}inherits(P192,MPrime);function P25519(){MPrime.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(e){var t=0;for(var r=0;r<e.length;r++){var i=(e.words[r]|0)*19+t;var n=i&67108863;i>>>=26;e.words[r]=n;t=i}if(t!==0){e.words[e.length++]=t}return e};BN._prime=function prime(e){if(u[e])return u[e];var prime;if(e===\"k256\"){prime=new K256}else if(e===\"p224\"){prime=new P224}else if(e===\"p192\"){prime=new P192}else if(e===\"p25519\"){prime=new P25519}else{throw new Error(\"Unknown prime \"+e)}u[e]=prime;return prime};function Red(e){if(typeof e===\"string\"){var t=BN._prime(e);this.m=t.p;this.prime=t}else{assert(e.gtn(1),\"modulus must be greater than 1\");this.m=e;this.prime=null}}Red.prototype._verify1=function _verify1(e){assert(e.negative===0,\"red works only with positives\");assert(e.red,\"red works only with red numbers\")};Red.prototype._verify2=function _verify2(e,t){assert((e.negative|t.negative)===0,\"red works only with positives\");assert(e.red&&e.red===t.red,\"red works only with red numbers\")};Red.prototype.imod=function imod(e){if(this.prime)return this.prime.ireduce(e)._forceRed(this);move(e,e.umod(this.m)._forceRed(this));return e};Red.prototype.neg=function neg(e){if(e.isZero()){return e.clone()}return this.m.sub(e)._forceRed(this)};Red.prototype.add=function add(e,t){this._verify2(e,t);var r=e.add(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r._forceRed(this)};Red.prototype.iadd=function iadd(e,t){this._verify2(e,t);var r=e.iadd(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r};Red.prototype.sub=function sub(e,t){this._verify2(e,t);var r=e.sub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r._forceRed(this)};Red.prototype.isub=function isub(e,t){this._verify2(e,t);var r=e.isub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r};Red.prototype.shl=function shl(e,t){this._verify1(e);return this.imod(e.ushln(t))};Red.prototype.imul=function imul(e,t){this._verify2(e,t);return this.imod(e.imul(t))};Red.prototype.mul=function mul(e,t){this._verify2(e,t);return this.imod(e.mul(t))};Red.prototype.isqr=function isqr(e){return this.imul(e,e.clone())};Red.prototype.sqr=function sqr(e){return this.mul(e,e)};Red.prototype.sqrt=function sqrt(e){if(e.isZero())return e.clone();var t=this.m.andln(3);assert(t%2===1);if(t===3){var r=this.m.add(new BN(1)).iushrn(2);return this.pow(e,r)}var i=this.m.subn(1);var n=0;while(!i.isZero()&&i.andln(1)===0){n++;i.iushrn(1)}assert(!i.isZero());var a=new BN(1).toRed(this);var s=a.redNeg();var o=this.m.subn(1).iushrn(1);var h=this.m.bitLength();h=new BN(2*h*h).toRed(this);while(this.pow(h,o).cmp(s)!==0){h.redIAdd(s)}var u=this.pow(h,i);var d=this.pow(e,i.addn(1).iushrn(1));var c=this.pow(e,i);var l=n;while(c.cmp(a)!==0){var p=c;for(var v=0;p.cmp(a)!==0;v++){p=p.redSqr()}assert(v<l);var b=this.pow(u,new BN(1).iushln(l-v-1));d=d.redMul(b);u=b.redSqr();c=c.redMul(u);l=v}return d};Red.prototype.invm=function invm(e){var t=e._invmp(this.m);if(t.negative!==0){t.negative=0;return this.imod(t).redNeg()}else{return this.imod(t)}};Red.prototype.pow=function pow(e,t){if(t.isZero())return new BN(1).toRed(this);if(t.cmpn(1)===0)return e.clone();var r=4;var i=new Array(1<<r);i[0]=new BN(1).toRed(this);i[1]=e;for(var n=2;n<i.length;n++){i[n]=this.mul(i[n-1],e)}var a=i[0];var s=0;var o=0;var h=t.bitLength()%26;if(h===0){h=26}for(n=t.length-1;n>=0;n--){var u=t.words[n];for(var d=h-1;d>=0;d--){var c=u>>d&1;if(a!==i[0]){a=this.sqr(a)}if(c===0&&s===0){o=0;continue}s<<=1;s|=c;o++;if(o!==r&&(n!==0||d!==0))continue;a=this.mul(a,i[s]);o=0;s=0}h=26}return a};Red.prototype.convertTo=function convertTo(e){var t=e.umod(this.m);return t===e?t.clone():t};Red.prototype.convertFrom=function convertFrom(e){var t=e.clone();t.red=null;return t};BN.mont=function mont(e){return new Mont(e)};function Mont(e){Red.call(this,e);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(e){return this.imod(e.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(e){var t=this.imod(e.mul(this.rinv));t.red=null;return t};Mont.prototype.imul=function imul(e,t){if(e.isZero()||t.isZero()){e.words[0]=0;e.length=1;return e}var r=e.imul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.mul=function mul(e,t){if(e.isZero()||t.isZero())return new BN(0)._forceRed(this);var r=e.mul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.invm=function invm(e){var t=this.imod(e._invmp(this.m).mul(this.r2));return t._forceRed(this)}})( false||e,this)},3500:function(e,t,r){var i;e.exports=function rand(e){if(!i)i=new Rand(null);return i.generate(e)};function Rand(e){this.rand=e}e.exports.Rand=Rand;Rand.prototype.generate=function generate(e){return this._rand(e)};Rand.prototype._rand=function _rand(e){if(this.rand.getBytes)return this.rand.getBytes(e);var t=new Uint8Array(e);for(var r=0;r<t.length;r++)t[r]=this.rand.getByte();return t};if(typeof self===\"object\"){if(self.crypto&&self.crypto.getRandomValues){Rand.prototype._rand=function _rand(e){var t=new Uint8Array(e);self.crypto.getRandomValues(t);return t}}else if(self.msCrypto&&self.msCrypto.getRandomValues){Rand.prototype._rand=function _rand(e){var t=new Uint8Array(e);self.msCrypto.getRandomValues(t);return t}}else if(typeof window===\"object\"){Rand.prototype._rand=function(){throw new Error(\"Not implemented yet\")}}}else{try{var n=r(6113);if(typeof n.randomBytes!==\"function\")throw new Error(\"Not supported\");Rand.prototype._rand=function _rand(e){return n.randomBytes(e)}}catch(e){}}},1387:function(e,t,r){var i=r(6911).Buffer;function asUInt32Array(e){if(!i.isBuffer(e))e=i.from(e);var t=e.length/4|0;var r=new Array(t);for(var n=0;n<t;n++){r[n]=e.readUInt32BE(n*4)}return r}function scrubVec(e){for(var t=0;t<e.length;e++){e[t]=0}}function cryptBlock(e,t,r,i,n){var a=r[0];var s=r[1];var o=r[2];var h=r[3];var u=e[0]^t[0];var d=e[1]^t[1];var c=e[2]^t[2];var l=e[3]^t[3];var p,v,b,m;var y=4;for(var g=1;g<n;g++){p=a[u>>>24]^s[d>>>16&255]^o[c>>>8&255]^h[l&255]^t[y++];v=a[d>>>24]^s[c>>>16&255]^o[l>>>8&255]^h[u&255]^t[y++];b=a[c>>>24]^s[l>>>16&255]^o[u>>>8&255]^h[d&255]^t[y++];m=a[l>>>24]^s[u>>>16&255]^o[d>>>8&255]^h[c&255]^t[y++];u=p;d=v;c=b;l=m}p=(i[u>>>24]<<24|i[d>>>16&255]<<16|i[c>>>8&255]<<8|i[l&255])^t[y++];v=(i[d>>>24]<<24|i[c>>>16&255]<<16|i[l>>>8&255]<<8|i[u&255])^t[y++];b=(i[c>>>24]<<24|i[l>>>16&255]<<16|i[u>>>8&255]<<8|i[d&255])^t[y++];m=(i[l>>>24]<<24|i[u>>>16&255]<<16|i[d>>>8&255]<<8|i[c&255])^t[y++];p=p>>>0;v=v>>>0;b=b>>>0;m=m>>>0;return[p,v,b,m]}var n=[0,1,2,4,8,16,32,64,128,27,54];var a=function(){var e=new Array(256);for(var t=0;t<256;t++){if(t<128){e[t]=t<<1}else{e[t]=t<<1^283}}var r=[];var i=[];var n=[[],[],[],[]];var a=[[],[],[],[]];var s=0;var o=0;for(var h=0;h<256;++h){var u=o^o<<1^o<<2^o<<3^o<<4;u=u>>>8^u&255^99;r[s]=u;i[u]=s;var d=e[s];var c=e[d];var l=e[c];var p=e[u]*257^u*16843008;n[0][s]=p<<24|p>>>8;n[1][s]=p<<16|p>>>16;n[2][s]=p<<8|p>>>24;n[3][s]=p;p=l*16843009^c*65537^d*257^s*16843008;a[0][u]=p<<24|p>>>8;a[1][u]=p<<16|p>>>16;a[2][u]=p<<8|p>>>24;a[3][u]=p;if(s===0){s=o=1}else{s=d^e[e[e[l^d]]];o^=e[e[o]]}}return{SBOX:r,INV_SBOX:i,SUB_MIX:n,INV_SUB_MIX:a}}();function AES(e){this._key=asUInt32Array(e);this._reset()}AES.blockSize=4*4;AES.keySize=256/8;AES.prototype.blockSize=AES.blockSize;AES.prototype.keySize=AES.keySize;AES.prototype._reset=function(){var e=this._key;var t=e.length;var r=t+6;var i=(r+1)*4;var s=[];for(var o=0;o<t;o++){s[o]=e[o]}for(o=t;o<i;o++){var h=s[o-1];if(o%t===0){h=h<<8|h>>>24;h=a.SBOX[h>>>24]<<24|a.SBOX[h>>>16&255]<<16|a.SBOX[h>>>8&255]<<8|a.SBOX[h&255];h^=n[o/t|0]<<24}else if(t>6&&o%t===4){h=a.SBOX[h>>>24]<<24|a.SBOX[h>>>16&255]<<16|a.SBOX[h>>>8&255]<<8|a.SBOX[h&255]}s[o]=s[o-t]^h}var u=[];for(var d=0;d<i;d++){var c=i-d;var l=s[c-(d%4?0:4)];if(d<4||c<=4){u[d]=l}else{u[d]=a.INV_SUB_MIX[0][a.SBOX[l>>>24]]^a.INV_SUB_MIX[1][a.SBOX[l>>>16&255]]^a.INV_SUB_MIX[2][a.SBOX[l>>>8&255]]^a.INV_SUB_MIX[3][a.SBOX[l&255]]}}this._nRounds=r;this._keySchedule=s;this._invKeySchedule=u};AES.prototype.encryptBlockRaw=function(e){e=asUInt32Array(e);return cryptBlock(e,this._keySchedule,a.SUB_MIX,a.SBOX,this._nRounds)};AES.prototype.encryptBlock=function(e){var t=this.encryptBlockRaw(e);var r=i.allocUnsafe(16);r.writeUInt32BE(t[0],0);r.writeUInt32BE(t[1],4);r.writeUInt32BE(t[2],8);r.writeUInt32BE(t[3],12);return r};AES.prototype.decryptBlock=function(e){e=asUInt32Array(e);var t=e[1];e[1]=e[3];e[3]=t;var r=cryptBlock(e,this._invKeySchedule,a.INV_SUB_MIX,a.INV_SBOX,this._nRounds);var n=i.allocUnsafe(16);n.writeUInt32BE(r[0],0);n.writeUInt32BE(r[3],4);n.writeUInt32BE(r[2],8);n.writeUInt32BE(r[1],12);return n};AES.prototype.scrub=function(){scrubVec(this._keySchedule);scrubVec(this._invKeySchedule);scrubVec(this._key)};e.exports.AES=AES},6624:function(e,t,r){var i=r(1387);var n=r(6911).Buffer;var a=r(1043);var s=r(3782);var o=r(7225);var h=r(4734);var u=r(598);function xorTest(e,t){var r=0;if(e.length!==t.length)r++;var i=Math.min(e.length,t.length);for(var n=0;n<i;++n){r+=e[n]^t[n]}return r}function calcIv(e,t,r){if(t.length===12){e._finID=n.concat([t,n.from([0,0,0,1])]);return n.concat([t,n.from([0,0,0,2])])}var i=new o(r);var a=t.length;var s=a%16;i.update(t);if(s){s=16-s;i.update(n.alloc(s,0))}i.update(n.alloc(8,0));var h=a*8;var d=n.alloc(8);d.writeUIntBE(h,0,8);i.update(d);e._finID=i.state;var c=n.from(e._finID);u(c);return c}function StreamCipher(e,t,r,s){a.call(this);var h=n.alloc(4,0);this._cipher=new i.AES(t);var u=this._cipher.encryptBlock(h);this._ghash=new o(u);r=calcIv(this,r,u);this._prev=n.from(r);this._cache=n.allocUnsafe(0);this._secCache=n.allocUnsafe(0);this._decrypt=s;this._alen=0;this._len=0;this._mode=e;this._authTag=null;this._called=false}s(StreamCipher,a);StreamCipher.prototype._update=function(e){if(!this._called&&this._alen){var t=16-this._alen%16;if(t<16){t=n.alloc(t,0);this._ghash.update(t)}}this._called=true;var r=this._mode.encrypt(this,e);if(this._decrypt){this._ghash.update(e)}else{this._ghash.update(r)}this._len+=e.length;return r};StreamCipher.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error(\"Unsupported state or unable to authenticate data\");var e=h(this._ghash.final(this._alen*8,this._len*8),this._cipher.encryptBlock(this._finID));if(this._decrypt&&xorTest(e,this._authTag))throw new Error(\"Unsupported state or unable to authenticate data\");this._authTag=e;this._cipher.scrub()};StreamCipher.prototype.getAuthTag=function getAuthTag(){if(this._decrypt||!n.isBuffer(this._authTag))throw new Error(\"Attempting to get auth tag in unsupported state\");return this._authTag};StreamCipher.prototype.setAuthTag=function setAuthTag(e){if(!this._decrypt)throw new Error(\"Attempting to set auth tag in unsupported state\");this._authTag=e};StreamCipher.prototype.setAAD=function setAAD(e){if(this._called)throw new Error(\"Attempting to set AAD in unsupported state\");this._ghash.update(e);this._alen+=e.length};e.exports=StreamCipher},6594:function(e,t,r){var i=r(2);var n=r(2598);var a=r(5866);function getCiphers(){return Object.keys(a)}t.createCipher=t.Cipher=i.createCipher;t.createCipheriv=t.Cipheriv=i.createCipheriv;t.createDecipher=t.Decipher=n.createDecipher;t.createDecipheriv=t.Decipheriv=n.createDecipheriv;t.listCiphers=t.getCiphers=getCiphers},2598:function(e,t,r){var i=r(6624);var n=r(6911).Buffer;var a=r(6370);var s=r(126);var o=r(1043);var h=r(1387);var u=r(8368);var d=r(3782);function Decipher(e,t,r){o.call(this);this._cache=new Splitter;this._last=void 0;this._cipher=new h.AES(t);this._prev=n.from(r);this._mode=e;this._autopadding=true}d(Decipher,o);Decipher.prototype._update=function(e){this._cache.add(e);var t;var r;var i=[];while(t=this._cache.get(this._autopadding)){r=this._mode.decrypt(this,t);i.push(r)}return n.concat(i)};Decipher.prototype._final=function(){var e=this._cache.flush();if(this._autopadding){return unpad(this._mode.decrypt(this,e))}else if(e){throw new Error(\"data not multiple of block length\")}};Decipher.prototype.setAutoPadding=function(e){this._autopadding=!!e;return this};function Splitter(){this.cache=n.allocUnsafe(0)}Splitter.prototype.add=function(e){this.cache=n.concat([this.cache,e])};Splitter.prototype.get=function(e){var t;if(e){if(this.cache.length>16){t=this.cache.slice(0,16);this.cache=this.cache.slice(16);return t}}else{if(this.cache.length>=16){t=this.cache.slice(0,16);this.cache=this.cache.slice(16);return t}}return null};Splitter.prototype.flush=function(){if(this.cache.length)return this.cache};function unpad(e){var t=e[15];if(t<1||t>16){throw new Error(\"unable to decrypt data\")}var r=-1;while(++r<t){if(e[r+(16-t)]!==t){throw new Error(\"unable to decrypt data\")}}if(t===16)return;return e.slice(0,16-t)}function createDecipheriv(e,t,r){var o=a[e.toLowerCase()];if(!o)throw new TypeError(\"invalid suite type\");if(typeof r===\"string\")r=n.from(r);if(o.mode!==\"GCM\"&&r.length!==o.iv)throw new TypeError(\"invalid iv length \"+r.length);if(typeof t===\"string\")t=n.from(t);if(t.length!==o.key/8)throw new TypeError(\"invalid key length \"+t.length);if(o.type===\"stream\"){return new s(o.module,t,r,true)}else if(o.type===\"auth\"){return new i(o.module,t,r,true)}return new Decipher(o.module,t,r)}function createDecipher(e,t){var r=a[e.toLowerCase()];if(!r)throw new TypeError(\"invalid suite type\");var i=u(t,false,r.key,r.iv);return createDecipheriv(e,i.key,i.iv)}t.createDecipher=createDecipher;t.createDecipheriv=createDecipheriv},2:function(e,t,r){var i=r(6370);var n=r(6624);var a=r(6911).Buffer;var s=r(126);var o=r(1043);var h=r(1387);var u=r(8368);var d=r(3782);function Cipher(e,t,r){o.call(this);this._cache=new Splitter;this._cipher=new h.AES(t);this._prev=a.from(r);this._mode=e;this._autopadding=true}d(Cipher,o);Cipher.prototype._update=function(e){this._cache.add(e);var t;var r;var i=[];while(t=this._cache.get()){r=this._mode.encrypt(this,t);i.push(r)}return a.concat(i)};var c=a.alloc(16,16);Cipher.prototype._final=function(){var e=this._cache.flush();if(this._autopadding){e=this._mode.encrypt(this,e);this._cipher.scrub();return e}if(!e.equals(c)){this._cipher.scrub();throw new Error(\"data not multiple of block length\")}};Cipher.prototype.setAutoPadding=function(e){this._autopadding=!!e;return this};function Splitter(){this.cache=a.allocUnsafe(0)}Splitter.prototype.add=function(e){this.cache=a.concat([this.cache,e])};Splitter.prototype.get=function(){if(this.cache.length>15){var e=this.cache.slice(0,16);this.cache=this.cache.slice(16);return e}return null};Splitter.prototype.flush=function(){var e=16-this.cache.length;var t=a.allocUnsafe(e);var r=-1;while(++r<e){t.writeUInt8(e,r)}return a.concat([this.cache,t])};function createCipheriv(e,t,r){var o=i[e.toLowerCase()];if(!o)throw new TypeError(\"invalid suite type\");if(typeof t===\"string\")t=a.from(t);if(t.length!==o.key/8)throw new TypeError(\"invalid key length \"+t.length);if(typeof r===\"string\")r=a.from(r);if(o.mode!==\"GCM\"&&r.length!==o.iv)throw new TypeError(\"invalid iv length \"+r.length);if(o.type===\"stream\"){return new s(o.module,t,r)}else if(o.type===\"auth\"){return new n(o.module,t,r)}return new Cipher(o.module,t,r)}function createCipher(e,t){var r=i[e.toLowerCase()];if(!r)throw new TypeError(\"invalid suite type\");var n=u(t,false,r.key,r.iv);return createCipheriv(e,n.key,n.iv)}t.createCipheriv=createCipheriv;t.createCipher=createCipher},7225:function(e,t,r){var i=r(6911).Buffer;var n=i.alloc(16,0);function toArray(e){return[e.readUInt32BE(0),e.readUInt32BE(4),e.readUInt32BE(8),e.readUInt32BE(12)]}function fromArray(e){var t=i.allocUnsafe(16);t.writeUInt32BE(e[0]>>>0,0);t.writeUInt32BE(e[1]>>>0,4);t.writeUInt32BE(e[2]>>>0,8);t.writeUInt32BE(e[3]>>>0,12);return t}function GHASH(e){this.h=e;this.state=i.alloc(16,0);this.cache=i.allocUnsafe(0)}GHASH.prototype.ghash=function(e){var t=-1;while(++t<e.length){this.state[t]^=e[t]}this._multiply()};GHASH.prototype._multiply=function(){var e=toArray(this.h);var t=[0,0,0,0];var r,i,n;var a=-1;while(++a<128){i=(this.state[~~(a/8)]&1<<7-a%8)!==0;if(i){t[0]^=e[0];t[1]^=e[1];t[2]^=e[2];t[3]^=e[3]}n=(e[3]&1)!==0;for(r=3;r>0;r--){e[r]=e[r]>>>1|(e[r-1]&1)<<31}e[0]=e[0]>>>1;if(n){e[0]=e[0]^225<<24}}this.state=fromArray(t)};GHASH.prototype.update=function(e){this.cache=i.concat([this.cache,e]);var t;while(this.cache.length>=16){t=this.cache.slice(0,16);this.cache=this.cache.slice(16);this.ghash(t)}};GHASH.prototype.final=function(e,t){if(this.cache.length){this.ghash(i.concat([this.cache,n],16))}this.ghash(fromArray([0,e,0,t]));return this.state};e.exports=GHASH},598:function(e){function incr32(e){var t=e.length;var r;while(t--){r=e.readUInt8(t);if(r===255){e.writeUInt8(0,t)}else{r++;e.writeUInt8(r,t);break}}}e.exports=incr32},9825:function(e,t,r){var i=r(4734);t.encrypt=function(e,t){var r=i(t,e._prev);e._prev=e._cipher.encryptBlock(r);return e._prev};t.decrypt=function(e,t){var r=e._prev;e._prev=t;var n=e._cipher.decryptBlock(t);return i(n,r)}},321:function(e,t,r){var i=r(6911).Buffer;var n=r(4734);function encryptStart(e,t,r){var a=t.length;var s=n(t,e._cache);e._cache=e._cache.slice(a);e._prev=i.concat([e._prev,r?t:s]);return s}t.encrypt=function(e,t,r){var n=i.allocUnsafe(0);var a;while(t.length){if(e._cache.length===0){e._cache=e._cipher.encryptBlock(e._prev);e._prev=i.allocUnsafe(0)}if(e._cache.length<=t.length){a=e._cache.length;n=i.concat([n,encryptStart(e,t.slice(0,a),r)]);t=t.slice(a)}else{n=i.concat([n,encryptStart(e,t,r)]);break}}return n}},3147:function(e,t,r){var i=r(6911).Buffer;function encryptByte(e,t,r){var i;var n=-1;var a=8;var s=0;var o,h;while(++n<a){i=e._cipher.encryptBlock(e._prev);o=t&1<<7-n?128:0;h=i[0]^o;s+=(h&128)>>n%8;e._prev=shiftIn(e._prev,r?o:h)}return s}function shiftIn(e,t){var r=e.length;var n=-1;var a=i.allocUnsafe(e.length);e=i.concat([e,i.from([t])]);while(++n<r){a[n]=e[n]<<1|e[n+1]>>7}return a}t.encrypt=function(e,t,r){var n=t.length;var a=i.allocUnsafe(n);var s=-1;while(++s<n){a[s]=encryptByte(e,t[s],r)}return a}},2430:function(e,t,r){var i=r(6911).Buffer;function encryptByte(e,t,r){var n=e._cipher.encryptBlock(e._prev);var a=n[0]^t;e._prev=i.concat([e._prev.slice(1),i.from([r?t:a])]);return a}t.encrypt=function(e,t,r){var n=t.length;var a=i.allocUnsafe(n);var s=-1;while(++s<n){a[s]=encryptByte(e,t[s],r)}return a}},3361:function(e,t,r){var i=r(4734);var n=r(6911).Buffer;var a=r(598);function getBlock(e){var t=e._cipher.encryptBlockRaw(e._prev);a(e._prev);return t}var s=16;t.encrypt=function(e,t){var r=Math.ceil(t.length/s);var a=e._cache.length;e._cache=n.concat([e._cache,n.allocUnsafe(r*s)]);for(var o=0;o<r;o++){var h=getBlock(e);var u=a+o*s;e._cache.writeUInt32BE(h[0],u+0);e._cache.writeUInt32BE(h[1],u+4);e._cache.writeUInt32BE(h[2],u+8);e._cache.writeUInt32BE(h[3],u+12)}var d=e._cache.slice(0,t.length);e._cache=e._cache.slice(t.length);return i(t,d)}},1590:function(e,t){t.encrypt=function(e,t){return e._cipher.encryptBlock(t)};t.decrypt=function(e,t){return e._cipher.decryptBlock(t)}},6370:function(e,t,r){var i={ECB:r(1590),CBC:r(9825),CFB:r(321),CFB8:r(2430),CFB1:r(3147),OFB:r(3412),CTR:r(3361),GCM:r(3361)};var n=r(5866);for(var a in n){n[a].module=i[n[a].mode]}e.exports=n},3412:function(e,t,r){var i=r(4734);function getBlock(e){e._prev=e._cipher.encryptBlock(e._prev);return e._prev}t.encrypt=function(e,t){while(e._cache.length<t.length){e._cache=Buffer.concat([e._cache,getBlock(e)])}var r=e._cache.slice(0,t.length);e._cache=e._cache.slice(t.length);return i(t,r)}},126:function(e,t,r){var i=r(1387);var n=r(6911).Buffer;var a=r(1043);var s=r(3782);function StreamCipher(e,t,r,s){a.call(this);this._cipher=new i.AES(t);this._prev=n.from(r);this._cache=n.allocUnsafe(0);this._secCache=n.allocUnsafe(0);this._decrypt=s;this._mode=e}s(StreamCipher,a);StreamCipher.prototype._update=function(e){return this._mode.encrypt(this,e,this._decrypt)};StreamCipher.prototype._final=function(){this._cipher.scrub()};e.exports=StreamCipher},8996:function(e,t,r){var i=r(5238);var n=r(6594);var a=r(6370);var s=r(6280);var o=r(8368);function createCipher(e,t){e=e.toLowerCase();var r,i;if(a[e]){r=a[e].key;i=a[e].iv}else if(s[e]){r=s[e].key*8;i=s[e].iv}else{throw new TypeError(\"invalid suite type\")}var n=o(t,false,r,i);return createCipheriv(e,n.key,n.iv)}function createDecipher(e,t){e=e.toLowerCase();var r,i;if(a[e]){r=a[e].key;i=a[e].iv}else if(s[e]){r=s[e].key*8;i=s[e].iv}else{throw new TypeError(\"invalid suite type\")}var n=o(t,false,r,i);return createDecipheriv(e,n.key,n.iv)}function createCipheriv(e,t,r){e=e.toLowerCase();if(a[e])return n.createCipheriv(e,t,r);if(s[e])return new i({key:t,iv:r,mode:e});throw new TypeError(\"invalid suite type\")}function createDecipheriv(e,t,r){e=e.toLowerCase();if(a[e])return n.createDecipheriv(e,t,r);if(s[e])return new i({key:t,iv:r,mode:e,decrypt:true});throw new TypeError(\"invalid suite type\")}function getCiphers(){return Object.keys(s).concat(n.getCiphers())}t.createCipher=t.Cipher=createCipher;t.createCipheriv=t.Cipheriv=createCipheriv;t.createDecipher=t.Decipher=createDecipher;t.createDecipheriv=t.Decipheriv=createDecipheriv;t.listCiphers=t.getCiphers=getCiphers},5238:function(e,t,r){var i=r(1043);var n=r(9536);var a=r(3782);var s=r(6911).Buffer;var o={\"des-ede3-cbc\":n.CBC.instantiate(n.EDE),\"des-ede3\":n.EDE,\"des-ede-cbc\":n.CBC.instantiate(n.EDE),\"des-ede\":n.EDE,\"des-cbc\":n.CBC.instantiate(n.DES),\"des-ecb\":n.DES};o.des=o[\"des-cbc\"];o.des3=o[\"des-ede3-cbc\"];e.exports=DES;a(DES,i);function DES(e){i.call(this);var t=e.mode.toLowerCase();var r=o[t];var n;if(e.decrypt){n=\"decrypt\"}else{n=\"encrypt\"}var a=e.key;if(!s.isBuffer(a)){a=s.from(a)}if(t===\"des-ede\"||t===\"des-ede-cbc\"){a=s.concat([a,a.slice(0,8)])}var h=e.iv;if(!s.isBuffer(h)){h=s.from(h)}this._des=r.create({key:a,iv:h,type:n})}DES.prototype._update=function(e){return s.from(this._des.update(e))};DES.prototype._final=function(){return s.from(this._des.final())}},6280:function(e,t){t[\"des-ecb\"]={key:8,iv:0};t[\"des-cbc\"]=t.des={key:8,iv:8};t[\"des-ede3-cbc\"]=t.des3={key:24,iv:8};t[\"des-ede3\"]={key:24,iv:0};t[\"des-ede-cbc\"]={key:16,iv:8};t[\"des-ede\"]={key:16,iv:0}},7166:function(e,t,r){var i=r(711);var n=r(7223);e.exports=crt;function blind(e){var t=getr(e);var r=t.toRed(i.mont(e.modulus)).redPow(new i(e.publicExponent)).fromRed();return{blinder:r,unblinder:t.invm(e.modulus)}}function crt(e,t){var r=blind(t);var n=t.modulus.byteLength();var a=i.mont(t.modulus);var s=new i(e).mul(r.blinder).umod(t.modulus);var o=s.toRed(i.mont(t.prime1));var h=s.toRed(i.mont(t.prime2));var u=t.coefficient;var d=t.prime1;var c=t.prime2;var l=o.redPow(t.exponent1);var p=h.redPow(t.exponent2);l=l.fromRed();p=p.fromRed();var v=l.isub(p).imul(u).umod(d);v.imul(c);p.iadd(v);return new Buffer(p.imul(r.unblinder).umod(t.modulus).toArray(false,n))}crt.getr=getr;function getr(e){var t=e.modulus.byteLength();var r=new i(n(t));while(r.cmp(e.modulus)>=0||!r.umod(e.prime1)||!r.umod(e.prime2)){r=new i(n(t))}return r}},9276:function(e,t,r){e.exports=r(2908)},4078:function(e,t,r){var i=r(6911).Buffer;var n=r(9739);var a=r(3726);var s=r(3782);var o=r(9807);var h=r(4013);var u=r(2908);Object.keys(u).forEach((function(e){u[e].id=i.from(u[e].id,\"hex\");u[e.toLowerCase()]=u[e]}));function Sign(e){a.Writable.call(this);var t=u[e];if(!t)throw new Error(\"Unknown message digest\");this._hashType=t.hash;this._hash=n(t.hash);this._tag=t.id;this._signType=t.sign}s(Sign,a.Writable);Sign.prototype._write=function _write(e,t,r){this._hash.update(e);r()};Sign.prototype.update=function update(e,t){if(typeof e===\"string\")e=i.from(e,t);this._hash.update(e);return this};Sign.prototype.sign=function signMethod(e,t){this.end();var r=this._hash.digest();var i=o(r,e,this._hashType,this._signType,this._tag);return t?i.toString(t):i};function Verify(e){a.Writable.call(this);var t=u[e];if(!t)throw new Error(\"Unknown message digest\");this._hash=n(t.hash);this._tag=t.id;this._signType=t.sign}s(Verify,a.Writable);Verify.prototype._write=function _write(e,t,r){this._hash.update(e);r()};Verify.prototype.update=function update(e,t){if(typeof e===\"string\")e=i.from(e,t);this._hash.update(e);return this};Verify.prototype.verify=function verifyMethod(e,t,r){if(typeof t===\"string\")t=i.from(t,r);this.end();var n=this._hash.digest();return h(t,n,e,this._signType,this._tag)};function createSign(e){return new Sign(e)}function createVerify(e){return new Verify(e)}e.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify}},9807:function(e,t,r){var i=r(6911).Buffer;var n=r(4873);var a=r(7166);var s=r(949).ec;var o=r(1670);var h=r(9902);var u=r(9267);function sign(e,t,r,n,s){var o=h(t);if(o.curve){if(n!==\"ecdsa\"&&n!==\"ecdsa/rsa\")throw new Error(\"wrong private key type\");return ecSign(e,o)}else if(o.type===\"dsa\"){if(n!==\"dsa\")throw new Error(\"wrong private key type\");return dsaSign(e,o,r)}else{if(n!==\"rsa\"&&n!==\"ecdsa/rsa\")throw new Error(\"wrong private key type\")}e=i.concat([s,e]);var u=o.modulus.byteLength();var d=[0,1];while(e.length+d.length+1<u)d.push(255);d.push(0);var c=-1;while(++c<e.length)d.push(e[c]);var l=a(d,o);return l}function ecSign(e,t){var r=u[t.curve.join(\".\")];if(!r)throw new Error(\"unknown curve \"+t.curve.join(\".\"));var n=new s(r);var a=n.keyFromPrivate(t.privateKey);var o=a.sign(e);return i.from(o.toDER())}function dsaSign(e,t,r){var i=t.params.priv_key;var n=t.params.p;var a=t.params.q;var s=t.params.g;var h=new o(0);var u;var d=bits2int(e,a).mod(a);var c=false;var l=getKey(i,a,e,r);while(c===false){u=makeKey(a,l,r);h=makeR(s,u,n,a);c=u.invm(a).imul(d.add(i.mul(h))).mod(a);if(c.cmpn(0)===0){c=false;h=new o(0)}}return toDER(h,c)}function toDER(e,t){e=e.toArray();t=t.toArray();if(e[0]&128)e=[0].concat(e);if(t[0]&128)t=[0].concat(t);var r=e.length+t.length+4;var n=[48,r,2,e.length];n=n.concat(e,[2,t.length],t);return i.from(n)}function getKey(e,t,r,a){e=i.from(e.toArray());if(e.length<t.byteLength()){var s=i.alloc(t.byteLength()-e.length);e=i.concat([s,e])}var o=r.length;var h=bits2octets(r,t);var u=i.alloc(o);u.fill(1);var d=i.alloc(o);d=n(a,d).update(u).update(i.from([0])).update(e).update(h).digest();u=n(a,d).update(u).digest();d=n(a,d).update(u).update(i.from([1])).update(e).update(h).digest();u=n(a,d).update(u).digest();return{k:d,v:u}}function bits2int(e,t){var r=new o(e);var i=(e.length<<3)-t.bitLength();if(i>0)r.ishrn(i);return r}function bits2octets(e,t){e=bits2int(e,t);e=e.mod(t);var r=i.from(e.toArray());if(r.length<t.byteLength()){var n=i.alloc(t.byteLength()-r.length);r=i.concat([n,r])}return r}function makeKey(e,t,r){var a;var s;do{a=i.alloc(0);while(a.length*8<e.bitLength()){t.v=n(r,t.k).update(t.v).digest();a=i.concat([a,t.v])}s=bits2int(a,e);t.k=n(r,t.k).update(t.v).update(i.from([0])).digest();t.v=n(r,t.k).update(t.v).digest()}while(s.cmp(e)!==-1);return s}function makeR(e,t,r,i){return e.toRed(o.mont(r)).redPow(t).fromRed().mod(i)}e.exports=sign;e.exports.getKey=getKey;e.exports.makeKey=makeKey},4013:function(e,t,r){var i=r(6911).Buffer;var n=r(1670);var a=r(949).ec;var s=r(9902);var o=r(9267);function verify(e,t,r,a,o){var h=s(r);if(h.type===\"ec\"){if(a!==\"ecdsa\"&&a!==\"ecdsa/rsa\")throw new Error(\"wrong public key type\");return ecVerify(e,t,h)}else if(h.type===\"dsa\"){if(a!==\"dsa\")throw new Error(\"wrong public key type\");return dsaVerify(e,t,h)}else{if(a!==\"rsa\"&&a!==\"ecdsa/rsa\")throw new Error(\"wrong public key type\")}t=i.concat([o,t]);var u=h.modulus.byteLength();var d=[1];var c=0;while(t.length+d.length+2<u){d.push(255);c++}d.push(0);var l=-1;while(++l<t.length){d.push(t[l])}d=i.from(d);var p=n.mont(h.modulus);e=new n(e).toRed(p);e=e.redPow(new n(h.publicExponent));e=i.from(e.fromRed().toArray());var v=c<8?1:0;u=Math.min(e.length,d.length);if(e.length!==d.length)v=1;l=-1;while(++l<u)v|=e[l]^d[l];return v===0}function ecVerify(e,t,r){var i=o[r.data.algorithm.curve.join(\".\")];if(!i)throw new Error(\"unknown curve \"+r.data.algorithm.curve.join(\".\"));var n=new a(i);var s=r.data.subjectPrivateKey.data;return n.verify(t,e,s)}function dsaVerify(e,t,r){var i=r.data.p;var a=r.data.q;var o=r.data.g;var h=r.data.pub_key;var u=s.signature.decode(e,\"der\");var d=u.s;var c=u.r;checkValue(d,a);checkValue(c,a);var l=n.mont(i);var p=d.invm(a);var v=o.toRed(l).redPow(new n(t).mul(p).mod(a)).fromRed().mul(h.toRed(l).redPow(c.mul(p).mod(a)).fromRed()).mod(i).mod(a);return v.cmp(c)===0}function checkValue(e,t){if(e.cmpn(0)<=0)throw new Error(\"invalid sig\");if(e.cmp(t)>=t)throw new Error(\"invalid sig\")}e.exports=verify},4734:function(e){e.exports=function xor(e,t){var r=Math.min(e.length,t.length);var i=new Buffer(r);for(var n=0;n<r;++n){i[n]=e[n]^t[n]}return i}},1043:function(e,t,r){var i=r(6911).Buffer;var n=r(2781).Transform;var a=r(1576).StringDecoder;var s=r(3782);function CipherBase(e){n.call(this);this.hashMode=typeof e===\"string\";if(this.hashMode){this[e]=this._finalOrDigest}else{this.final=this._finalOrDigest}if(this._final){this.__final=this._final;this._final=null}this._decoder=null;this._encoding=null}s(CipherBase,n);CipherBase.prototype.update=function(e,t,r){if(typeof e===\"string\"){e=i.from(e,t)}var n=this._update(e);if(this.hashMode)return this;if(r){n=this._toString(n,r)}return n};CipherBase.prototype.setAutoPadding=function(){};CipherBase.prototype.getAuthTag=function(){throw new Error(\"trying to get auth tag in unsupported state\")};CipherBase.prototype.setAuthTag=function(){throw new Error(\"trying to set auth tag in unsupported state\")};CipherBase.prototype.setAAD=function(){throw new Error(\"trying to set aad in unsupported state\")};CipherBase.prototype._transform=function(e,t,r){var i;try{if(this.hashMode){this._update(e)}else{this.push(this._update(e))}}catch(e){i=e}finally{r(i)}};CipherBase.prototype._flush=function(e){var t;try{this.push(this.__final())}catch(e){t=e}e(t)};CipherBase.prototype._finalOrDigest=function(e){var t=this.__final()||i.alloc(0);if(e){t=this._toString(t,e,true)}return t};CipherBase.prototype._toString=function(e,t,r){if(!this._decoder){this._decoder=new a(t);this._encoding=t}if(this._encoding!==t)throw new Error(\"can't switch encodings\");var i=this._decoder.write(e);if(r){i+=this._decoder.end()}return i};e.exports=CipherBase},9942:function(e,t,r){var i=r(949);var n=r(711);e.exports=function createECDH(e){return new ECDH(e)};var a={secp256k1:{name:\"secp256k1\",byteLength:32},secp224r1:{name:\"p224\",byteLength:28},prime256v1:{name:\"p256\",byteLength:32},prime192v1:{name:\"p192\",byteLength:24},ed25519:{name:\"ed25519\",byteLength:32},secp384r1:{name:\"p384\",byteLength:48},secp521r1:{name:\"p521\",byteLength:66}};a.p224=a.secp224r1;a.p256=a.secp256r1=a.prime256v1;a.p192=a.secp192r1=a.prime192v1;a.p384=a.secp384r1;a.p521=a.secp521r1;function ECDH(e){this.curveType=a[e];if(!this.curveType){this.curveType={name:e}}this.curve=new i.ec(this.curveType.name);this.keys=void 0}ECDH.prototype.generateKeys=function(e,t){this.keys=this.curve.genKeyPair();return this.getPublicKey(e,t)};ECDH.prototype.computeSecret=function(e,t,r){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}var i=this.curve.keyFromPublic(e).getPublic();var n=i.mul(this.keys.getPrivate()).getX();return formatReturnValue(n,r,this.curveType.byteLength)};ECDH.prototype.getPublicKey=function(e,t){var r=this.keys.getPublic(t===\"compressed\",true);if(t===\"hybrid\"){if(r[r.length-1]%2){r[0]=7}else{r[0]=6}}return formatReturnValue(r,e)};ECDH.prototype.getPrivateKey=function(e){return formatReturnValue(this.keys.getPrivate(),e)};ECDH.prototype.setPublicKey=function(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this.keys._importPublic(e);return this};ECDH.prototype.setPrivateKey=function(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}var r=new n(e);r=r.toString(16);this.keys=this.curve.genKeyPair();this.keys._importPrivate(r);return this};function formatReturnValue(e,t,r){if(!Array.isArray(e)){e=e.toArray()}var i=new Buffer(e);if(r&&i.length<r){var n=new Buffer(r-i.length);n.fill(0);i=Buffer.concat([n,i])}if(!t){return i}else{return i.toString(t)}}},9739:function(e,t,r){\"use strict\";var i=r(3782);var n=r(3533);var a=r(3225);var s=r(4371);var o=r(1043);function Hash(e){o.call(this,\"digest\");this._hash=e}i(Hash,o);Hash.prototype._update=function(e){this._hash.update(e)};Hash.prototype._final=function(){return this._hash.digest()};e.exports=function createHash(e){e=e.toLowerCase();if(e===\"md5\")return new n;if(e===\"rmd160\"||e===\"ripemd160\")return new a;return new Hash(s(e))}},450:function(e,t,r){var i=r(3533);e.exports=function(e){return(new i).update(e).digest()}},4873:function(e,t,r){\"use strict\";var i=r(3782);var n=r(8119);var a=r(1043);var s=r(6911).Buffer;var o=r(450);var h=r(3225);var u=r(4371);var d=s.alloc(128);function Hmac(e,t){a.call(this,\"digest\");if(typeof t===\"string\"){t=s.from(t)}var r=e===\"sha512\"||e===\"sha384\"?128:64;this._alg=e;this._key=t;if(t.length>r){var i=e===\"rmd160\"?new h:u(e);t=i.update(t).digest()}else if(t.length<r){t=s.concat([t,d],r)}var n=this._ipad=s.allocUnsafe(r);var o=this._opad=s.allocUnsafe(r);for(var c=0;c<r;c++){n[c]=t[c]^54;o[c]=t[c]^92}this._hash=e===\"rmd160\"?new h:u(e);this._hash.update(n)}i(Hmac,a);Hmac.prototype._update=function(e){this._hash.update(e)};Hmac.prototype._final=function(){var e=this._hash.digest();var t=this._alg===\"rmd160\"?new h:u(this._alg);return t.update(this._opad).update(e).digest()};e.exports=function createHmac(e,t){e=e.toLowerCase();if(e===\"rmd160\"||e===\"ripemd160\"){return new Hmac(\"rmd160\",t)}if(e===\"md5\"){return new n(o,t)}return new Hmac(e,t)}},8119:function(e,t,r){\"use strict\";var i=r(3782);var n=r(6911).Buffer;var a=r(1043);var s=n.alloc(128);var o=64;function Hmac(e,t){a.call(this,\"digest\");if(typeof t===\"string\"){t=n.from(t)}this._alg=e;this._key=t;if(t.length>o){t=e(t)}else if(t.length<o){t=n.concat([t,s],o)}var r=this._ipad=n.allocUnsafe(o);var i=this._opad=n.allocUnsafe(o);for(var h=0;h<o;h++){r[h]=t[h]^54;i[h]=t[h]^92}this._hash=[r]}i(Hmac,a);Hmac.prototype._update=function(e){this._hash.push(e)};Hmac.prototype._final=function(){var e=this._alg(n.concat(this._hash));return this._alg(n.concat([this._opad,e]))};e.exports=Hmac},9536:function(e,t,r){\"use strict\";t.utils=r(5334);t.Cipher=r(9876);t.DES=r(1016);t.CBC=r(8641);t.EDE=r(6159)},8641:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);var a={};function CBCState(e){i.equal(e.length,8,\"Invalid IV length\");this.iv=new Array(8);for(var t=0;t<this.iv.length;t++)this.iv[t]=e[t]}function instantiate(e){function CBC(t){e.call(this,t);this._cbcInit()}n(CBC,e);var t=Object.keys(a);for(var r=0;r<t.length;r++){var i=t[r];CBC.prototype[i]=a[i]}CBC.create=function create(e){return new CBC(e)};return CBC}t.instantiate=instantiate;a._cbcInit=function _cbcInit(){var e=new CBCState(this.options.iv);this._cbcState=e};a._update=function _update(e,t,r,i){var n=this._cbcState;var a=this.constructor.super_.prototype;var s=n.iv;if(this.type===\"encrypt\"){for(var o=0;o<this.blockSize;o++)s[o]^=e[t+o];a._update.call(this,s,0,r,i);for(var o=0;o<this.blockSize;o++)s[o]=r[i+o]}else{a._update.call(this,e,t,r,i);for(var o=0;o<this.blockSize;o++)r[i+o]^=s[o];for(var o=0;o<this.blockSize;o++)s[o]=e[t+o]}}},9876:function(e,t,r){\"use strict\";var i=r(3523);function Cipher(e){this.options=e;this.type=this.options.type;this.blockSize=8;this._init();this.buffer=new Array(this.blockSize);this.bufferOff=0}e.exports=Cipher;Cipher.prototype._init=function _init(){};Cipher.prototype.update=function update(e){if(e.length===0)return[];if(this.type===\"decrypt\")return this._updateDecrypt(e);else return this._updateEncrypt(e)};Cipher.prototype._buffer=function _buffer(e,t){var r=Math.min(this.buffer.length-this.bufferOff,e.length-t);for(var i=0;i<r;i++)this.buffer[this.bufferOff+i]=e[t+i];this.bufferOff+=r;return r};Cipher.prototype._flushBuffer=function _flushBuffer(e,t){this._update(this.buffer,0,e,t);this.bufferOff=0;return this.blockSize};Cipher.prototype._updateEncrypt=function _updateEncrypt(e){var t=0;var r=0;var i=(this.bufferOff+e.length)/this.blockSize|0;var n=new Array(i*this.blockSize);if(this.bufferOff!==0){t+=this._buffer(e,t);if(this.bufferOff===this.buffer.length)r+=this._flushBuffer(n,r)}var a=e.length-(e.length-t)%this.blockSize;for(;t<a;t+=this.blockSize){this._update(e,t,n,r);r+=this.blockSize}for(;t<e.length;t++,this.bufferOff++)this.buffer[this.bufferOff]=e[t];return n};Cipher.prototype._updateDecrypt=function _updateDecrypt(e){var t=0;var r=0;var i=Math.ceil((this.bufferOff+e.length)/this.blockSize)-1;var n=new Array(i*this.blockSize);for(;i>0;i--){t+=this._buffer(e,t);r+=this._flushBuffer(n,r)}t+=this._buffer(e,t);return n};Cipher.prototype.final=function final(e){var t;if(e)t=this.update(e);var r;if(this.type===\"encrypt\")r=this._finalEncrypt();else r=this._finalDecrypt();if(t)return t.concat(r);else return r};Cipher.prototype._pad=function _pad(e,t){if(t===0)return false;while(t<e.length)e[t++]=0;return true};Cipher.prototype._finalEncrypt=function _finalEncrypt(){if(!this._pad(this.buffer,this.bufferOff))return[];var e=new Array(this.blockSize);this._update(this.buffer,0,e,0);return e};Cipher.prototype._unpad=function _unpad(e){return e};Cipher.prototype._finalDecrypt=function _finalDecrypt(){i.equal(this.bufferOff,this.blockSize,\"Not enough data to decrypt\");var e=new Array(this.blockSize);this._flushBuffer(e,0);return this._unpad(e)}},1016:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);var a=r(5334);var s=r(9876);function DESState(){this.tmp=new Array(2);this.keys=null}function DES(e){s.call(this,e);var t=new DESState;this._desState=t;this.deriveKeys(t,e.key)}n(DES,s);e.exports=DES;DES.create=function create(e){return new DES(e)};var o=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];DES.prototype.deriveKeys=function deriveKeys(e,t){e.keys=new Array(16*2);i.equal(t.length,this.blockSize,\"Invalid key length\");var r=a.readUInt32BE(t,0);var n=a.readUInt32BE(t,4);a.pc1(r,n,e.tmp,0);r=e.tmp[0];n=e.tmp[1];for(var s=0;s<e.keys.length;s+=2){var h=o[s>>>1];r=a.r28shl(r,h);n=a.r28shl(n,h);a.pc2(r,n,e.keys,s)}};DES.prototype._update=function _update(e,t,r,i){var n=this._desState;var s=a.readUInt32BE(e,t);var o=a.readUInt32BE(e,t+4);a.ip(s,o,n.tmp,0);s=n.tmp[0];o=n.tmp[1];if(this.type===\"encrypt\")this._encrypt(n,s,o,n.tmp,0);else this._decrypt(n,s,o,n.tmp,0);s=n.tmp[0];o=n.tmp[1];a.writeUInt32BE(r,s,i);a.writeUInt32BE(r,o,i+4)};DES.prototype._pad=function _pad(e,t){var r=e.length-t;for(var i=t;i<e.length;i++)e[i]=r;return true};DES.prototype._unpad=function _unpad(e){var t=e[e.length-1];for(var r=e.length-t;r<e.length;r++)i.equal(e[r],t);return e.slice(0,e.length-t)};DES.prototype._encrypt=function _encrypt(e,t,r,i,n){var s=t;var o=r;for(var h=0;h<e.keys.length;h+=2){var u=e.keys[h];var d=e.keys[h+1];a.expand(o,e.tmp,0);u^=e.tmp[0];d^=e.tmp[1];var c=a.substitute(u,d);var l=a.permute(c);var p=o;o=(s^l)>>>0;s=p}a.rip(o,s,i,n)};DES.prototype._decrypt=function _decrypt(e,t,r,i,n){var s=r;var o=t;for(var h=e.keys.length-2;h>=0;h-=2){var u=e.keys[h];var d=e.keys[h+1];a.expand(s,e.tmp,0);u^=e.tmp[0];d^=e.tmp[1];var c=a.substitute(u,d);var l=a.permute(c);var p=s;s=(o^l)>>>0;o=p}a.rip(s,o,i,n)}},6159:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);var a=r(9876);var s=r(1016);function EDEState(e,t){i.equal(t.length,24,\"Invalid key length\");var r=t.slice(0,8);var n=t.slice(8,16);var a=t.slice(16,24);if(e===\"encrypt\"){this.ciphers=[s.create({type:\"encrypt\",key:r}),s.create({type:\"decrypt\",key:n}),s.create({type:\"encrypt\",key:a})]}else{this.ciphers=[s.create({type:\"decrypt\",key:a}),s.create({type:\"encrypt\",key:n}),s.create({type:\"decrypt\",key:r})]}}function EDE(e){a.call(this,e);var t=new EDEState(this.type,this.options.key);this._edeState=t}n(EDE,a);e.exports=EDE;EDE.create=function create(e){return new EDE(e)};EDE.prototype._update=function _update(e,t,r,i){var n=this._edeState;n.ciphers[0]._update(e,t,r,i);n.ciphers[1]._update(r,i,r,i);n.ciphers[2]._update(r,i,r,i)};EDE.prototype._pad=s.prototype._pad;EDE.prototype._unpad=s.prototype._unpad},5334:function(e,t){\"use strict\";t.readUInt32BE=function readUInt32BE(e,t){var r=e[0+t]<<24|e[1+t]<<16|e[2+t]<<8|e[3+t];return r>>>0};t.writeUInt32BE=function writeUInt32BE(e,t,r){e[0+r]=t>>>24;e[1+r]=t>>>16&255;e[2+r]=t>>>8&255;e[3+r]=t&255};t.ip=function ip(e,t,r,i){var n=0;var a=0;for(var s=6;s>=0;s-=2){for(var o=0;o<=24;o+=8){n<<=1;n|=t>>>o+s&1}for(var o=0;o<=24;o+=8){n<<=1;n|=e>>>o+s&1}}for(var s=6;s>=0;s-=2){for(var o=1;o<=25;o+=8){a<<=1;a|=t>>>o+s&1}for(var o=1;o<=25;o+=8){a<<=1;a|=e>>>o+s&1}}r[i+0]=n>>>0;r[i+1]=a>>>0};t.rip=function rip(e,t,r,i){var n=0;var a=0;for(var s=0;s<4;s++){for(var o=24;o>=0;o-=8){n<<=1;n|=t>>>o+s&1;n<<=1;n|=e>>>o+s&1}}for(var s=4;s<8;s++){for(var o=24;o>=0;o-=8){a<<=1;a|=t>>>o+s&1;a<<=1;a|=e>>>o+s&1}}r[i+0]=n>>>0;r[i+1]=a>>>0};t.pc1=function pc1(e,t,r,i){var n=0;var a=0;for(var s=7;s>=5;s--){for(var o=0;o<=24;o+=8){n<<=1;n|=t>>o+s&1}for(var o=0;o<=24;o+=8){n<<=1;n|=e>>o+s&1}}for(var o=0;o<=24;o+=8){n<<=1;n|=t>>o+s&1}for(var s=1;s<=3;s++){for(var o=0;o<=24;o+=8){a<<=1;a|=t>>o+s&1}for(var o=0;o<=24;o+=8){a<<=1;a|=e>>o+s&1}}for(var o=0;o<=24;o+=8){a<<=1;a|=e>>o+s&1}r[i+0]=n>>>0;r[i+1]=a>>>0};t.r28shl=function r28shl(e,t){return e<<t&268435455|e>>>28-t};var r=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];t.pc2=function pc2(e,t,i,n){var a=0;var s=0;var o=r.length>>>1;for(var h=0;h<o;h++){a<<=1;a|=e>>>r[h]&1}for(var h=o;h<r.length;h++){s<<=1;s|=t>>>r[h]&1}i[n+0]=a>>>0;i[n+1]=s>>>0};t.expand=function expand(e,t,r){var i=0;var n=0;i=(e&1)<<5|e>>>27;for(var a=23;a>=15;a-=4){i<<=6;i|=e>>>a&63}for(var a=11;a>=3;a-=4){n|=e>>>a&63;n<<=6}n|=(e&31)<<1|e>>>31;t[r+0]=i>>>0;t[r+1]=n>>>0};var i=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];t.substitute=function substitute(e,t){var r=0;for(var n=0;n<4;n++){var a=e>>>18-n*6&63;var s=i[n*64+a];r<<=4;r|=s}for(var n=0;n<4;n++){var a=t>>>18-n*6&63;var s=i[4*64+n*64+a];r<<=4;r|=s}return r>>>0};var n=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];t.permute=function permute(e){var t=0;for(var r=0;r<n.length;r++){t<<=1;t|=e>>>n[r]&1}return t>>>0};t.padSplit=function padSplit(e,t,r){var i=e.toString(2);while(i.length<t)i=\"0\"+i;var n=[];for(var a=0;a<t;a+=r)n.push(i.slice(a,a+r));return n.join(\" \")}},6587:function(e,t,r){var i=r(296);var n=r(7992);var a=r(373);function getDiffieHellman(e){var t=new Buffer(n[e].prime,\"hex\");var r=new Buffer(n[e].gen,\"hex\");return new a(t,r)}var s={binary:true,hex:true,base64:true};function createDiffieHellman(e,t,r,n){if(Buffer.isBuffer(t)||s[t]===undefined){return createDiffieHellman(e,\"binary\",t,r)}t=t||\"binary\";n=n||\"binary\";r=r||new Buffer([2]);if(!Buffer.isBuffer(r)){r=new Buffer(r,n)}if(typeof e===\"number\"){return new a(i(e,r),r,true)}if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}return new a(e,r,true)}t.DiffieHellmanGroup=t.createDiffieHellmanGroup=t.getDiffieHellman=getDiffieHellman;t.createDiffieHellman=t.DiffieHellman=createDiffieHellman},373:function(e,t,r){var i=r(711);var n=r(1354);var a=new n;var s=new i(24);var o=new i(11);var h=new i(10);var u=new i(3);var d=new i(7);var c=r(296);var l=r(7223);e.exports=DH;function setPublicKey(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this._pub=new i(e);return this}function setPrivateKey(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this._priv=new i(e);return this}var p={};function checkPrime(e,t){var r=t.toString(\"hex\");var i=[r,e.toString(16)].join(\"_\");if(i in p){return p[i]}var n=0;if(e.isEven()||!c.simpleSieve||!c.fermatTest(e)||!a.test(e)){n+=1;if(r===\"02\"||r===\"05\"){n+=8}else{n+=4}p[i]=n;return n}if(!a.test(e.shrn(1))){n+=2}var l;switch(r){case\"02\":if(e.mod(s).cmp(o)){n+=8}break;case\"05\":l=e.mod(h);if(l.cmp(u)&&l.cmp(d)){n+=8}break;default:n+=4}p[i]=n;return n}function DH(e,t,r){this.setGenerator(t);this.__prime=new i(e);this._prime=i.mont(this.__prime);this._primeLen=e.length;this._pub=undefined;this._priv=undefined;this._primeCode=undefined;if(r){this.setPublicKey=setPublicKey;this.setPrivateKey=setPrivateKey}else{this._primeCode=8}}Object.defineProperty(DH.prototype,\"verifyError\",{enumerable:true,get:function(){if(typeof this._primeCode!==\"number\"){this._primeCode=checkPrime(this.__prime,this.__gen)}return this._primeCode}});DH.prototype.generateKeys=function(){if(!this._priv){this._priv=new i(l(this._primeLen))}this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed();return this.getPublicKey()};DH.prototype.computeSecret=function(e){e=new i(e);e=e.toRed(this._prime);var t=e.redPow(this._priv).fromRed();var r=new Buffer(t.toArray());var n=this.getPrime();if(r.length<n.length){var a=new Buffer(n.length-r.length);a.fill(0);r=Buffer.concat([a,r])}return r};DH.prototype.getPublicKey=function getPublicKey(e){return formatReturnValue(this._pub,e)};DH.prototype.getPrivateKey=function getPrivateKey(e){return formatReturnValue(this._priv,e)};DH.prototype.getPrime=function(e){return formatReturnValue(this.__prime,e)};DH.prototype.getGenerator=function(e){return formatReturnValue(this._gen,e)};DH.prototype.setGenerator=function(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this.__gen=e;this._gen=new i(e);return this};function formatReturnValue(e,t){var r=new Buffer(e.toArray());if(!t){return r}else{return r.toString(t)}}},296:function(e,t,r){var i=r(7223);e.exports=findPrime;findPrime.simpleSieve=simpleSieve;findPrime.fermatTest=fermatTest;var n=r(711);var a=new n(24);var s=r(1354);var o=new s;var h=new n(1);var u=new n(2);var d=new n(5);var c=new n(16);var l=new n(8);var p=new n(10);var v=new n(3);var b=new n(7);var m=new n(11);var y=new n(4);var g=new n(12);var _=null;function _getPrimes(){if(_!==null)return _;var e=1048576;var t=[];t[0]=2;for(var r=1,i=3;i<e;i+=2){var n=Math.ceil(Math.sqrt(i));for(var a=0;a<r&&t[a]<=n;a++)if(i%t[a]===0)break;if(r!==a&&t[a]<=n)continue;t[r++]=i}_=t;return t}function simpleSieve(e){var t=_getPrimes();for(var r=0;r<t.length;r++)if(e.modn(t[r])===0){if(e.cmpn(t[r])===0){return true}else{return false}}return true}function fermatTest(e){var t=n.mont(e);return u.toRed(t).redPow(e.subn(1)).fromRed().cmpn(1)===0}function findPrime(e,t){if(e<16){if(t===2||t===5){return new n([140,123])}else{return new n([140,39])}}t=new n(t);var r,s;while(true){r=new n(i(Math.ceil(e/8)));while(r.bitLength()>e){r.ishrn(1)}if(r.isEven()){r.iadd(h)}if(!r.testn(1)){r.iadd(u)}if(!t.cmp(u)){while(r.mod(a).cmp(m)){r.iadd(y)}}else if(!t.cmp(d)){while(r.mod(p).cmp(v)){r.iadd(y)}}s=r.shrn(1);if(simpleSieve(s)&&simpleSieve(r)&&fermatTest(s)&&fermatTest(r)&&o.test(s)&&o.test(r)){return r}}}},949:function(e,t,r){\"use strict\";var i=t;i.version=r(2531).i8;i.utils=r(4401);i.rand=r(3500);i.curve=r(9359);i.curves=r(6226);i.ec=r(4088);i.eddsa=r(8511)},2727:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.getNAF;var s=n.getJSF;var o=n.assert;function BaseCurve(e,t){this.type=e;this.p=new i(t.p,16);this.red=t.prime?i.red(t.prime):i.mont(this.p);this.zero=new i(0).toRed(this.red);this.one=new i(1).toRed(this.red);this.two=new i(2).toRed(this.red);this.n=t.n&&new i(t.n,16);this.g=t.g&&this.pointFromJSON(t.g,t.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);if(!r||r.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}e.exports=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error(\"Not implemented\")};BaseCurve.prototype.validate=function validate(){throw new Error(\"Not implemented\")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(e,t){o(e.precomputed);var r=e._getDoubles();var i=a(t,1,this._bitLength);var n=(1<<r.step+1)-(r.step%2===0?2:1);n/=3;var s=[];for(var h=0;h<i.length;h+=r.step){var u=0;for(var t=h+r.step-1;t>=h;t--)u=(u<<1)+i[t];s.push(u)}var d=this.jpoint(null,null,null);var c=this.jpoint(null,null,null);for(var l=n;l>0;l--){for(var h=0;h<s.length;h++){var u=s[h];if(u===l)c=c.mixedAdd(r.points[h]);else if(u===-l)c=c.mixedAdd(r.points[h].neg())}d=d.add(c)}return d.toP()};BaseCurve.prototype._wnafMul=function _wnafMul(e,t){var r=4;var i=e._getNAFPoints(r);r=i.wnd;var n=i.points;var s=a(t,r,this._bitLength);var h=this.jpoint(null,null,null);for(var u=s.length-1;u>=0;u--){for(var t=0;u>=0&&s[u]===0;u--)t++;if(u>=0)t++;h=h.dblp(t);if(u<0)break;var d=s[u];o(d!==0);if(e.type===\"affine\"){if(d>0)h=h.mixedAdd(n[d-1>>1]);else h=h.mixedAdd(n[-d-1>>1].neg())}else{if(d>0)h=h.add(n[d-1>>1]);else h=h.add(n[-d-1>>1].neg())}}return e.type===\"affine\"?h.toP():h};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(e,t,r,i,n){var o=this._wnafT1;var h=this._wnafT2;var u=this._wnafT3;var d=0;for(var c=0;c<i;c++){var l=t[c];var p=l._getNAFPoints(e);o[c]=p.wnd;h[c]=p.points}for(var c=i-1;c>=1;c-=2){var v=c-1;var b=c;if(o[v]!==1||o[b]!==1){u[v]=a(r[v],o[v],this._bitLength);u[b]=a(r[b],o[b],this._bitLength);d=Math.max(u[v].length,d);d=Math.max(u[b].length,d);continue}var m=[t[v],null,null,t[b]];if(t[v].y.cmp(t[b].y)===0){m[1]=t[v].add(t[b]);m[2]=t[v].toJ().mixedAdd(t[b].neg())}else if(t[v].y.cmp(t[b].y.redNeg())===0){m[1]=t[v].toJ().mixedAdd(t[b]);m[2]=t[v].add(t[b].neg())}else{m[1]=t[v].toJ().mixedAdd(t[b]);m[2]=t[v].toJ().mixedAdd(t[b].neg())}var y=[-3,-1,-5,-7,0,7,5,1,3];var g=s(r[v],r[b]);d=Math.max(g[0].length,d);u[v]=new Array(d);u[b]=new Array(d);for(var _=0;_<d;_++){var w=g[0][_]|0;var M=g[1][_]|0;u[v][_]=y[(w+1)*3+(M+1)];u[b][_]=0;h[v]=m}}var B=this.jpoint(null,null,null);var E=this._wnafT4;for(var c=d;c>=0;c--){var k=0;while(c>=0){var A=true;for(var _=0;_<i;_++){E[_]=u[_][c]|0;if(E[_]!==0)A=false}if(!A)break;k++;c--}if(c>=0)k++;B=B.dblp(k);if(c<0)break;for(var _=0;_<i;_++){var N=E[_];var l;if(N===0)continue;else if(N>0)l=h[_][N-1>>1];else if(N<0)l=h[_][-N-1>>1].neg();if(l.type===\"affine\")B=B.mixedAdd(l);else B=B.add(l)}}for(var c=0;c<i;c++)h[c]=null;if(n)return B;else return B.toP()};function BasePoint(e,t){this.curve=e;this.type=t;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error(\"Not implemented\")};BasePoint.prototype.validate=function validate(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint(e,t){e=n.toArray(e,t);var r=this.p.byteLength();if((e[0]===4||e[0]===6||e[0]===7)&&e.length-1===2*r){if(e[0]===6)o(e[e.length-1]%2===0);else if(e[0]===7)o(e[e.length-1]%2===1);var i=this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));return i}else if((e[0]===2||e[0]===3)&&e.length-1===r){return this.pointFromX(e.slice(1,1+r),e[0]===3)}throw new Error(\"Unknown point format\")};BasePoint.prototype.encodeCompressed=function encodeCompressed(e){return this.encode(e,true)};BasePoint.prototype._encode=function _encode(e){var t=this.curve.p.byteLength();var r=this.getX().toArray(\"be\",t);if(e)return[this.getY().isEven()?2:3].concat(r);return[4].concat(r,this.getY().toArray(\"be\",t))};BasePoint.prototype.encode=function encode(e,t){return n.encode(this._encode(t),e)};BasePoint.prototype.precompute=function precompute(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};t.naf=this._getNAFPoints(8);t.doubles=this._getDoubles(4,e);t.beta=this._getBeta();this.precomputed=t;return this};BasePoint.prototype._hasDoubles=function _hasDoubles(e){if(!this.precomputed)return false;var t=this.precomputed.doubles;if(!t)return false;return t.points.length>=Math.ceil((e.bitLength()+1)/t.step)};BasePoint.prototype._getDoubles=function _getDoubles(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var r=[this];var i=this;for(var n=0;n<t;n+=e){for(var a=0;a<e;a++)i=i.dbl();r.push(i)}return{step:e,points:r}};BasePoint.prototype._getNAFPoints=function _getNAFPoints(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var t=[this];var r=(1<<e)-1;var i=r===1?null:this.dbl();for(var n=1;n<r;n++)t[n]=t[n-1].add(i);return{wnd:e,points:t}};BasePoint.prototype._getBeta=function _getBeta(){return null};BasePoint.prototype.dblp=function dblp(e){var t=this;for(var r=0;r<e;r++)t=t.dbl();return t}},2705:function(e,t,r){\"use strict\";var i=r(4401);var n=r(711);var a=r(3782);var s=r(2727);var o=i.assert;function EdwardsCurve(e){this.twisted=(e.a|0)!==1;this.mOneA=this.twisted&&(e.a|0)===-1;this.extended=this.mOneA;s.call(this,\"edwards\",e);this.a=new n(e.a,16).umod(this.red.m);this.a=this.a.toRed(this.red);this.c=new n(e.c,16).toRed(this.red);this.c2=this.c.redSqr();this.d=new n(e.d,16).toRed(this.red);this.dd=this.d.redAdd(this.d);o(!this.twisted||this.c.fromRed().cmpn(1)===0);this.oneC=(e.c|0)===1}a(EdwardsCurve,s);e.exports=EdwardsCurve;EdwardsCurve.prototype._mulA=function _mulA(e){if(this.mOneA)return e.redNeg();else return this.a.redMul(e)};EdwardsCurve.prototype._mulC=function _mulC(e){if(this.oneC)return e;else return this.c.redMul(e)};EdwardsCurve.prototype.jpoint=function jpoint(e,t,r,i){return this.point(e,t,r,i)};EdwardsCurve.prototype.pointFromX=function pointFromX(e,t){e=new n(e,16);if(!e.red)e=e.toRed(this.red);var r=e.redSqr();var i=this.c2.redSub(this.a.redMul(r));var a=this.one.redSub(this.c2.redMul(this.d).redMul(r));var s=i.redMul(a.redInvm());var o=s.redSqrt();if(o.redSqr().redSub(s).cmp(this.zero)!==0)throw new Error(\"invalid point\");var h=o.fromRed().isOdd();if(t&&!h||!t&&h)o=o.redNeg();return this.point(e,o)};EdwardsCurve.prototype.pointFromY=function pointFromY(e,t){e=new n(e,16);if(!e.red)e=e.toRed(this.red);var r=e.redSqr();var i=r.redSub(this.c2);var a=r.redMul(this.d).redMul(this.c2).redSub(this.a);var s=i.redMul(a.redInvm());if(s.cmp(this.zero)===0){if(t)throw new Error(\"invalid point\");else return this.point(this.zero,e)}var o=s.redSqrt();if(o.redSqr().redSub(s).cmp(this.zero)!==0)throw new Error(\"invalid point\");if(o.fromRed().isOdd()!==t)o=o.redNeg();return this.point(o,e)};EdwardsCurve.prototype.validate=function validate(e){if(e.isInfinity())return true;e.normalize();var t=e.x.redSqr();var r=e.y.redSqr();var i=t.redMul(this.a).redAdd(r);var n=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return i.cmp(n)===0};function Point(e,t,r,i,a){s.BasePoint.call(this,e,\"projective\");if(t===null&&r===null&&i===null){this.x=this.curve.zero;this.y=this.curve.one;this.z=this.curve.one;this.t=this.curve.zero;this.zOne=true}else{this.x=new n(t,16);this.y=new n(r,16);this.z=i?new n(i,16):this.curve.one;this.t=a&&new n(a,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);if(this.t&&!this.t.red)this.t=this.t.toRed(this.curve.red);this.zOne=this.z===this.curve.one;if(this.curve.extended&&!this.t){this.t=this.x.redMul(this.y);if(!this.zOne)this.t=this.t.redMul(this.z.redInvm())}}}a(Point,s.BasePoint);EdwardsCurve.prototype.pointFromJSON=function pointFromJSON(e){return Point.fromJSON(this,e)};EdwardsCurve.prototype.point=function point(e,t,r,i){return new Point(this,e,t,r,i)};Point.fromJSON=function fromJSON(e,t){return new Point(e,t[0],t[1],t[2])};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\" z: \"+this.z.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.x.cmpn(0)===0&&(this.y.cmp(this.z)===0||this.zOne&&this.y.cmp(this.curve.c)===0)};Point.prototype._extDbl=function _extDbl(){var e=this.x.redSqr();var t=this.y.redSqr();var r=this.z.redSqr();r=r.redIAdd(r);var i=this.curve._mulA(e);var n=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t);var a=i.redAdd(t);var s=a.redSub(r);var o=i.redSub(t);var h=n.redMul(s);var u=a.redMul(o);var d=n.redMul(o);var c=s.redMul(a);return this.curve.point(h,u,c,d)};Point.prototype._projDbl=function _projDbl(){var e=this.x.redAdd(this.y).redSqr();var t=this.x.redSqr();var r=this.y.redSqr();var i;var n;var a;if(this.curve.twisted){var s=this.curve._mulA(t);var o=s.redAdd(r);if(this.zOne){i=e.redSub(t).redSub(r).redMul(o.redSub(this.curve.two));n=o.redMul(s.redSub(r));a=o.redSqr().redSub(o).redSub(o)}else{var h=this.z.redSqr();var u=o.redSub(h).redISub(h);i=e.redSub(t).redISub(r).redMul(u);n=o.redMul(s.redSub(r));a=o.redMul(u)}}else{var s=t.redAdd(r);var h=this.curve._mulC(this.z).redSqr();var u=s.redSub(h).redSub(h);i=this.curve._mulC(e.redISub(s)).redMul(u);n=this.curve._mulC(s).redMul(t.redISub(r));a=s.redMul(u)}return this.curve.point(i,n,a)};Point.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.extended)return this._extDbl();else return this._projDbl()};Point.prototype._extAdd=function _extAdd(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x));var r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x));var i=this.t.redMul(this.curve.dd).redMul(e.t);var n=this.z.redMul(e.z.redAdd(e.z));var a=r.redSub(t);var s=n.redSub(i);var o=n.redAdd(i);var h=r.redAdd(t);var u=a.redMul(s);var d=o.redMul(h);var c=a.redMul(h);var l=s.redMul(o);return this.curve.point(u,d,l,c)};Point.prototype._projAdd=function _projAdd(e){var t=this.z.redMul(e.z);var r=t.redSqr();var i=this.x.redMul(e.x);var n=this.y.redMul(e.y);var a=this.curve.d.redMul(i).redMul(n);var s=r.redSub(a);var o=r.redAdd(a);var h=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(i).redISub(n);var u=t.redMul(s).redMul(h);var d;var c;if(this.curve.twisted){d=t.redMul(o).redMul(n.redSub(this.curve._mulA(i)));c=s.redMul(o)}else{d=t.redMul(o).redMul(n.redSub(i));c=this.curve._mulC(s).redMul(o)}return this.curve.point(u,d,c)};Point.prototype.add=function add(e){if(this.isInfinity())return e;if(e.isInfinity())return this;if(this.curve.extended)return this._extAdd(e);else return this._projAdd(e)};Point.prototype.mul=function mul(e){if(this._hasDoubles(e))return this.curve._fixedNafMul(this,e);else return this.curve._wnafMul(this,e)};Point.prototype.mulAdd=function mulAdd(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,false)};Point.prototype.jmulAdd=function jmulAdd(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,true)};Point.prototype.normalize=function normalize(){if(this.zOne)return this;var e=this.z.redInvm();this.x=this.x.redMul(e);this.y=this.y.redMul(e);if(this.t)this.t=this.t.redMul(e);this.z=this.curve.one;this.zOne=true;return this};Point.prototype.neg=function neg(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()};Point.prototype.getY=function getY(){this.normalize();return this.y.fromRed()};Point.prototype.eq=function eq(e){return this===e||this.getX().cmp(e.getX())===0&&this.getY().cmp(e.getY())===0};Point.prototype.eqXToP=function eqXToP(e){var t=e.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(t)===0)return true;var r=e.clone();var i=this.curve.redN.redMul(this.z);for(;;){r.iadd(this.curve.n);if(r.cmp(this.curve.p)>=0)return false;t.redIAdd(i);if(this.x.cmp(t)===0)return true}};Point.prototype.toP=Point.prototype.normalize;Point.prototype.mixedAdd=Point.prototype.add},9359:function(e,t,r){\"use strict\";var i=t;i.base=r(2727);i.short=r(4720);i.mont=r(6653);i.edwards=r(2705)},6653:function(e,t,r){\"use strict\";var i=r(711);var n=r(3782);var a=r(2727);var s=r(4401);function MontCurve(e){a.call(this,\"mont\",e);this.a=new i(e.a,16).toRed(this.red);this.b=new i(e.b,16).toRed(this.red);this.i4=new i(4).toRed(this.red).redInvm();this.two=new i(2).toRed(this.red);this.a24=this.i4.redMul(this.a.redAdd(this.two))}n(MontCurve,a);e.exports=MontCurve;MontCurve.prototype.validate=function validate(e){var t=e.normalize().x;var r=t.redSqr();var i=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);var n=i.redSqrt();return n.redSqr().cmp(i)===0};function Point(e,t,r){a.BasePoint.call(this,e,\"projective\");if(t===null&&r===null){this.x=this.curve.one;this.z=this.curve.zero}else{this.x=new i(t,16);this.z=new i(r,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red)}}n(Point,a.BasePoint);MontCurve.prototype.decodePoint=function decodePoint(e,t){return this.point(s.toArray(e,t),1)};MontCurve.prototype.point=function point(e,t){return new Point(this,e,t)};MontCurve.prototype.pointFromJSON=function pointFromJSON(e){return Point.fromJSON(this,e)};Point.prototype.precompute=function precompute(){};Point.prototype._encode=function _encode(){return this.getX().toArray(\"be\",this.curve.p.byteLength())};Point.fromJSON=function fromJSON(e,t){return new Point(e,t[0],t[1]||e.one)};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" z: \"+this.z.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0};Point.prototype.dbl=function dbl(){var e=this.x.redAdd(this.z);var t=e.redSqr();var r=this.x.redSub(this.z);var i=r.redSqr();var n=t.redSub(i);var a=t.redMul(i);var s=n.redMul(i.redAdd(this.curve.a24.redMul(n)));return this.curve.point(a,s)};Point.prototype.add=function add(){throw new Error(\"Not supported on Montgomery curve\")};Point.prototype.diffAdd=function diffAdd(e,t){var r=this.x.redAdd(this.z);var i=this.x.redSub(this.z);var n=e.x.redAdd(e.z);var a=e.x.redSub(e.z);var s=a.redMul(r);var o=n.redMul(i);var h=t.z.redMul(s.redAdd(o).redSqr());var u=t.x.redMul(s.redISub(o).redSqr());return this.curve.point(h,u)};Point.prototype.mul=function mul(e){var t=e.clone();var r=this;var i=this.curve.point(null,null);var n=this;for(var a=[];t.cmpn(0)!==0;t.iushrn(1))a.push(t.andln(1));for(var s=a.length-1;s>=0;s--){if(a[s]===0){r=r.diffAdd(i,n);i=i.dbl()}else{i=r.diffAdd(i,n);r=r.dbl()}}return i};Point.prototype.mulAdd=function mulAdd(){throw new Error(\"Not supported on Montgomery curve\")};Point.prototype.jumlAdd=function jumlAdd(){throw new Error(\"Not supported on Montgomery curve\")};Point.prototype.eq=function eq(e){return this.getX().cmp(e.getX())===0};Point.prototype.normalize=function normalize(){this.x=this.x.redMul(this.z.redInvm());this.z=this.curve.one;return this};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()}},4720:function(e,t,r){\"use strict\";var i=r(4401);var n=r(711);var a=r(3782);var s=r(2727);var o=i.assert;function ShortCurve(e){s.call(this,\"short\",e);this.a=new n(e.a,16).toRed(this.red);this.b=new n(e.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(e);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}a(ShortCurve,s);e.exports=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism(e){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var t;var r;if(e.beta){t=new n(e.beta,16).toRed(this.red)}else{var i=this._getEndoRoots(this.p);t=i[0].cmp(i[1])<0?i[0]:i[1];t=t.toRed(this.red)}if(e.lambda){r=new n(e.lambda,16)}else{var a=this._getEndoRoots(this.n);if(this.g.mul(a[0]).x.cmp(this.g.x.redMul(t))===0){r=a[0]}else{r=a[1];o(this.g.mul(r).x.cmp(this.g.x.redMul(t))===0)}}var s;if(e.basis){s=e.basis.map((function(e){return{a:new n(e.a,16),b:new n(e.b,16)}}))}else{s=this._getEndoBasis(r)}return{beta:t,lambda:r,basis:s}};ShortCurve.prototype._getEndoRoots=function _getEndoRoots(e){var t=e===this.p?this.red:n.mont(e);var r=new n(2).toRed(t).redInvm();var i=r.redNeg();var a=new n(3).toRed(t).redNeg().redSqrt().redMul(r);var s=i.redAdd(a).fromRed();var o=i.redSub(a).fromRed();return[s,o]};ShortCurve.prototype._getEndoBasis=function _getEndoBasis(e){var t=this.n.ushrn(Math.floor(this.n.bitLength()/2));var r=e;var i=this.n.clone();var a=new n(1);var s=new n(0);var o=new n(0);var h=new n(1);var u;var d;var c;var l;var p;var v;var b;var m=0;var y;var g;while(r.cmpn(0)!==0){var _=i.div(r);y=i.sub(_.mul(r));g=o.sub(_.mul(a));var w=h.sub(_.mul(s));if(!c&&y.cmp(t)<0){u=b.neg();d=a;c=y.neg();l=g}else if(c&&++m===2){break}b=y;i=r;r=y;o=a;a=g;h=s;s=w}p=y.neg();v=g;var M=c.sqr().add(l.sqr());var B=p.sqr().add(v.sqr());if(B.cmp(M)>=0){p=u;v=d}if(c.negative){c=c.neg();l=l.neg()}if(p.negative){p=p.neg();v=v.neg()}return[{a:c,b:l},{a:p,b:v}]};ShortCurve.prototype._endoSplit=function _endoSplit(e){var t=this.endo.basis;var r=t[0];var i=t[1];var n=i.b.mul(e).divRound(this.n);var a=r.b.neg().mul(e).divRound(this.n);var s=n.mul(r.a);var o=a.mul(i.a);var h=n.mul(r.b);var u=a.mul(i.b);var d=e.sub(s).sub(o);var c=h.add(u).neg();return{k1:d,k2:c}};ShortCurve.prototype.pointFromX=function pointFromX(e,t){e=new n(e,16);if(!e.red)e=e.toRed(this.red);var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b);var i=r.redSqrt();if(i.redSqr().redSub(r).cmp(this.zero)!==0)throw new Error(\"invalid point\");var a=i.fromRed().isOdd();if(t&&!a||!t&&a)i=i.redNeg();return this.point(e,i)};ShortCurve.prototype.validate=function validate(e){if(e.inf)return true;var t=e.x;var r=e.y;var i=this.a.redMul(t);var n=t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);return r.redSqr().redISub(n).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd(e,t,r){var i=this._endoWnafT1;var n=this._endoWnafT2;for(var a=0;a<e.length;a++){var s=this._endoSplit(t[a]);var o=e[a];var h=o._getBeta();if(s.k1.negative){s.k1.ineg();o=o.neg(true)}if(s.k2.negative){s.k2.ineg();h=h.neg(true)}i[a*2]=o;i[a*2+1]=h;n[a*2]=s.k1;n[a*2+1]=s.k2}var u=this._wnafMulAdd(1,i,n,a*2,r);for(var d=0;d<a*2;d++){i[d]=null;n[d]=null}return u};function Point(e,t,r,i){s.BasePoint.call(this,e,\"affine\");if(t===null&&r===null){this.x=null;this.y=null;this.inf=true}else{this.x=new n(t,16);this.y=new n(r,16);if(i){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}a(Point,s.BasePoint);ShortCurve.prototype.point=function point(e,t,r){return new Point(this,e,t,r)};ShortCurve.prototype.pointFromJSON=function pointFromJSON(e,t){return Point.fromJSON(this,e,t)};Point.prototype._getBeta=function _getBeta(){if(!this.curve.endo)return;var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve;var endoMul=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t;t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(endoMul)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(endoMul)}}}return t};Point.prototype.toJSON=function toJSON(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point.fromJSON=function fromJSON(e,t,r){if(typeof t===\"string\")t=JSON.parse(t);var i=e.point(t[0],t[1],r);if(!t[2])return i;function obj2point(t){return e.point(t[0],t[1],r)}var n=t[2];i.precomputed={beta:null,doubles:n.doubles&&{step:n.doubles.step,points:[i].concat(n.doubles.points.map(obj2point))},naf:n.naf&&{wnd:n.naf.wnd,points:[i].concat(n.naf.points.map(obj2point))}};return i};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.inf};Point.prototype.add=function add(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(this.x.cmp(e.x)===0)return this.curve.point(null,null);var t=this.y.redSub(e.y);if(t.cmpn(0)!==0)t=t.redMul(this.x.redSub(e.x).redInvm());var r=t.redSqr().redISub(this.x).redISub(e.x);var i=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,i)};Point.prototype.dbl=function dbl(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(e.cmpn(0)===0)return this.curve.point(null,null);var t=this.curve.a;var r=this.x.redSqr();var i=e.redInvm();var n=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i);var a=n.redSqr().redISub(this.x.redAdd(this.x));var s=n.redMul(this.x.redSub(a)).redISub(this.y);return this.curve.point(a,s)};Point.prototype.getX=function getX(){return this.x.fromRed()};Point.prototype.getY=function getY(){return this.y.fromRed()};Point.prototype.mul=function mul(e){e=new n(e,16);if(this.isInfinity())return this;else if(this._hasDoubles(e))return this.curve._fixedNafMul(this,e);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[e]);else return this.curve._wnafMul(this,e)};Point.prototype.mulAdd=function mulAdd(e,t,r){var i=[this,t];var n=[e,r];if(this.curve.endo)return this.curve._endoWnafMulAdd(i,n);else return this.curve._wnafMulAdd(1,i,n,2)};Point.prototype.jmulAdd=function jmulAdd(e,t,r){var i=[this,t];var n=[e,r];if(this.curve.endo)return this.curve._endoWnafMulAdd(i,n,true);else return this.curve._wnafMulAdd(1,i,n,2,true)};Point.prototype.eq=function eq(e){return this===e||this.inf===e.inf&&(this.inf||this.x.cmp(e.x)===0&&this.y.cmp(e.y)===0)};Point.prototype.neg=function neg(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed;var negate=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(negate)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(negate)}}}return t};Point.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var e=this.curve.jpoint(this.x,this.y,this.curve.one);return e};function JPoint(e,t,r,i){s.BasePoint.call(this,e,\"jacobian\");if(t===null&&r===null&&i===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new n(0)}else{this.x=new n(t,16);this.y=new n(r,16);this.z=new n(i,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}a(JPoint,s.BasePoint);ShortCurve.prototype.jpoint=function jpoint(e,t,r){return new JPoint(this,e,t,r)};JPoint.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm();var t=e.redSqr();var r=this.x.redMul(t);var i=this.y.redMul(t).redMul(e);return this.curve.point(r,i)};JPoint.prototype.neg=function neg(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function add(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr();var r=this.z.redSqr();var i=this.x.redMul(t);var n=e.x.redMul(r);var a=this.y.redMul(t.redMul(e.z));var s=e.y.redMul(r.redMul(this.z));var o=i.redSub(n);var h=a.redSub(s);if(o.cmpn(0)===0){if(h.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var u=o.redSqr();var d=u.redMul(o);var c=i.redMul(u);var l=h.redSqr().redIAdd(d).redISub(c).redISub(c);var p=h.redMul(c.redISub(l)).redISub(a.redMul(d));var v=this.z.redMul(e.z).redMul(o);return this.curve.jpoint(l,p,v)};JPoint.prototype.mixedAdd=function mixedAdd(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr();var r=this.x;var i=e.x.redMul(t);var n=this.y;var a=e.y.redMul(t).redMul(this.z);var s=r.redSub(i);var o=n.redSub(a);if(s.cmpn(0)===0){if(o.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h=s.redSqr();var u=h.redMul(s);var d=r.redMul(h);var c=o.redSqr().redIAdd(u).redISub(d).redISub(d);var l=o.redMul(d.redISub(c)).redISub(n.redMul(u));var p=this.z.redMul(s);return this.curve.jpoint(c,l,p)};JPoint.prototype.dblp=function dblp(e){if(e===0)return this;if(this.isInfinity())return this;if(!e)return this.dbl();if(this.curve.zeroA||this.curve.threeA){var t=this;for(var r=0;r<e;r++)t=t.dbl();return t}var i=this.curve.a;var n=this.curve.tinv;var a=this.x;var s=this.y;var o=this.z;var h=o.redSqr().redSqr();var u=s.redAdd(s);for(var r=0;r<e;r++){var d=a.redSqr();var c=u.redSqr();var l=c.redSqr();var p=d.redAdd(d).redIAdd(d).redIAdd(i.redMul(h));var v=a.redMul(c);var b=p.redSqr().redISub(v.redAdd(v));var m=v.redISub(b);var y=p.redMul(m);y=y.redIAdd(y).redISub(l);var g=u.redMul(o);if(r+1<e)h=h.redMul(l);a=b;o=g;u=y}return this.curve.jpoint(a,u.redMul(n),o)};JPoint.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint.prototype._zeroDbl=function _zeroDbl(){var e;var t;var r;if(this.zOne){var i=this.x.redSqr();var n=this.y.redSqr();var a=n.redSqr();var s=this.x.redAdd(n).redSqr().redISub(i).redISub(a);s=s.redIAdd(s);var o=i.redAdd(i).redIAdd(i);var h=o.redSqr().redISub(s).redISub(s);var u=a.redIAdd(a);u=u.redIAdd(u);u=u.redIAdd(u);e=h;t=o.redMul(s.redISub(h)).redISub(u);r=this.y.redAdd(this.y)}else{var d=this.x.redSqr();var c=this.y.redSqr();var l=c.redSqr();var p=this.x.redAdd(c).redSqr().redISub(d).redISub(l);p=p.redIAdd(p);var v=d.redAdd(d).redIAdd(d);var b=v.redSqr();var m=l.redIAdd(l);m=m.redIAdd(m);m=m.redIAdd(m);e=b.redISub(p).redISub(p);t=v.redMul(p.redISub(e)).redISub(m);r=this.y.redMul(this.z);r=r.redIAdd(r)}return this.curve.jpoint(e,t,r)};JPoint.prototype._threeDbl=function _threeDbl(){var e;var t;var r;if(this.zOne){var i=this.x.redSqr();var n=this.y.redSqr();var a=n.redSqr();var s=this.x.redAdd(n).redSqr().redISub(i).redISub(a);s=s.redIAdd(s);var o=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a);var h=o.redSqr().redISub(s).redISub(s);e=h;var u=a.redIAdd(a);u=u.redIAdd(u);u=u.redIAdd(u);t=o.redMul(s.redISub(h)).redISub(u);r=this.y.redAdd(this.y)}else{var d=this.z.redSqr();var c=this.y.redSqr();var l=this.x.redMul(c);var p=this.x.redSub(d).redMul(this.x.redAdd(d));p=p.redAdd(p).redIAdd(p);var v=l.redIAdd(l);v=v.redIAdd(v);var b=v.redAdd(v);e=p.redSqr().redISub(b);r=this.y.redAdd(this.z).redSqr().redISub(c).redISub(d);var m=c.redSqr();m=m.redIAdd(m);m=m.redIAdd(m);m=m.redIAdd(m);t=p.redMul(v.redISub(e)).redISub(m)}return this.curve.jpoint(e,t,r)};JPoint.prototype._dbl=function _dbl(){var e=this.curve.a;var t=this.x;var r=this.y;var i=this.z;var n=i.redSqr().redSqr();var a=t.redSqr();var s=r.redSqr();var o=a.redAdd(a).redIAdd(a).redIAdd(e.redMul(n));var h=t.redAdd(t);h=h.redIAdd(h);var u=h.redMul(s);var d=o.redSqr().redISub(u.redAdd(u));var c=u.redISub(d);var l=s.redSqr();l=l.redIAdd(l);l=l.redIAdd(l);l=l.redIAdd(l);var p=o.redMul(c).redISub(l);var v=r.redAdd(r).redMul(i);return this.curve.jpoint(d,p,v)};JPoint.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr();var t=this.y.redSqr();var r=this.z.redSqr();var i=t.redSqr();var n=e.redAdd(e).redIAdd(e);var a=n.redSqr();var s=this.x.redAdd(t).redSqr().redISub(e).redISub(i);s=s.redIAdd(s);s=s.redAdd(s).redIAdd(s);s=s.redISub(a);var o=s.redSqr();var h=i.redIAdd(i);h=h.redIAdd(h);h=h.redIAdd(h);h=h.redIAdd(h);var u=n.redIAdd(s).redSqr().redISub(a).redISub(o).redISub(h);var d=t.redMul(u);d=d.redIAdd(d);d=d.redIAdd(d);var c=this.x.redMul(o).redISub(d);c=c.redIAdd(c);c=c.redIAdd(c);var l=this.y.redMul(u.redMul(h.redISub(u)).redISub(s.redMul(o)));l=l.redIAdd(l);l=l.redIAdd(l);l=l.redIAdd(l);var p=this.z.redAdd(s).redSqr().redISub(r).redISub(o);return this.curve.jpoint(c,l,p)};JPoint.prototype.mul=function mul(e,t){e=new n(e,t);return this.curve._wnafMul(this,e)};JPoint.prototype.eq=function eq(e){if(e.type===\"affine\")return this.eq(e.toJ());if(this===e)return true;var t=this.z.redSqr();var r=e.z.redSqr();if(this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)!==0)return false;var i=t.redMul(this.z);var n=r.redMul(e.z);return this.y.redMul(n).redISub(e.y.redMul(i)).cmpn(0)===0};JPoint.prototype.eqXToP=function eqXToP(e){var t=this.z.redSqr();var r=e.toRed(this.curve.red).redMul(t);if(this.x.cmp(r)===0)return true;var i=e.clone();var n=this.curve.redN.redMul(t);for(;;){i.iadd(this.curve.n);if(i.cmp(this.curve.p)>=0)return false;r.redIAdd(n);if(this.x.cmp(r)===0)return true}};JPoint.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC JPoint Infinity>\";return\"<EC JPoint x: \"+this.x.toString(16,2)+\" y: \"+this.y.toString(16,2)+\" z: \"+this.z.toString(16,2)+\">\"};JPoint.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0}},6226:function(e,t,r){\"use strict\";var i=t;var n=r(7028);var a=r(9359);var s=r(4401);var o=s.assert;function PresetCurve(e){if(e.type===\"short\")this.curve=new a.short(e);else if(e.type===\"edwards\")this.curve=new a.edwards(e);else this.curve=new a.mont(e);this.g=this.curve.g;this.n=this.curve.n;this.hash=e.hash;o(this.g.validate(),\"Invalid curve\");o(this.g.mul(this.n).isInfinity(),\"Invalid curve, G*N != O\")}i.PresetCurve=PresetCurve;function defineCurve(e,t){Object.defineProperty(i,e,{configurable:true,enumerable:true,get:function(){var r=new PresetCurve(t);Object.defineProperty(i,e,{configurable:true,enumerable:true,value:r});return r}})}defineCurve(\"p192\",{type:\"short\",prime:\"p192\",p:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",b:\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",n:\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",hash:n.sha256,gRed:false,g:[\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]});defineCurve(\"p224\",{type:\"short\",prime:\"p224\",p:\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",b:\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",n:\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",hash:n.sha256,gRed:false,g:[\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]});defineCurve(\"p256\",{type:\"short\",prime:null,p:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",a:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",b:\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",n:\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",hash:n.sha256,gRed:false,g:[\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]});defineCurve(\"p384\",{type:\"short\",prime:null,p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"fffffffe ffffffff 00000000 00000000 ffffffff\",a:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"fffffffe ffffffff 00000000 00000000 fffffffc\",b:\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f \"+\"5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",n:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 \"+\"f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",hash:n.sha384,gRed:false,g:[\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 \"+\"5502f25d bf55296c 3a545e38 72760ab7\",\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 \"+\"0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]});defineCurve(\"p521\",{type:\"short\",prime:null,p:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff\",a:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff fffffffc\",b:\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b \"+\"99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd \"+\"3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",n:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 \"+\"f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",hash:n.sha512,gRed:false,g:[\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 \"+\"053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 \"+\"a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 \"+\"579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 \"+\"3fad0761 353c7086 a272c240 88be9476 9fd16650\"]});defineCurve(\"curve25519\",{type:\"mont\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"76d06\",b:\"1\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:n.sha256,gRed:false,g:[\"9\"]});defineCurve(\"ed25519\",{type:\"edwards\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"-1\",c:\"1\",d:\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:n.sha256,gRed:false,g:[\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\"6666666666666666666666666666666666666666666666666666666666666658\"]});var h;try{h=r(9702)}catch(e){h=undefined}defineCurve(\"secp256k1\",{type:\"short\",prime:\"k256\",p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",a:\"0\",b:\"7\",n:\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",h:\"1\",hash:n.sha256,beta:\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",lambda:\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",basis:[{a:\"3086d221a7d46bcde86c90e49284eb15\",b:\"-e4437ed6010e88286f547fa90abfe4c3\"},{a:\"114ca50f7a8e2f3f657c1108d9d44cfd8\",b:\"3086d221a7d46bcde86c90e49284eb15\"}],gRed:false,g:[\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",h]})},4088:function(e,t,r){\"use strict\";var i=r(711);var n=r(4910);var a=r(4401);var s=r(6226);var o=r(3500);var h=a.assert;var u=r(4724);var d=r(7526);function EC(e){if(!(this instanceof EC))return new EC(e);if(typeof e===\"string\"){h(s.hasOwnProperty(e),\"Unknown curve \"+e);e=s[e]}if(e instanceof s.PresetCurve)e={curve:e};this.curve=e.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=e.curve.g;this.g.precompute(e.curve.n.bitLength()+1);this.hash=e.hash||e.curve.hash}e.exports=EC;EC.prototype.keyPair=function keyPair(e){return new u(this,e)};EC.prototype.keyFromPrivate=function keyFromPrivate(e,t){return u.fromPrivate(this,e,t)};EC.prototype.keyFromPublic=function keyFromPublic(e,t){return u.fromPublic(this,e,t)};EC.prototype.genKeyPair=function genKeyPair(e){if(!e)e={};var t=new n({hash:this.hash,pers:e.pers,persEnc:e.persEnc||\"utf8\",entropy:e.entropy||o(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||\"utf8\",nonce:this.n.toArray()});var r=this.n.byteLength();var a=this.n.sub(new i(2));do{var s=new i(t.generate(r));if(s.cmp(a)>0)continue;s.iaddn(1);return this.keyFromPrivate(s)}while(true)};EC.prototype._truncateToN=function truncateToN(e,t){var r=e.byteLength()*8-this.n.bitLength();if(r>0)e=e.ushrn(r);if(!t&&e.cmp(this.n)>=0)return e.sub(this.n);else return e};EC.prototype.sign=function sign(e,t,r,a){if(typeof r===\"object\"){a=r;r=null}if(!a)a={};t=this.keyFromPrivate(t,r);e=this._truncateToN(new i(e,16));var s=this.n.byteLength();var o=t.getPrivate().toArray(\"be\",s);var h=e.toArray(\"be\",s);var u=new n({hash:this.hash,entropy:o,nonce:h,pers:a.pers,persEnc:a.persEnc||\"utf8\"});var c=this.n.sub(new i(1));for(var l=0;true;l++){var p=a.k?a.k(l):new i(u.generate(this.n.byteLength()));p=this._truncateToN(p,true);if(p.cmpn(1)<=0||p.cmp(c)>=0)continue;var v=this.g.mul(p);if(v.isInfinity())continue;var b=v.getX();var m=b.umod(this.n);if(m.cmpn(0)===0)continue;var y=p.invm(this.n).mul(m.mul(t.getPrivate()).iadd(e));y=y.umod(this.n);if(y.cmpn(0)===0)continue;var g=(v.getY().isOdd()?1:0)|(b.cmp(m)!==0?2:0);if(a.canonical&&y.cmp(this.nh)>0){y=this.n.sub(y);g^=1}return new d({r:m,s:y,recoveryParam:g})}};EC.prototype.verify=function verify(e,t,r,n){e=this._truncateToN(new i(e,16));r=this.keyFromPublic(r,n);t=new d(t,\"hex\");var a=t.r;var s=t.s;if(a.cmpn(1)<0||a.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var o=s.invm(this.n);var h=o.mul(e).umod(this.n);var u=o.mul(a).umod(this.n);if(!this.curve._maxwellTrick){var c=this.g.mulAdd(h,r.getPublic(),u);if(c.isInfinity())return false;return c.getX().umod(this.n).cmp(a)===0}var c=this.g.jmulAdd(h,r.getPublic(),u);if(c.isInfinity())return false;return c.eqXToP(a)};EC.prototype.recoverPubKey=function(e,t,r,n){h((3&r)===r,\"The recovery param is more than two bits\");t=new d(t,n);var a=this.n;var s=new i(e);var o=t.r;var u=t.s;var c=r&1;var l=r>>1;if(o.cmp(this.curve.p.umod(this.curve.n))>=0&&l)throw new Error(\"Unable to find sencond key candinate\");if(l)o=this.curve.pointFromX(o.add(this.curve.n),c);else o=this.curve.pointFromX(o,c);var p=t.r.invm(a);var v=a.sub(s).mul(p).umod(a);var b=u.mul(p).umod(a);return this.g.mulAdd(v,o,b)};EC.prototype.getKeyRecoveryParam=function(e,t,r,i){t=new d(t,i);if(t.recoveryParam!==null)return t.recoveryParam;for(var n=0;n<4;n++){var a;try{a=this.recoverPubKey(e,t,n)}catch(e){continue}if(a.eq(r))return n}throw new Error(\"Unable to find valid recovery factor\")}},4724:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.assert;function KeyPair(e,t){this.ec=e;this.priv=null;this.pub=null;if(t.priv)this._importPrivate(t.priv,t.privEnc);if(t.pub)this._importPublic(t.pub,t.pubEnc)}e.exports=KeyPair;KeyPair.fromPublic=function fromPublic(e,t,r){if(t instanceof KeyPair)return t;return new KeyPair(e,{pub:t,pubEnc:r})};KeyPair.fromPrivate=function fromPrivate(e,t,r){if(t instanceof KeyPair)return t;return new KeyPair(e,{priv:t,privEnc:r})};KeyPair.prototype.validate=function validate(){var e=this.getPublic();if(e.isInfinity())return{result:false,reason:\"Invalid public key\"};if(!e.validate())return{result:false,reason:\"Public key is not a point\"};if(!e.mul(this.ec.curve.n).isInfinity())return{result:false,reason:\"Public key * N != O\"};return{result:true,reason:null}};KeyPair.prototype.getPublic=function getPublic(e,t){if(typeof e===\"string\"){t=e;e=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!t)return this.pub;return this.pub.encode(t,e)};KeyPair.prototype.getPrivate=function getPrivate(e){if(e===\"hex\")return this.priv.toString(16,2);else return this.priv};KeyPair.prototype._importPrivate=function _importPrivate(e,t){this.priv=new i(e,t||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function _importPublic(e,t){if(e.x||e.y){if(this.ec.curve.type===\"mont\"){a(e.x,\"Need x coordinate\")}else if(this.ec.curve.type===\"short\"||this.ec.curve.type===\"edwards\"){a(e.x&&e.y,\"Need both x and y coordinate\")}this.pub=this.ec.curve.point(e.x,e.y);return}this.pub=this.ec.curve.decodePoint(e,t)};KeyPair.prototype.derive=function derive(e){return e.mul(this.priv).getX()};KeyPair.prototype.sign=function sign(e,t,r){return this.ec.sign(e,this,t,r)};KeyPair.prototype.verify=function verify(e,t){return this.ec.verify(e,t,this)};KeyPair.prototype.inspect=function inspect(){return\"<Key priv: \"+(this.priv&&this.priv.toString(16,2))+\" pub: \"+(this.pub&&this.pub.inspect())+\" >\"}},7526:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.assert;function Signature(e,t){if(e instanceof Signature)return e;if(this._importDER(e,t))return;a(e.r&&e.s,\"Signature without r or s\");this.r=new i(e.r,16);this.s=new i(e.s,16);if(e.recoveryParam===undefined)this.recoveryParam=null;else this.recoveryParam=e.recoveryParam}e.exports=Signature;function Position(){this.place=0}function getLength(e,t){var r=e[t.place++];if(!(r&128)){return r}var i=r&15;if(i===0||i>4){return false}var n=0;for(var a=0,s=t.place;a<i;a++,s++){n<<=8;n|=e[s];n>>>=0}if(n<=127){return false}t.place=s;return n}function rmPadding(e){var t=0;var r=e.length-1;while(!e[t]&&!(e[t+1]&128)&&t<r){t++}if(t===0){return e}return e.slice(t)}Signature.prototype._importDER=function _importDER(e,t){e=n.toArray(e,t);var r=new Position;if(e[r.place++]!==48){return false}var a=getLength(e,r);if(a===false){return false}if(a+r.place!==e.length){return false}if(e[r.place++]!==2){return false}var s=getLength(e,r);if(s===false){return false}var o=e.slice(r.place,s+r.place);r.place+=s;if(e[r.place++]!==2){return false}var h=getLength(e,r);if(h===false){return false}if(e.length!==h+r.place){return false}var u=e.slice(r.place,h+r.place);if(o[0]===0){if(o[1]&128){o=o.slice(1)}else{return false}}if(u[0]===0){if(u[1]&128){u=u.slice(1)}else{return false}}this.r=new i(o);this.s=new i(u);this.recoveryParam=null;return true};function constructLength(e,t){if(t<128){e.push(t);return}var r=1+(Math.log(t)/Math.LN2>>>3);e.push(r|128);while(--r){e.push(t>>>(r<<3)&255)}e.push(t)}Signature.prototype.toDER=function toDER(e){var t=this.r.toArray();var r=this.s.toArray();if(t[0]&128)t=[0].concat(t);if(r[0]&128)r=[0].concat(r);t=rmPadding(t);r=rmPadding(r);while(!r[0]&&!(r[1]&128)){r=r.slice(1)}var i=[2];constructLength(i,t.length);i=i.concat(t);i.push(2);constructLength(i,r.length);var a=i.concat(r);var s=[48];constructLength(s,a.length);s=s.concat(a);return n.encode(s,e)}},8511:function(e,t,r){\"use strict\";var i=r(7028);var n=r(6226);var a=r(4401);var s=a.assert;var o=a.parseBytes;var h=r(9917);var u=r(9314);function EDDSA(e){s(e===\"ed25519\",\"only tested with ed25519 so far\");if(!(this instanceof EDDSA))return new EDDSA(e);var e=n[e].curve;this.curve=e;this.g=e.g;this.g.precompute(e.n.bitLength()+1);this.pointClass=e.point().constructor;this.encodingLength=Math.ceil(e.n.bitLength()/8);this.hash=i.sha512}e.exports=EDDSA;EDDSA.prototype.sign=function sign(e,t){e=o(e);var r=this.keyFromSecret(t);var i=this.hashInt(r.messagePrefix(),e);var n=this.g.mul(i);var a=this.encodePoint(n);var s=this.hashInt(a,r.pubBytes(),e).mul(r.priv());var h=i.add(s).umod(this.curve.n);return this.makeSignature({R:n,S:h,Rencoded:a})};EDDSA.prototype.verify=function verify(e,t,r){e=o(e);t=this.makeSignature(t);var i=this.keyFromPublic(r);var n=this.hashInt(t.Rencoded(),i.pubBytes(),e);var a=this.g.mul(t.S());var s=t.R().add(i.pub().mul(n));return s.eq(a)};EDDSA.prototype.hashInt=function hashInt(){var e=this.hash();for(var t=0;t<arguments.length;t++)e.update(arguments[t]);return a.intFromLE(e.digest()).umod(this.curve.n)};EDDSA.prototype.keyFromPublic=function keyFromPublic(e){return h.fromPublic(this,e)};EDDSA.prototype.keyFromSecret=function keyFromSecret(e){return h.fromSecret(this,e)};EDDSA.prototype.makeSignature=function makeSignature(e){if(e instanceof u)return e;return new u(this,e)};EDDSA.prototype.encodePoint=function encodePoint(e){var t=e.getY().toArray(\"le\",this.encodingLength);t[this.encodingLength-1]|=e.getX().isOdd()?128:0;return t};EDDSA.prototype.decodePoint=function decodePoint(e){e=a.parseBytes(e);var t=e.length-1;var r=e.slice(0,t).concat(e[t]&~128);var i=(e[t]&128)!==0;var n=a.intFromLE(r);return this.curve.pointFromY(n,i)};EDDSA.prototype.encodeInt=function encodeInt(e){return e.toArray(\"le\",this.encodingLength)};EDDSA.prototype.decodeInt=function decodeInt(e){return a.intFromLE(e)};EDDSA.prototype.isPoint=function isPoint(e){return e instanceof this.pointClass}},9917:function(e,t,r){\"use strict\";var i=r(4401);var n=i.assert;var a=i.parseBytes;var s=i.cachedProperty;function KeyPair(e,t){this.eddsa=e;this._secret=a(t.secret);if(e.isPoint(t.pub))this._pub=t.pub;else this._pubBytes=a(t.pub)}KeyPair.fromPublic=function fromPublic(e,t){if(t instanceof KeyPair)return t;return new KeyPair(e,{pub:t})};KeyPair.fromSecret=function fromSecret(e,t){if(t instanceof KeyPair)return t;return new KeyPair(e,{secret:t})};KeyPair.prototype.secret=function secret(){return this._secret};s(KeyPair,\"pubBytes\",(function pubBytes(){return this.eddsa.encodePoint(this.pub())}));s(KeyPair,\"pub\",(function pub(){if(this._pubBytes)return this.eddsa.decodePoint(this._pubBytes);return this.eddsa.g.mul(this.priv())}));s(KeyPair,\"privBytes\",(function privBytes(){var e=this.eddsa;var t=this.hash();var r=e.encodingLength-1;var i=t.slice(0,e.encodingLength);i[0]&=248;i[r]&=127;i[r]|=64;return i}));s(KeyPair,\"priv\",(function priv(){return this.eddsa.decodeInt(this.privBytes())}));s(KeyPair,\"hash\",(function hash(){return this.eddsa.hash().update(this.secret()).digest()}));s(KeyPair,\"messagePrefix\",(function messagePrefix(){return this.hash().slice(this.eddsa.encodingLength)}));KeyPair.prototype.sign=function sign(e){n(this._secret,\"KeyPair can only verify\");return this.eddsa.sign(e,this)};KeyPair.prototype.verify=function verify(e,t){return this.eddsa.verify(e,t,this)};KeyPair.prototype.getSecret=function getSecret(e){n(this._secret,\"KeyPair is public only\");return i.encode(this.secret(),e)};KeyPair.prototype.getPublic=function getPublic(e){return i.encode(this.pubBytes(),e)};e.exports=KeyPair},9314:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.assert;var s=n.cachedProperty;var o=n.parseBytes;function Signature(e,t){this.eddsa=e;if(typeof t!==\"object\")t=o(t);if(Array.isArray(t)){t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}}a(t.R&&t.S,\"Signature without R or S\");if(e.isPoint(t.R))this._R=t.R;if(t.S instanceof i)this._S=t.S;this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded;this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}s(Signature,\"S\",(function S(){return this.eddsa.decodeInt(this.Sencoded())}));s(Signature,\"R\",(function R(){return this.eddsa.decodePoint(this.Rencoded())}));s(Signature,\"Rencoded\",(function Rencoded(){return this.eddsa.encodePoint(this.R())}));s(Signature,\"Sencoded\",(function Sencoded(){return this.eddsa.encodeInt(this.S())}));Signature.prototype.toBytes=function toBytes(){return this.Rencoded().concat(this.Sencoded())};Signature.prototype.toHex=function toHex(){return n.encode(this.toBytes(),\"hex\").toUpperCase()};e.exports=Signature},9702:function(e){e.exports={doubles:{step:4,points:[[\"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\",\"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"],[\"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\",\"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"],[\"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\",\"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"],[\"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\",\"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"],[\"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\",\"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"],[\"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\",\"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"],[\"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\",\"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"],[\"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\",\"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"],[\"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\",\"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"],[\"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\",\"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"],[\"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\",\"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"],[\"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\",\"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"],[\"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\",\"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"],[\"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\",\"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"],[\"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\",\"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"],[\"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\",\"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"],[\"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\",\"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"],[\"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\",\"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"],[\"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\",\"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"],[\"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\",\"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"],[\"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\",\"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"],[\"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\",\"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"],[\"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\",\"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"],[\"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\",\"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"],[\"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\",\"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"],[\"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\",\"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"],[\"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\",\"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"],[\"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\",\"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"],[\"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\",\"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"],[\"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\",\"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"],[\"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\",\"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"],[\"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\",\"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"],[\"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\",\"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"],[\"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\",\"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"],[\"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\",\"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"],[\"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\",\"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"],[\"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\",\"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"],[\"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\",\"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"],[\"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\",\"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"],[\"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\",\"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"],[\"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\",\"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"],[\"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\",\"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"],[\"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\",\"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"],[\"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\",\"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"],[\"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\",\"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"],[\"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\",\"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"],[\"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\",\"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"],[\"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\",\"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"],[\"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\",\"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"],[\"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\",\"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"],[\"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\",\"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"],[\"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\",\"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"],[\"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\",\"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"],[\"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\",\"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"],[\"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\",\"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"],[\"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\",\"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"],[\"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\",\"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"],[\"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\",\"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"],[\"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\",\"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"],[\"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\",\"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"],[\"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\",\"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"],[\"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\",\"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"],[\"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\",\"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"],[\"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\",\"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"],[\"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\",\"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"]]},naf:{wnd:7,points:[[\"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\",\"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"],[\"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\",\"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"],[\"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\",\"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"],[\"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\",\"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"],[\"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\",\"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"],[\"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\",\"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"],[\"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\",\"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"],[\"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\",\"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"],[\"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\",\"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"],[\"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\",\"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"],[\"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\",\"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"],[\"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\",\"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"],[\"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\",\"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"],[\"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\",\"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"],[\"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\",\"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"],[\"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\",\"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"],[\"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\",\"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"],[\"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\",\"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"],[\"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\",\"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"],[\"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\",\"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"],[\"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\",\"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"],[\"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\",\"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"],[\"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\",\"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"],[\"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\",\"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"],[\"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\",\"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"],[\"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\",\"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"],[\"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\",\"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"],[\"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\",\"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"],[\"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\",\"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"],[\"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\",\"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"],[\"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\",\"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"],[\"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\",\"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"],[\"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\",\"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"],[\"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\",\"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"],[\"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\",\"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"],[\"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\",\"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"],[\"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\",\"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"],[\"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\",\"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"],[\"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\",\"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"],[\"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\",\"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"],[\"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\",\"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"],[\"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\",\"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"],[\"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\",\"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"],[\"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\",\"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"],[\"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\",\"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"],[\"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\",\"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"],[\"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\",\"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"],[\"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\",\"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"],[\"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\",\"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"],[\"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\",\"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"],[\"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\",\"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"],[\"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\",\"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"],[\"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\",\"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"],[\"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\",\"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"],[\"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\",\"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"],[\"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\",\"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"],[\"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\",\"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"],[\"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\",\"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"],[\"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\",\"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"],[\"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\",\"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"],[\"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\",\"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"],[\"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\",\"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"],[\"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\",\"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"],[\"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\",\"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"],[\"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\",\"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"],[\"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\",\"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"],[\"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\",\"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"],[\"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\",\"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"],[\"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\",\"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"],[\"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\",\"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"],[\"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\",\"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"],[\"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\",\"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"],[\"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\",\"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"],[\"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\",\"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"],[\"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\",\"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"],[\"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\",\"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"],[\"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\",\"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"],[\"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\",\"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"],[\"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\",\"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"],[\"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\",\"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"],[\"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\",\"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"],[\"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\",\"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"],[\"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\",\"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"],[\"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\",\"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"],[\"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\",\"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"],[\"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\",\"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"],[\"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\",\"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"],[\"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\",\"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"],[\"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\",\"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"],[\"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\",\"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"],[\"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\",\"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"],[\"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\",\"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"],[\"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\",\"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"],[\"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\",\"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"],[\"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\",\"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"],[\"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\",\"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"],[\"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\",\"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"],[\"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\",\"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"],[\"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\",\"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"],[\"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\",\"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"],[\"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\",\"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"],[\"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\",\"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"],[\"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\",\"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"],[\"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\",\"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"],[\"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\",\"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"],[\"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\",\"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"],[\"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\",\"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"],[\"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\",\"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"],[\"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\",\"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"],[\"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\",\"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"],[\"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\",\"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"],[\"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\",\"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"],[\"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\",\"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"],[\"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\",\"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"],[\"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\",\"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"],[\"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\",\"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"],[\"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\",\"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"],[\"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\",\"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"],[\"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\",\"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"],[\"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\",\"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"],[\"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\",\"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"],[\"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\",\"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"],[\"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\",\"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"],[\"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\",\"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"],[\"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\",\"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"],[\"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\",\"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"],[\"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\",\"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"]]}}},4401:function(e,t,r){\"use strict\";var i=t;var n=r(711);var a=r(3523);var s=r(6545);i.assert=a;i.toArray=s.toArray;i.zero2=s.zero2;i.toHex=s.toHex;i.encode=s.encode;function getNAF(e,t,r){var i=new Array(Math.max(e.bitLength(),r)+1);i.fill(0);var n=1<<t+1;var a=e.clone();for(var s=0;s<i.length;s++){var o;var h=a.andln(n-1);if(a.isOdd()){if(h>(n>>1)-1)o=(n>>1)-h;else o=h;a.isubn(o)}else{o=0}i[s]=o;a.iushrn(1)}return i}i.getNAF=getNAF;function getJSF(e,t){var r=[[],[]];e=e.clone();t=t.clone();var i=0;var n=0;while(e.cmpn(-i)>0||t.cmpn(-n)>0){var a=e.andln(3)+i&3;var s=t.andln(3)+n&3;if(a===3)a=-1;if(s===3)s=-1;var o;if((a&1)===0){o=0}else{var h=e.andln(7)+i&7;if((h===3||h===5)&&s===2)o=-a;else o=a}r[0].push(o);var u;if((s&1)===0){u=0}else{var h=t.andln(7)+n&7;if((h===3||h===5)&&a===2)u=-s;else u=s}r[1].push(u);if(2*i===o+1)i=1-i;if(2*n===u+1)n=1-n;e.iushrn(1);t.iushrn(1)}return r}i.getJSF=getJSF;function cachedProperty(e,t,r){var i=\"_\"+t;e.prototype[t]=function cachedProperty(){return this[i]!==undefined?this[i]:this[i]=r.call(this)}}i.cachedProperty=cachedProperty;function parseBytes(e){return typeof e===\"string\"?i.toArray(e,\"hex\"):e}i.parseBytes=parseBytes;function intFromLE(e){return new n(e,\"hex\",\"le\")}i.intFromLE=intFromLE},8368:function(e,t,r){var i=r(6911).Buffer;var n=r(3533);function EVP_BytesToKey(e,t,r,a){if(!i.isBuffer(e))e=i.from(e,\"binary\");if(t){if(!i.isBuffer(t))t=i.from(t,\"binary\");if(t.length!==8)throw new RangeError(\"salt should be Buffer with 8 byte length\")}var s=r/8;var o=i.alloc(s);var h=i.alloc(a||0);var u=i.alloc(0);while(s>0||a>0){var d=new n;d.update(u);d.update(e);if(t)d.update(t);u=d.digest();var c=0;if(s>0){var l=o.length-s;c=Math.min(s,u.length);u.copy(o,l,0,c);s-=c}if(c<u.length&&a>0){var p=h.length-a;var v=Math.min(a,u.length-c);u.copy(h,p,c,c+v);a-=v}}u.fill(0);return{key:o,iv:h}}e.exports=EVP_BytesToKey},9029:function(e,t,r){\"use strict\";var i=r(6911).Buffer;var n=r(3726).Transform;var a=r(3782);function throwIfNotStringOrBuffer(e,t){if(!i.isBuffer(e)&&typeof e!==\"string\"){throw new TypeError(t+\" must be a string or a buffer\")}}function HashBase(e){n.call(this);this._block=i.allocUnsafe(e);this._blockSize=e;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false}a(HashBase,n);HashBase.prototype._transform=function(e,t,r){var i=null;try{this.update(e,t)}catch(e){i=e}r(i)};HashBase.prototype._flush=function(e){var t=null;try{this.push(this.digest())}catch(e){t=e}e(t)};HashBase.prototype.update=function(e,t){throwIfNotStringOrBuffer(e,\"Data\");if(this._finalized)throw new Error(\"Digest already called\");if(!i.isBuffer(e))e=i.from(e,t);var r=this._block;var n=0;while(this._blockOffset+e.length-n>=this._blockSize){for(var a=this._blockOffset;a<this._blockSize;)r[a++]=e[n++];this._update();this._blockOffset=0}while(n<e.length)r[this._blockOffset++]=e[n++];for(var s=0,o=e.length*8;o>0;++s){this._length[s]+=o;o=this._length[s]/4294967296|0;if(o>0)this._length[s]-=4294967296*o}return this};HashBase.prototype._update=function(){throw new Error(\"_update is not implemented\")};HashBase.prototype.digest=function(e){if(this._finalized)throw new Error(\"Digest already called\");this._finalized=true;var t=this._digest();if(e!==undefined)t=t.toString(e);this._block.fill(0);this._blockOffset=0;for(var r=0;r<4;++r)this._length[r]=0;return t};HashBase.prototype._digest=function(){throw new Error(\"_digest is not implemented\")};e.exports=HashBase},7028:function(e,t,r){var i=t;i.utils=r(263);i.common=r(1330);i.sha=r(301);i.ripemd=r(3079);i.hmac=r(3092);i.sha1=i.sha.sha1;i.sha256=i.sha.sha256;i.sha224=i.sha.sha224;i.sha384=i.sha.sha384;i.sha512=i.sha.sha512;i.ripemd160=i.ripemd.ripemd160},1330:function(e,t,r){\"use strict\";var i=r(263);var n=r(3523);function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian=\"big\";this._delta8=this.blockSize/8;this._delta32=this.blockSize/32}t.BlockHash=BlockHash;BlockHash.prototype.update=function update(e,t){e=i.toArray(e,t);if(!this.pending)this.pending=e;else this.pending=this.pending.concat(e);this.pendingTotal+=e.length;if(this.pending.length>=this._delta8){e=this.pending;var r=e.length%this._delta8;this.pending=e.slice(e.length-r,e.length);if(this.pending.length===0)this.pending=null;e=i.join32(e,0,e.length-r,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this};BlockHash.prototype.digest=function digest(e){this.update(this._pad());n(this.pending===null);return this._digest(e)};BlockHash.prototype._pad=function pad(){var e=this.pendingTotal;var t=this._delta8;var r=t-(e+this.padLength)%t;var i=new Array(r+this.padLength);i[0]=128;for(var n=1;n<r;n++)i[n]=0;e<<=3;if(this.endian===\"big\"){for(var a=8;a<this.padLength;a++)i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=e>>>24&255;i[n++]=e>>>16&255;i[n++]=e>>>8&255;i[n++]=e&255}else{i[n++]=e&255;i[n++]=e>>>8&255;i[n++]=e>>>16&255;i[n++]=e>>>24&255;i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=0;for(a=8;a<this.padLength;a++)i[n++]=0}return i}},3092:function(e,t,r){\"use strict\";var i=r(263);var n=r(3523);function Hmac(e,t,r){if(!(this instanceof Hmac))return new Hmac(e,t,r);this.Hash=e;this.blockSize=e.blockSize/8;this.outSize=e.outSize/8;this.inner=null;this.outer=null;this._init(i.toArray(t,r))}e.exports=Hmac;Hmac.prototype._init=function init(e){if(e.length>this.blockSize)e=(new this.Hash).update(e).digest();n(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;this.inner=(new this.Hash).update(e);for(t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)};Hmac.prototype.update=function update(e,t){this.inner.update(e,t);return this};Hmac.prototype.digest=function digest(e){this.outer.update(this.inner.digest());return this.outer.digest(e)}},3079:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=i.rotl32;var s=i.sum32;var o=i.sum32_3;var h=i.sum32_4;var u=n.BlockHash;function RIPEMD160(){if(!(this instanceof RIPEMD160))return new RIPEMD160;u.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.endian=\"little\"}i.inherits(RIPEMD160,u);t.ripemd160=RIPEMD160;RIPEMD160.blockSize=512;RIPEMD160.outSize=160;RIPEMD160.hmacStrength=192;RIPEMD160.padLength=64;RIPEMD160.prototype._update=function update(e,t){var r=this.h[0];var i=this.h[1];var n=this.h[2];var u=this.h[3];var v=this.h[4];var b=r;var m=i;var y=n;var g=u;var _=v;for(var w=0;w<80;w++){var M=s(a(h(r,f(w,i,n,u),e[d[w]+t],K(w)),l[w]),v);r=v;v=u;u=a(n,10);n=i;i=M;M=s(a(h(b,f(79-w,m,y,g),e[c[w]+t],Kh(w)),p[w]),_);b=_;_=g;g=a(y,10);y=m;m=M}M=o(this.h[1],n,g);this.h[1]=o(this.h[2],u,_);this.h[2]=o(this.h[3],v,b);this.h[3]=o(this.h[4],r,m);this.h[4]=o(this.h[0],i,y);this.h[0]=M};RIPEMD160.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"little\");else return i.split32(this.h,\"little\")};function f(e,t,r,i){if(e<=15)return t^r^i;else if(e<=31)return t&r|~t&i;else if(e<=47)return(t|~r)^i;else if(e<=63)return t&i|r&~i;else return t^(r|~i)}function K(e){if(e<=15)return 0;else if(e<=31)return 1518500249;else if(e<=47)return 1859775393;else if(e<=63)return 2400959708;else return 2840853838}function Kh(e){if(e<=15)return 1352829926;else if(e<=31)return 1548603684;else if(e<=47)return 1836072691;else if(e<=63)return 2053994217;else return 0}var d=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var c=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var l=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var p=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},301:function(e,t,r){\"use strict\";t.sha1=r(2742);t.sha224=r(7105);t.sha256=r(1525);t.sha384=r(9948);t.sha512=r(1319)},2742:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=r(2975);var s=i.rotl32;var o=i.sum32;var h=i.sum32_5;var u=a.ft_1;var d=n.BlockHash;var c=[1518500249,1859775393,2400959708,3395469782];function SHA1(){if(!(this instanceof SHA1))return new SHA1;d.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.W=new Array(80)}i.inherits(SHA1,d);e.exports=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(e,t){var r=this.W;for(var i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=s(r[i-3]^r[i-8]^r[i-14]^r[i-16],1);var n=this.h[0];var a=this.h[1];var d=this.h[2];var l=this.h[3];var p=this.h[4];for(i=0;i<r.length;i++){var v=~~(i/20);var b=h(s(n,5),u(v,a,d,l),p,r[i],c[v]);p=l;l=d;d=s(a,30);a=n;n=b}this.h[0]=o(this.h[0],n);this.h[1]=o(this.h[1],a);this.h[2]=o(this.h[2],d);this.h[3]=o(this.h[3],l);this.h[4]=o(this.h[4],p)};SHA1.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"big\");else return i.split32(this.h,\"big\")}},7105:function(e,t,r){\"use strict\";var i=r(263);var n=r(1525);function SHA224(){if(!(this instanceof SHA224))return new SHA224;n.call(this);this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}i.inherits(SHA224,n);e.exports=SHA224;SHA224.blockSize=512;SHA224.outSize=224;SHA224.hmacStrength=192;SHA224.padLength=64;SHA224.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h.slice(0,7),\"big\");else return i.split32(this.h.slice(0,7),\"big\")}},1525:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=r(2975);var s=r(3523);var o=i.sum32;var h=i.sum32_4;var u=i.sum32_5;var d=a.ch32;var c=a.maj32;var l=a.s0_256;var p=a.s1_256;var v=a.g0_256;var b=a.g1_256;var m=n.BlockHash;var y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function SHA256(){if(!(this instanceof SHA256))return new SHA256;m.call(this);this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];this.k=y;this.W=new Array(64)}i.inherits(SHA256,m);e.exports=SHA256;SHA256.blockSize=512;SHA256.outSize=256;SHA256.hmacStrength=192;SHA256.padLength=64;SHA256.prototype._update=function _update(e,t){var r=this.W;for(var i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=h(b(r[i-2]),r[i-7],v(r[i-15]),r[i-16]);var n=this.h[0];var a=this.h[1];var m=this.h[2];var y=this.h[3];var g=this.h[4];var _=this.h[5];var w=this.h[6];var M=this.h[7];s(this.k.length===r.length);for(i=0;i<r.length;i++){var B=u(M,p(g),d(g,_,w),this.k[i],r[i]);var E=o(l(n),c(n,a,m));M=w;w=_;_=g;g=o(y,B);y=m;m=a;a=n;n=o(B,E)}this.h[0]=o(this.h[0],n);this.h[1]=o(this.h[1],a);this.h[2]=o(this.h[2],m);this.h[3]=o(this.h[3],y);this.h[4]=o(this.h[4],g);this.h[5]=o(this.h[5],_);this.h[6]=o(this.h[6],w);this.h[7]=o(this.h[7],M)};SHA256.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"big\");else return i.split32(this.h,\"big\")}},9948:function(e,t,r){\"use strict\";var i=r(263);var n=r(1319);function SHA384(){if(!(this instanceof SHA384))return new SHA384;n.call(this);this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}i.inherits(SHA384,n);e.exports=SHA384;SHA384.blockSize=1024;SHA384.outSize=384;SHA384.hmacStrength=192;SHA384.padLength=128;SHA384.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h.slice(0,12),\"big\");else return i.split32(this.h.slice(0,12),\"big\")}},1319:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=r(3523);var s=i.rotr64_hi;var o=i.rotr64_lo;var h=i.shr64_hi;var u=i.shr64_lo;var d=i.sum64;var c=i.sum64_hi;var l=i.sum64_lo;var p=i.sum64_4_hi;var v=i.sum64_4_lo;var b=i.sum64_5_hi;var m=i.sum64_5_lo;var y=n.BlockHash;var g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function SHA512(){if(!(this instanceof SHA512))return new SHA512;y.call(this);this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];this.k=g;this.W=new Array(160)}i.inherits(SHA512,y);e.exports=SHA512;SHA512.blockSize=1024;SHA512.outSize=512;SHA512.hmacStrength=192;SHA512.padLength=128;SHA512.prototype._prepareBlock=function _prepareBlock(e,t){var r=this.W;for(var i=0;i<32;i++)r[i]=e[t+i];for(;i<r.length;i+=2){var n=g1_512_hi(r[i-4],r[i-3]);var a=g1_512_lo(r[i-4],r[i-3]);var s=r[i-14];var o=r[i-13];var h=g0_512_hi(r[i-30],r[i-29]);var u=g0_512_lo(r[i-30],r[i-29]);var d=r[i-32];var c=r[i-31];r[i]=p(n,a,s,o,h,u,d,c);r[i+1]=v(n,a,s,o,h,u,d,c)}};SHA512.prototype._update=function _update(e,t){this._prepareBlock(e,t);var r=this.W;var i=this.h[0];var n=this.h[1];var s=this.h[2];var o=this.h[3];var h=this.h[4];var u=this.h[5];var p=this.h[6];var v=this.h[7];var y=this.h[8];var g=this.h[9];var _=this.h[10];var w=this.h[11];var M=this.h[12];var B=this.h[13];var E=this.h[14];var k=this.h[15];a(this.k.length===r.length);for(var A=0;A<r.length;A+=2){var N=E;var P=k;var x=s1_512_hi(y,g);var I=s1_512_lo(y,g);var C=ch64_hi(y,g,_,w,M,B);var D=ch64_lo(y,g,_,w,M,B);var T=this.k[A];var j=this.k[A+1];var q=r[A];var O=r[A+1];var H=b(N,P,x,I,C,D,T,j,q,O);var L=m(N,P,x,I,C,D,T,j,q,O);N=s0_512_hi(i,n);P=s0_512_lo(i,n);x=maj64_hi(i,n,s,o,h,u);I=maj64_lo(i,n,s,o,h,u);var z=c(N,P,x,I);var F=l(N,P,x,I);E=M;k=B;M=_;B=w;_=y;w=g;y=c(p,v,H,L);g=l(v,v,H,L);p=h;v=u;h=s;u=o;s=i;o=n;i=c(H,L,z,F);n=l(H,L,z,F)}d(this.h,0,i,n);d(this.h,2,s,o);d(this.h,4,h,u);d(this.h,6,p,v);d(this.h,8,y,g);d(this.h,10,_,w);d(this.h,12,M,B);d(this.h,14,E,k)};SHA512.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"big\");else return i.split32(this.h,\"big\")};function ch64_hi(e,t,r,i,n){var a=e&r^~e&n;if(a<0)a+=4294967296;return a}function ch64_lo(e,t,r,i,n,a){var s=t&i^~t&a;if(s<0)s+=4294967296;return s}function maj64_hi(e,t,r,i,n){var a=e&r^e&n^r&n;if(a<0)a+=4294967296;return a}function maj64_lo(e,t,r,i,n,a){var s=t&i^t&a^i&a;if(s<0)s+=4294967296;return s}function s0_512_hi(e,t){var r=s(e,t,28);var i=s(t,e,2);var n=s(t,e,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function s0_512_lo(e,t){var r=o(e,t,28);var i=o(t,e,2);var n=o(t,e,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function s1_512_hi(e,t){var r=s(e,t,14);var i=s(e,t,18);var n=s(t,e,9);var a=r^i^n;if(a<0)a+=4294967296;return a}function s1_512_lo(e,t){var r=o(e,t,14);var i=o(e,t,18);var n=o(t,e,9);var a=r^i^n;if(a<0)a+=4294967296;return a}function g0_512_hi(e,t){var r=s(e,t,1);var i=s(e,t,8);var n=h(e,t,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function g0_512_lo(e,t){var r=o(e,t,1);var i=o(e,t,8);var n=u(e,t,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function g1_512_hi(e,t){var r=s(e,t,19);var i=s(t,e,29);var n=h(e,t,6);var a=r^i^n;if(a<0)a+=4294967296;return a}function g1_512_lo(e,t){var r=o(e,t,19);var i=o(t,e,29);var n=u(e,t,6);var a=r^i^n;if(a<0)a+=4294967296;return a}},2975:function(e,t,r){\"use strict\";var i=r(263);var n=i.rotr32;function ft_1(e,t,r,i){if(e===0)return ch32(t,r,i);if(e===1||e===3)return p32(t,r,i);if(e===2)return maj32(t,r,i)}t.ft_1=ft_1;function ch32(e,t,r){return e&t^~e&r}t.ch32=ch32;function maj32(e,t,r){return e&t^e&r^t&r}t.maj32=maj32;function p32(e,t,r){return e^t^r}t.p32=p32;function s0_256(e){return n(e,2)^n(e,13)^n(e,22)}t.s0_256=s0_256;function s1_256(e){return n(e,6)^n(e,11)^n(e,25)}t.s1_256=s1_256;function g0_256(e){return n(e,7)^n(e,18)^e>>>3}t.g0_256=g0_256;function g1_256(e){return n(e,17)^n(e,19)^e>>>10}t.g1_256=g1_256},263:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);t.inherits=n;function isSurrogatePair(e,t){if((e.charCodeAt(t)&64512)!==55296){return false}if(t<0||t+1>=e.length){return false}return(e.charCodeAt(t+1)&64512)===56320}function toArray(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(typeof e===\"string\"){if(!t){var i=0;for(var n=0;n<e.length;n++){var a=e.charCodeAt(n);if(a<128){r[i++]=a}else if(a<2048){r[i++]=a>>6|192;r[i++]=a&63|128}else if(isSurrogatePair(e,n)){a=65536+((a&1023)<<10)+(e.charCodeAt(++n)&1023);r[i++]=a>>18|240;r[i++]=a>>12&63|128;r[i++]=a>>6&63|128;r[i++]=a&63|128}else{r[i++]=a>>12|224;r[i++]=a>>6&63|128;r[i++]=a&63|128}}}else if(t===\"hex\"){e=e.replace(/[^a-z0-9]+/gi,\"\");if(e.length%2!==0)e=\"0\"+e;for(n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}}else{for(n=0;n<e.length;n++)r[n]=e[n]|0}return r}t.toArray=toArray;function toHex(e){var t=\"\";for(var r=0;r<e.length;r++)t+=zero2(e[r].toString(16));return t}t.toHex=toHex;function htonl(e){var t=e>>>24|e>>>8&65280|e<<8&16711680|(e&255)<<24;return t>>>0}t.htonl=htonl;function toHex32(e,t){var r=\"\";for(var i=0;i<e.length;i++){var n=e[i];if(t===\"little\")n=htonl(n);r+=zero8(n.toString(16))}return r}t.toHex32=toHex32;function zero2(e){if(e.length===1)return\"0\"+e;else return e}t.zero2=zero2;function zero8(e){if(e.length===7)return\"0\"+e;else if(e.length===6)return\"00\"+e;else if(e.length===5)return\"000\"+e;else if(e.length===4)return\"0000\"+e;else if(e.length===3)return\"00000\"+e;else if(e.length===2)return\"000000\"+e;else if(e.length===1)return\"0000000\"+e;else return e}t.zero8=zero8;function join32(e,t,r,n){var a=r-t;i(a%4===0);var s=new Array(a/4);for(var o=0,h=t;o<s.length;o++,h+=4){var u;if(n===\"big\")u=e[h]<<24|e[h+1]<<16|e[h+2]<<8|e[h+3];else u=e[h+3]<<24|e[h+2]<<16|e[h+1]<<8|e[h];s[o]=u>>>0}return s}t.join32=join32;function split32(e,t){var r=new Array(e.length*4);for(var i=0,n=0;i<e.length;i++,n+=4){var a=e[i];if(t===\"big\"){r[n]=a>>>24;r[n+1]=a>>>16&255;r[n+2]=a>>>8&255;r[n+3]=a&255}else{r[n+3]=a>>>24;r[n+2]=a>>>16&255;r[n+1]=a>>>8&255;r[n]=a&255}}return r}t.split32=split32;function rotr32(e,t){return e>>>t|e<<32-t}t.rotr32=rotr32;function rotl32(e,t){return e<<t|e>>>32-t}t.rotl32=rotl32;function sum32(e,t){return e+t>>>0}t.sum32=sum32;function sum32_3(e,t,r){return e+t+r>>>0}t.sum32_3=sum32_3;function sum32_4(e,t,r,i){return e+t+r+i>>>0}t.sum32_4=sum32_4;function sum32_5(e,t,r,i,n){return e+t+r+i+n>>>0}t.sum32_5=sum32_5;function sum64(e,t,r,i){var n=e[t];var a=e[t+1];var s=i+a>>>0;var o=(s<i?1:0)+r+n;e[t]=o>>>0;e[t+1]=s}t.sum64=sum64;function sum64_hi(e,t,r,i){var n=t+i>>>0;var a=(n<t?1:0)+e+r;return a>>>0}t.sum64_hi=sum64_hi;function sum64_lo(e,t,r,i){var n=t+i;return n>>>0}t.sum64_lo=sum64_lo;function sum64_4_hi(e,t,r,i,n,a,s,o){var h=0;var u=t;u=u+i>>>0;h+=u<t?1:0;u=u+a>>>0;h+=u<a?1:0;u=u+o>>>0;h+=u<o?1:0;var d=e+r+n+s+h;return d>>>0}t.sum64_4_hi=sum64_4_hi;function sum64_4_lo(e,t,r,i,n,a,s,o){var h=t+i+a+o;return h>>>0}t.sum64_4_lo=sum64_4_lo;function sum64_5_hi(e,t,r,i,n,a,s,o,h,u){var d=0;var c=t;c=c+i>>>0;d+=c<t?1:0;c=c+a>>>0;d+=c<a?1:0;c=c+o>>>0;d+=c<o?1:0;c=c+u>>>0;d+=c<u?1:0;var l=e+r+n+s+h+d;return l>>>0}t.sum64_5_hi=sum64_5_hi;function sum64_5_lo(e,t,r,i,n,a,s,o,h,u){var d=t+i+a+o+u;return d>>>0}t.sum64_5_lo=sum64_5_lo;function rotr64_hi(e,t,r){var i=t<<32-r|e>>>r;return i>>>0}t.rotr64_hi=rotr64_hi;function rotr64_lo(e,t,r){var i=e<<32-r|t>>>r;return i>>>0}t.rotr64_lo=rotr64_lo;function shr64_hi(e,t,r){return e>>>r}t.shr64_hi=shr64_hi;function shr64_lo(e,t,r){var i=e<<32-r|t>>>r;return i>>>0}t.shr64_lo=shr64_lo},4910:function(e,t,r){\"use strict\";var i=r(7028);var n=r(6545);var a=r(3523);function HmacDRBG(e){if(!(this instanceof HmacDRBG))return new HmacDRBG(e);this.hash=e.hash;this.predResist=!!e.predResist;this.outLen=this.hash.outSize;this.minEntropy=e.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var t=n.toArray(e.entropy,e.entropyEnc||\"hex\");var r=n.toArray(e.nonce,e.nonceEnc||\"hex\");var i=n.toArray(e.pers,e.persEnc||\"hex\");a(t.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\");this._init(t,r,i)}e.exports=HmacDRBG;HmacDRBG.prototype._init=function init(e,t,r){var i=e.concat(t).concat(r);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var n=0;n<this.V.length;n++){this.K[n]=0;this.V[n]=1}this._update(i);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac(){return new i.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update(e){var t=this._hmac().update(this.V).update([0]);if(e)t=t.update(e);this.K=t.digest();this.V=this._hmac().update(this.V).digest();if(!e)return;this.K=this._hmac().update(this.V).update([1]).update(e).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed(e,t,r,i){if(typeof t!==\"string\"){i=r;r=t;t=null}e=n.toArray(e,t);r=n.toArray(r,i);a(e.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\");this._update(e.concat(r||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate(e,t,r,i){if(this._reseed>this.reseedInterval)throw new Error(\"Reseed is required\");if(typeof t!==\"string\"){i=r;r=t;t=null}if(r){r=n.toArray(r,i||\"hex\");this._update(r)}var a=[];while(a.length<e){this.V=this._hmac().update(this.V).digest();a=a.concat(this.V)}var s=a.slice(0,e);this._update(r);this._reseed++;return n.encode(s,t)}},3782:function(e){if(typeof Object.create===\"function\"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},3533:function(e,t,r){\"use strict\";var i=r(3782);var n=r(9029);var a=r(6911).Buffer;var s=new Array(16);function MD5(){n.call(this,64);this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878}i(MD5,n);MD5.prototype._update=function(){var e=s;for(var t=0;t<16;++t)e[t]=this._block.readInt32LE(t*4);var r=this._a;var i=this._b;var n=this._c;var a=this._d;r=fnF(r,i,n,a,e[0],3614090360,7);a=fnF(a,r,i,n,e[1],3905402710,12);n=fnF(n,a,r,i,e[2],606105819,17);i=fnF(i,n,a,r,e[3],3250441966,22);r=fnF(r,i,n,a,e[4],4118548399,7);a=fnF(a,r,i,n,e[5],1200080426,12);n=fnF(n,a,r,i,e[6],2821735955,17);i=fnF(i,n,a,r,e[7],4249261313,22);r=fnF(r,i,n,a,e[8],1770035416,7);a=fnF(a,r,i,n,e[9],2336552879,12);n=fnF(n,a,r,i,e[10],4294925233,17);i=fnF(i,n,a,r,e[11],2304563134,22);r=fnF(r,i,n,a,e[12],1804603682,7);a=fnF(a,r,i,n,e[13],4254626195,12);n=fnF(n,a,r,i,e[14],2792965006,17);i=fnF(i,n,a,r,e[15],1236535329,22);r=fnG(r,i,n,a,e[1],4129170786,5);a=fnG(a,r,i,n,e[6],3225465664,9);n=fnG(n,a,r,i,e[11],643717713,14);i=fnG(i,n,a,r,e[0],3921069994,20);r=fnG(r,i,n,a,e[5],3593408605,5);a=fnG(a,r,i,n,e[10],38016083,9);n=fnG(n,a,r,i,e[15],3634488961,14);i=fnG(i,n,a,r,e[4],3889429448,20);r=fnG(r,i,n,a,e[9],568446438,5);a=fnG(a,r,i,n,e[14],3275163606,9);n=fnG(n,a,r,i,e[3],4107603335,14);i=fnG(i,n,a,r,e[8],1163531501,20);r=fnG(r,i,n,a,e[13],2850285829,5);a=fnG(a,r,i,n,e[2],4243563512,9);n=fnG(n,a,r,i,e[7],1735328473,14);i=fnG(i,n,a,r,e[12],2368359562,20);r=fnH(r,i,n,a,e[5],4294588738,4);a=fnH(a,r,i,n,e[8],2272392833,11);n=fnH(n,a,r,i,e[11],1839030562,16);i=fnH(i,n,a,r,e[14],4259657740,23);r=fnH(r,i,n,a,e[1],2763975236,4);a=fnH(a,r,i,n,e[4],1272893353,11);n=fnH(n,a,r,i,e[7],4139469664,16);i=fnH(i,n,a,r,e[10],3200236656,23);r=fnH(r,i,n,a,e[13],681279174,4);a=fnH(a,r,i,n,e[0],3936430074,11);n=fnH(n,a,r,i,e[3],3572445317,16);i=fnH(i,n,a,r,e[6],76029189,23);r=fnH(r,i,n,a,e[9],3654602809,4);a=fnH(a,r,i,n,e[12],3873151461,11);n=fnH(n,a,r,i,e[15],530742520,16);i=fnH(i,n,a,r,e[2],3299628645,23);r=fnI(r,i,n,a,e[0],4096336452,6);a=fnI(a,r,i,n,e[7],1126891415,10);n=fnI(n,a,r,i,e[14],2878612391,15);i=fnI(i,n,a,r,e[5],4237533241,21);r=fnI(r,i,n,a,e[12],1700485571,6);a=fnI(a,r,i,n,e[3],2399980690,10);n=fnI(n,a,r,i,e[10],4293915773,15);i=fnI(i,n,a,r,e[1],2240044497,21);r=fnI(r,i,n,a,e[8],1873313359,6);a=fnI(a,r,i,n,e[15],4264355552,10);n=fnI(n,a,r,i,e[6],2734768916,15);i=fnI(i,n,a,r,e[13],1309151649,21);r=fnI(r,i,n,a,e[4],4149444226,6);a=fnI(a,r,i,n,e[11],3174756917,10);n=fnI(n,a,r,i,e[2],718787259,15);i=fnI(i,n,a,r,e[9],3951481745,21);this._a=this._a+r|0;this._b=this._b+i|0;this._c=this._c+n|0;this._d=this._d+a|0};MD5.prototype._digest=function(){this._block[this._blockOffset++]=128;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();var e=a.allocUnsafe(16);e.writeInt32LE(this._a,0);e.writeInt32LE(this._b,4);e.writeInt32LE(this._c,8);e.writeInt32LE(this._d,12);return e};function rotl(e,t){return e<<t|e>>>32-t}function fnF(e,t,r,i,n,a,s){return rotl(e+(t&r|~t&i)+n+a|0,s)+t|0}function fnG(e,t,r,i,n,a,s){return rotl(e+(t&i|r&~i)+n+a|0,s)+t|0}function fnH(e,t,r,i,n,a,s){return rotl(e+(t^r^i)+n+a|0,s)+t|0}function fnI(e,t,r,i,n,a,s){return rotl(e+(r^(t|~i))+n+a|0,s)+t|0}e.exports=MD5},1354:function(e,t,r){var i=r(711);var n=r(3500);function MillerRabin(e){this.rand=e||new n.Rand}e.exports=MillerRabin;MillerRabin.create=function create(e){return new MillerRabin(e)};MillerRabin.prototype._randbelow=function _randbelow(e){var t=e.bitLength();var r=Math.ceil(t/8);do{var n=new i(this.rand.generate(r))}while(n.cmp(e)>=0);return n};MillerRabin.prototype._randrange=function _randrange(e,t){var r=t.sub(e);return e.add(this._randbelow(r))};MillerRabin.prototype.test=function test(e,t,r){var n=e.bitLength();var a=i.mont(e);var s=new i(1).toRed(a);if(!t)t=Math.max(1,n/48|0);var o=e.subn(1);for(var h=0;!o.testn(h);h++){}var u=e.shrn(h);var d=o.toRed(a);var c=true;for(;t>0;t--){var l=this._randrange(new i(2),o);if(r)r(l);var p=l.toRed(a).redPow(u);if(p.cmp(s)===0||p.cmp(d)===0)continue;for(var v=1;v<h;v++){p=p.redSqr();if(p.cmp(s)===0)return false;if(p.cmp(d)===0)break}if(v===h)return false}return c};MillerRabin.prototype.getDivisor=function getDivisor(e,t){var r=e.bitLength();var n=i.mont(e);var a=new i(1).toRed(n);if(!t)t=Math.max(1,r/48|0);var s=e.subn(1);for(var o=0;!s.testn(o);o++){}var h=e.shrn(o);var u=s.toRed(n);for(;t>0;t--){var d=this._randrange(new i(2),s);var c=e.gcd(d);if(c.cmpn(1)!==0)return c;var l=d.toRed(n).redPow(h);if(l.cmp(a)===0||l.cmp(u)===0)continue;for(var p=1;p<o;p++){l=l.redSqr();if(l.cmp(a)===0)return l.fromRed().subn(1).gcd(e);if(l.cmp(u)===0)break}if(p===o){l=l.redSqr();return l.fromRed().subn(1).gcd(e)}}return false}},3523:function(e){e.exports=assert;function assert(e,t){if(!e)throw new Error(t||\"Assertion failed\")}assert.equal=function assertEqual(e,t,r){if(e!=t)throw new Error(r||\"Assertion failed: \"+e+\" != \"+t)}},6545:function(e,t){\"use strict\";var r=t;function toArray(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(typeof e!==\"string\"){for(var i=0;i<e.length;i++)r[i]=e[i]|0;return r}if(t===\"hex\"){e=e.replace(/[^a-z0-9]+/gi,\"\");if(e.length%2!==0)e=\"0\"+e;for(var i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16))}else{for(var i=0;i<e.length;i++){var n=e.charCodeAt(i);var a=n>>8;var s=n&255;if(a)r.push(a,s);else r.push(s)}}return r}r.toArray=toArray;function zero2(e){if(e.length===1)return\"0\"+e;else return e}r.zero2=zero2;function toHex(e){var t=\"\";for(var r=0;r<e.length;r++)t+=zero2(e[r].toString(16));return t}r.toHex=toHex;r.encode=function encode(e,t){if(t===\"hex\")return toHex(e);else return e}},8687:function(e,t,r){\"use strict\";var i=r(7160);t.certificate=r(8782);var n=i.define(\"RSAPrivateKey\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"modulus\").int(),this.key(\"publicExponent\").int(),this.key(\"privateExponent\").int(),this.key(\"prime1\").int(),this.key(\"prime2\").int(),this.key(\"exponent1\").int(),this.key(\"exponent2\").int(),this.key(\"coefficient\").int())}));t.RSAPrivateKey=n;var a=i.define(\"RSAPublicKey\",(function(){this.seq().obj(this.key(\"modulus\").int(),this.key(\"publicExponent\").int())}));t.RSAPublicKey=a;var s=i.define(\"SubjectPublicKeyInfo\",(function(){this.seq().obj(this.key(\"algorithm\").use(o),this.key(\"subjectPublicKey\").bitstr())}));t.PublicKey=s;var o=i.define(\"AlgorithmIdentifier\",(function(){this.seq().obj(this.key(\"algorithm\").objid(),this.key(\"none\").null_().optional(),this.key(\"curve\").objid().optional(),this.key(\"params\").seq().obj(this.key(\"p\").int(),this.key(\"q\").int(),this.key(\"g\").int()).optional())}));var h=i.define(\"PrivateKeyInfo\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"algorithm\").use(o),this.key(\"subjectPrivateKey\").octstr())}));t.PrivateKey=h;var u=i.define(\"EncryptedPrivateKeyInfo\",(function(){this.seq().obj(this.key(\"algorithm\").seq().obj(this.key(\"id\").objid(),this.key(\"decrypt\").seq().obj(this.key(\"kde\").seq().obj(this.key(\"id\").objid(),this.key(\"kdeparams\").seq().obj(this.key(\"salt\").octstr(),this.key(\"iters\").int())),this.key(\"cipher\").seq().obj(this.key(\"algo\").objid(),this.key(\"iv\").octstr()))),this.key(\"subjectPrivateKey\").octstr())}));t.EncryptedPrivateKey=u;var d=i.define(\"DSAPrivateKey\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"p\").int(),this.key(\"q\").int(),this.key(\"g\").int(),this.key(\"pub_key\").int(),this.key(\"priv_key\").int())}));t.DSAPrivateKey=d;t.DSAparam=i.define(\"DSAparam\",(function(){this.int()}));var c=i.define(\"ECPrivateKey\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"privateKey\").octstr(),this.key(\"parameters\").optional().explicit(0).use(l),this.key(\"publicKey\").optional().explicit(1).bitstr())}));t.ECPrivateKey=c;var l=i.define(\"ECParameters\",(function(){this.choice({namedCurve:this.objid()})}));t.signature=i.define(\"signature\",(function(){this.seq().obj(this.key(\"r\").int(),this.key(\"s\").int())}))},8782:function(e,t,r){\"use strict\";var i=r(7160);var n=i.define(\"Time\",(function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})}));var a=i.define(\"AttributeTypeValue\",(function(){this.seq().obj(this.key(\"type\").objid(),this.key(\"value\").any())}));var s=i.define(\"AlgorithmIdentifier\",(function(){this.seq().obj(this.key(\"algorithm\").objid(),this.key(\"parameters\").optional(),this.key(\"curve\").objid().optional())}));var o=i.define(\"SubjectPublicKeyInfo\",(function(){this.seq().obj(this.key(\"algorithm\").use(s),this.key(\"subjectPublicKey\").bitstr())}));var h=i.define(\"RelativeDistinguishedName\",(function(){this.setof(a)}));var u=i.define(\"RDNSequence\",(function(){this.seqof(h)}));var d=i.define(\"Name\",(function(){this.choice({rdnSequence:this.use(u)})}));var c=i.define(\"Validity\",(function(){this.seq().obj(this.key(\"notBefore\").use(n),this.key(\"notAfter\").use(n))}));var l=i.define(\"Extension\",(function(){this.seq().obj(this.key(\"extnID\").objid(),this.key(\"critical\").bool().def(false),this.key(\"extnValue\").octstr())}));var p=i.define(\"TBSCertificate\",(function(){this.seq().obj(this.key(\"version\").explicit(0).int().optional(),this.key(\"serialNumber\").int(),this.key(\"signature\").use(s),this.key(\"issuer\").use(d),this.key(\"validity\").use(c),this.key(\"subject\").use(d),this.key(\"subjectPublicKeyInfo\").use(o),this.key(\"issuerUniqueID\").implicit(1).bitstr().optional(),this.key(\"subjectUniqueID\").implicit(2).bitstr().optional(),this.key(\"extensions\").explicit(3).seqof(l).optional())}));var v=i.define(\"X509Certificate\",(function(){this.seq().obj(this.key(\"tbsCertificate\").use(p),this.key(\"signatureAlgorithm\").use(s),this.key(\"signatureValue\").bitstr())}));e.exports=v},6501:function(e,t,r){var i=/Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m;var n=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;var a=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m;var s=r(8368);var o=r(6594);var h=r(6911).Buffer;e.exports=function(e,t){var r=e.toString();var u=r.match(i);var d;if(!u){var c=r.match(a);d=new h(c[2].replace(/[\\r\\n]/g,\"\"),\"base64\")}else{var l=\"aes\"+u[1];var p=h.from(u[2],\"hex\");var v=h.from(u[3].replace(/[\\r\\n]/g,\"\"),\"base64\");var b=s(t,p.slice(0,8),parseInt(u[1],10)).key;var m=[];var y=o.createDecipheriv(l,b,p);m.push(y.update(v));m.push(y.final());d=h.concat(m)}var g=r.match(n)[1];return{tag:g,data:d}}},9902:function(e,t,r){var i=r(8687);var n=r(2510);var a=r(6501);var s=r(6594);var o=r(4978);var h=r(6911).Buffer;e.exports=parseKeys;function parseKeys(e){var t;if(typeof e===\"object\"&&!h.isBuffer(e)){t=e.passphrase;e=e.key}if(typeof e===\"string\"){e=h.from(e)}var r=a(e,t);var n=r.tag;var s=r.data;var o,u;switch(n){case\"CERTIFICATE\":u=i.certificate.decode(s,\"der\").tbsCertificate.subjectPublicKeyInfo;case\"PUBLIC KEY\":if(!u){u=i.PublicKey.decode(s,\"der\")}o=u.algorithm.algorithm.join(\".\");switch(o){case\"1.2.840.113549.1.1.1\":return i.RSAPublicKey.decode(u.subjectPublicKey.data,\"der\");case\"1.2.840.10045.2.1\":u.subjectPrivateKey=u.subjectPublicKey;return{type:\"ec\",data:u};case\"1.2.840.10040.4.1\":u.algorithm.params.pub_key=i.DSAparam.decode(u.subjectPublicKey.data,\"der\");return{type:\"dsa\",data:u.algorithm.params};default:throw new Error(\"unknown key id \"+o)}throw new Error(\"unknown key type \"+n);case\"ENCRYPTED PRIVATE KEY\":s=i.EncryptedPrivateKey.decode(s,\"der\");s=decrypt(s,t);case\"PRIVATE KEY\":u=i.PrivateKey.decode(s,\"der\");o=u.algorithm.algorithm.join(\".\");switch(o){case\"1.2.840.113549.1.1.1\":return i.RSAPrivateKey.decode(u.subjectPrivateKey,\"der\");case\"1.2.840.10045.2.1\":return{curve:u.algorithm.curve,privateKey:i.ECPrivateKey.decode(u.subjectPrivateKey,\"der\").privateKey};case\"1.2.840.10040.4.1\":u.algorithm.params.priv_key=i.DSAparam.decode(u.subjectPrivateKey,\"der\");return{type:\"dsa\",params:u.algorithm.params};default:throw new Error(\"unknown key id \"+o)}throw new Error(\"unknown key type \"+n);case\"RSA PUBLIC KEY\":return i.RSAPublicKey.decode(s,\"der\");case\"RSA PRIVATE KEY\":return i.RSAPrivateKey.decode(s,\"der\");case\"DSA PRIVATE KEY\":return{type:\"dsa\",params:i.DSAPrivateKey.decode(s,\"der\")};case\"EC PRIVATE KEY\":s=i.ECPrivateKey.decode(s,\"der\");return{curve:s.parameters.value,privateKey:s.privateKey};default:throw new Error(\"unknown key type \"+n)}}parseKeys.signature=i.signature;function decrypt(e,t){var r=e.algorithm.decrypt.kde.kdeparams.salt;var i=parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(),10);var a=n[e.algorithm.decrypt.cipher.algo.join(\".\")];var u=e.algorithm.decrypt.cipher.iv;var d=e.subjectPrivateKey;var c=parseInt(a.split(\"-\")[1],10)/8;var l=o.pbkdf2Sync(t,r,i,c,\"sha1\");var p=s.createDecipheriv(a,l,u);var v=[];v.push(p.update(d));v.push(p.final());return h.concat(v)}},4978:function(e,t,r){var i=r(6113);var n=r(5349);var a=r(7007);var s=r(5407);function nativePBKDF2(e,t,r,o,h,u){n(r,o);e=s(e,a,\"Password\");t=s(t,a,\"Salt\");if(typeof h===\"function\"){u=h;h=\"sha1\"}if(typeof u!==\"function\")throw new Error(\"No callback provided to pbkdf2\");return i.pbkdf2(e,t,r,o,h,u)}function nativePBKDF2Sync(e,t,r,o,h){n(r,o);e=s(e,a,\"Password\");t=s(t,a,\"Salt\");h=h||\"sha1\";return i.pbkdf2Sync(e,t,r,o,h)}if(!i.pbkdf2Sync||i.pbkdf2Sync.toString().indexOf(\"keylen, digest\")===-1){t.pbkdf2Sync=r(2127);t.pbkdf2=r(9601)}else{t.pbkdf2Sync=nativePBKDF2Sync;t.pbkdf2=nativePBKDF2}},9601:function(e,t,r){var i=r(6911).Buffer;var n=r(5349);var a=r(7007);var s=r(2127);var o=r(5407);var h;var u=__webpack_require__.g.crypto&&__webpack_require__.g.crypto.subtle;var d={sha:\"SHA-1\",\"sha-1\":\"SHA-1\",sha1:\"SHA-1\",sha256:\"SHA-256\",\"sha-256\":\"SHA-256\",sha384:\"SHA-384\",\"sha-384\":\"SHA-384\",\"sha-512\":\"SHA-512\",sha512:\"SHA-512\"};var c=[];function checkNative(e){if(__webpack_require__.g.process&&!__webpack_require__.g.process.browser){return Promise.resolve(false)}if(!u||!u.importKey||!u.deriveBits){return Promise.resolve(false)}if(c[e]!==undefined){return c[e]}h=h||i.alloc(8);var t=browserPbkdf2(h,h,10,128,e).then((function(){return true})).catch((function(){return false}));c[e]=t;return t}function browserPbkdf2(e,t,r,n,a){return u.importKey(\"raw\",e,{name:\"PBKDF2\"},false,[\"deriveBits\"]).then((function(e){return u.deriveBits({name:\"PBKDF2\",salt:t,iterations:r,hash:{name:a}},e,n<<3)})).then((function(e){return i.from(e)}))}function resolvePromise(e,t){e.then((function(e){process.nextTick((function(){t(null,e)}))}),(function(e){process.nextTick((function(){t(e)}))}))}e.exports=function(e,t,r,i,h,u){if(typeof h===\"function\"){u=h;h=undefined}h=h||\"sha1\";var c=d[h.toLowerCase()];if(!c||typeof __webpack_require__.g.Promise!==\"function\"){return process.nextTick((function(){var n;try{n=s(e,t,r,i,h)}catch(e){return u(e)}u(null,n)}))}n(r,i);e=o(e,a,\"Password\");t=o(t,a,\"Salt\");if(typeof u!==\"function\")throw new Error(\"No callback provided to pbkdf2\");resolvePromise(checkNative(c).then((function(n){if(n)return browserPbkdf2(e,t,r,i,c);return s(e,t,r,i,h)})),u)}},7007:function(e){var t;if(true){t=\"utf-8\"}else { var r; }e.exports=t},5349:function(e){var t=Math.pow(2,30)-1;e.exports=function(e,r){if(typeof e!==\"number\"){throw new TypeError(\"Iterations not a number\")}if(e<0){throw new TypeError(\"Bad iterations\")}if(typeof r!==\"number\"){throw new TypeError(\"Key length not a number\")}if(r<0||r>t||r!==r){throw new TypeError(\"Bad key length\")}}},2127:function(e,t,r){var i={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};var n=r(4873);var a=r(6911).Buffer;var s=r(5349);var o=r(7007);var h=r(5407);function pbkdf2(e,t,r,u,d){s(r,u);e=h(e,o,\"Password\");t=h(t,o,\"Salt\");d=d||\"sha1\";var c=a.allocUnsafe(u);var l=a.allocUnsafe(t.length+4);t.copy(l,0,0,t.length);var p=0;var v=i[d];var b=Math.ceil(u/v);for(var m=1;m<=b;m++){l.writeUInt32BE(m,t.length);var y=n(d,e).update(l).digest();var g=y;for(var _=1;_<r;_++){g=n(d,e).update(g).digest();for(var w=0;w<v;w++)y[w]^=g[w]}y.copy(c,p);p+=v}return c}e.exports=pbkdf2},5407:function(e,t,r){var i=r(6911).Buffer;e.exports=function(e,t,r){if(i.isBuffer(e)){return e}else if(typeof e===\"string\"){return i.from(e,t)}else if(ArrayBuffer.isView(e)){return i.from(e.buffer)}else{throw new TypeError(r+\" must be a string, a Buffer, a typed array or a DataView\")}}},9783:function(e,t,r){t.publicEncrypt=r(3995);t.privateDecrypt=r(4366);t.privateEncrypt=function privateEncrypt(e,r){return t.publicEncrypt(e,r,true)};t.publicDecrypt=function publicDecrypt(e,r){return t.privateDecrypt(e,r,true)}},5520:function(e,t,r){var i=r(9739);var n=r(6911).Buffer;e.exports=function(e,t){var r=n.alloc(0);var a=0;var s;while(r.length<t){s=i2ops(a++);r=n.concat([r,i(\"sha1\").update(e).update(s).digest()])}return r.slice(0,t)};function i2ops(e){var t=n.allocUnsafe(4);t.writeUInt32BE(e,0);return t}},4366:function(e,t,r){var i=r(9902);var n=r(5520);var a=r(6386);var s=r(711);var o=r(7166);var h=r(9739);var u=r(1607);var d=r(6911).Buffer;e.exports=function privateDecrypt(e,t,r){var n;if(e.padding){n=e.padding}else if(r){n=1}else{n=4}var a=i(e);var h=a.modulus.byteLength();if(t.length>h||new s(t).cmp(a.modulus)>=0){throw new Error(\"decryption error\")}var c;if(r){c=u(new s(t),a)}else{c=o(t,a)}var l=d.alloc(h-c.length);c=d.concat([l,c],h);if(n===4){return oaep(a,c)}else if(n===1){return pkcs1(a,c,r)}else if(n===3){return c}else{throw new Error(\"unknown padding\")}};function oaep(e,t){var r=e.modulus.byteLength();var i=h(\"sha1\").update(d.alloc(0)).digest();var s=i.length;if(t[0]!==0){throw new Error(\"decryption error\")}var o=t.slice(1,s+1);var u=t.slice(s+1);var c=a(o,n(u,s));var l=a(u,n(c,r-s-1));if(compare(i,l.slice(0,s))){throw new Error(\"decryption error\")}var p=s;while(l[p]===0){p++}if(l[p++]!==1){throw new Error(\"decryption error\")}return l.slice(p)}function pkcs1(e,t,r){var i=t.slice(0,2);var n=2;var a=0;while(t[n++]!==0){if(n>=t.length){a++;break}}var s=t.slice(2,n-1);if(i.toString(\"hex\")!==\"0002\"&&!r||i.toString(\"hex\")!==\"0001\"&&r){a++}if(s.length<8){a++}if(a){throw new Error(\"decryption error\")}return t.slice(n)}function compare(e,t){e=d.from(e);t=d.from(t);var r=0;var i=e.length;if(e.length!==t.length){r++;i=Math.min(e.length,t.length)}var n=-1;while(++n<i){r+=e[n]^t[n]}return r}},3995:function(e,t,r){var i=r(9902);var n=r(7223);var a=r(9739);var s=r(5520);var o=r(6386);var h=r(711);var u=r(1607);var d=r(7166);var c=r(6911).Buffer;e.exports=function publicEncrypt(e,t,r){var n;if(e.padding){n=e.padding}else if(r){n=1}else{n=4}var a=i(e);var s;if(n===4){s=oaep(a,t)}else if(n===1){s=pkcs1(a,t,r)}else if(n===3){s=new h(t);if(s.cmp(a.modulus)>=0){throw new Error(\"data too long for modulus\")}}else{throw new Error(\"unknown padding\")}if(r){return d(s,a)}else{return u(s,a)}};function oaep(e,t){var r=e.modulus.byteLength();var i=t.length;var u=a(\"sha1\").update(c.alloc(0)).digest();var d=u.length;var l=2*d;if(i>r-l-2){throw new Error(\"message too long\")}var p=c.alloc(r-i-l-2);var v=r-d-1;var b=n(d);var m=o(c.concat([u,p,c.alloc(1,1),t],v),s(b,v));var y=o(b,s(m,d));return new h(c.concat([c.alloc(1),y,m],r))}function pkcs1(e,t,r){var i=t.length;var n=e.modulus.byteLength();if(i>n-11){throw new Error(\"message too long\")}var a;if(r){a=c.alloc(n-i-3,255)}else{a=nonZero(n-i-3)}return new h(c.concat([c.from([0,r?1:2]),a,c.alloc(1),t],n))}function nonZero(e){var t=c.allocUnsafe(e);var r=0;var i=n(e*2);var a=0;var s;while(r<e){if(a===i.length){i=n(e*2);a=0}s=i[a++];if(s){t[r++]=s}}return t}},1607:function(e,t,r){var i=r(711);var n=r(6911).Buffer;function withPublic(e,t){return n.from(e.toRed(i.mont(t.modulus)).redPow(new i(t.publicExponent)).fromRed().toArray())}e.exports=withPublic},6386:function(e){e.exports=function xor(e,t){var r=e.length;var i=-1;while(++i<r){e[i]^=t[i]}return e}},7223:function(e,t,r){\"use strict\";var i=65536;var n=4294967295;function oldBrowser(){throw new Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\")}var a=r(6911).Buffer;var s=__webpack_require__.g.crypto||__webpack_require__.g.msCrypto;if(s&&s.getRandomValues){e.exports=randomBytes}else{e.exports=oldBrowser}function randomBytes(e,t){if(e>n)throw new RangeError(\"requested too many random bytes\");var r=a.allocUnsafe(e);if(e>0){if(e>i){for(var o=0;o<e;o+=i){s.getRandomValues(r.slice(o,o+i))}}else{s.getRandomValues(r)}}if(typeof t===\"function\"){return process.nextTick((function(){t(null,r)}))}return r}},6445:function(e,t,r){\"use strict\";function oldBrowser(){throw new Error(\"secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11\")}var i=r(6911);var n=r(7223);var a=i.Buffer;var s=i.kMaxLength;var o=__webpack_require__.g.crypto||__webpack_require__.g.msCrypto;var h=Math.pow(2,32)-1;function assertOffset(e,t){if(typeof e!==\"number\"||e!==e){throw new TypeError(\"offset must be a number\")}if(e>h||e<0){throw new TypeError(\"offset must be a uint32\")}if(e>s||e>t){throw new RangeError(\"offset out of range\")}}function assertSize(e,t,r){if(typeof e!==\"number\"||e!==e){throw new TypeError(\"size must be a number\")}if(e>h||e<0){throw new TypeError(\"size must be a uint32\")}if(e+t>r||e>s){throw new RangeError(\"buffer too small\")}}if(o&&o.getRandomValues||!true){t.randomFill=randomFill;t.randomFillSync=randomFillSync}else{t.randomFill=oldBrowser;t.randomFillSync=oldBrowser}function randomFill(e,t,r,i){if(!a.isBuffer(e)&&!(e instanceof __webpack_require__.g.Uint8Array)){throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')}if(typeof t===\"function\"){i=t;t=0;r=e.length}else if(typeof r===\"function\"){i=r;r=e.length-t}else if(typeof i!==\"function\"){throw new TypeError('\"cb\" argument must be a function')}assertOffset(t,e.length);assertSize(r,t,e.length);return actualFill(e,t,r,i)}function actualFill(e,t,r,i){if(true){var a=e.buffer;var s=new Uint8Array(a,t,r);o.getRandomValues(s);if(i){process.nextTick((function(){i(null,e)}));return}return e}if(i){n(r,(function(r,n){if(r){return i(r)}n.copy(e,t);i(null,e)}));return}var h=n(r);h.copy(e,t);return e}function randomFillSync(e,t,r){if(typeof t===\"undefined\"){t=0}if(!a.isBuffer(e)&&!(e instanceof __webpack_require__.g.Uint8Array)){throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')}assertOffset(t,e.length);if(r===undefined)r=e.length-t;assertSize(r,t,e.length);return actualFill(e,t,r)}},4646:function(e){\"use strict\";const t={};function createErrorType(e,r,i){if(!i){i=Error}function getMessage(e,t,i){if(typeof r===\"string\"){return r}else{return r(e,t,i)}}class NodeError extends i{constructor(e,t,r){super(getMessage(e,t,r))}}NodeError.prototype.name=i.name;NodeError.prototype.code=e;t[e]=NodeError}function oneOf(e,t){if(Array.isArray(e)){const r=e.length;e=e.map((e=>String(e)));if(r>2){return`one of ${t} ${e.slice(0,r-1).join(\", \")}, or `+e[r-1]}else if(r===2){return`one of ${t} ${e[0]} or ${e[1]}`}else{return`of ${t} ${e[0]}`}}else{return`of ${t} ${String(e)}`}}function startsWith(e,t,r){return e.substr(!r||r<0?0:+r,t.length)===t}function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function includes(e,t,r){if(typeof r!==\"number\"){r=0}if(r+t.length>e.length){return false}else{return e.indexOf(t,r)!==-1}}createErrorType(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError);createErrorType(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){let i;if(typeof t===\"string\"&&startsWith(t,\"not \")){i=\"must not be\";t=t.replace(/^not /,\"\")}else{i=\"must be\"}let n;if(endsWith(e,\" argument\")){n=`The ${e} ${i} ${oneOf(t,\"type\")}`}else{const r=includes(e,\".\")?\"property\":\"argument\";n=`The \"${e}\" ${r} ${i} ${oneOf(t,\"type\")}`}n+=`. Received type ${typeof r}`;return n}),TypeError);createErrorType(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\");createErrorType(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"}));createErrorType(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\");createErrorType(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}));createErrorType(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\");createErrorType(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\");createErrorType(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\");createErrorType(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError);createErrorType(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError);createErrorType(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\");e.exports.q=t},2403:function(e,t,r){\"use strict\";var i=Object.keys||function(e){var t=[];for(var r in e){t.push(r)}return t};e.exports=Duplex;var n=r(1709);var a=r(7337);r(3782)(Duplex,n);{var s=i(a.prototype);for(var o=0;o<s.length;o++){var h=s[o];if(!Duplex.prototype[h])Duplex.prototype[h]=a.prototype[h]}}function Duplex(e){if(!(this instanceof Duplex))return new Duplex(e);n.call(this,e);a.call(this,e);this.allowHalfOpen=true;if(e){if(e.readable===false)this.readable=false;if(e.writable===false)this.writable=false;if(e.allowHalfOpen===false){this.allowHalfOpen=false;this.once(\"end\",onend)}}}Object.defineProperty(Duplex.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});Object.defineProperty(Duplex.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});Object.defineProperty(Duplex.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function onend(){if(this._writableState.ended)return;process.nextTick(onEndNT,this)}function onEndNT(e){e.end()}Object.defineProperty(Duplex.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false}return this._readableState.destroyed&&this._writableState.destroyed},set:function set(e){if(this._readableState===undefined||this._writableState===undefined){return}this._readableState.destroyed=e;this._writableState.destroyed=e}})},7889:function(e,t,r){\"use strict\";e.exports=PassThrough;var i=r(1170);r(3782)(PassThrough,i);function PassThrough(e){if(!(this instanceof PassThrough))return new PassThrough(e);i.call(this,e)}PassThrough.prototype._transform=function(e,t,r){r(null,e)}},1709:function(e,t,r){\"use strict\";e.exports=Readable;var i;Readable.ReadableState=ReadableState;var n=r(2361).EventEmitter;var a=function EElistenerCount(e,t){return e.listeners(t).length};var s=r(4678);var o=r(4300).Buffer;var h=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return o.from(e)}function _isUint8Array(e){return o.isBuffer(e)||e instanceof h}var u=r(3837);var d;if(u&&u.debuglog){d=u.debuglog(\"stream\")}else{d=function debug(){}}var c=r(4379);var l=r(7025);var p=r(6776),v=p.getHighWaterMark;var b=r(4646).q,m=b.ERR_INVALID_ARG_TYPE,y=b.ERR_STREAM_PUSH_AFTER_EOF,g=b.ERR_METHOD_NOT_IMPLEMENTED,_=b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;var w;var M;var B;r(3782)(Readable,s);var E=l.errorOrDestroy;var k=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function prependListener(e,t,r){if(typeof e.prependListener===\"function\")return e.prependListener(t,r);if(!e._events||!e._events[t])e.on(t,r);else if(Array.isArray(e._events[t]))e._events[t].unshift(r);else e._events[t]=[r,e._events[t]]}function ReadableState(e,t,n){i=i||r(2403);e=e||{};if(typeof n!==\"boolean\")n=t instanceof i;this.objectMode=!!e.objectMode;if(n)this.objectMode=this.objectMode||!!e.readableObjectMode;this.highWaterMark=v(this,e,\"readableHighWaterMark\",n);this.buffer=new c;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.destroyed=false;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(e.encoding){if(!w)w=r(3704).s;this.decoder=new w(e.encoding);this.encoding=e.encoding}}function Readable(e){i=i||r(2403);if(!(this instanceof Readable))return new Readable(e);var t=this instanceof i;this._readableState=new ReadableState(e,this,t);this.readable=true;if(e){if(typeof e.read===\"function\")this._read=e.read;if(typeof e.destroy===\"function\")this._destroy=e.destroy}s.call(this)}Object.defineProperty(Readable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined){return false}return this._readableState.destroyed},set:function set(e){if(!this._readableState){return}this._readableState.destroyed=e}});Readable.prototype.destroy=l.destroy;Readable.prototype._undestroy=l.undestroy;Readable.prototype._destroy=function(e,t){t(e)};Readable.prototype.push=function(e,t){var r=this._readableState;var i;if(!r.objectMode){if(typeof e===\"string\"){t=t||r.defaultEncoding;if(t!==r.encoding){e=o.from(e,t);t=\"\"}i=true}}else{i=true}return readableAddChunk(this,e,t,false,i)};Readable.prototype.unshift=function(e){return readableAddChunk(this,e,null,true,false)};function readableAddChunk(e,t,r,i,n){d(\"readableAddChunk\",t);var a=e._readableState;if(t===null){a.reading=false;onEofChunk(e,a)}else{var s;if(!n)s=chunkInvalid(a,t);if(s){E(e,s)}else if(a.objectMode||t&&t.length>0){if(typeof t!==\"string\"&&!a.objectMode&&Object.getPrototypeOf(t)!==o.prototype){t=_uint8ArrayToBuffer(t)}if(i){if(a.endEmitted)E(e,new _);else addChunk(e,a,t,true)}else if(a.ended){E(e,new y)}else if(a.destroyed){return false}else{a.reading=false;if(a.decoder&&!r){t=a.decoder.write(t);if(a.objectMode||t.length!==0)addChunk(e,a,t,false);else maybeReadMore(e,a)}else{addChunk(e,a,t,false)}}}else if(!i){a.reading=false;maybeReadMore(e,a)}}return!a.ended&&(a.length<a.highWaterMark||a.length===0)}function addChunk(e,t,r,i){if(t.flowing&&t.length===0&&!t.sync){t.awaitDrain=0;e.emit(\"data\",r)}else{t.length+=t.objectMode?1:r.length;if(i)t.buffer.unshift(r);else t.buffer.push(r);if(t.needReadable)emitReadable(e)}maybeReadMore(e,t)}function chunkInvalid(e,t){var r;if(!_isUint8Array(t)&&typeof t!==\"string\"&&t!==undefined&&!e.objectMode){r=new m(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)}return r}Readable.prototype.isPaused=function(){return this._readableState.flowing===false};Readable.prototype.setEncoding=function(e){if(!w)w=r(3704).s;var t=new w(e);this._readableState.decoder=t;this._readableState.encoding=this._readableState.decoder.encoding;var i=this._readableState.buffer.head;var n=\"\";while(i!==null){n+=t.write(i.data);i=i.next}this._readableState.buffer.clear();if(n!==\"\")this._readableState.buffer.push(n);this._readableState.length=n.length;return this};var A=1073741824;function computeNewHighWaterMark(e){if(e>=A){e=A}else{e--;e|=e>>>1;e|=e>>>2;e|=e>>>4;e|=e>>>8;e|=e>>>16;e++}return e}function howMuchToRead(e,t){if(e<=0||t.length===0&&t.ended)return 0;if(t.objectMode)return 1;if(e!==e){if(t.flowing&&t.length)return t.buffer.head.data.length;else return t.length}if(e>t.highWaterMark)t.highWaterMark=computeNewHighWaterMark(e);if(e<=t.length)return e;if(!t.ended){t.needReadable=true;return 0}return t.length}Readable.prototype.read=function(e){d(\"read\",e);e=parseInt(e,10);var t=this._readableState;var r=e;if(e!==0)t.emittedReadable=false;if(e===0&&t.needReadable&&((t.highWaterMark!==0?t.length>=t.highWaterMark:t.length>0)||t.ended)){d(\"read: emitReadable\",t.length,t.ended);if(t.length===0&&t.ended)endReadable(this);else emitReadable(this);return null}e=howMuchToRead(e,t);if(e===0&&t.ended){if(t.length===0)endReadable(this);return null}var i=t.needReadable;d(\"need readable\",i);if(t.length===0||t.length-e<t.highWaterMark){i=true;d(\"length less than watermark\",i)}if(t.ended||t.reading){i=false;d(\"reading or ended\",i)}else if(i){d(\"do read\");t.reading=true;t.sync=true;if(t.length===0)t.needReadable=true;this._read(t.highWaterMark);t.sync=false;if(!t.reading)e=howMuchToRead(r,t)}var n;if(e>0)n=fromList(e,t);else n=null;if(n===null){t.needReadable=t.length<=t.highWaterMark;e=0}else{t.length-=e;t.awaitDrain=0}if(t.length===0){if(!t.ended)t.needReadable=true;if(r!==e&&t.ended)endReadable(this)}if(n!==null)this.emit(\"data\",n);return n};function onEofChunk(e,t){d(\"onEofChunk\");if(t.ended)return;if(t.decoder){var r=t.decoder.end();if(r&&r.length){t.buffer.push(r);t.length+=t.objectMode?1:r.length}}t.ended=true;if(t.sync){emitReadable(e)}else{t.needReadable=false;if(!t.emittedReadable){t.emittedReadable=true;emitReadable_(e)}}}function emitReadable(e){var t=e._readableState;d(\"emitReadable\",t.needReadable,t.emittedReadable);t.needReadable=false;if(!t.emittedReadable){d(\"emitReadable\",t.flowing);t.emittedReadable=true;process.nextTick(emitReadable_,e)}}function emitReadable_(e){var t=e._readableState;d(\"emitReadable_\",t.destroyed,t.length,t.ended);if(!t.destroyed&&(t.length||t.ended)){e.emit(\"readable\");t.emittedReadable=false}t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark;flow(e)}function maybeReadMore(e,t){if(!t.readingMore){t.readingMore=true;process.nextTick(maybeReadMore_,e,t)}}function maybeReadMore_(e,t){while(!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&t.length===0)){var r=t.length;d(\"maybeReadMore read 0\");e.read(0);if(r===t.length)break}t.readingMore=false}Readable.prototype._read=function(e){E(this,new g(\"_read()\"))};Readable.prototype.pipe=function(e,t){var r=this;var i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e);break}i.pipesCount+=1;d(\"pipe count=%d opts=%j\",i.pipesCount,t);var n=(!t||t.end!==false)&&e!==process.stdout&&e!==process.stderr;var s=n?onend:unpipe;if(i.endEmitted)process.nextTick(s);else r.once(\"end\",s);e.on(\"unpipe\",onunpipe);function onunpipe(e,t){d(\"onunpipe\");if(e===r){if(t&&t.hasUnpiped===false){t.hasUnpiped=true;cleanup()}}}function onend(){d(\"onend\");e.end()}var o=pipeOnDrain(r);e.on(\"drain\",o);var h=false;function cleanup(){d(\"cleanup\");e.removeListener(\"close\",onclose);e.removeListener(\"finish\",onfinish);e.removeListener(\"drain\",o);e.removeListener(\"error\",onerror);e.removeListener(\"unpipe\",onunpipe);r.removeListener(\"end\",onend);r.removeListener(\"end\",unpipe);r.removeListener(\"data\",ondata);h=true;if(i.awaitDrain&&(!e._writableState||e._writableState.needDrain))o()}r.on(\"data\",ondata);function ondata(t){d(\"ondata\");var n=e.write(t);d(\"dest.write\",n);if(n===false){if((i.pipesCount===1&&i.pipes===e||i.pipesCount>1&&indexOf(i.pipes,e)!==-1)&&!h){d(\"false write response, pause\",i.awaitDrain);i.awaitDrain++}r.pause()}}function onerror(t){d(\"onerror\",t);unpipe();e.removeListener(\"error\",onerror);if(a(e,\"error\")===0)E(e,t)}prependListener(e,\"error\",onerror);function onclose(){e.removeListener(\"finish\",onfinish);unpipe()}e.once(\"close\",onclose);function onfinish(){d(\"onfinish\");e.removeListener(\"close\",onclose);unpipe()}e.once(\"finish\",onfinish);function unpipe(){d(\"unpipe\");r.unpipe(e)}e.emit(\"pipe\",r);if(!i.flowing){d(\"pipe resume\");r.resume()}return e};function pipeOnDrain(e){return function pipeOnDrainFunctionResult(){var t=e._readableState;d(\"pipeOnDrain\",t.awaitDrain);if(t.awaitDrain)t.awaitDrain--;if(t.awaitDrain===0&&a(e,\"data\")){t.flowing=true;flow(e)}}}Readable.prototype.unpipe=function(e){var t=this._readableState;var r={hasUnpiped:false};if(t.pipesCount===0)return this;if(t.pipesCount===1){if(e&&e!==t.pipes)return this;if(!e)e=t.pipes;t.pipes=null;t.pipesCount=0;t.flowing=false;if(e)e.emit(\"unpipe\",this,r);return this}if(!e){var i=t.pipes;var n=t.pipesCount;t.pipes=null;t.pipesCount=0;t.flowing=false;for(var a=0;a<n;a++){i[a].emit(\"unpipe\",this,{hasUnpiped:false})}return this}var s=indexOf(t.pipes,e);if(s===-1)return this;t.pipes.splice(s,1);t.pipesCount-=1;if(t.pipesCount===1)t.pipes=t.pipes[0];e.emit(\"unpipe\",this,r);return this};Readable.prototype.on=function(e,t){var r=s.prototype.on.call(this,e,t);var i=this._readableState;if(e===\"data\"){i.readableListening=this.listenerCount(\"readable\")>0;if(i.flowing!==false)this.resume()}else if(e===\"readable\"){if(!i.endEmitted&&!i.readableListening){i.readableListening=i.needReadable=true;i.flowing=false;i.emittedReadable=false;d(\"on readable\",i.length,i.reading);if(i.length){emitReadable(this)}else if(!i.reading){process.nextTick(nReadingNextTick,this)}}}return r};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(e,t){var r=s.prototype.removeListener.call(this,e,t);if(e===\"readable\"){process.nextTick(updateReadableListening,this)}return r};Readable.prototype.removeAllListeners=function(e){var t=s.prototype.removeAllListeners.apply(this,arguments);if(e===\"readable\"||e===undefined){process.nextTick(updateReadableListening,this)}return t};function updateReadableListening(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0;if(t.resumeScheduled&&!t.paused){t.flowing=true}else if(e.listenerCount(\"data\")>0){e.resume()}}function nReadingNextTick(e){d(\"readable nexttick read 0\");e.read(0)}Readable.prototype.resume=function(){var e=this._readableState;if(!e.flowing){d(\"resume\");e.flowing=!e.readableListening;resume(this,e)}e.paused=false;return this};function resume(e,t){if(!t.resumeScheduled){t.resumeScheduled=true;process.nextTick(resume_,e,t)}}function resume_(e,t){d(\"resume\",t.reading);if(!t.reading){e.read(0)}t.resumeScheduled=false;e.emit(\"resume\");flow(e);if(t.flowing&&!t.reading)e.read(0)}Readable.prototype.pause=function(){d(\"call pause flowing=%j\",this._readableState.flowing);if(this._readableState.flowing!==false){d(\"pause\");this._readableState.flowing=false;this.emit(\"pause\")}this._readableState.paused=true;return this};function flow(e){var t=e._readableState;d(\"flow\",t.flowing);while(t.flowing&&e.read()!==null){}}Readable.prototype.wrap=function(e){var t=this;var r=this._readableState;var i=false;e.on(\"end\",(function(){d(\"wrapped end\");if(r.decoder&&!r.ended){var e=r.decoder.end();if(e&&e.length)t.push(e)}t.push(null)}));e.on(\"data\",(function(n){d(\"wrapped data\");if(r.decoder)n=r.decoder.write(n);if(r.objectMode&&(n===null||n===undefined))return;else if(!r.objectMode&&(!n||!n.length))return;var a=t.push(n);if(!a){i=true;e.pause()}}));for(var n in e){if(this[n]===undefined&&typeof e[n]===\"function\"){this[n]=function methodWrap(t){return function methodWrapReturnFunction(){return e[t].apply(e,arguments)}}(n)}}for(var a=0;a<k.length;a++){e.on(k[a],this.emit.bind(this,k[a]))}this._read=function(t){d(\"wrapped _read\",t);if(i){i=false;e.resume()}};return this};if(typeof Symbol===\"function\"){Readable.prototype[Symbol.asyncIterator]=function(){if(M===undefined){M=r(6871)}return M(this)}}Object.defineProperty(Readable.prototype,\"readableHighWaterMark\",{enumerable:false,get:function get(){return this._readableState.highWaterMark}});Object.defineProperty(Readable.prototype,\"readableBuffer\",{enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer}});Object.defineProperty(Readable.prototype,\"readableFlowing\",{enumerable:false,get:function get(){return this._readableState.flowing},set:function set(e){if(this._readableState){this._readableState.flowing=e}}});Readable._fromList=fromList;Object.defineProperty(Readable.prototype,\"readableLength\",{enumerable:false,get:function get(){return this._readableState.length}});function fromList(e,t){if(t.length===0)return null;var r;if(t.objectMode)r=t.buffer.shift();else if(!e||e>=t.length){if(t.decoder)r=t.buffer.join(\"\");else if(t.buffer.length===1)r=t.buffer.first();else r=t.buffer.concat(t.length);t.buffer.clear()}else{r=t.buffer.consume(e,t.decoder)}return r}function endReadable(e){var t=e._readableState;d(\"endReadable\",t.endEmitted);if(!t.endEmitted){t.ended=true;process.nextTick(endReadableNT,t,e)}}function endReadableNT(e,t){d(\"endReadableNT\",e.endEmitted,e.length);if(!e.endEmitted&&e.length===0){e.endEmitted=true;t.readable=false;t.emit(\"end\");if(e.autoDestroy){var r=t._writableState;if(!r||r.autoDestroy&&r.finished){t.destroy()}}}}if(typeof Symbol===\"function\"){Readable.from=function(e,t){if(B===undefined){B=r(9727)}return B(Readable,e,t)}}function indexOf(e,t){for(var r=0,i=e.length;r<i;r++){if(e[r]===t)return r}return-1}},1170:function(e,t,r){\"use strict\";e.exports=Transform;var i=r(4646).q,n=i.ERR_METHOD_NOT_IMPLEMENTED,a=i.ERR_MULTIPLE_CALLBACK,s=i.ERR_TRANSFORM_ALREADY_TRANSFORMING,o=i.ERR_TRANSFORM_WITH_LENGTH_0;var h=r(2403);r(3782)(Transform,h);function afterTransform(e,t){var r=this._transformState;r.transforming=false;var i=r.writecb;if(i===null){return this.emit(\"error\",new a)}r.writechunk=null;r.writecb=null;if(t!=null)this.push(t);i(e);var n=this._readableState;n.reading=false;if(n.needReadable||n.length<n.highWaterMark){this._read(n.highWaterMark)}}function Transform(e){if(!(this instanceof Transform))return new Transform(e);h.call(this,e);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};this._readableState.needReadable=true;this._readableState.sync=false;if(e){if(typeof e.transform===\"function\")this._transform=e.transform;if(typeof e.flush===\"function\")this._flush=e.flush}this.on(\"prefinish\",prefinish)}function prefinish(){var e=this;if(typeof this._flush===\"function\"&&!this._readableState.destroyed){this._flush((function(t,r){done(e,t,r)}))}else{done(this,null,null)}}Transform.prototype.push=function(e,t){this._transformState.needTransform=false;return h.prototype.push.call(this,e,t)};Transform.prototype._transform=function(e,t,r){r(new n(\"_transform()\"))};Transform.prototype._write=function(e,t,r){var i=this._transformState;i.writecb=r;i.writechunk=e;i.writeencoding=t;if(!i.transforming){var n=this._readableState;if(i.needTransform||n.needReadable||n.length<n.highWaterMark)this._read(n.highWaterMark)}};Transform.prototype._read=function(e){var t=this._transformState;if(t.writechunk!==null&&!t.transforming){t.transforming=true;this._transform(t.writechunk,t.writeencoding,t.afterTransform)}else{t.needTransform=true}};Transform.prototype._destroy=function(e,t){h.prototype._destroy.call(this,e,(function(e){t(e)}))};function done(e,t,r){if(t)return e.emit(\"error\",t);if(r!=null)e.push(r);if(e._writableState.length)throw new o;if(e._transformState.transforming)throw new s;return e.push(null)}},7337:function(e,t,r){\"use strict\";e.exports=Writable;function WriteReq(e,t,r){this.chunk=e;this.encoding=t;this.callback=r;this.next=null}function CorkedRequest(e){var t=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(t,e)}}var i;Writable.WritableState=WritableState;var n={deprecate:r(6769)};var a=r(4678);var s=r(4300).Buffer;var o=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return s.from(e)}function _isUint8Array(e){return s.isBuffer(e)||e instanceof o}var h=r(7025);var u=r(6776),d=u.getHighWaterMark;var c=r(4646).q,l=c.ERR_INVALID_ARG_TYPE,p=c.ERR_METHOD_NOT_IMPLEMENTED,v=c.ERR_MULTIPLE_CALLBACK,b=c.ERR_STREAM_CANNOT_PIPE,m=c.ERR_STREAM_DESTROYED,y=c.ERR_STREAM_NULL_VALUES,g=c.ERR_STREAM_WRITE_AFTER_END,_=c.ERR_UNKNOWN_ENCODING;var w=h.errorOrDestroy;r(3782)(Writable,a);function nop(){}function WritableState(e,t,n){i=i||r(2403);e=e||{};if(typeof n!==\"boolean\")n=t instanceof i;this.objectMode=!!e.objectMode;if(n)this.objectMode=this.objectMode||!!e.writableObjectMode;this.highWaterMark=d(this,e,\"writableHighWaterMark\",n);this.finalCalled=false;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;this.destroyed=false;var a=e.decodeStrings===false;this.decodeStrings=!a;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(e){onwrite(t,e)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var e=this.bufferedRequest;var t=[];while(e){t.push(e);e=e.next}return t};(function(){try{Object.defineProperty(WritableState.prototype,\"buffer\",{get:n.deprecate((function writableStateBufferGetter(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer \"+\"instead.\",\"DEP0003\")})}catch(e){}})();var M;if(typeof Symbol===\"function\"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]===\"function\"){M=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(e){if(M.call(this,e))return true;if(this!==Writable)return false;return e&&e._writableState instanceof WritableState}})}else{M=function realHasInstance(e){return e instanceof this}}function Writable(e){i=i||r(2403);var t=this instanceof i;if(!t&&!M.call(Writable,this))return new Writable(e);this._writableState=new WritableState(e,this,t);this.writable=true;if(e){if(typeof e.write===\"function\")this._write=e.write;if(typeof e.writev===\"function\")this._writev=e.writev;if(typeof e.destroy===\"function\")this._destroy=e.destroy;if(typeof e.final===\"function\")this._final=e.final}a.call(this)}Writable.prototype.pipe=function(){w(this,new b)};function writeAfterEnd(e,t){var r=new g;w(e,r);process.nextTick(t,r)}function validChunk(e,t,r,i){var n;if(r===null){n=new y}else if(typeof r!==\"string\"&&!t.objectMode){n=new l(\"chunk\",[\"string\",\"Buffer\"],r)}if(n){w(e,n);process.nextTick(i,n);return false}return true}Writable.prototype.write=function(e,t,r){var i=this._writableState;var n=false;var a=!i.objectMode&&_isUint8Array(e);if(a&&!s.isBuffer(e)){e=_uint8ArrayToBuffer(e)}if(typeof t===\"function\"){r=t;t=null}if(a)t=\"buffer\";else if(!t)t=i.defaultEncoding;if(typeof r!==\"function\")r=nop;if(i.ending)writeAfterEnd(this,r);else if(a||validChunk(this,i,e,r)){i.pendingcb++;n=writeOrBuffer(this,i,a,e,t,r)}return n};Writable.prototype.cork=function(){this._writableState.corked++};Writable.prototype.uncork=function(){var e=this._writableState;if(e.corked){e.corked--;if(!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest)clearBuffer(this,e)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(e){if(typeof e===\"string\")e=e.toLowerCase();if(!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new _(e);this._writableState.defaultEncoding=e;return this};Object.defineProperty(Writable.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});function decodeChunk(e,t,r){if(!e.objectMode&&e.decodeStrings!==false&&typeof t===\"string\"){t=s.from(t,r)}return t}Object.defineProperty(Writable.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});function writeOrBuffer(e,t,r,i,n,a){if(!r){var s=decodeChunk(t,i,n);if(i!==s){r=true;n=\"buffer\";i=s}}var o=t.objectMode?1:i.length;t.length+=o;var h=t.length<t.highWaterMark;if(!h)t.needDrain=true;if(t.writing||t.corked){var u=t.lastBufferedRequest;t.lastBufferedRequest={chunk:i,encoding:n,isBuf:r,callback:a,next:null};if(u){u.next=t.lastBufferedRequest}else{t.bufferedRequest=t.lastBufferedRequest}t.bufferedRequestCount+=1}else{doWrite(e,t,false,o,i,n,a)}return h}function doWrite(e,t,r,i,n,a,s){t.writelen=i;t.writecb=s;t.writing=true;t.sync=true;if(t.destroyed)t.onwrite(new m(\"write\"));else if(r)e._writev(n,t.onwrite);else e._write(n,a,t.onwrite);t.sync=false}function onwriteError(e,t,r,i,n){--t.pendingcb;if(r){process.nextTick(n,i);process.nextTick(finishMaybe,e,t);e._writableState.errorEmitted=true;w(e,i)}else{n(i);e._writableState.errorEmitted=true;w(e,i);finishMaybe(e,t)}}function onwriteStateUpdate(e){e.writing=false;e.writecb=null;e.length-=e.writelen;e.writelen=0}function onwrite(e,t){var r=e._writableState;var i=r.sync;var n=r.writecb;if(typeof n!==\"function\")throw new v;onwriteStateUpdate(r);if(t)onwriteError(e,r,i,t,n);else{var a=needFinish(r)||e.destroyed;if(!a&&!r.corked&&!r.bufferProcessing&&r.bufferedRequest){clearBuffer(e,r)}if(i){process.nextTick(afterWrite,e,r,a,n)}else{afterWrite(e,r,a,n)}}}function afterWrite(e,t,r,i){if(!r)onwriteDrain(e,t);t.pendingcb--;i();finishMaybe(e,t)}function onwriteDrain(e,t){if(t.length===0&&t.needDrain){t.needDrain=false;e.emit(\"drain\")}}function clearBuffer(e,t){t.bufferProcessing=true;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var i=t.bufferedRequestCount;var n=new Array(i);var a=t.corkedRequestsFree;a.entry=r;var s=0;var o=true;while(r){n[s]=r;if(!r.isBuf)o=false;r=r.next;s+=1}n.allBuffers=o;doWrite(e,t,true,t.length,n,\"\",a.finish);t.pendingcb++;t.lastBufferedRequest=null;if(a.next){t.corkedRequestsFree=a.next;a.next=null}else{t.corkedRequestsFree=new CorkedRequest(t)}t.bufferedRequestCount=0}else{while(r){var h=r.chunk;var u=r.encoding;var d=r.callback;var c=t.objectMode?1:h.length;doWrite(e,t,false,c,h,u,d);r=r.next;t.bufferedRequestCount--;if(t.writing){break}}if(r===null)t.lastBufferedRequest=null}t.bufferedRequest=r;t.bufferProcessing=false}Writable.prototype._write=function(e,t,r){r(new p(\"_write()\"))};Writable.prototype._writev=null;Writable.prototype.end=function(e,t,r){var i=this._writableState;if(typeof e===\"function\"){r=e;e=null;t=null}else if(typeof t===\"function\"){r=t;t=null}if(e!==null&&e!==undefined)this.write(e,t);if(i.corked){i.corked=1;this.uncork()}if(!i.ending)endWritable(this,i,r);return this};Object.defineProperty(Writable.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function needFinish(e){return e.ending&&e.length===0&&e.bufferedRequest===null&&!e.finished&&!e.writing}function callFinal(e,t){e._final((function(r){t.pendingcb--;if(r){w(e,r)}t.prefinished=true;e.emit(\"prefinish\");finishMaybe(e,t)}))}function prefinish(e,t){if(!t.prefinished&&!t.finalCalled){if(typeof e._final===\"function\"&&!t.destroyed){t.pendingcb++;t.finalCalled=true;process.nextTick(callFinal,e,t)}else{t.prefinished=true;e.emit(\"prefinish\")}}}function finishMaybe(e,t){var r=needFinish(t);if(r){prefinish(e,t);if(t.pendingcb===0){t.finished=true;e.emit(\"finish\");if(t.autoDestroy){var i=e._readableState;if(!i||i.autoDestroy&&i.endEmitted){e.destroy()}}}}return r}function endWritable(e,t,r){t.ending=true;finishMaybe(e,t);if(r){if(t.finished)process.nextTick(r);else e.once(\"finish\",r)}t.ended=true;e.writable=false}function onCorkedFinish(e,t,r){var i=e.entry;e.entry=null;while(i){var n=i.callback;t.pendingcb--;n(r);i=i.next}t.corkedRequestsFree.next=e}Object.defineProperty(Writable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._writableState===undefined){return false}return this._writableState.destroyed},set:function set(e){if(!this._writableState){return}this._writableState.destroyed=e}});Writable.prototype.destroy=h.destroy;Writable.prototype._undestroy=h.undestroy;Writable.prototype._destroy=function(e,t){t(e)}},6871:function(e,t,r){\"use strict\";var i;function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var n=r(9698);var a=Symbol(\"lastResolve\");var s=Symbol(\"lastReject\");var o=Symbol(\"error\");var h=Symbol(\"ended\");var u=Symbol(\"lastPromise\");var d=Symbol(\"handlePromise\");var c=Symbol(\"stream\");function createIterResult(e,t){return{value:e,done:t}}function readAndResolve(e){var t=e[a];if(t!==null){var r=e[c].read();if(r!==null){e[u]=null;e[a]=null;e[s]=null;t(createIterResult(r,false))}}}function onReadable(e){process.nextTick(readAndResolve,e)}function wrapForNext(e,t){return function(r,i){e.then((function(){if(t[h]){r(createIterResult(undefined,true));return}t[d](r,i)}),i)}}var l=Object.getPrototypeOf((function(){}));var p=Object.setPrototypeOf((i={get stream(){return this[c]},next:function next(){var e=this;var t=this[o];if(t!==null){return Promise.reject(t)}if(this[h]){return Promise.resolve(createIterResult(undefined,true))}if(this[c].destroyed){return new Promise((function(t,r){process.nextTick((function(){if(e[o]){r(e[o])}else{t(createIterResult(undefined,true))}}))}))}var r=this[u];var i;if(r){i=new Promise(wrapForNext(r,this))}else{var n=this[c].read();if(n!==null){return Promise.resolve(createIterResult(n,false))}i=new Promise(this[d])}this[u]=i;return i}},_defineProperty(i,Symbol.asyncIterator,(function(){return this})),_defineProperty(i,\"return\",(function _return(){var e=this;return new Promise((function(t,r){e[c].destroy(null,(function(e){if(e){r(e);return}t(createIterResult(undefined,true))}))}))})),i),l);var v=function createReadableStreamAsyncIterator(e){var t;var r=Object.create(p,(t={},_defineProperty(t,c,{value:e,writable:true}),_defineProperty(t,a,{value:null,writable:true}),_defineProperty(t,s,{value:null,writable:true}),_defineProperty(t,o,{value:null,writable:true}),_defineProperty(t,h,{value:e._readableState.endEmitted,writable:true}),_defineProperty(t,d,{value:function value(e,t){var i=r[c].read();if(i){r[u]=null;r[a]=null;r[s]=null;e(createIterResult(i,false))}else{r[a]=e;r[s]=t}},writable:true}),t));r[u]=null;n(e,(function(e){if(e&&e.code!==\"ERR_STREAM_PREMATURE_CLOSE\"){var t=r[s];if(t!==null){r[u]=null;r[a]=null;r[s]=null;t(e)}r[o]=e;return}var i=r[a];if(i!==null){r[u]=null;r[a]=null;r[s]=null;i(createIterResult(undefined,true))}r[h]=true}));e.on(\"readable\",onReadable.bind(null,r));return r};e.exports=v},4379:function(e,t,r){\"use strict\";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);if(t)i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,i)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||false;i.configurable=true;if(\"value\"in i)i.writable=true;Object.defineProperty(e,i.key,i)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}var i=r(4300),n=i.Buffer;var a=r(3837),s=a.inspect;var o=s&&s.custom||\"inspect\";function copyBuffer(e,t,r){n.prototype.copy.call(e,t,r)}e.exports=function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0}_createClass(BufferList,[{key:\"push\",value:function push(e){var t={data:e,next:null};if(this.length>0)this.tail.next=t;else this.head=t;this.tail=t;++this.length}},{key:\"unshift\",value:function unshift(e){var t={data:e,next:this.head};if(this.length===0)this.tail=t;this.head=t;++this.length}},{key:\"shift\",value:function shift(){if(this.length===0)return;var e=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return e}},{key:\"clear\",value:function clear(){this.head=this.tail=null;this.length=0}},{key:\"join\",value:function join(e){if(this.length===0)return\"\";var t=this.head;var r=\"\"+t.data;while(t=t.next){r+=e+t.data}return r}},{key:\"concat\",value:function concat(e){if(this.length===0)return n.alloc(0);var t=n.allocUnsafe(e>>>0);var r=this.head;var i=0;while(r){copyBuffer(r.data,t,i);i+=r.data.length;r=r.next}return t}},{key:\"consume\",value:function consume(e,t){var r;if(e<this.head.data.length){r=this.head.data.slice(0,e);this.head.data=this.head.data.slice(e)}else if(e===this.head.data.length){r=this.shift()}else{r=t?this._getString(e):this._getBuffer(e)}return r}},{key:\"first\",value:function first(){return this.head.data}},{key:\"_getString\",value:function _getString(e){var t=this.head;var r=1;var i=t.data;e-=i.length;while(t=t.next){var n=t.data;var a=e>n.length?n.length:e;if(a===n.length)i+=n;else i+=n.slice(0,e);e-=a;if(e===0){if(a===n.length){++r;if(t.next)this.head=t.next;else this.head=this.tail=null}else{this.head=t;t.data=n.slice(a)}break}++r}this.length-=r;return i}},{key:\"_getBuffer\",value:function _getBuffer(e){var t=n.allocUnsafe(e);var r=this.head;var i=1;r.data.copy(t);e-=r.data.length;while(r=r.next){var a=r.data;var s=e>a.length?a.length:e;a.copy(t,t.length-e,0,s);e-=s;if(e===0){if(s===a.length){++i;if(r.next)this.head=r.next;else this.head=this.tail=null}else{this.head=r;r.data=a.slice(s)}break}++i}this.length-=i;return t}},{key:o,value:function value(e,t){return s(this,_objectSpread({},t,{depth:0,customInspect:false}))}}]);return BufferList}()},7025:function(e){\"use strict\";function destroy(e,t){var r=this;var i=this._readableState&&this._readableState.destroyed;var n=this._writableState&&this._writableState.destroyed;if(i||n){if(t){t(e)}else if(e){if(!this._writableState){process.nextTick(emitErrorNT,this,e)}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,e)}}return this}if(this._readableState){this._readableState.destroyed=true}if(this._writableState){this._writableState.destroyed=true}this._destroy(e||null,(function(e){if(!t&&e){if(!r._writableState){process.nextTick(emitErrorAndCloseNT,r,e)}else if(!r._writableState.errorEmitted){r._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,r,e)}else{process.nextTick(emitCloseNT,r)}}else if(t){process.nextTick(emitCloseNT,r);t(e)}else{process.nextTick(emitCloseNT,r)}}));return this}function emitErrorAndCloseNT(e,t){emitErrorNT(e,t);emitCloseNT(e)}function emitCloseNT(e){if(e._writableState&&!e._writableState.emitClose)return;if(e._readableState&&!e._readableState.emitClose)return;e.emit(\"close\")}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false}}function emitErrorNT(e,t){e.emit(\"error\",t)}function errorOrDestroy(e,t){var r=e._readableState;var i=e._writableState;if(r&&r.autoDestroy||i&&i.autoDestroy)e.destroy(t);else e.emit(\"error\",t)}e.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy}},9698:function(e,t,r){\"use strict\";var i=r(4646).q.ERR_STREAM_PREMATURE_CLOSE;function once(e){var t=false;return function(){if(t)return;t=true;for(var r=arguments.length,i=new Array(r),n=0;n<r;n++){i[n]=arguments[n]}e.apply(this,i)}}function noop(){}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function eos(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=once(r||noop);var n=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var s=function onlegacyfinish(){if(!e.writable)h()};var o=e._writableState&&e._writableState.finished;var h=function onfinish(){a=false;o=true;if(!n)r.call(e)};var u=e._readableState&&e._readableState.endEmitted;var d=function onend(){n=false;u=true;if(!a)r.call(e)};var c=function onerror(t){r.call(e,t)};var l=function onclose(){var t;if(n&&!u){if(!e._readableState||!e._readableState.ended)t=new i;return r.call(e,t)}if(a&&!o){if(!e._writableState||!e._writableState.ended)t=new i;return r.call(e,t)}};var p=function onrequest(){e.req.on(\"finish\",h)};if(isRequest(e)){e.on(\"complete\",h);e.on(\"abort\",l);if(e.req)p();else e.on(\"request\",p)}else if(a&&!e._writableState){e.on(\"end\",s);e.on(\"close\",s)}e.on(\"end\",d);e.on(\"finish\",h);if(t.error!==false)e.on(\"error\",c);e.on(\"close\",l);return function(){e.removeListener(\"complete\",h);e.removeListener(\"abort\",l);e.removeListener(\"request\",p);if(e.req)e.req.removeListener(\"finish\",h);e.removeListener(\"end\",s);e.removeListener(\"close\",s);e.removeListener(\"finish\",h);e.removeListener(\"end\",d);e.removeListener(\"error\",c);e.removeListener(\"close\",l)}}e.exports=eos},9727:function(e,t,r){\"use strict\";function asyncGeneratorStep(e,t,r,i,n,a,s){try{var o=e[a](s);var h=o.value}catch(e){r(e);return}if(o.done){t(h)}else{Promise.resolve(h).then(i,n)}}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(i,n){var a=e.apply(t,r);function _next(e){asyncGeneratorStep(a,i,n,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(a,i,n,_next,_throw,\"throw\",e)}_next(undefined)}))}}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);if(t)i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,i)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var i=r(4646).q.ERR_INVALID_ARG_TYPE;function from(e,t,r){var n;if(t&&typeof t.next===\"function\"){n=t}else if(t&&t[Symbol.asyncIterator])n=t[Symbol.asyncIterator]();else if(t&&t[Symbol.iterator])n=t[Symbol.iterator]();else throw new i(\"iterable\",[\"Iterable\"],t);var a=new e(_objectSpread({objectMode:true},r));var s=false;a._read=function(){if(!s){s=true;next()}};function next(){return _next2.apply(this,arguments)}function _next2(){_next2=_asyncToGenerator((function*(){try{var e=yield n.next(),t=e.value,r=e.done;if(r){a.push(null)}else if(a.push(yield t)){next()}else{s=false}}catch(e){a.destroy(e)}}));return _next2.apply(this,arguments)}return a}e.exports=from},8442:function(e,t,r){\"use strict\";var i;function once(e){var t=false;return function(){if(t)return;t=true;e.apply(void 0,arguments)}}var n=r(4646).q,a=n.ERR_MISSING_ARGS,s=n.ERR_STREAM_DESTROYED;function noop(e){if(e)throw e}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function destroyer(e,t,n,a){a=once(a);var o=false;e.on(\"close\",(function(){o=true}));if(i===undefined)i=r(9698);i(e,{readable:t,writable:n},(function(e){if(e)return a(e);o=true;a()}));var h=false;return function(t){if(o)return;if(h)return;h=true;if(isRequest(e))return e.abort();if(typeof e.destroy===\"function\")return e.destroy();a(t||new s(\"pipe\"))}}function call(e){e()}function pipe(e,t){return e.pipe(t)}function popCallback(e){if(!e.length)return noop;if(typeof e[e.length-1]!==\"function\")return noop;return e.pop()}function pipeline(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}var i=popCallback(t);if(Array.isArray(t[0]))t=t[0];if(t.length<2){throw new a(\"streams\")}var n;var s=t.map((function(e,r){var a=r<t.length-1;var o=r>0;return destroyer(e,a,o,(function(e){if(!n)n=e;if(e)s.forEach(call);if(a)return;s.forEach(call);i(n)}))}));return t.reduce(pipe)}e.exports=pipeline},6776:function(e,t,r){\"use strict\";var i=r(4646).q.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(e,t,r){return e.highWaterMark!=null?e.highWaterMark:t?e[r]:null}function getHighWaterMark(e,t,r,n){var a=highWaterMarkFrom(t,n,r);if(a!=null){if(!(isFinite(a)&&Math.floor(a)===a)||a<0){var s=n?r:\"highWaterMark\";throw new i(s,a)}return Math.floor(a)}return e.objectMode?16:16*1024}e.exports={getHighWaterMark:getHighWaterMark}},4678:function(e,t,r){e.exports=r(2781)},3726:function(e,t,r){var i=r(2781);if(process.env.READABLE_STREAM===\"disable\"&&i){e.exports=i.Readable;Object.assign(e.exports,i);e.exports.Stream=i}else{t=e.exports=r(1709);t.Stream=i||t;t.Readable=t;t.Writable=r(7337);t.Duplex=r(2403);t.Transform=r(1170);t.PassThrough=r(7889);t.finished=r(9698);t.pipeline=r(8442)}},3225:function(e,t,r){\"use strict\";var i=r(4300).Buffer;var n=r(3782);var a=r(9029);var s=new Array(16);var o=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var h=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var u=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var d=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];var c=[0,1518500249,1859775393,2400959708,2840853838];var l=[1352829926,1548603684,1836072691,2053994217,0];function RIPEMD160(){a.call(this,64);this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520}n(RIPEMD160,a);RIPEMD160.prototype._update=function(){var e=s;for(var t=0;t<16;++t)e[t]=this._block.readInt32LE(t*4);var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var p=this._e|0;var v=this._a|0;var b=this._b|0;var m=this._c|0;var y=this._d|0;var g=this._e|0;for(var _=0;_<80;_+=1){var w;var M;if(_<16){w=fn1(r,i,n,a,p,e[o[_]],c[0],u[_]);M=fn5(v,b,m,y,g,e[h[_]],l[0],d[_])}else if(_<32){w=fn2(r,i,n,a,p,e[o[_]],c[1],u[_]);M=fn4(v,b,m,y,g,e[h[_]],l[1],d[_])}else if(_<48){w=fn3(r,i,n,a,p,e[o[_]],c[2],u[_]);M=fn3(v,b,m,y,g,e[h[_]],l[2],d[_])}else if(_<64){w=fn4(r,i,n,a,p,e[o[_]],c[3],u[_]);M=fn2(v,b,m,y,g,e[h[_]],l[3],d[_])}else{w=fn5(r,i,n,a,p,e[o[_]],c[4],u[_]);M=fn1(v,b,m,y,g,e[h[_]],l[4],d[_])}r=p;p=a;a=rotl(n,10);n=i;i=w;v=g;g=y;y=rotl(m,10);m=b;b=M}var B=this._b+n+y|0;this._b=this._c+a+g|0;this._c=this._d+p+v|0;this._d=this._e+r+b|0;this._e=this._a+i+m|0;this._a=B};RIPEMD160.prototype._digest=function(){this._block[this._blockOffset++]=128;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();var e=i.alloc?i.alloc(20):new i(20);e.writeInt32LE(this._a,0);e.writeInt32LE(this._b,4);e.writeInt32LE(this._c,8);e.writeInt32LE(this._d,12);e.writeInt32LE(this._e,16);return e};function rotl(e,t){return e<<t|e>>>32-t}function fn1(e,t,r,i,n,a,s,o){return rotl(e+(t^r^i)+a+s|0,o)+n|0}function fn2(e,t,r,i,n,a,s,o){return rotl(e+(t&r|~t&i)+a+s|0,o)+n|0}function fn3(e,t,r,i,n,a,s,o){return rotl(e+((t|~r)^i)+a+s|0,o)+n|0}function fn4(e,t,r,i,n,a,s,o){return rotl(e+(t&i|r&~i)+a+s|0,o)+n|0}function fn5(e,t,r,i,n,a,s,o){return rotl(e+(t^(r|~i))+a+s|0,o)+n|0}e.exports=RIPEMD160},5055:function(e,t,r){var i=r(4300);var n=i.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow){e.exports=i}else{copyProps(i,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return n(e,t,r)}SafeBuffer.prototype=Object.create(n.prototype);copyProps(n,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return n(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var i=n(e);if(t!==undefined){if(typeof r===\"string\"){i.fill(t,r)}else{i.fill(t)}}else{i.fill(0)}return i};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i.SlowBuffer(e)}},6911:function(e,t,r){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar i=r(4300);var n=i.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow){e.exports=i}else{copyProps(i,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return n(e,t,r)}SafeBuffer.prototype=Object.create(n.prototype);copyProps(n,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return n(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var i=n(e);if(t!==undefined){if(typeof r===\"string\"){i.fill(t,r)}else{i.fill(t)}}else{i.fill(0)}return i};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i.SlowBuffer(e)}},2858:function(e,t,r){var i=r(6911).Buffer;function Hash(e,t){this._block=i.alloc(e);this._finalSize=t;this._blockSize=e;this._len=0}Hash.prototype.update=function(e,t){if(typeof e===\"string\"){t=t||\"utf8\";e=i.from(e,t)}var r=this._block;var n=this._blockSize;var a=e.length;var s=this._len;for(var o=0;o<a;){var h=s%n;var u=Math.min(a-o,n-h);for(var d=0;d<u;d++){r[h+d]=e[o+d]}s+=u;o+=u;if(s%n===0){this._update(r)}}this._len+=a;return this};Hash.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128;this._block.fill(0,t+1);if(t>=this._finalSize){this._update(this._block);this._block.fill(0)}var r=this._len*8;if(r<=4294967295){this._block.writeUInt32BE(r,this._blockSize-4)}else{var i=(r&4294967295)>>>0;var n=(r-i)/4294967296;this._block.writeUInt32BE(n,this._blockSize-8);this._block.writeUInt32BE(i,this._blockSize-4)}this._update(this._block);var a=this._hash();return e?a.toString(e):a};Hash.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")};e.exports=Hash},4371:function(e,t,r){var i=e.exports=function SHA(e){e=e.toLowerCase();var t=i[e];if(!t)throw new Error(e+\" is not supported (we accept pull requests)\");return new t};i.sha=r(4018);i.sha1=r(4179);i.sha224=r(532);i.sha256=r(1843);i.sha384=r(7455);i.sha512=r(9934)},4018:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1518500249,1859775393,2400959708|0,3395469782|0];var o=new Array(80);function Sha(){this.init();this._w=o;n.call(this,64,56)}i(Sha,n);Sha.prototype.init=function(){this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520;return this};function rotl5(e){return e<<5|e>>>27}function rotl30(e){return e<<30|e>>>2}function ft(e,t,r,i){if(e===0)return t&r|~t&i;if(e===2)return t&r|t&i|r&i;return t^r^i}Sha.prototype._update=function(e){var t=this._w;var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var o=this._e|0;for(var h=0;h<16;++h)t[h]=e.readInt32BE(h*4);for(;h<80;++h)t[h]=t[h-3]^t[h-8]^t[h-14]^t[h-16];for(var u=0;u<80;++u){var d=~~(u/20);var c=rotl5(r)+ft(d,i,n,a)+o+t[u]+s[d]|0;o=a;a=n;n=rotl30(i);i=r;r=c}this._a=r+this._a|0;this._b=i+this._b|0;this._c=n+this._c|0;this._d=a+this._d|0;this._e=o+this._e|0};Sha.prototype._hash=function(){var e=a.allocUnsafe(20);e.writeInt32BE(this._a|0,0);e.writeInt32BE(this._b|0,4);e.writeInt32BE(this._c|0,8);e.writeInt32BE(this._d|0,12);e.writeInt32BE(this._e|0,16);return e};e.exports=Sha},4179:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1518500249,1859775393,2400959708|0,3395469782|0];var o=new Array(80);function Sha1(){this.init();this._w=o;n.call(this,64,56)}i(Sha1,n);Sha1.prototype.init=function(){this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520;return this};function rotl1(e){return e<<1|e>>>31}function rotl5(e){return e<<5|e>>>27}function rotl30(e){return e<<30|e>>>2}function ft(e,t,r,i){if(e===0)return t&r|~t&i;if(e===2)return t&r|t&i|r&i;return t^r^i}Sha1.prototype._update=function(e){var t=this._w;var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var o=this._e|0;for(var h=0;h<16;++h)t[h]=e.readInt32BE(h*4);for(;h<80;++h)t[h]=rotl1(t[h-3]^t[h-8]^t[h-14]^t[h-16]);for(var u=0;u<80;++u){var d=~~(u/20);var c=rotl5(r)+ft(d,i,n,a)+o+t[u]+s[d]|0;o=a;a=n;n=rotl30(i);i=r;r=c}this._a=r+this._a|0;this._b=i+this._b|0;this._c=n+this._c|0;this._d=a+this._d|0;this._e=o+this._e|0};Sha1.prototype._hash=function(){var e=a.allocUnsafe(20);e.writeInt32BE(this._a|0,0);e.writeInt32BE(this._b|0,4);e.writeInt32BE(this._c|0,8);e.writeInt32BE(this._d|0,12);e.writeInt32BE(this._e|0,16);return e};e.exports=Sha1},532:function(e,t,r){var i=r(3782);var n=r(1843);var a=r(2858);var s=r(6911).Buffer;var o=new Array(64);function Sha224(){this.init();this._w=o;a.call(this,64,56)}i(Sha224,n);Sha224.prototype.init=function(){this._a=3238371032;this._b=914150663;this._c=812702999;this._d=4144912697;this._e=4290775857;this._f=1750603025;this._g=1694076839;this._h=3204075428;return this};Sha224.prototype._hash=function(){var e=s.allocUnsafe(28);e.writeInt32BE(this._a,0);e.writeInt32BE(this._b,4);e.writeInt32BE(this._c,8);e.writeInt32BE(this._d,12);e.writeInt32BE(this._e,16);e.writeInt32BE(this._f,20);e.writeInt32BE(this._g,24);return e};e.exports=Sha224},1843:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var o=new Array(64);function Sha256(){this.init();this._w=o;n.call(this,64,56)}i(Sha256,n);Sha256.prototype.init=function(){this._a=1779033703;this._b=3144134277;this._c=1013904242;this._d=2773480762;this._e=1359893119;this._f=2600822924;this._g=528734635;this._h=1541459225;return this};function ch(e,t,r){return r^e&(t^r)}function maj(e,t,r){return e&t|r&(e|t)}function sigma0(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function sigma1(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function gamma0(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}function gamma1(e){return(e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10}Sha256.prototype._update=function(e){var t=this._w;var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var o=this._e|0;var h=this._f|0;var u=this._g|0;var d=this._h|0;for(var c=0;c<16;++c)t[c]=e.readInt32BE(c*4);for(;c<64;++c)t[c]=gamma1(t[c-2])+t[c-7]+gamma0(t[c-15])+t[c-16]|0;for(var l=0;l<64;++l){var p=d+sigma1(o)+ch(o,h,u)+s[l]+t[l]|0;var v=sigma0(r)+maj(r,i,n)|0;d=u;u=h;h=o;o=a+p|0;a=n;n=i;i=r;r=p+v|0}this._a=r+this._a|0;this._b=i+this._b|0;this._c=n+this._c|0;this._d=a+this._d|0;this._e=o+this._e|0;this._f=h+this._f|0;this._g=u+this._g|0;this._h=d+this._h|0};Sha256.prototype._hash=function(){var e=a.allocUnsafe(32);e.writeInt32BE(this._a,0);e.writeInt32BE(this._b,4);e.writeInt32BE(this._c,8);e.writeInt32BE(this._d,12);e.writeInt32BE(this._e,16);e.writeInt32BE(this._f,20);e.writeInt32BE(this._g,24);e.writeInt32BE(this._h,28);return e};e.exports=Sha256},7455:function(e,t,r){var i=r(3782);var n=r(9934);var a=r(2858);var s=r(6911).Buffer;var o=new Array(160);function Sha384(){this.init();this._w=o;a.call(this,128,112)}i(Sha384,n);Sha384.prototype.init=function(){this._ah=3418070365;this._bh=1654270250;this._ch=2438529370;this._dh=355462360;this._eh=1731405415;this._fh=2394180231;this._gh=3675008525;this._hh=1203062813;this._al=3238371032;this._bl=914150663;this._cl=812702999;this._dl=4144912697;this._el=4290775857;this._fl=1750603025;this._gl=1694076839;this._hl=3204075428;return this};Sha384.prototype._hash=function(){var e=s.allocUnsafe(48);function writeInt64BE(t,r,i){e.writeInt32BE(t,i);e.writeInt32BE(r,i+4)}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);return e};e.exports=Sha384},9934:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];var o=new Array(160);function Sha512(){this.init();this._w=o;n.call(this,128,112)}i(Sha512,n);Sha512.prototype.init=function(){this._ah=1779033703;this._bh=3144134277;this._ch=1013904242;this._dh=2773480762;this._eh=1359893119;this._fh=2600822924;this._gh=528734635;this._hh=1541459225;this._al=4089235720;this._bl=2227873595;this._cl=4271175723;this._dl=1595750129;this._el=2917565137;this._fl=725511199;this._gl=4215389547;this._hl=327033209;return this};function Ch(e,t,r){return r^e&(t^r)}function maj(e,t,r){return e&t|r&(e|t)}function sigma0(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function sigma1(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function Gamma0(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function Gamma0l(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function Gamma1(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function Gamma1l(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function getCarry(e,t){return e>>>0<t>>>0?1:0}Sha512.prototype._update=function(e){var t=this._w;var r=this._ah|0;var i=this._bh|0;var n=this._ch|0;var a=this._dh|0;var o=this._eh|0;var h=this._fh|0;var u=this._gh|0;var d=this._hh|0;var c=this._al|0;var l=this._bl|0;var p=this._cl|0;var v=this._dl|0;var b=this._el|0;var m=this._fl|0;var y=this._gl|0;var g=this._hl|0;for(var _=0;_<32;_+=2){t[_]=e.readInt32BE(_*4);t[_+1]=e.readInt32BE(_*4+4)}for(;_<160;_+=2){var w=t[_-15*2];var M=t[_-15*2+1];var B=Gamma0(w,M);var E=Gamma0l(M,w);w=t[_-2*2];M=t[_-2*2+1];var k=Gamma1(w,M);var A=Gamma1l(M,w);var N=t[_-7*2];var P=t[_-7*2+1];var x=t[_-16*2];var I=t[_-16*2+1];var C=E+P|0;var D=B+N+getCarry(C,E)|0;C=C+A|0;D=D+k+getCarry(C,A)|0;C=C+I|0;D=D+x+getCarry(C,I)|0;t[_]=D;t[_+1]=C}for(var T=0;T<160;T+=2){D=t[T];C=t[T+1];var j=maj(r,i,n);var q=maj(c,l,p);var O=sigma0(r,c);var H=sigma0(c,r);var L=sigma1(o,b);var z=sigma1(b,o);var F=s[T];var U=s[T+1];var W=Ch(o,h,u);var V=Ch(b,m,y);var G=g+z|0;var J=d+L+getCarry(G,g)|0;G=G+V|0;J=J+W+getCarry(G,V)|0;G=G+U|0;J=J+F+getCarry(G,U)|0;G=G+C|0;J=J+D+getCarry(G,C)|0;var Z=H+q|0;var X=O+j+getCarry(Z,H)|0;d=u;g=y;u=h;y=m;h=o;m=b;b=v+G|0;o=a+J+getCarry(b,v)|0;a=n;v=p;n=i;p=l;i=r;l=c;c=G+Z|0;r=J+X+getCarry(c,G)|0}this._al=this._al+c|0;this._bl=this._bl+l|0;this._cl=this._cl+p|0;this._dl=this._dl+v|0;this._el=this._el+b|0;this._fl=this._fl+m|0;this._gl=this._gl+y|0;this._hl=this._hl+g|0;this._ah=this._ah+r+getCarry(this._al,c)|0;this._bh=this._bh+i+getCarry(this._bl,l)|0;this._ch=this._ch+n+getCarry(this._cl,p)|0;this._dh=this._dh+a+getCarry(this._dl,v)|0;this._eh=this._eh+o+getCarry(this._el,b)|0;this._fh=this._fh+h+getCarry(this._fl,m)|0;this._gh=this._gh+u+getCarry(this._gl,y)|0;this._hh=this._hh+d+getCarry(this._hl,g)|0};Sha512.prototype._hash=function(){var e=a.allocUnsafe(64);function writeInt64BE(t,r,i){e.writeInt32BE(t,i);e.writeInt32BE(r,i+4)}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);writeInt64BE(this._gh,this._gl,48);writeInt64BE(this._hh,this._hl,56);return e};e.exports=Sha512},3704:function(e,t,r){\"use strict\";var i=r(5055).Buffer;var n=i.isEncoding||function(e){e=\"\"+e;switch(e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return true;default:return false}};function _normalizeEncoding(e){if(!e)return\"utf8\";var t;while(true){switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase();t=true}}}function normalizeEncoding(e){var t=_normalizeEncoding(e);if(typeof t!==\"string\"&&(i.isEncoding===n||!n(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}t.s=StringDecoder;function StringDecoder(e){this.encoding=normalizeEncoding(e);var t;switch(this.encoding){case\"utf16le\":this.text=utf16Text;this.end=utf16End;t=4;break;case\"utf8\":this.fillLast=utf8FillLast;t=4;break;case\"base64\":this.text=base64Text;this.end=base64End;t=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastNeed=0;this.lastTotal=0;this.lastChar=i.allocUnsafe(t)}StringDecoder.prototype.write=function(e){if(e.length===0)return\"\";var t;var r;if(this.lastNeed){t=this.fillLast(e);if(t===undefined)return\"\";r=this.lastNeed;this.lastNeed=0}else{r=0}if(r<e.length)return t?t+this.text(e,r):this.text(e,r);return t||\"\"};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(e){if(this.lastNeed<=e.length){e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length);this.lastNeed-=e.length};function utf8CheckByte(e){if(e<=127)return 0;else if(e>>5===6)return 2;else if(e>>4===14)return 3;else if(e>>3===30)return 4;return e>>6===2?-1:-2}function utf8CheckIncomplete(e,t,r){var i=t.length-1;if(i<r)return 0;var n=utf8CheckByte(t[i]);if(n>=0){if(n>0)e.lastNeed=n-1;return n}if(--i<r||n===-2)return 0;n=utf8CheckByte(t[i]);if(n>=0){if(n>0)e.lastNeed=n-2;return n}if(--i<r||n===-2)return 0;n=utf8CheckByte(t[i]);if(n>=0){if(n>0){if(n===2)n=0;else e.lastNeed=n-3}return n}return 0}function utf8CheckExtraBytes(e,t,r){if((t[0]&192)!==128){e.lastNeed=0;return\"�\"}if(e.lastNeed>1&&t.length>1){if((t[1]&192)!==128){e.lastNeed=1;return\"�\"}if(e.lastNeed>2&&t.length>2){if((t[2]&192)!==128){e.lastNeed=2;return\"�\"}}}}function utf8FillLast(e){var t=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,e,t);if(r!==undefined)return r;if(this.lastNeed<=e.length){e.copy(this.lastChar,t,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,t,0,e.length);this.lastNeed-=e.length}function utf8Text(e,t){var r=utf8CheckIncomplete(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var i=e.length-(r-this.lastNeed);e.copy(this.lastChar,0,i);return e.toString(\"utf8\",t,i)}function utf8End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+\"�\";return t}function utf16Text(e,t){if((e.length-t)%2===0){var r=e.toString(\"utf16le\",t);if(r){var i=r.charCodeAt(r.length-1);if(i>=55296&&i<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1];return r.slice(0,-1)}}return r}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=e[e.length-1];return e.toString(\"utf16le\",t,e.length-1)}function utf16End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function base64Text(e,t){var r=(e.length-t)%3;if(r===0)return e.toString(\"base64\",t);this.lastNeed=3-r;this.lastTotal=3;if(r===1){this.lastChar[0]=e[e.length-1]}else{this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1]}return e.toString(\"base64\",t,e.length-r)}function base64End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+this.lastChar.toString(\"base64\",0,3-this.lastNeed);return t}function simpleWrite(e){return e.toString(this.encoding)}function simpleEnd(e){return e&&e.length?this.write(e):\"\"}},6769:function(e){e.exports=deprecate;function deprecate(e,t){if(config(\"noDeprecation\")){return e}var r=false;function deprecated(){if(!r){if(config(\"throwDeprecation\")){throw new Error(t)}else if(config(\"traceDeprecation\")){console.trace(t)}else{console.warn(t)}r=true}return e.apply(this,arguments)}return deprecated}function config(e){try{if(!__webpack_require__.g.localStorage)return false}catch(e){return false}var t=__webpack_require__.g.localStorage[e];if(null==t)return false;return String(t).toLowerCase()===\"true\"}},4300:function(e){\"use strict\";e.exports=__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")},6113:function(e){\"use strict\";e.exports=__webpack_require__(/*! crypto */ \"./node_modules/next/dist/compiled/crypto-browserify/index.js\")},2361:function(e){\"use strict\";e.exports=__webpack_require__(/*! events */ \"./node_modules/events/events.js\")},2781:function(e){\"use strict\";e.exports=__webpack_require__(/*! stream */ \"./node_modules/next/dist/compiled/stream-browserify/index.js\")},1576:function(e){\"use strict\";e.exports=__webpack_require__(/*! string_decoder */ \"./node_modules/string_decoder/lib/string_decoder.js\")},3837:function(e){\"use strict\";e.exports=__webpack_require__(/*! util */ \"./node_modules/util/util.js\")},6144:function(e){\"use strict\";e.exports=__webpack_require__(/*! vm */ \"./node_modules/next/dist/compiled/vm-browserify/index.js\")},5866:function(e){\"use strict\";e.exports=JSON.parse('{\"aes-128-ecb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-192-ecb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-256-ecb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-128-cbc\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-192-cbc\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-256-cbc\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes128\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes192\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes256\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-128-cfb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-192-cfb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-256-cfb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-128-cfb8\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-192-cfb8\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-256-cfb8\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-128-cfb1\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-192-cfb1\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-256-cfb1\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-128-ofb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-192-ofb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-256-ofb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-128-ctr\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-192-ctr\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-256-ctr\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-128-gcm\":{\"cipher\":\"AES\",\"key\":128,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-192-gcm\":{\"cipher\":\"AES\",\"key\":192,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-256-gcm\":{\"cipher\":\"AES\",\"key\":256,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"}}')},2908:function(e){\"use strict\";e.exports=JSON.parse('{\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"}}')},9267:function(e){\"use strict\";e.exports=JSON.parse('{\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"}')},7992:function(e){\"use strict\";e.exports=JSON.parse('{\"modp1\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},\"modp2\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},\"modp5\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},\"modp14\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},\"modp15\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},\"modp16\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},\"modp17\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},\"modp18\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}}')},2531:function(e){\"use strict\";e.exports={i8:\"6.5.3\"}},2510:function(e){\"use strict\";e.exports=JSON.parse('{\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"}')}};var t={};function __nccwpck_require__(r){var i=t[r];if(i!==undefined){return i.exports}var n=t[r]={id:r,loaded:false,exports:{}};var a=true;try{e[r].call(n.exports,n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}n.loaded=true;return n.exports}!function(){__nccwpck_require__.nmd=function(e){e.paths=[];if(!e.children)e.children=[];return e}}();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};!function(){\"use strict\";var e=r;e.randomBytes=e.rng=e.pseudoRandomBytes=e.prng=__nccwpck_require__(7223);e.createHash=e.Hash=__nccwpck_require__(9739);e.createHmac=e.Hmac=__nccwpck_require__(4873);var t=__nccwpck_require__(9276);var i=Object.keys(t);var n=[\"sha1\",\"sha224\",\"sha256\",\"sha384\",\"sha512\",\"md5\",\"rmd160\"].concat(i);e.getHashes=function(){return n};var a=__nccwpck_require__(4978);e.pbkdf2=a.pbkdf2;e.pbkdf2Sync=a.pbkdf2Sync;var s=__nccwpck_require__(8996);e.Cipher=s.Cipher;e.createCipher=s.createCipher;e.Cipheriv=s.Cipheriv;e.createCipheriv=s.createCipheriv;e.Decipher=s.Decipher;e.createDecipher=s.createDecipher;e.Decipheriv=s.Decipheriv;e.createDecipheriv=s.createDecipheriv;e.getCiphers=s.getCiphers;e.listCiphers=s.listCiphers;var o=__nccwpck_require__(6587);e.DiffieHellmanGroup=o.DiffieHellmanGroup;e.createDiffieHellmanGroup=o.createDiffieHellmanGroup;e.getDiffieHellman=o.getDiffieHellman;e.createDiffieHellman=o.createDiffieHellman;e.DiffieHellman=o.DiffieHellman;var h=__nccwpck_require__(4078);e.createSign=h.createSign;e.Sign=h.Sign;e.createVerify=h.createVerify;e.Verify=h.Verify;e.createECDH=__nccwpck_require__(9942);var u=__nccwpck_require__(9783);e.publicEncrypt=u.publicEncrypt;e.privateEncrypt=u.privateEncrypt;e.publicDecrypt=u.publicDecrypt;e.privateDecrypt=u.privateDecrypt;var d=__nccwpck_require__(6445);e.randomFill=d.randomFill;e.randomFillSync=d.randomFillSync;e.createCredentials=function(){throw new Error([\"sorry, createCredentials is not implemented yet\",\"we accept pull requests\",\"https://github.com/crypto-browserify/crypto-browserify\"].join(\"\\n\"))};e.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}}();module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/crypto-browserify/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/https-browserify/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/https-browserify/index.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var r={528:function(r,e,t){var o=t(685);var a=t(310);var i=r.exports;for(var n in o){if(o.hasOwnProperty(n))i[n]=o[n]}i.request=function(r,e){r=validateParams(r);return o.request.call(this,r,e)};i.get=function(r,e){r=validateParams(r);return o.get.call(this,r,e)};function validateParams(r){if(typeof r===\"string\"){r=a.parse(r)}if(!r.protocol){r.protocol=\"https:\"}if(r.protocol!==\"https:\"){throw new Error('Protocol \"'+r.protocol+'\" not supported. Expected \"https:\"')}return r}},685:function(r){\"use strict\";r.exports=__webpack_require__(/*! http */ \"./node_modules/next/dist/compiled/stream-http/index.js\")},310:function(r){\"use strict\";r.exports=__webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\")}};var e={};function __nccwpck_require__(t){var o=e[t];if(o!==undefined){return o.exports}var a=e[t]={exports:{}};var i=true;try{r[t](a,a.exports,__nccwpck_require__);i=false}finally{if(i)delete e[t]}return a.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(528);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL2h0dHBzLWJyb3dzZXJpZnkvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksT0FBTyxvQkFBb0IsYUFBYSxhQUFhLGdCQUFnQixnQkFBZ0IsaUNBQWlDLHdCQUF3QixvQkFBb0IsaUNBQWlDLG9CQUFvQixvQkFBb0IsNkJBQTZCLDJCQUEyQix3QkFBd0IsYUFBYSxnQkFBZ0Isb0JBQW9CLDBCQUEwQiw4RUFBOEUsVUFBVSxpQkFBaUIsYUFBYSxVQUFVLG1CQUFPLENBQUMsb0VBQU0sRUFBRSxpQkFBaUIsYUFBYSxVQUFVLG1CQUFPLENBQUMsa0VBQUssSUFBSSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSywrQkFBK0IsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvaHR0cHMtYnJvd3NlcmlmeS9pbmRleC5qcz8zOGNmIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe3ZhciByPXs1Mjg6ZnVuY3Rpb24ocixlLHQpe3ZhciBvPXQoNjg1KTt2YXIgYT10KDMxMCk7dmFyIGk9ci5leHBvcnRzO2Zvcih2YXIgbiBpbiBvKXtpZihvLmhhc093blByb3BlcnR5KG4pKWlbbl09b1tuXX1pLnJlcXVlc3Q9ZnVuY3Rpb24ocixlKXtyPXZhbGlkYXRlUGFyYW1zKHIpO3JldHVybiBvLnJlcXVlc3QuY2FsbCh0aGlzLHIsZSl9O2kuZ2V0PWZ1bmN0aW9uKHIsZSl7cj12YWxpZGF0ZVBhcmFtcyhyKTtyZXR1cm4gby5nZXQuY2FsbCh0aGlzLHIsZSl9O2Z1bmN0aW9uIHZhbGlkYXRlUGFyYW1zKHIpe2lmKHR5cGVvZiByPT09XCJzdHJpbmdcIil7cj1hLnBhcnNlKHIpfWlmKCFyLnByb3RvY29sKXtyLnByb3RvY29sPVwiaHR0cHM6XCJ9aWYoci5wcm90b2NvbCE9PVwiaHR0cHM6XCIpe3Rocm93IG5ldyBFcnJvcignUHJvdG9jb2wgXCInK3IucHJvdG9jb2wrJ1wiIG5vdCBzdXBwb3J0ZWQuIEV4cGVjdGVkIFwiaHR0cHM6XCInKX1yZXR1cm4gcn19LDY4NTpmdW5jdGlvbihyKXtcInVzZSBzdHJpY3RcIjtyLmV4cG9ydHM9cmVxdWlyZShcImh0dHBcIil9LDMxMDpmdW5jdGlvbihyKXtcInVzZSBzdHJpY3RcIjtyLmV4cG9ydHM9cmVxdWlyZShcInVybFwiKX19O3ZhciBlPXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18odCl7dmFyIG89ZVt0XTtpZihvIT09dW5kZWZpbmVkKXtyZXR1cm4gby5leHBvcnRzfXZhciBhPWVbdF09e2V4cG9ydHM6e319O3ZhciBpPXRydWU7dHJ5e3JbdF0oYSxhLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7aT1mYWxzZX1maW5hbGx5e2lmKGkpZGVsZXRlIGVbdF19cmV0dXJuIGEuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHQ9X19uY2N3cGNrX3JlcXVpcmVfXyg1MjgpO21vZHVsZS5leHBvcnRzPXR9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/https-browserify/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/native-url/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/native-url/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={452:function(e){\"use strict\";e.exports=__webpack_require__(/*! next/dist/compiled/querystring-es3 */ \"./node_modules/next/dist/compiled/querystring-es3/index.js\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVksT0FBTyxnQkFBZ0IsYUFBYSxVQUFVLG1CQUFPLENBQUMsc0dBQW9DLElBQUksU0FBUyxnQ0FBZ0MsV0FBVyxrQkFBa0IsaUJBQWlCLFlBQVksWUFBWSxXQUFXLElBQUksc0NBQXNDLFFBQVEsUUFBUSxpQkFBaUIsaUJBQWlCLG1FQUFtRSxTQUFTLEtBQUssU0FBUyxZQUFZLFFBQVEsK0dBQStHLGNBQWMsNkJBQTZCLHNCQUFzQiw0RkFBNEYsNktBQTZLLDZCQUE2QixpTEFBaUwseUdBQXlHLFFBQVEsc0RBQXNELHVHQUF1RyxnQkFBZ0IsZ0NBQWdDLDRCQUE0QixnQkFBZ0IsOEtBQThLLGlCQUFpQixnR0FBZ0csd0ZBQXdGLGtPQUFrTyxjQUFjLDJGQUEyRiwwRUFBMEUsSUFBSSw2REFBNkQsSUFBSSxhQUFhLGtCQUFrQix3RkFBd0YsNEJBQTRCLDZGQUE2Riw0REFBNEQsd0tBQXdLLDJGQUEyRixJQUFJLGFBQWEsU0FBUyx5RUFBeUUsSUFBSSxlQUFlLFNBQVMsZ0NBQWdDLHFOQUFxTixtQkFBbUIsb0tBQW9LLHdDQUF3QyxvREFBb0QsMEJBQTBCLEVBQUUscUJBQXFCLElBQUksd0RBQXdELHFCQUFxQix1RUFBdUUsWUFBWSxTQUFTLFVBQVUsR0FBRyxxYkFBcWIsb0RBQW9ELDJDQUEyQyxpQ0FBaUMsS0FBSywrREFBK0QsaUJBQWlCLFNBQVMsR0FBRyxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9uYXRpdmUtdXJsL2luZGV4LmpzPzcyNDUiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7dmFyIGU9ezQ1MjpmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9cmVxdWlyZShcIm5leHQvZGlzdC9jb21waWxlZC9xdWVyeXN0cmluZy1lczNcIil9fTt2YXIgdD17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKG8pe3ZhciBhPXRbb107aWYoYSE9PXVuZGVmaW5lZCl7cmV0dXJuIGEuZXhwb3J0c312YXIgcz10W29dPXtleHBvcnRzOnt9fTt2YXIgbj10cnVlO3RyeXtlW29dKHMscy5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO249ZmFsc2V9ZmluYWxseXtpZihuKWRlbGV0ZSB0W29dfXJldHVybiBzLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBvPXt9OyFmdW5jdGlvbigpe3ZhciBlPW87dmFyIHQsYT0odD1fX25jY3dwY2tfcmVxdWlyZV9fKDQ1MikpJiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJkZWZhdWx0XCJpbiB0P3QuZGVmYXVsdDp0LHM9L2h0dHBzP3xmdHB8Z29waGVyfGZpbGUvO2Z1bmN0aW9uIHIoZSl7XCJzdHJpbmdcIj09dHlwZW9mIGUmJihlPWQoZSkpO3ZhciB0PWZ1bmN0aW9uKGUsdCxvKXt2YXIgYT1lLmF1dGgscz1lLmhvc3RuYW1lLG49ZS5wcm90b2NvbHx8XCJcIixwPWUucGF0aG5hbWV8fFwiXCIsYz1lLmhhc2h8fFwiXCIsaT1lLnF1ZXJ5fHxcIlwiLHU9ITE7YT1hP2VuY29kZVVSSUNvbXBvbmVudChhKS5yZXBsYWNlKC8lM0EvaSxcIjpcIikrXCJAXCI6XCJcIixlLmhvc3Q/dT1hK2UuaG9zdDpzJiYodT1hKyh+cy5pbmRleE9mKFwiOlwiKT9cIltcIitzK1wiXVwiOnMpLGUucG9ydCYmKHUrPVwiOlwiK2UucG9ydCkpLGkmJlwib2JqZWN0XCI9PXR5cGVvZiBpJiYoaT10LmVuY29kZShpKSk7dmFyIGY9ZS5zZWFyY2h8fGkmJlwiP1wiK2l8fFwiXCI7cmV0dXJuIG4mJlwiOlwiIT09bi5zdWJzdHIoLTEpJiYobis9XCI6XCIpLGUuc2xhc2hlc3x8KCFufHxvLnRlc3QobikpJiYhMSE9PXU/KHU9XCIvL1wiKyh1fHxcIlwiKSxwJiZcIi9cIiE9PXBbMF0mJihwPVwiL1wiK3ApKTp1fHwodT1cIlwiKSxjJiZcIiNcIiE9PWNbMF0mJihjPVwiI1wiK2MpLGYmJlwiP1wiIT09ZlswXSYmKGY9XCI/XCIrZikse3Byb3RvY29sOm4saG9zdDp1LHBhdGhuYW1lOnA9cC5yZXBsYWNlKC9bPyNdL2csZW5jb2RlVVJJQ29tcG9uZW50KSxzZWFyY2g6Zj1mLnJlcGxhY2UoXCIjXCIsXCIlMjNcIiksaGFzaDpjfX0oZSxhLHMpO3JldHVyblwiXCIrdC5wcm90b2NvbCt0Lmhvc3QrdC5wYXRobmFtZSt0LnNlYXJjaCt0Lmhhc2h9dmFyIG49XCJodHRwOi8vXCIscD1cIncud1wiLGM9bitwLGk9L14oW2EtejAtOS4rLV0qOlxcL1xcL1xcLykoW2EtejAtOS4rLV06XFwvKik/L2ksdT0vaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS87ZnVuY3Rpb24gaChlLHQpe3ZhciBvPVwic3RyaW5nXCI9PXR5cGVvZiBlP2QoZSk6ZTtlPVwib2JqZWN0XCI9PXR5cGVvZiBlP3IoZSk6ZTt2YXIgYT1kKHQpLHM9XCJcIjtvLnByb3RvY29sJiYhby5zbGFzaGVzJiYocz1vLnByb3RvY29sLGU9ZS5yZXBsYWNlKG8ucHJvdG9jb2wsXCJcIikscys9XCIvXCI9PT10WzBdfHxcIi9cIj09PWVbMF0/XCIvXCI6XCJcIikscyYmYS5wcm90b2NvbCYmKHM9XCJcIixhLnNsYXNoZXN8fChzPWEucHJvdG9jb2wsdD10LnJlcGxhY2UoYS5wcm90b2NvbCxcIlwiKSkpO3ZhciBwPWUubWF0Y2goaSk7cCYmIWEucHJvdG9jb2wmJihlPWUuc3Vic3RyKChzPXBbMV0rKHBbMl18fFwiXCIpKS5sZW5ndGgpLC9eXFwvXFwvW14vXS8udGVzdCh0KSYmKHM9cy5zbGljZSgwLC0xKSkpO3ZhciBmPW5ldyBVUkwoZSxjK1wiL1wiKSxtPW5ldyBVUkwodCxmKS50b1N0cmluZygpLnJlcGxhY2UoYyxcIlwiKSx2PWEucHJvdG9jb2x8fG8ucHJvdG9jb2w7cmV0dXJuIHYrPW8uc2xhc2hlc3x8YS5zbGFzaGVzP1wiLy9cIjpcIlwiLCFzJiZ2P209bS5yZXBsYWNlKG4sdik6cyYmKG09bS5yZXBsYWNlKG4sXCJcIikpLHUudGVzdChtKXx8fnQuaW5kZXhPZihcIi5cIil8fFwiL1wiPT09ZS5zbGljZSgtMSl8fFwiL1wiPT09dC5zbGljZSgtMSl8fFwiL1wiIT09bS5zbGljZSgtMSl8fChtPW0uc2xpY2UoMCwtMSkpLHMmJihtPXMrKFwiL1wiPT09bVswXT9tLnN1YnN0cigxKTptKSksbX1mdW5jdGlvbiBsKCl7fWwucHJvdG90eXBlLnBhcnNlPWQsbC5wcm90b3R5cGUuZm9ybWF0PXIsbC5wcm90b3R5cGUucmVzb2x2ZT1oLGwucHJvdG90eXBlLnJlc29sdmVPYmplY3Q9aDt2YXIgZj0vXmh0dHBzP3xmdHB8Z29waGVyfGZpbGUvLG09L14oLio/KShbIz9dLiopLyx2PS9eKFthLXowLTkuKy1dKjopKFxcL3swLDN9KSguKikvaSxfPS9eKFthLXowLTkuKy1dKjopP1xcL1xcL1xcLyovaSxiPS9eKFthLXowLTkuKy1dKjopKFxcL3swLDJ9KVxcWyguKilcXF0kL2k7ZnVuY3Rpb24gZChlLHQsbyl7aWYodm9pZCAwPT09dCYmKHQ9ITEpLHZvaWQgMD09PW8mJihvPSExKSxlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZSBpbnN0YW5jZW9mIGwpcmV0dXJuIGU7dmFyIHM9KGU9ZS50cmltKCkpLm1hdGNoKG0pO2U9cz9zWzFdLnJlcGxhY2UoL1xcXFwvZyxcIi9cIikrc1syXTplLnJlcGxhY2UoL1xcXFwvZyxcIi9cIiksYi50ZXN0KGUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiYoZSs9XCIvXCIpO3ZhciBuPSEvKF5qYXZhc2NyaXB0KS8udGVzdChlKSYmZS5tYXRjaCh2KSxpPV8udGVzdChlKSx1PVwiXCI7biYmKGYudGVzdChuWzFdKXx8KHU9blsxXS50b0xvd2VyQ2FzZSgpLGU9XCJcIituWzJdK25bM10pLG5bMl18fChpPSExLGYudGVzdChuWzFdKT8odT1uWzFdLGU9XCJcIituWzNdKTplPVwiLy9cIituWzNdKSwzIT09blsyXS5sZW5ndGgmJjEhPT1uWzJdLmxlbmd0aHx8KHU9blsxXSxlPVwiL1wiK25bM10pKTt2YXIgZyx5PShzP3NbMV06ZSkubWF0Y2goL15odHRwcz86XFwvXFwvW14vXSsoOlswLTldKykoPz1cXC98JCkvKSx3PXkmJnlbMV0seD1uZXcgbCxDPVwiXCIsVT1cIlwiO3RyeXtnPW5ldyBVUkwoZSl9Y2F0Y2godCl7Qz10LHV8fG98fCEvXlxcL1xcLy8udGVzdChlKXx8L15cXC9cXC8uK1tALl0vLnRlc3QoZSl8fChVPVwiL1wiLGU9ZS5zdWJzdHIoMSkpO3RyeXtnPW5ldyBVUkwoZSxjKX1jYXRjaChlKXtyZXR1cm4geC5wcm90b2NvbD11LHguaHJlZj11LHh9fXguc2xhc2hlcz1pJiYhVSx4Lmhvc3Q9Zy5ob3N0PT09cD9cIlwiOmcuaG9zdCx4Lmhvc3RuYW1lPWcuaG9zdG5hbWU9PT1wP1wiXCI6Zy5ob3N0bmFtZS5yZXBsYWNlKC8oXFxbfFxcXSkvZyxcIlwiKSx4LnByb3RvY29sPUM/dXx8bnVsbDpnLnByb3RvY29sLHguc2VhcmNoPWcuc2VhcmNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKSx4Lmhhc2g9Zy5oYXNoLnJlcGxhY2UoL1xcXFwvZyxcIiU1Q1wiKTt2YXIgaj1lLnNwbGl0KFwiI1wiKTsheC5zZWFyY2gmJn5qWzBdLmluZGV4T2YoXCI/XCIpJiYoeC5zZWFyY2g9XCI/XCIpLHguaGFzaHx8XCJcIiE9PWpbMV18fCh4Lmhhc2g9XCIjXCIpLHgucXVlcnk9dD9hLmRlY29kZShnLnNlYXJjaC5zdWJzdHIoMSkpOnguc2VhcmNoLnN1YnN0cigxKSx4LnBhdGhuYW1lPVUrKG4/ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVwbGFjZSgvWydefGBdL2csKGZ1bmN0aW9uKGUpe3JldHVyblwiJVwiK2UuY2hhckNvZGVBdCgpLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSkpLnJlcGxhY2UoLygoPzolWzAtOUEtRl17Mn0pKykvZywoZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh0KS5zcGxpdChcIlwiKS5tYXAoKGZ1bmN0aW9uKGUpe3ZhciB0PWUuY2hhckNvZGVBdCgpO3JldHVybiB0PjI1Nnx8L15bYS16MC05XSQvaS50ZXN0KGUpP2U6XCIlXCIrdC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKX0pKS5qb2luKFwiXCIpfWNhdGNoKGUpe3JldHVybiB0fX0pKX0oZy5wYXRobmFtZSk6Zy5wYXRobmFtZSksXCJhYm91dDpcIj09PXgucHJvdG9jb2wmJlwiYmxhbmtcIj09PXgucGF0aG5hbWUmJih4LnByb3RvY29sPVwiXCIseC5wYXRobmFtZT1cIlwiKSxDJiZcIi9cIiE9PWVbMF0mJih4LnBhdGhuYW1lPXgucGF0aG5hbWUuc3Vic3RyKDEpKSx1JiYhZi50ZXN0KHUpJiZcIi9cIiE9PWUuc2xpY2UoLTEpJiZcIi9cIj09PXgucGF0aG5hbWUmJih4LnBhdGhuYW1lPVwiXCIpLHgucGF0aD14LnBhdGhuYW1lK3guc2VhcmNoLHguYXV0aD1bZy51c2VybmFtZSxnLnBhc3N3b3JkXS5tYXAoZGVjb2RlVVJJQ29tcG9uZW50KS5maWx0ZXIoQm9vbGVhbikuam9pbihcIjpcIikseC5wb3J0PWcucG9ydCx3JiYheC5ob3N0LmVuZHNXaXRoKHcpJiYoeC5ob3N0Kz13LHgucG9ydD13LnNsaWNlKDEpKSx4LmhyZWY9VT9cIlwiK3gucGF0aG5hbWUreC5zZWFyY2greC5oYXNoOnIoeCk7dmFyIHE9L14oZmlsZSkvLnRlc3QoeC5ocmVmKT9bXCJob3N0XCIsXCJob3N0bmFtZVwiXTpbXTtyZXR1cm4gT2JqZWN0LmtleXMoeCkuZm9yRWFjaCgoZnVuY3Rpb24oZSl7fnEuaW5kZXhPZihlKXx8KHhbZV09eFtlXXx8bnVsbCl9KSkseH1lLnBhcnNlPWQsZS5mb3JtYXQ9cixlLnJlc29sdmU9aCxlLnJlc29sdmVPYmplY3Q9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZChoKGUsdCkpfSxlLlVybD1sfSgpO21vZHVsZS5leHBvcnRzPW99KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/native-url/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/querystring-es3/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/querystring-es3/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3F1ZXJ5c3RyaW5nLWVzMy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxhQUFhLE9BQU8sZ0JBQWdCLDZCQUE2QixpREFBaUQsNEJBQTRCLFNBQVMsU0FBUyxTQUFTLHNDQUFzQyxTQUFTLFlBQVksYUFBYSxVQUFVLG1DQUFtQyxZQUFZLGVBQWUsYUFBYSxJQUFJLFlBQVksSUFBSSxLQUFLLG1EQUFtRCxTQUFTLGdCQUFnQixnQkFBZ0IsS0FBSyxJQUFJLEtBQUssd0JBQXdCLHdCQUF3Qix5QkFBeUIsT0FBTyxpQkFBaUIsYUFBYSxLQUFLLGVBQWUsVUFBVSxpQ0FBaUMsNkRBQTZELGlCQUFpQixtQ0FBbUMsaUJBQWlCLHNCQUFzQixzQ0FBc0MscUNBQXFDLG1CQUFtQiw0QkFBNEIsU0FBUyxTQUFTLGFBQWEsWUFBWSx3QkFBd0IsNkJBQTZCLGtEQUFrRCxZQUFZLDZCQUE2QixtREFBbUQsV0FBVyxLQUFLLHVEQUF1RCxXQUFXLGVBQWUsOEZBQThGLGlDQUFpQyw2REFBNkQsa0JBQWtCLHlCQUF5QixTQUFTLFlBQVksV0FBVyxLQUFLLGtCQUFrQixTQUFTLCtCQUErQixTQUFTLGdCQUFnQix1REFBdUQsWUFBWSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwwQ0FBMEMsOENBQThDLEdBQUcsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzPzI0MWYiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezgxNTpmdW5jdGlvbihlKXtmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShlLHIpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxyKX1lLmV4cG9ydHM9ZnVuY3Rpb24oZSxuLHQsbyl7bj1ufHxcIiZcIjt0PXR8fFwiPVwiO3ZhciBhPXt9O2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcInx8ZS5sZW5ndGg9PT0wKXtyZXR1cm4gYX12YXIgaT0vXFwrL2c7ZT1lLnNwbGl0KG4pO3ZhciB1PTFlMztpZihvJiZ0eXBlb2Ygby5tYXhLZXlzPT09XCJudW1iZXJcIil7dT1vLm1heEtleXN9dmFyIGM9ZS5sZW5ndGg7aWYodT4wJiZjPnUpe2M9dX1mb3IodmFyIHA9MDtwPGM7KytwKXt2YXIgZj1lW3BdLnJlcGxhY2UoaSxcIiUyMFwiKSxzPWYuaW5kZXhPZih0KSxfLGwseSxkO2lmKHM+PTApe189Zi5zdWJzdHIoMCxzKTtsPWYuc3Vic3RyKHMrMSl9ZWxzZXtfPWY7bD1cIlwifXk9ZGVjb2RlVVJJQ29tcG9uZW50KF8pO2Q9ZGVjb2RlVVJJQ29tcG9uZW50KGwpO2lmKCFoYXNPd25Qcm9wZXJ0eShhLHkpKXthW3ldPWR9ZWxzZSBpZihyKGFbeV0pKXthW3ldLnB1c2goZCl9ZWxzZXthW3ldPVthW3ldLGRdfX1yZXR1cm4gYX07dmFyIHI9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKT09PVwiW29iamVjdCBBcnJheV1cIn19LDU3NzpmdW5jdGlvbihlKXt2YXIgc3RyaW5naWZ5UHJpbWl0aXZlPWZ1bmN0aW9uKGUpe3N3aXRjaCh0eXBlb2YgZSl7Y2FzZVwic3RyaW5nXCI6cmV0dXJuIGU7Y2FzZVwiYm9vbGVhblwiOnJldHVybiBlP1widHJ1ZVwiOlwiZmFsc2VcIjtjYXNlXCJudW1iZXJcIjpyZXR1cm4gaXNGaW5pdGUoZSk/ZTpcIlwiO2RlZmF1bHQ6cmV0dXJuXCJcIn19O2UuZXhwb3J0cz1mdW5jdGlvbihlLHQsbyxhKXt0PXR8fFwiJlwiO289b3x8XCI9XCI7aWYoZT09PW51bGwpe2U9dW5kZWZpbmVkfWlmKHR5cGVvZiBlPT09XCJvYmplY3RcIil7cmV0dXJuIG1hcChuKGUpLChmdW5jdGlvbihuKXt2YXIgYT1lbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKG4pKStvO2lmKHIoZVtuXSkpe3JldHVybiBtYXAoZVtuXSwoZnVuY3Rpb24oZSl7cmV0dXJuIGErZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9KSkuam9pbih0KX1lbHNle3JldHVybiBhK2VuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoZVtuXSkpfX0pKS5qb2luKHQpfWlmKCFhKXJldHVyblwiXCI7cmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUoYSkpK28rZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlKSl9O3ZhciByPUFycmF5LmlzQXJyYXl8fGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZSk9PT1cIltvYmplY3QgQXJyYXldXCJ9O2Z1bmN0aW9uIG1hcChlLHIpe2lmKGUubWFwKXJldHVybiBlLm1hcChyKTt2YXIgbj1bXTtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7bi5wdXNoKHIoZVt0XSx0KSl9cmV0dXJuIG59dmFyIG49T2JqZWN0LmtleXN8fGZ1bmN0aW9uKGUpe3ZhciByPVtdO2Zvcih2YXIgbiBpbiBlKXtpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSlyLnB1c2gobil9cmV0dXJuIHJ9fX07dmFyIHI9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhuKXt2YXIgdD1yW25dO2lmKHQhPT11bmRlZmluZWQpe3JldHVybiB0LmV4cG9ydHN9dmFyIG89cltuXT17ZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVtuXShvLG8uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgcltuXX1yZXR1cm4gby5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgbj17fTshZnVuY3Rpb24oKXt2YXIgZT1uO2UuZGVjb2RlPWUucGFyc2U9X19uY2N3cGNrX3JlcXVpcmVfXyg4MTUpO2UuZW5jb2RlPWUuc3RyaW5naWZ5PV9fbmNjd3Bja19yZXF1aXJlX18oNTc3KX0oKTttb2R1bGUuZXhwb3J0cz1ufSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/querystring-es3/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/stream-browserify/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/stream-browserify/index.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n(function(){var e={782:function(e){if(typeof Object.create===\"function\"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},646:function(e){\"use strict\";const t={};function createErrorType(e,r,n){if(!n){n=Error}function getMessage(e,t,n){if(typeof r===\"string\"){return r}else{return r(e,t,n)}}class NodeError extends n{constructor(e,t,r){super(getMessage(e,t,r))}}NodeError.prototype.name=n.name;NodeError.prototype.code=e;t[e]=NodeError}function oneOf(e,t){if(Array.isArray(e)){const r=e.length;e=e.map((e=>String(e)));if(r>2){return`one of ${t} ${e.slice(0,r-1).join(\", \")}, or `+e[r-1]}else if(r===2){return`one of ${t} ${e[0]} or ${e[1]}`}else{return`of ${t} ${e[0]}`}}else{return`of ${t} ${String(e)}`}}function startsWith(e,t,r){return e.substr(!r||r<0?0:+r,t.length)===t}function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function includes(e,t,r){if(typeof r!==\"number\"){r=0}if(r+t.length>e.length){return false}else{return e.indexOf(t,r)!==-1}}createErrorType(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError);createErrorType(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){let n;if(typeof t===\"string\"&&startsWith(t,\"not \")){n=\"must not be\";t=t.replace(/^not /,\"\")}else{n=\"must be\"}let i;if(endsWith(e,\" argument\")){i=`The ${e} ${n} ${oneOf(t,\"type\")}`}else{const r=includes(e,\".\")?\"property\":\"argument\";i=`The \"${e}\" ${r} ${n} ${oneOf(t,\"type\")}`}i+=`. Received type ${typeof r}`;return i}),TypeError);createErrorType(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\");createErrorType(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"}));createErrorType(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\");createErrorType(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}));createErrorType(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\");createErrorType(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\");createErrorType(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\");createErrorType(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError);createErrorType(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError);createErrorType(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\");e.exports.q=t},403:function(e,t,r){\"use strict\";var n=Object.keys||function(e){var t=[];for(var r in e){t.push(r)}return t};e.exports=Duplex;var i=r(709);var a=r(337);r(782)(Duplex,i);{var o=n(a.prototype);for(var s=0;s<o.length;s++){var f=o[s];if(!Duplex.prototype[f])Duplex.prototype[f]=a.prototype[f]}}function Duplex(e){if(!(this instanceof Duplex))return new Duplex(e);i.call(this,e);a.call(this,e);this.allowHalfOpen=true;if(e){if(e.readable===false)this.readable=false;if(e.writable===false)this.writable=false;if(e.allowHalfOpen===false){this.allowHalfOpen=false;this.once(\"end\",onend)}}}Object.defineProperty(Duplex.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});Object.defineProperty(Duplex.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});Object.defineProperty(Duplex.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function onend(){if(this._writableState.ended)return;process.nextTick(onEndNT,this)}function onEndNT(e){e.end()}Object.defineProperty(Duplex.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false}return this._readableState.destroyed&&this._writableState.destroyed},set:function set(e){if(this._readableState===undefined||this._writableState===undefined){return}this._readableState.destroyed=e;this._writableState.destroyed=e}})},889:function(e,t,r){\"use strict\";e.exports=PassThrough;var n=r(170);r(782)(PassThrough,n);function PassThrough(e){if(!(this instanceof PassThrough))return new PassThrough(e);n.call(this,e)}PassThrough.prototype._transform=function(e,t,r){r(null,e)}},709:function(e,t,r){\"use strict\";e.exports=Readable;var n;Readable.ReadableState=ReadableState;var i=r(361).EventEmitter;var a=function EElistenerCount(e,t){return e.listeners(t).length};var o=r(678);var s=r(300).Buffer;var f=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return s.from(e)}function _isUint8Array(e){return s.isBuffer(e)||e instanceof f}var l=r(837);var u;if(l&&l.debuglog){u=l.debuglog(\"stream\")}else{u=function debug(){}}var d=r(379);var c=r(25);var h=r(776),p=h.getHighWaterMark;var b=r(646).q,g=b.ERR_INVALID_ARG_TYPE,y=b.ERR_STREAM_PUSH_AFTER_EOF,_=b.ERR_METHOD_NOT_IMPLEMENTED,v=b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;var w;var m;var S;r(782)(Readable,o);var R=c.errorOrDestroy;var E=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function prependListener(e,t,r){if(typeof e.prependListener===\"function\")return e.prependListener(t,r);if(!e._events||!e._events[t])e.on(t,r);else if(Array.isArray(e._events[t]))e._events[t].unshift(r);else e._events[t]=[r,e._events[t]]}function ReadableState(e,t,i){n=n||r(403);e=e||{};if(typeof i!==\"boolean\")i=t instanceof n;this.objectMode=!!e.objectMode;if(i)this.objectMode=this.objectMode||!!e.readableObjectMode;this.highWaterMark=p(this,e,\"readableHighWaterMark\",i);this.buffer=new d;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.destroyed=false;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(e.encoding){if(!w)w=r(704).s;this.decoder=new w(e.encoding);this.encoding=e.encoding}}function Readable(e){n=n||r(403);if(!(this instanceof Readable))return new Readable(e);var t=this instanceof n;this._readableState=new ReadableState(e,this,t);this.readable=true;if(e){if(typeof e.read===\"function\")this._read=e.read;if(typeof e.destroy===\"function\")this._destroy=e.destroy}o.call(this)}Object.defineProperty(Readable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined){return false}return this._readableState.destroyed},set:function set(e){if(!this._readableState){return}this._readableState.destroyed=e}});Readable.prototype.destroy=c.destroy;Readable.prototype._undestroy=c.undestroy;Readable.prototype._destroy=function(e,t){t(e)};Readable.prototype.push=function(e,t){var r=this._readableState;var n;if(!r.objectMode){if(typeof e===\"string\"){t=t||r.defaultEncoding;if(t!==r.encoding){e=s.from(e,t);t=\"\"}n=true}}else{n=true}return readableAddChunk(this,e,t,false,n)};Readable.prototype.unshift=function(e){return readableAddChunk(this,e,null,true,false)};function readableAddChunk(e,t,r,n,i){u(\"readableAddChunk\",t);var a=e._readableState;if(t===null){a.reading=false;onEofChunk(e,a)}else{var o;if(!i)o=chunkInvalid(a,t);if(o){R(e,o)}else if(a.objectMode||t&&t.length>0){if(typeof t!==\"string\"&&!a.objectMode&&Object.getPrototypeOf(t)!==s.prototype){t=_uint8ArrayToBuffer(t)}if(n){if(a.endEmitted)R(e,new v);else addChunk(e,a,t,true)}else if(a.ended){R(e,new y)}else if(a.destroyed){return false}else{a.reading=false;if(a.decoder&&!r){t=a.decoder.write(t);if(a.objectMode||t.length!==0)addChunk(e,a,t,false);else maybeReadMore(e,a)}else{addChunk(e,a,t,false)}}}else if(!n){a.reading=false;maybeReadMore(e,a)}}return!a.ended&&(a.length<a.highWaterMark||a.length===0)}function addChunk(e,t,r,n){if(t.flowing&&t.length===0&&!t.sync){t.awaitDrain=0;e.emit(\"data\",r)}else{t.length+=t.objectMode?1:r.length;if(n)t.buffer.unshift(r);else t.buffer.push(r);if(t.needReadable)emitReadable(e)}maybeReadMore(e,t)}function chunkInvalid(e,t){var r;if(!_isUint8Array(t)&&typeof t!==\"string\"&&t!==undefined&&!e.objectMode){r=new g(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)}return r}Readable.prototype.isPaused=function(){return this._readableState.flowing===false};Readable.prototype.setEncoding=function(e){if(!w)w=r(704).s;var t=new w(e);this._readableState.decoder=t;this._readableState.encoding=this._readableState.decoder.encoding;var n=this._readableState.buffer.head;var i=\"\";while(n!==null){i+=t.write(n.data);n=n.next}this._readableState.buffer.clear();if(i!==\"\")this._readableState.buffer.push(i);this._readableState.length=i.length;return this};var T=1073741824;function computeNewHighWaterMark(e){if(e>=T){e=T}else{e--;e|=e>>>1;e|=e>>>2;e|=e>>>4;e|=e>>>8;e|=e>>>16;e++}return e}function howMuchToRead(e,t){if(e<=0||t.length===0&&t.ended)return 0;if(t.objectMode)return 1;if(e!==e){if(t.flowing&&t.length)return t.buffer.head.data.length;else return t.length}if(e>t.highWaterMark)t.highWaterMark=computeNewHighWaterMark(e);if(e<=t.length)return e;if(!t.ended){t.needReadable=true;return 0}return t.length}Readable.prototype.read=function(e){u(\"read\",e);e=parseInt(e,10);var t=this._readableState;var r=e;if(e!==0)t.emittedReadable=false;if(e===0&&t.needReadable&&((t.highWaterMark!==0?t.length>=t.highWaterMark:t.length>0)||t.ended)){u(\"read: emitReadable\",t.length,t.ended);if(t.length===0&&t.ended)endReadable(this);else emitReadable(this);return null}e=howMuchToRead(e,t);if(e===0&&t.ended){if(t.length===0)endReadable(this);return null}var n=t.needReadable;u(\"need readable\",n);if(t.length===0||t.length-e<t.highWaterMark){n=true;u(\"length less than watermark\",n)}if(t.ended||t.reading){n=false;u(\"reading or ended\",n)}else if(n){u(\"do read\");t.reading=true;t.sync=true;if(t.length===0)t.needReadable=true;this._read(t.highWaterMark);t.sync=false;if(!t.reading)e=howMuchToRead(r,t)}var i;if(e>0)i=fromList(e,t);else i=null;if(i===null){t.needReadable=t.length<=t.highWaterMark;e=0}else{t.length-=e;t.awaitDrain=0}if(t.length===0){if(!t.ended)t.needReadable=true;if(r!==e&&t.ended)endReadable(this)}if(i!==null)this.emit(\"data\",i);return i};function onEofChunk(e,t){u(\"onEofChunk\");if(t.ended)return;if(t.decoder){var r=t.decoder.end();if(r&&r.length){t.buffer.push(r);t.length+=t.objectMode?1:r.length}}t.ended=true;if(t.sync){emitReadable(e)}else{t.needReadable=false;if(!t.emittedReadable){t.emittedReadable=true;emitReadable_(e)}}}function emitReadable(e){var t=e._readableState;u(\"emitReadable\",t.needReadable,t.emittedReadable);t.needReadable=false;if(!t.emittedReadable){u(\"emitReadable\",t.flowing);t.emittedReadable=true;process.nextTick(emitReadable_,e)}}function emitReadable_(e){var t=e._readableState;u(\"emitReadable_\",t.destroyed,t.length,t.ended);if(!t.destroyed&&(t.length||t.ended)){e.emit(\"readable\");t.emittedReadable=false}t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark;flow(e)}function maybeReadMore(e,t){if(!t.readingMore){t.readingMore=true;process.nextTick(maybeReadMore_,e,t)}}function maybeReadMore_(e,t){while(!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&t.length===0)){var r=t.length;u(\"maybeReadMore read 0\");e.read(0);if(r===t.length)break}t.readingMore=false}Readable.prototype._read=function(e){R(this,new _(\"_read()\"))};Readable.prototype.pipe=function(e,t){var r=this;var n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e);break}n.pipesCount+=1;u(\"pipe count=%d opts=%j\",n.pipesCount,t);var i=(!t||t.end!==false)&&e!==process.stdout&&e!==process.stderr;var o=i?onend:unpipe;if(n.endEmitted)process.nextTick(o);else r.once(\"end\",o);e.on(\"unpipe\",onunpipe);function onunpipe(e,t){u(\"onunpipe\");if(e===r){if(t&&t.hasUnpiped===false){t.hasUnpiped=true;cleanup()}}}function onend(){u(\"onend\");e.end()}var s=pipeOnDrain(r);e.on(\"drain\",s);var f=false;function cleanup(){u(\"cleanup\");e.removeListener(\"close\",onclose);e.removeListener(\"finish\",onfinish);e.removeListener(\"drain\",s);e.removeListener(\"error\",onerror);e.removeListener(\"unpipe\",onunpipe);r.removeListener(\"end\",onend);r.removeListener(\"end\",unpipe);r.removeListener(\"data\",ondata);f=true;if(n.awaitDrain&&(!e._writableState||e._writableState.needDrain))s()}r.on(\"data\",ondata);function ondata(t){u(\"ondata\");var i=e.write(t);u(\"dest.write\",i);if(i===false){if((n.pipesCount===1&&n.pipes===e||n.pipesCount>1&&indexOf(n.pipes,e)!==-1)&&!f){u(\"false write response, pause\",n.awaitDrain);n.awaitDrain++}r.pause()}}function onerror(t){u(\"onerror\",t);unpipe();e.removeListener(\"error\",onerror);if(a(e,\"error\")===0)R(e,t)}prependListener(e,\"error\",onerror);function onclose(){e.removeListener(\"finish\",onfinish);unpipe()}e.once(\"close\",onclose);function onfinish(){u(\"onfinish\");e.removeListener(\"close\",onclose);unpipe()}e.once(\"finish\",onfinish);function unpipe(){u(\"unpipe\");r.unpipe(e)}e.emit(\"pipe\",r);if(!n.flowing){u(\"pipe resume\");r.resume()}return e};function pipeOnDrain(e){return function pipeOnDrainFunctionResult(){var t=e._readableState;u(\"pipeOnDrain\",t.awaitDrain);if(t.awaitDrain)t.awaitDrain--;if(t.awaitDrain===0&&a(e,\"data\")){t.flowing=true;flow(e)}}}Readable.prototype.unpipe=function(e){var t=this._readableState;var r={hasUnpiped:false};if(t.pipesCount===0)return this;if(t.pipesCount===1){if(e&&e!==t.pipes)return this;if(!e)e=t.pipes;t.pipes=null;t.pipesCount=0;t.flowing=false;if(e)e.emit(\"unpipe\",this,r);return this}if(!e){var n=t.pipes;var i=t.pipesCount;t.pipes=null;t.pipesCount=0;t.flowing=false;for(var a=0;a<i;a++){n[a].emit(\"unpipe\",this,{hasUnpiped:false})}return this}var o=indexOf(t.pipes,e);if(o===-1)return this;t.pipes.splice(o,1);t.pipesCount-=1;if(t.pipesCount===1)t.pipes=t.pipes[0];e.emit(\"unpipe\",this,r);return this};Readable.prototype.on=function(e,t){var r=o.prototype.on.call(this,e,t);var n=this._readableState;if(e===\"data\"){n.readableListening=this.listenerCount(\"readable\")>0;if(n.flowing!==false)this.resume()}else if(e===\"readable\"){if(!n.endEmitted&&!n.readableListening){n.readableListening=n.needReadable=true;n.flowing=false;n.emittedReadable=false;u(\"on readable\",n.length,n.reading);if(n.length){emitReadable(this)}else if(!n.reading){process.nextTick(nReadingNextTick,this)}}}return r};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(e,t){var r=o.prototype.removeListener.call(this,e,t);if(e===\"readable\"){process.nextTick(updateReadableListening,this)}return r};Readable.prototype.removeAllListeners=function(e){var t=o.prototype.removeAllListeners.apply(this,arguments);if(e===\"readable\"||e===undefined){process.nextTick(updateReadableListening,this)}return t};function updateReadableListening(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0;if(t.resumeScheduled&&!t.paused){t.flowing=true}else if(e.listenerCount(\"data\")>0){e.resume()}}function nReadingNextTick(e){u(\"readable nexttick read 0\");e.read(0)}Readable.prototype.resume=function(){var e=this._readableState;if(!e.flowing){u(\"resume\");e.flowing=!e.readableListening;resume(this,e)}e.paused=false;return this};function resume(e,t){if(!t.resumeScheduled){t.resumeScheduled=true;process.nextTick(resume_,e,t)}}function resume_(e,t){u(\"resume\",t.reading);if(!t.reading){e.read(0)}t.resumeScheduled=false;e.emit(\"resume\");flow(e);if(t.flowing&&!t.reading)e.read(0)}Readable.prototype.pause=function(){u(\"call pause flowing=%j\",this._readableState.flowing);if(this._readableState.flowing!==false){u(\"pause\");this._readableState.flowing=false;this.emit(\"pause\")}this._readableState.paused=true;return this};function flow(e){var t=e._readableState;u(\"flow\",t.flowing);while(t.flowing&&e.read()!==null){}}Readable.prototype.wrap=function(e){var t=this;var r=this._readableState;var n=false;e.on(\"end\",(function(){u(\"wrapped end\");if(r.decoder&&!r.ended){var e=r.decoder.end();if(e&&e.length)t.push(e)}t.push(null)}));e.on(\"data\",(function(i){u(\"wrapped data\");if(r.decoder)i=r.decoder.write(i);if(r.objectMode&&(i===null||i===undefined))return;else if(!r.objectMode&&(!i||!i.length))return;var a=t.push(i);if(!a){n=true;e.pause()}}));for(var i in e){if(this[i]===undefined&&typeof e[i]===\"function\"){this[i]=function methodWrap(t){return function methodWrapReturnFunction(){return e[t].apply(e,arguments)}}(i)}}for(var a=0;a<E.length;a++){e.on(E[a],this.emit.bind(this,E[a]))}this._read=function(t){u(\"wrapped _read\",t);if(n){n=false;e.resume()}};return this};if(typeof Symbol===\"function\"){Readable.prototype[Symbol.asyncIterator]=function(){if(m===undefined){m=r(871)}return m(this)}}Object.defineProperty(Readable.prototype,\"readableHighWaterMark\",{enumerable:false,get:function get(){return this._readableState.highWaterMark}});Object.defineProperty(Readable.prototype,\"readableBuffer\",{enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer}});Object.defineProperty(Readable.prototype,\"readableFlowing\",{enumerable:false,get:function get(){return this._readableState.flowing},set:function set(e){if(this._readableState){this._readableState.flowing=e}}});Readable._fromList=fromList;Object.defineProperty(Readable.prototype,\"readableLength\",{enumerable:false,get:function get(){return this._readableState.length}});function fromList(e,t){if(t.length===0)return null;var r;if(t.objectMode)r=t.buffer.shift();else if(!e||e>=t.length){if(t.decoder)r=t.buffer.join(\"\");else if(t.buffer.length===1)r=t.buffer.first();else r=t.buffer.concat(t.length);t.buffer.clear()}else{r=t.buffer.consume(e,t.decoder)}return r}function endReadable(e){var t=e._readableState;u(\"endReadable\",t.endEmitted);if(!t.endEmitted){t.ended=true;process.nextTick(endReadableNT,t,e)}}function endReadableNT(e,t){u(\"endReadableNT\",e.endEmitted,e.length);if(!e.endEmitted&&e.length===0){e.endEmitted=true;t.readable=false;t.emit(\"end\");if(e.autoDestroy){var r=t._writableState;if(!r||r.autoDestroy&&r.finished){t.destroy()}}}}if(typeof Symbol===\"function\"){Readable.from=function(e,t){if(S===undefined){S=r(727)}return S(Readable,e,t)}}function indexOf(e,t){for(var r=0,n=e.length;r<n;r++){if(e[r]===t)return r}return-1}},170:function(e,t,r){\"use strict\";e.exports=Transform;var n=r(646).q,i=n.ERR_METHOD_NOT_IMPLEMENTED,a=n.ERR_MULTIPLE_CALLBACK,o=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,s=n.ERR_TRANSFORM_WITH_LENGTH_0;var f=r(403);r(782)(Transform,f);function afterTransform(e,t){var r=this._transformState;r.transforming=false;var n=r.writecb;if(n===null){return this.emit(\"error\",new a)}r.writechunk=null;r.writecb=null;if(t!=null)this.push(t);n(e);var i=this._readableState;i.reading=false;if(i.needReadable||i.length<i.highWaterMark){this._read(i.highWaterMark)}}function Transform(e){if(!(this instanceof Transform))return new Transform(e);f.call(this,e);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};this._readableState.needReadable=true;this._readableState.sync=false;if(e){if(typeof e.transform===\"function\")this._transform=e.transform;if(typeof e.flush===\"function\")this._flush=e.flush}this.on(\"prefinish\",prefinish)}function prefinish(){var e=this;if(typeof this._flush===\"function\"&&!this._readableState.destroyed){this._flush((function(t,r){done(e,t,r)}))}else{done(this,null,null)}}Transform.prototype.push=function(e,t){this._transformState.needTransform=false;return f.prototype.push.call(this,e,t)};Transform.prototype._transform=function(e,t,r){r(new i(\"_transform()\"))};Transform.prototype._write=function(e,t,r){var n=this._transformState;n.writecb=r;n.writechunk=e;n.writeencoding=t;if(!n.transforming){var i=this._readableState;if(n.needTransform||i.needReadable||i.length<i.highWaterMark)this._read(i.highWaterMark)}};Transform.prototype._read=function(e){var t=this._transformState;if(t.writechunk!==null&&!t.transforming){t.transforming=true;this._transform(t.writechunk,t.writeencoding,t.afterTransform)}else{t.needTransform=true}};Transform.prototype._destroy=function(e,t){f.prototype._destroy.call(this,e,(function(e){t(e)}))};function done(e,t,r){if(t)return e.emit(\"error\",t);if(r!=null)e.push(r);if(e._writableState.length)throw new s;if(e._transformState.transforming)throw new o;return e.push(null)}},337:function(e,t,r){\"use strict\";e.exports=Writable;function WriteReq(e,t,r){this.chunk=e;this.encoding=t;this.callback=r;this.next=null}function CorkedRequest(e){var t=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(t,e)}}var n;Writable.WritableState=WritableState;var i={deprecate:r(769)};var a=r(678);var o=r(300).Buffer;var s=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return o.from(e)}function _isUint8Array(e){return o.isBuffer(e)||e instanceof s}var f=r(25);var l=r(776),u=l.getHighWaterMark;var d=r(646).q,c=d.ERR_INVALID_ARG_TYPE,h=d.ERR_METHOD_NOT_IMPLEMENTED,p=d.ERR_MULTIPLE_CALLBACK,b=d.ERR_STREAM_CANNOT_PIPE,g=d.ERR_STREAM_DESTROYED,y=d.ERR_STREAM_NULL_VALUES,_=d.ERR_STREAM_WRITE_AFTER_END,v=d.ERR_UNKNOWN_ENCODING;var w=f.errorOrDestroy;r(782)(Writable,a);function nop(){}function WritableState(e,t,i){n=n||r(403);e=e||{};if(typeof i!==\"boolean\")i=t instanceof n;this.objectMode=!!e.objectMode;if(i)this.objectMode=this.objectMode||!!e.writableObjectMode;this.highWaterMark=u(this,e,\"writableHighWaterMark\",i);this.finalCalled=false;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;this.destroyed=false;var a=e.decodeStrings===false;this.decodeStrings=!a;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(e){onwrite(t,e)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var e=this.bufferedRequest;var t=[];while(e){t.push(e);e=e.next}return t};(function(){try{Object.defineProperty(WritableState.prototype,\"buffer\",{get:i.deprecate((function writableStateBufferGetter(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer \"+\"instead.\",\"DEP0003\")})}catch(e){}})();var m;if(typeof Symbol===\"function\"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]===\"function\"){m=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(e){if(m.call(this,e))return true;if(this!==Writable)return false;return e&&e._writableState instanceof WritableState}})}else{m=function realHasInstance(e){return e instanceof this}}function Writable(e){n=n||r(403);var t=this instanceof n;if(!t&&!m.call(Writable,this))return new Writable(e);this._writableState=new WritableState(e,this,t);this.writable=true;if(e){if(typeof e.write===\"function\")this._write=e.write;if(typeof e.writev===\"function\")this._writev=e.writev;if(typeof e.destroy===\"function\")this._destroy=e.destroy;if(typeof e.final===\"function\")this._final=e.final}a.call(this)}Writable.prototype.pipe=function(){w(this,new b)};function writeAfterEnd(e,t){var r=new _;w(e,r);process.nextTick(t,r)}function validChunk(e,t,r,n){var i;if(r===null){i=new y}else if(typeof r!==\"string\"&&!t.objectMode){i=new c(\"chunk\",[\"string\",\"Buffer\"],r)}if(i){w(e,i);process.nextTick(n,i);return false}return true}Writable.prototype.write=function(e,t,r){var n=this._writableState;var i=false;var a=!n.objectMode&&_isUint8Array(e);if(a&&!o.isBuffer(e)){e=_uint8ArrayToBuffer(e)}if(typeof t===\"function\"){r=t;t=null}if(a)t=\"buffer\";else if(!t)t=n.defaultEncoding;if(typeof r!==\"function\")r=nop;if(n.ending)writeAfterEnd(this,r);else if(a||validChunk(this,n,e,r)){n.pendingcb++;i=writeOrBuffer(this,n,a,e,t,r)}return i};Writable.prototype.cork=function(){this._writableState.corked++};Writable.prototype.uncork=function(){var e=this._writableState;if(e.corked){e.corked--;if(!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest)clearBuffer(this,e)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(e){if(typeof e===\"string\")e=e.toLowerCase();if(!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new v(e);this._writableState.defaultEncoding=e;return this};Object.defineProperty(Writable.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});function decodeChunk(e,t,r){if(!e.objectMode&&e.decodeStrings!==false&&typeof t===\"string\"){t=o.from(t,r)}return t}Object.defineProperty(Writable.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});function writeOrBuffer(e,t,r,n,i,a){if(!r){var o=decodeChunk(t,n,i);if(n!==o){r=true;i=\"buffer\";n=o}}var s=t.objectMode?1:n.length;t.length+=s;var f=t.length<t.highWaterMark;if(!f)t.needDrain=true;if(t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:a,next:null};if(l){l.next=t.lastBufferedRequest}else{t.bufferedRequest=t.lastBufferedRequest}t.bufferedRequestCount+=1}else{doWrite(e,t,false,s,n,i,a)}return f}function doWrite(e,t,r,n,i,a,o){t.writelen=n;t.writecb=o;t.writing=true;t.sync=true;if(t.destroyed)t.onwrite(new g(\"write\"));else if(r)e._writev(i,t.onwrite);else e._write(i,a,t.onwrite);t.sync=false}function onwriteError(e,t,r,n,i){--t.pendingcb;if(r){process.nextTick(i,n);process.nextTick(finishMaybe,e,t);e._writableState.errorEmitted=true;w(e,n)}else{i(n);e._writableState.errorEmitted=true;w(e,n);finishMaybe(e,t)}}function onwriteStateUpdate(e){e.writing=false;e.writecb=null;e.length-=e.writelen;e.writelen=0}function onwrite(e,t){var r=e._writableState;var n=r.sync;var i=r.writecb;if(typeof i!==\"function\")throw new p;onwriteStateUpdate(r);if(t)onwriteError(e,r,n,t,i);else{var a=needFinish(r)||e.destroyed;if(!a&&!r.corked&&!r.bufferProcessing&&r.bufferedRequest){clearBuffer(e,r)}if(n){process.nextTick(afterWrite,e,r,a,i)}else{afterWrite(e,r,a,i)}}}function afterWrite(e,t,r,n){if(!r)onwriteDrain(e,t);t.pendingcb--;n();finishMaybe(e,t)}function onwriteDrain(e,t){if(t.length===0&&t.needDrain){t.needDrain=false;e.emit(\"drain\")}}function clearBuffer(e,t){t.bufferProcessing=true;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var n=t.bufferedRequestCount;var i=new Array(n);var a=t.corkedRequestsFree;a.entry=r;var o=0;var s=true;while(r){i[o]=r;if(!r.isBuf)s=false;r=r.next;o+=1}i.allBuffers=s;doWrite(e,t,true,t.length,i,\"\",a.finish);t.pendingcb++;t.lastBufferedRequest=null;if(a.next){t.corkedRequestsFree=a.next;a.next=null}else{t.corkedRequestsFree=new CorkedRequest(t)}t.bufferedRequestCount=0}else{while(r){var f=r.chunk;var l=r.encoding;var u=r.callback;var d=t.objectMode?1:f.length;doWrite(e,t,false,d,f,l,u);r=r.next;t.bufferedRequestCount--;if(t.writing){break}}if(r===null)t.lastBufferedRequest=null}t.bufferedRequest=r;t.bufferProcessing=false}Writable.prototype._write=function(e,t,r){r(new h(\"_write()\"))};Writable.prototype._writev=null;Writable.prototype.end=function(e,t,r){var n=this._writableState;if(typeof e===\"function\"){r=e;e=null;t=null}else if(typeof t===\"function\"){r=t;t=null}if(e!==null&&e!==undefined)this.write(e,t);if(n.corked){n.corked=1;this.uncork()}if(!n.ending)endWritable(this,n,r);return this};Object.defineProperty(Writable.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function needFinish(e){return e.ending&&e.length===0&&e.bufferedRequest===null&&!e.finished&&!e.writing}function callFinal(e,t){e._final((function(r){t.pendingcb--;if(r){w(e,r)}t.prefinished=true;e.emit(\"prefinish\");finishMaybe(e,t)}))}function prefinish(e,t){if(!t.prefinished&&!t.finalCalled){if(typeof e._final===\"function\"&&!t.destroyed){t.pendingcb++;t.finalCalled=true;process.nextTick(callFinal,e,t)}else{t.prefinished=true;e.emit(\"prefinish\")}}}function finishMaybe(e,t){var r=needFinish(t);if(r){prefinish(e,t);if(t.pendingcb===0){t.finished=true;e.emit(\"finish\");if(t.autoDestroy){var n=e._readableState;if(!n||n.autoDestroy&&n.endEmitted){e.destroy()}}}}return r}function endWritable(e,t,r){t.ending=true;finishMaybe(e,t);if(r){if(t.finished)process.nextTick(r);else e.once(\"finish\",r)}t.ended=true;e.writable=false}function onCorkedFinish(e,t,r){var n=e.entry;e.entry=null;while(n){var i=n.callback;t.pendingcb--;i(r);n=n.next}t.corkedRequestsFree.next=e}Object.defineProperty(Writable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._writableState===undefined){return false}return this._writableState.destroyed},set:function set(e){if(!this._writableState){return}this._writableState.destroyed=e}});Writable.prototype.destroy=f.destroy;Writable.prototype._undestroy=f.undestroy;Writable.prototype._destroy=function(e,t){t(e)}},871:function(e,t,r){\"use strict\";var n;function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var i=r(698);var a=Symbol(\"lastResolve\");var o=Symbol(\"lastReject\");var s=Symbol(\"error\");var f=Symbol(\"ended\");var l=Symbol(\"lastPromise\");var u=Symbol(\"handlePromise\");var d=Symbol(\"stream\");function createIterResult(e,t){return{value:e,done:t}}function readAndResolve(e){var t=e[a];if(t!==null){var r=e[d].read();if(r!==null){e[l]=null;e[a]=null;e[o]=null;t(createIterResult(r,false))}}}function onReadable(e){process.nextTick(readAndResolve,e)}function wrapForNext(e,t){return function(r,n){e.then((function(){if(t[f]){r(createIterResult(undefined,true));return}t[u](r,n)}),n)}}var c=Object.getPrototypeOf((function(){}));var h=Object.setPrototypeOf((n={get stream(){return this[d]},next:function next(){var e=this;var t=this[s];if(t!==null){return Promise.reject(t)}if(this[f]){return Promise.resolve(createIterResult(undefined,true))}if(this[d].destroyed){return new Promise((function(t,r){process.nextTick((function(){if(e[s]){r(e[s])}else{t(createIterResult(undefined,true))}}))}))}var r=this[l];var n;if(r){n=new Promise(wrapForNext(r,this))}else{var i=this[d].read();if(i!==null){return Promise.resolve(createIterResult(i,false))}n=new Promise(this[u])}this[l]=n;return n}},_defineProperty(n,Symbol.asyncIterator,(function(){return this})),_defineProperty(n,\"return\",(function _return(){var e=this;return new Promise((function(t,r){e[d].destroy(null,(function(e){if(e){r(e);return}t(createIterResult(undefined,true))}))}))})),n),c);var p=function createReadableStreamAsyncIterator(e){var t;var r=Object.create(h,(t={},_defineProperty(t,d,{value:e,writable:true}),_defineProperty(t,a,{value:null,writable:true}),_defineProperty(t,o,{value:null,writable:true}),_defineProperty(t,s,{value:null,writable:true}),_defineProperty(t,f,{value:e._readableState.endEmitted,writable:true}),_defineProperty(t,u,{value:function value(e,t){var n=r[d].read();if(n){r[l]=null;r[a]=null;r[o]=null;e(createIterResult(n,false))}else{r[a]=e;r[o]=t}},writable:true}),t));r[l]=null;i(e,(function(e){if(e&&e.code!==\"ERR_STREAM_PREMATURE_CLOSE\"){var t=r[o];if(t!==null){r[l]=null;r[a]=null;r[o]=null;t(e)}r[s]=e;return}var n=r[a];if(n!==null){r[l]=null;r[a]=null;r[o]=null;n(createIterResult(undefined,true))}r[f]=true}));e.on(\"readable\",onReadable.bind(null,r));return r};e.exports=p},379:function(e,t,r){\"use strict\";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t)n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||false;n.configurable=true;if(\"value\"in n)n.writable=true;Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}var n=r(300),i=n.Buffer;var a=r(837),o=a.inspect;var s=o&&o.custom||\"inspect\";function copyBuffer(e,t,r){i.prototype.copy.call(e,t,r)}e.exports=function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0}_createClass(BufferList,[{key:\"push\",value:function push(e){var t={data:e,next:null};if(this.length>0)this.tail.next=t;else this.head=t;this.tail=t;++this.length}},{key:\"unshift\",value:function unshift(e){var t={data:e,next:this.head};if(this.length===0)this.tail=t;this.head=t;++this.length}},{key:\"shift\",value:function shift(){if(this.length===0)return;var e=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return e}},{key:\"clear\",value:function clear(){this.head=this.tail=null;this.length=0}},{key:\"join\",value:function join(e){if(this.length===0)return\"\";var t=this.head;var r=\"\"+t.data;while(t=t.next){r+=e+t.data}return r}},{key:\"concat\",value:function concat(e){if(this.length===0)return i.alloc(0);var t=i.allocUnsafe(e>>>0);var r=this.head;var n=0;while(r){copyBuffer(r.data,t,n);n+=r.data.length;r=r.next}return t}},{key:\"consume\",value:function consume(e,t){var r;if(e<this.head.data.length){r=this.head.data.slice(0,e);this.head.data=this.head.data.slice(e)}else if(e===this.head.data.length){r=this.shift()}else{r=t?this._getString(e):this._getBuffer(e)}return r}},{key:\"first\",value:function first(){return this.head.data}},{key:\"_getString\",value:function _getString(e){var t=this.head;var r=1;var n=t.data;e-=n.length;while(t=t.next){var i=t.data;var a=e>i.length?i.length:e;if(a===i.length)n+=i;else n+=i.slice(0,e);e-=a;if(e===0){if(a===i.length){++r;if(t.next)this.head=t.next;else this.head=this.tail=null}else{this.head=t;t.data=i.slice(a)}break}++r}this.length-=r;return n}},{key:\"_getBuffer\",value:function _getBuffer(e){var t=i.allocUnsafe(e);var r=this.head;var n=1;r.data.copy(t);e-=r.data.length;while(r=r.next){var a=r.data;var o=e>a.length?a.length:e;a.copy(t,t.length-e,0,o);e-=o;if(e===0){if(o===a.length){++n;if(r.next)this.head=r.next;else this.head=this.tail=null}else{this.head=r;r.data=a.slice(o)}break}++n}this.length-=n;return t}},{key:s,value:function value(e,t){return o(this,_objectSpread({},t,{depth:0,customInspect:false}))}}]);return BufferList}()},25:function(e){\"use strict\";function destroy(e,t){var r=this;var n=this._readableState&&this._readableState.destroyed;var i=this._writableState&&this._writableState.destroyed;if(n||i){if(t){t(e)}else if(e){if(!this._writableState){process.nextTick(emitErrorNT,this,e)}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,e)}}return this}if(this._readableState){this._readableState.destroyed=true}if(this._writableState){this._writableState.destroyed=true}this._destroy(e||null,(function(e){if(!t&&e){if(!r._writableState){process.nextTick(emitErrorAndCloseNT,r,e)}else if(!r._writableState.errorEmitted){r._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,r,e)}else{process.nextTick(emitCloseNT,r)}}else if(t){process.nextTick(emitCloseNT,r);t(e)}else{process.nextTick(emitCloseNT,r)}}));return this}function emitErrorAndCloseNT(e,t){emitErrorNT(e,t);emitCloseNT(e)}function emitCloseNT(e){if(e._writableState&&!e._writableState.emitClose)return;if(e._readableState&&!e._readableState.emitClose)return;e.emit(\"close\")}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false}}function emitErrorNT(e,t){e.emit(\"error\",t)}function errorOrDestroy(e,t){var r=e._readableState;var n=e._writableState;if(r&&r.autoDestroy||n&&n.autoDestroy)e.destroy(t);else e.emit(\"error\",t)}e.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy}},698:function(e,t,r){\"use strict\";var n=r(646).q.ERR_STREAM_PREMATURE_CLOSE;function once(e){var t=false;return function(){if(t)return;t=true;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++){n[i]=arguments[i]}e.apply(this,n)}}function noop(){}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function eos(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=once(r||noop);var i=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var o=function onlegacyfinish(){if(!e.writable)f()};var s=e._writableState&&e._writableState.finished;var f=function onfinish(){a=false;s=true;if(!i)r.call(e)};var l=e._readableState&&e._readableState.endEmitted;var u=function onend(){i=false;l=true;if(!a)r.call(e)};var d=function onerror(t){r.call(e,t)};var c=function onclose(){var t;if(i&&!l){if(!e._readableState||!e._readableState.ended)t=new n;return r.call(e,t)}if(a&&!s){if(!e._writableState||!e._writableState.ended)t=new n;return r.call(e,t)}};var h=function onrequest(){e.req.on(\"finish\",f)};if(isRequest(e)){e.on(\"complete\",f);e.on(\"abort\",c);if(e.req)h();else e.on(\"request\",h)}else if(a&&!e._writableState){e.on(\"end\",o);e.on(\"close\",o)}e.on(\"end\",u);e.on(\"finish\",f);if(t.error!==false)e.on(\"error\",d);e.on(\"close\",c);return function(){e.removeListener(\"complete\",f);e.removeListener(\"abort\",c);e.removeListener(\"request\",h);if(e.req)e.req.removeListener(\"finish\",f);e.removeListener(\"end\",o);e.removeListener(\"close\",o);e.removeListener(\"finish\",f);e.removeListener(\"end\",u);e.removeListener(\"error\",d);e.removeListener(\"close\",c)}}e.exports=eos},727:function(e,t,r){\"use strict\";function asyncGeneratorStep(e,t,r,n,i,a,o){try{var s=e[a](o);var f=s.value}catch(e){r(e);return}if(s.done){t(f)}else{Promise.resolve(f).then(n,i)}}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,i){var a=e.apply(t,r);function _next(e){asyncGeneratorStep(a,n,i,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(a,n,i,_next,_throw,\"throw\",e)}_next(undefined)}))}}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t)n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var n=r(646).q.ERR_INVALID_ARG_TYPE;function from(e,t,r){var i;if(t&&typeof t.next===\"function\"){i=t}else if(t&&t[Symbol.asyncIterator])i=t[Symbol.asyncIterator]();else if(t&&t[Symbol.iterator])i=t[Symbol.iterator]();else throw new n(\"iterable\",[\"Iterable\"],t);var a=new e(_objectSpread({objectMode:true},r));var o=false;a._read=function(){if(!o){o=true;next()}};function next(){return _next2.apply(this,arguments)}function _next2(){_next2=_asyncToGenerator((function*(){try{var e=yield i.next(),t=e.value,r=e.done;if(r){a.push(null)}else if(a.push(yield t)){next()}else{o=false}}catch(e){a.destroy(e)}}));return _next2.apply(this,arguments)}return a}e.exports=from},442:function(e,t,r){\"use strict\";var n;function once(e){var t=false;return function(){if(t)return;t=true;e.apply(void 0,arguments)}}var i=r(646).q,a=i.ERR_MISSING_ARGS,o=i.ERR_STREAM_DESTROYED;function noop(e){if(e)throw e}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function destroyer(e,t,i,a){a=once(a);var s=false;e.on(\"close\",(function(){s=true}));if(n===undefined)n=r(698);n(e,{readable:t,writable:i},(function(e){if(e)return a(e);s=true;a()}));var f=false;return function(t){if(s)return;if(f)return;f=true;if(isRequest(e))return e.abort();if(typeof e.destroy===\"function\")return e.destroy();a(t||new o(\"pipe\"))}}function call(e){e()}function pipe(e,t){return e.pipe(t)}function popCallback(e){if(!e.length)return noop;if(typeof e[e.length-1]!==\"function\")return noop;return e.pop()}function pipeline(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}var n=popCallback(t);if(Array.isArray(t[0]))t=t[0];if(t.length<2){throw new a(\"streams\")}var i;var o=t.map((function(e,r){var a=r<t.length-1;var s=r>0;return destroyer(e,a,s,(function(e){if(!i)i=e;if(e)o.forEach(call);if(a)return;o.forEach(call);n(i)}))}));return t.reduce(pipe)}e.exports=pipeline},776:function(e,t,r){\"use strict\";var n=r(646).q.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(e,t,r){return e.highWaterMark!=null?e.highWaterMark:t?e[r]:null}function getHighWaterMark(e,t,r,i){var a=highWaterMarkFrom(t,i,r);if(a!=null){if(!(isFinite(a)&&Math.floor(a)===a)||a<0){var o=i?r:\"highWaterMark\";throw new n(o,a)}return Math.floor(a)}return e.objectMode?16:16*1024}e.exports={getHighWaterMark:getHighWaterMark}},678:function(e,t,r){e.exports=r(781)},55:function(e,t,r){var n=r(300);var i=n.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow){e.exports=n}else{copyProps(n,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return i(e,t,r)}SafeBuffer.prototype=Object.create(i.prototype);copyProps(i,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return i(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var n=i(e);if(t!==undefined){if(typeof r===\"string\"){n.fill(t,r)}else{n.fill(t)}}else{n.fill(0)}return n};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n.SlowBuffer(e)}},173:function(e,t,r){e.exports=Stream;var n=r(361).EventEmitter;var i=r(782);i(Stream,n);Stream.Readable=r(709);Stream.Writable=r(337);Stream.Duplex=r(403);Stream.Transform=r(170);Stream.PassThrough=r(889);Stream.finished=r(698);Stream.pipeline=r(442);Stream.Stream=Stream;function Stream(){n.call(this)}Stream.prototype.pipe=function(e,t){var r=this;function ondata(t){if(e.writable){if(false===e.write(t)&&r.pause){r.pause()}}}r.on(\"data\",ondata);function ondrain(){if(r.readable&&r.resume){r.resume()}}e.on(\"drain\",ondrain);if(!e._isStdio&&(!t||t.end!==false)){r.on(\"end\",onend);r.on(\"close\",onclose)}var i=false;function onend(){if(i)return;i=true;e.end()}function onclose(){if(i)return;i=true;if(typeof e.destroy===\"function\")e.destroy()}function onerror(e){cleanup();if(n.listenerCount(this,\"error\")===0){throw e}}r.on(\"error\",onerror);e.on(\"error\",onerror);function cleanup(){r.removeListener(\"data\",ondata);e.removeListener(\"drain\",ondrain);r.removeListener(\"end\",onend);r.removeListener(\"close\",onclose);r.removeListener(\"error\",onerror);e.removeListener(\"error\",onerror);r.removeListener(\"end\",cleanup);r.removeListener(\"close\",cleanup);e.removeListener(\"close\",cleanup)}r.on(\"end\",cleanup);r.on(\"close\",cleanup);e.on(\"close\",cleanup);e.emit(\"pipe\",r);return e}},704:function(e,t,r){\"use strict\";var n=r(55).Buffer;var i=n.isEncoding||function(e){e=\"\"+e;switch(e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return true;default:return false}};function _normalizeEncoding(e){if(!e)return\"utf8\";var t;while(true){switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase();t=true}}}function normalizeEncoding(e){var t=_normalizeEncoding(e);if(typeof t!==\"string\"&&(n.isEncoding===i||!i(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}t.s=StringDecoder;function StringDecoder(e){this.encoding=normalizeEncoding(e);var t;switch(this.encoding){case\"utf16le\":this.text=utf16Text;this.end=utf16End;t=4;break;case\"utf8\":this.fillLast=utf8FillLast;t=4;break;case\"base64\":this.text=base64Text;this.end=base64End;t=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastNeed=0;this.lastTotal=0;this.lastChar=n.allocUnsafe(t)}StringDecoder.prototype.write=function(e){if(e.length===0)return\"\";var t;var r;if(this.lastNeed){t=this.fillLast(e);if(t===undefined)return\"\";r=this.lastNeed;this.lastNeed=0}else{r=0}if(r<e.length)return t?t+this.text(e,r):this.text(e,r);return t||\"\"};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(e){if(this.lastNeed<=e.length){e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length);this.lastNeed-=e.length};function utf8CheckByte(e){if(e<=127)return 0;else if(e>>5===6)return 2;else if(e>>4===14)return 3;else if(e>>3===30)return 4;return e>>6===2?-1:-2}function utf8CheckIncomplete(e,t,r){var n=t.length-1;if(n<r)return 0;var i=utf8CheckByte(t[n]);if(i>=0){if(i>0)e.lastNeed=i-1;return i}if(--n<r||i===-2)return 0;i=utf8CheckByte(t[n]);if(i>=0){if(i>0)e.lastNeed=i-2;return i}if(--n<r||i===-2)return 0;i=utf8CheckByte(t[n]);if(i>=0){if(i>0){if(i===2)i=0;else e.lastNeed=i-3}return i}return 0}function utf8CheckExtraBytes(e,t,r){if((t[0]&192)!==128){e.lastNeed=0;return\"�\"}if(e.lastNeed>1&&t.length>1){if((t[1]&192)!==128){e.lastNeed=1;return\"�\"}if(e.lastNeed>2&&t.length>2){if((t[2]&192)!==128){e.lastNeed=2;return\"�\"}}}}function utf8FillLast(e){var t=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,e,t);if(r!==undefined)return r;if(this.lastNeed<=e.length){e.copy(this.lastChar,t,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,t,0,e.length);this.lastNeed-=e.length}function utf8Text(e,t){var r=utf8CheckIncomplete(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);e.copy(this.lastChar,0,n);return e.toString(\"utf8\",t,n)}function utf8End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+\"�\";return t}function utf16Text(e,t){if((e.length-t)%2===0){var r=e.toString(\"utf16le\",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1];return r.slice(0,-1)}}return r}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=e[e.length-1];return e.toString(\"utf16le\",t,e.length-1)}function utf16End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function base64Text(e,t){var r=(e.length-t)%3;if(r===0)return e.toString(\"base64\",t);this.lastNeed=3-r;this.lastTotal=3;if(r===1){this.lastChar[0]=e[e.length-1]}else{this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1]}return e.toString(\"base64\",t,e.length-r)}function base64End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+this.lastChar.toString(\"base64\",0,3-this.lastNeed);return t}function simpleWrite(e){return e.toString(this.encoding)}function simpleEnd(e){return e&&e.length?this.write(e):\"\"}},769:function(e){e.exports=deprecate;function deprecate(e,t){if(config(\"noDeprecation\")){return e}var r=false;function deprecated(){if(!r){if(config(\"throwDeprecation\")){throw new Error(t)}else if(config(\"traceDeprecation\")){console.trace(t)}else{console.warn(t)}r=true}return e.apply(this,arguments)}return deprecated}function config(e){try{if(!__webpack_require__.g.localStorage)return false}catch(e){return false}var t=__webpack_require__.g.localStorage[e];if(null==t)return false;return String(t).toLowerCase()===\"true\"}},300:function(e){\"use strict\";e.exports=__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")},361:function(e){\"use strict\";e.exports=__webpack_require__(/*! events */ \"./node_modules/events/events.js\")},781:function(e){\"use strict\";e.exports=(__webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter)},837:function(e){\"use strict\";e.exports=__webpack_require__(/*! util */ \"./node_modules/util/util.js\")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var a=true;try{e[r](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(173);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/stream-browserify/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/stream-http/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/compiled/stream-http/index.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n(function(){var e={523:function(e){e.exports={100:\"Continue\",101:\"Switching Protocols\",102:\"Processing\",200:\"OK\",201:\"Created\",202:\"Accepted\",203:\"Non-Authoritative Information\",204:\"No Content\",205:\"Reset Content\",206:\"Partial Content\",207:\"Multi-Status\",208:\"Already Reported\",226:\"IM Used\",300:\"Multiple Choices\",301:\"Moved Permanently\",302:\"Found\",303:\"See Other\",304:\"Not Modified\",305:\"Use Proxy\",307:\"Temporary Redirect\",308:\"Permanent Redirect\",400:\"Bad Request\",401:\"Unauthorized\",402:\"Payment Required\",403:\"Forbidden\",404:\"Not Found\",405:\"Method Not Allowed\",406:\"Not Acceptable\",407:\"Proxy Authentication Required\",408:\"Request Timeout\",409:\"Conflict\",410:\"Gone\",411:\"Length Required\",412:\"Precondition Failed\",413:\"Payload Too Large\",414:\"URI Too Long\",415:\"Unsupported Media Type\",416:\"Range Not Satisfiable\",417:\"Expectation Failed\",418:\"I'm a teapot\",421:\"Misdirected Request\",422:\"Unprocessable Entity\",423:\"Locked\",424:\"Failed Dependency\",425:\"Unordered Collection\",426:\"Upgrade Required\",428:\"Precondition Required\",429:\"Too Many Requests\",431:\"Request Header Fields Too Large\",451:\"Unavailable For Legal Reasons\",500:\"Internal Server Error\",501:\"Not Implemented\",502:\"Bad Gateway\",503:\"Service Unavailable\",504:\"Gateway Timeout\",505:\"HTTP Version Not Supported\",506:\"Variant Also Negotiates\",507:\"Insufficient Storage\",508:\"Loop Detected\",509:\"Bandwidth Limit Exceeded\",510:\"Not Extended\",511:\"Network Authentication Required\"}},782:function(e){if(typeof Object.create===\"function\"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},646:function(e){\"use strict\";const t={};function createErrorType(e,r,n){if(!n){n=Error}function getMessage(e,t,n){if(typeof r===\"string\"){return r}else{return r(e,t,n)}}class NodeError extends n{constructor(e,t,r){super(getMessage(e,t,r))}}NodeError.prototype.name=n.name;NodeError.prototype.code=e;t[e]=NodeError}function oneOf(e,t){if(Array.isArray(e)){const r=e.length;e=e.map((e=>String(e)));if(r>2){return`one of ${t} ${e.slice(0,r-1).join(\", \")}, or `+e[r-1]}else if(r===2){return`one of ${t} ${e[0]} or ${e[1]}`}else{return`of ${t} ${e[0]}`}}else{return`of ${t} ${String(e)}`}}function startsWith(e,t,r){return e.substr(!r||r<0?0:+r,t.length)===t}function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function includes(e,t,r){if(typeof r!==\"number\"){r=0}if(r+t.length>e.length){return false}else{return e.indexOf(t,r)!==-1}}createErrorType(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError);createErrorType(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){let n;if(typeof t===\"string\"&&startsWith(t,\"not \")){n=\"must not be\";t=t.replace(/^not /,\"\")}else{n=\"must be\"}let i;if(endsWith(e,\" argument\")){i=`The ${e} ${n} ${oneOf(t,\"type\")}`}else{const r=includes(e,\".\")?\"property\":\"argument\";i=`The \"${e}\" ${r} ${n} ${oneOf(t,\"type\")}`}i+=`. Received type ${typeof r}`;return i}),TypeError);createErrorType(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\");createErrorType(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"}));createErrorType(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\");createErrorType(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}));createErrorType(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\");createErrorType(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\");createErrorType(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\");createErrorType(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError);createErrorType(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError);createErrorType(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\");e.exports.q=t},403:function(e,t,r){\"use strict\";var n=Object.keys||function(e){var t=[];for(var r in e){t.push(r)}return t};e.exports=Duplex;var i=r(709);var a=r(337);r(782)(Duplex,i);{var o=n(a.prototype);for(var s=0;s<o.length;s++){var f=o[s];if(!Duplex.prototype[f])Duplex.prototype[f]=a.prototype[f]}}function Duplex(e){if(!(this instanceof Duplex))return new Duplex(e);i.call(this,e);a.call(this,e);this.allowHalfOpen=true;if(e){if(e.readable===false)this.readable=false;if(e.writable===false)this.writable=false;if(e.allowHalfOpen===false){this.allowHalfOpen=false;this.once(\"end\",onend)}}}Object.defineProperty(Duplex.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});Object.defineProperty(Duplex.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});Object.defineProperty(Duplex.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function onend(){if(this._writableState.ended)return;process.nextTick(onEndNT,this)}function onEndNT(e){e.end()}Object.defineProperty(Duplex.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false}return this._readableState.destroyed&&this._writableState.destroyed},set:function set(e){if(this._readableState===undefined||this._writableState===undefined){return}this._readableState.destroyed=e;this._writableState.destroyed=e}})},889:function(e,t,r){\"use strict\";e.exports=PassThrough;var n=r(170);r(782)(PassThrough,n);function PassThrough(e){if(!(this instanceof PassThrough))return new PassThrough(e);n.call(this,e)}PassThrough.prototype._transform=function(e,t,r){r(null,e)}},709:function(e,t,r){\"use strict\";e.exports=Readable;var n;Readable.ReadableState=ReadableState;var i=r(361).EventEmitter;var a=function EElistenerCount(e,t){return e.listeners(t).length};var o=r(678);var s=r(300).Buffer;var f=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return s.from(e)}function _isUint8Array(e){return s.isBuffer(e)||e instanceof f}var l=r(837);var u;if(l&&l.debuglog){u=l.debuglog(\"stream\")}else{u=function debug(){}}var d=r(379);var c=r(25);var h=r(776),p=h.getHighWaterMark;var b=r(646).q,y=b.ERR_INVALID_ARG_TYPE,g=b.ERR_STREAM_PUSH_AFTER_EOF,_=b.ERR_METHOD_NOT_IMPLEMENTED,v=b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;var m;var w;var R;r(782)(Readable,o);var S=c.errorOrDestroy;var E=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function prependListener(e,t,r){if(typeof e.prependListener===\"function\")return e.prependListener(t,r);if(!e._events||!e._events[t])e.on(t,r);else if(Array.isArray(e._events[t]))e._events[t].unshift(r);else e._events[t]=[r,e._events[t]]}function ReadableState(e,t,i){n=n||r(403);e=e||{};if(typeof i!==\"boolean\")i=t instanceof n;this.objectMode=!!e.objectMode;if(i)this.objectMode=this.objectMode||!!e.readableObjectMode;this.highWaterMark=p(this,e,\"readableHighWaterMark\",i);this.buffer=new d;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.destroyed=false;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(e.encoding){if(!m)m=r(704).s;this.decoder=new m(e.encoding);this.encoding=e.encoding}}function Readable(e){n=n||r(403);if(!(this instanceof Readable))return new Readable(e);var t=this instanceof n;this._readableState=new ReadableState(e,this,t);this.readable=true;if(e){if(typeof e.read===\"function\")this._read=e.read;if(typeof e.destroy===\"function\")this._destroy=e.destroy}o.call(this)}Object.defineProperty(Readable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined){return false}return this._readableState.destroyed},set:function set(e){if(!this._readableState){return}this._readableState.destroyed=e}});Readable.prototype.destroy=c.destroy;Readable.prototype._undestroy=c.undestroy;Readable.prototype._destroy=function(e,t){t(e)};Readable.prototype.push=function(e,t){var r=this._readableState;var n;if(!r.objectMode){if(typeof e===\"string\"){t=t||r.defaultEncoding;if(t!==r.encoding){e=s.from(e,t);t=\"\"}n=true}}else{n=true}return readableAddChunk(this,e,t,false,n)};Readable.prototype.unshift=function(e){return readableAddChunk(this,e,null,true,false)};function readableAddChunk(e,t,r,n,i){u(\"readableAddChunk\",t);var a=e._readableState;if(t===null){a.reading=false;onEofChunk(e,a)}else{var o;if(!i)o=chunkInvalid(a,t);if(o){S(e,o)}else if(a.objectMode||t&&t.length>0){if(typeof t!==\"string\"&&!a.objectMode&&Object.getPrototypeOf(t)!==s.prototype){t=_uint8ArrayToBuffer(t)}if(n){if(a.endEmitted)S(e,new v);else addChunk(e,a,t,true)}else if(a.ended){S(e,new g)}else if(a.destroyed){return false}else{a.reading=false;if(a.decoder&&!r){t=a.decoder.write(t);if(a.objectMode||t.length!==0)addChunk(e,a,t,false);else maybeReadMore(e,a)}else{addChunk(e,a,t,false)}}}else if(!n){a.reading=false;maybeReadMore(e,a)}}return!a.ended&&(a.length<a.highWaterMark||a.length===0)}function addChunk(e,t,r,n){if(t.flowing&&t.length===0&&!t.sync){t.awaitDrain=0;e.emit(\"data\",r)}else{t.length+=t.objectMode?1:r.length;if(n)t.buffer.unshift(r);else t.buffer.push(r);if(t.needReadable)emitReadable(e)}maybeReadMore(e,t)}function chunkInvalid(e,t){var r;if(!_isUint8Array(t)&&typeof t!==\"string\"&&t!==undefined&&!e.objectMode){r=new y(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)}return r}Readable.prototype.isPaused=function(){return this._readableState.flowing===false};Readable.prototype.setEncoding=function(e){if(!m)m=r(704).s;var t=new m(e);this._readableState.decoder=t;this._readableState.encoding=this._readableState.decoder.encoding;var n=this._readableState.buffer.head;var i=\"\";while(n!==null){i+=t.write(n.data);n=n.next}this._readableState.buffer.clear();if(i!==\"\")this._readableState.buffer.push(i);this._readableState.length=i.length;return this};var T=1073741824;function computeNewHighWaterMark(e){if(e>=T){e=T}else{e--;e|=e>>>1;e|=e>>>2;e|=e>>>4;e|=e>>>8;e|=e>>>16;e++}return e}function howMuchToRead(e,t){if(e<=0||t.length===0&&t.ended)return 0;if(t.objectMode)return 1;if(e!==e){if(t.flowing&&t.length)return t.buffer.head.data.length;else return t.length}if(e>t.highWaterMark)t.highWaterMark=computeNewHighWaterMark(e);if(e<=t.length)return e;if(!t.ended){t.needReadable=true;return 0}return t.length}Readable.prototype.read=function(e){u(\"read\",e);e=parseInt(e,10);var t=this._readableState;var r=e;if(e!==0)t.emittedReadable=false;if(e===0&&t.needReadable&&((t.highWaterMark!==0?t.length>=t.highWaterMark:t.length>0)||t.ended)){u(\"read: emitReadable\",t.length,t.ended);if(t.length===0&&t.ended)endReadable(this);else emitReadable(this);return null}e=howMuchToRead(e,t);if(e===0&&t.ended){if(t.length===0)endReadable(this);return null}var n=t.needReadable;u(\"need readable\",n);if(t.length===0||t.length-e<t.highWaterMark){n=true;u(\"length less than watermark\",n)}if(t.ended||t.reading){n=false;u(\"reading or ended\",n)}else if(n){u(\"do read\");t.reading=true;t.sync=true;if(t.length===0)t.needReadable=true;this._read(t.highWaterMark);t.sync=false;if(!t.reading)e=howMuchToRead(r,t)}var i;if(e>0)i=fromList(e,t);else i=null;if(i===null){t.needReadable=t.length<=t.highWaterMark;e=0}else{t.length-=e;t.awaitDrain=0}if(t.length===0){if(!t.ended)t.needReadable=true;if(r!==e&&t.ended)endReadable(this)}if(i!==null)this.emit(\"data\",i);return i};function onEofChunk(e,t){u(\"onEofChunk\");if(t.ended)return;if(t.decoder){var r=t.decoder.end();if(r&&r.length){t.buffer.push(r);t.length+=t.objectMode?1:r.length}}t.ended=true;if(t.sync){emitReadable(e)}else{t.needReadable=false;if(!t.emittedReadable){t.emittedReadable=true;emitReadable_(e)}}}function emitReadable(e){var t=e._readableState;u(\"emitReadable\",t.needReadable,t.emittedReadable);t.needReadable=false;if(!t.emittedReadable){u(\"emitReadable\",t.flowing);t.emittedReadable=true;process.nextTick(emitReadable_,e)}}function emitReadable_(e){var t=e._readableState;u(\"emitReadable_\",t.destroyed,t.length,t.ended);if(!t.destroyed&&(t.length||t.ended)){e.emit(\"readable\");t.emittedReadable=false}t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark;flow(e)}function maybeReadMore(e,t){if(!t.readingMore){t.readingMore=true;process.nextTick(maybeReadMore_,e,t)}}function maybeReadMore_(e,t){while(!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&t.length===0)){var r=t.length;u(\"maybeReadMore read 0\");e.read(0);if(r===t.length)break}t.readingMore=false}Readable.prototype._read=function(e){S(this,new _(\"_read()\"))};Readable.prototype.pipe=function(e,t){var r=this;var n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e);break}n.pipesCount+=1;u(\"pipe count=%d opts=%j\",n.pipesCount,t);var i=(!t||t.end!==false)&&e!==process.stdout&&e!==process.stderr;var o=i?onend:unpipe;if(n.endEmitted)process.nextTick(o);else r.once(\"end\",o);e.on(\"unpipe\",onunpipe);function onunpipe(e,t){u(\"onunpipe\");if(e===r){if(t&&t.hasUnpiped===false){t.hasUnpiped=true;cleanup()}}}function onend(){u(\"onend\");e.end()}var s=pipeOnDrain(r);e.on(\"drain\",s);var f=false;function cleanup(){u(\"cleanup\");e.removeListener(\"close\",onclose);e.removeListener(\"finish\",onfinish);e.removeListener(\"drain\",s);e.removeListener(\"error\",onerror);e.removeListener(\"unpipe\",onunpipe);r.removeListener(\"end\",onend);r.removeListener(\"end\",unpipe);r.removeListener(\"data\",ondata);f=true;if(n.awaitDrain&&(!e._writableState||e._writableState.needDrain))s()}r.on(\"data\",ondata);function ondata(t){u(\"ondata\");var i=e.write(t);u(\"dest.write\",i);if(i===false){if((n.pipesCount===1&&n.pipes===e||n.pipesCount>1&&indexOf(n.pipes,e)!==-1)&&!f){u(\"false write response, pause\",n.awaitDrain);n.awaitDrain++}r.pause()}}function onerror(t){u(\"onerror\",t);unpipe();e.removeListener(\"error\",onerror);if(a(e,\"error\")===0)S(e,t)}prependListener(e,\"error\",onerror);function onclose(){e.removeListener(\"finish\",onfinish);unpipe()}e.once(\"close\",onclose);function onfinish(){u(\"onfinish\");e.removeListener(\"close\",onclose);unpipe()}e.once(\"finish\",onfinish);function unpipe(){u(\"unpipe\");r.unpipe(e)}e.emit(\"pipe\",r);if(!n.flowing){u(\"pipe resume\");r.resume()}return e};function pipeOnDrain(e){return function pipeOnDrainFunctionResult(){var t=e._readableState;u(\"pipeOnDrain\",t.awaitDrain);if(t.awaitDrain)t.awaitDrain--;if(t.awaitDrain===0&&a(e,\"data\")){t.flowing=true;flow(e)}}}Readable.prototype.unpipe=function(e){var t=this._readableState;var r={hasUnpiped:false};if(t.pipesCount===0)return this;if(t.pipesCount===1){if(e&&e!==t.pipes)return this;if(!e)e=t.pipes;t.pipes=null;t.pipesCount=0;t.flowing=false;if(e)e.emit(\"unpipe\",this,r);return this}if(!e){var n=t.pipes;var i=t.pipesCount;t.pipes=null;t.pipesCount=0;t.flowing=false;for(var a=0;a<i;a++){n[a].emit(\"unpipe\",this,{hasUnpiped:false})}return this}var o=indexOf(t.pipes,e);if(o===-1)return this;t.pipes.splice(o,1);t.pipesCount-=1;if(t.pipesCount===1)t.pipes=t.pipes[0];e.emit(\"unpipe\",this,r);return this};Readable.prototype.on=function(e,t){var r=o.prototype.on.call(this,e,t);var n=this._readableState;if(e===\"data\"){n.readableListening=this.listenerCount(\"readable\")>0;if(n.flowing!==false)this.resume()}else if(e===\"readable\"){if(!n.endEmitted&&!n.readableListening){n.readableListening=n.needReadable=true;n.flowing=false;n.emittedReadable=false;u(\"on readable\",n.length,n.reading);if(n.length){emitReadable(this)}else if(!n.reading){process.nextTick(nReadingNextTick,this)}}}return r};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(e,t){var r=o.prototype.removeListener.call(this,e,t);if(e===\"readable\"){process.nextTick(updateReadableListening,this)}return r};Readable.prototype.removeAllListeners=function(e){var t=o.prototype.removeAllListeners.apply(this,arguments);if(e===\"readable\"||e===undefined){process.nextTick(updateReadableListening,this)}return t};function updateReadableListening(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0;if(t.resumeScheduled&&!t.paused){t.flowing=true}else if(e.listenerCount(\"data\")>0){e.resume()}}function nReadingNextTick(e){u(\"readable nexttick read 0\");e.read(0)}Readable.prototype.resume=function(){var e=this._readableState;if(!e.flowing){u(\"resume\");e.flowing=!e.readableListening;resume(this,e)}e.paused=false;return this};function resume(e,t){if(!t.resumeScheduled){t.resumeScheduled=true;process.nextTick(resume_,e,t)}}function resume_(e,t){u(\"resume\",t.reading);if(!t.reading){e.read(0)}t.resumeScheduled=false;e.emit(\"resume\");flow(e);if(t.flowing&&!t.reading)e.read(0)}Readable.prototype.pause=function(){u(\"call pause flowing=%j\",this._readableState.flowing);if(this._readableState.flowing!==false){u(\"pause\");this._readableState.flowing=false;this.emit(\"pause\")}this._readableState.paused=true;return this};function flow(e){var t=e._readableState;u(\"flow\",t.flowing);while(t.flowing&&e.read()!==null){}}Readable.prototype.wrap=function(e){var t=this;var r=this._readableState;var n=false;e.on(\"end\",(function(){u(\"wrapped end\");if(r.decoder&&!r.ended){var e=r.decoder.end();if(e&&e.length)t.push(e)}t.push(null)}));e.on(\"data\",(function(i){u(\"wrapped data\");if(r.decoder)i=r.decoder.write(i);if(r.objectMode&&(i===null||i===undefined))return;else if(!r.objectMode&&(!i||!i.length))return;var a=t.push(i);if(!a){n=true;e.pause()}}));for(var i in e){if(this[i]===undefined&&typeof e[i]===\"function\"){this[i]=function methodWrap(t){return function methodWrapReturnFunction(){return e[t].apply(e,arguments)}}(i)}}for(var a=0;a<E.length;a++){e.on(E[a],this.emit.bind(this,E[a]))}this._read=function(t){u(\"wrapped _read\",t);if(n){n=false;e.resume()}};return this};if(typeof Symbol===\"function\"){Readable.prototype[Symbol.asyncIterator]=function(){if(w===undefined){w=r(871)}return w(this)}}Object.defineProperty(Readable.prototype,\"readableHighWaterMark\",{enumerable:false,get:function get(){return this._readableState.highWaterMark}});Object.defineProperty(Readable.prototype,\"readableBuffer\",{enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer}});Object.defineProperty(Readable.prototype,\"readableFlowing\",{enumerable:false,get:function get(){return this._readableState.flowing},set:function set(e){if(this._readableState){this._readableState.flowing=e}}});Readable._fromList=fromList;Object.defineProperty(Readable.prototype,\"readableLength\",{enumerable:false,get:function get(){return this._readableState.length}});function fromList(e,t){if(t.length===0)return null;var r;if(t.objectMode)r=t.buffer.shift();else if(!e||e>=t.length){if(t.decoder)r=t.buffer.join(\"\");else if(t.buffer.length===1)r=t.buffer.first();else r=t.buffer.concat(t.length);t.buffer.clear()}else{r=t.buffer.consume(e,t.decoder)}return r}function endReadable(e){var t=e._readableState;u(\"endReadable\",t.endEmitted);if(!t.endEmitted){t.ended=true;process.nextTick(endReadableNT,t,e)}}function endReadableNT(e,t){u(\"endReadableNT\",e.endEmitted,e.length);if(!e.endEmitted&&e.length===0){e.endEmitted=true;t.readable=false;t.emit(\"end\");if(e.autoDestroy){var r=t._writableState;if(!r||r.autoDestroy&&r.finished){t.destroy()}}}}if(typeof Symbol===\"function\"){Readable.from=function(e,t){if(R===undefined){R=r(727)}return R(Readable,e,t)}}function indexOf(e,t){for(var r=0,n=e.length;r<n;r++){if(e[r]===t)return r}return-1}},170:function(e,t,r){\"use strict\";e.exports=Transform;var n=r(646).q,i=n.ERR_METHOD_NOT_IMPLEMENTED,a=n.ERR_MULTIPLE_CALLBACK,o=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,s=n.ERR_TRANSFORM_WITH_LENGTH_0;var f=r(403);r(782)(Transform,f);function afterTransform(e,t){var r=this._transformState;r.transforming=false;var n=r.writecb;if(n===null){return this.emit(\"error\",new a)}r.writechunk=null;r.writecb=null;if(t!=null)this.push(t);n(e);var i=this._readableState;i.reading=false;if(i.needReadable||i.length<i.highWaterMark){this._read(i.highWaterMark)}}function Transform(e){if(!(this instanceof Transform))return new Transform(e);f.call(this,e);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};this._readableState.needReadable=true;this._readableState.sync=false;if(e){if(typeof e.transform===\"function\")this._transform=e.transform;if(typeof e.flush===\"function\")this._flush=e.flush}this.on(\"prefinish\",prefinish)}function prefinish(){var e=this;if(typeof this._flush===\"function\"&&!this._readableState.destroyed){this._flush((function(t,r){done(e,t,r)}))}else{done(this,null,null)}}Transform.prototype.push=function(e,t){this._transformState.needTransform=false;return f.prototype.push.call(this,e,t)};Transform.prototype._transform=function(e,t,r){r(new i(\"_transform()\"))};Transform.prototype._write=function(e,t,r){var n=this._transformState;n.writecb=r;n.writechunk=e;n.writeencoding=t;if(!n.transforming){var i=this._readableState;if(n.needTransform||i.needReadable||i.length<i.highWaterMark)this._read(i.highWaterMark)}};Transform.prototype._read=function(e){var t=this._transformState;if(t.writechunk!==null&&!t.transforming){t.transforming=true;this._transform(t.writechunk,t.writeencoding,t.afterTransform)}else{t.needTransform=true}};Transform.prototype._destroy=function(e,t){f.prototype._destroy.call(this,e,(function(e){t(e)}))};function done(e,t,r){if(t)return e.emit(\"error\",t);if(r!=null)e.push(r);if(e._writableState.length)throw new s;if(e._transformState.transforming)throw new o;return e.push(null)}},337:function(e,t,r){\"use strict\";e.exports=Writable;function WriteReq(e,t,r){this.chunk=e;this.encoding=t;this.callback=r;this.next=null}function CorkedRequest(e){var t=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(t,e)}}var n;Writable.WritableState=WritableState;var i={deprecate:r(769)};var a=r(678);var o=r(300).Buffer;var s=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return o.from(e)}function _isUint8Array(e){return o.isBuffer(e)||e instanceof s}var f=r(25);var l=r(776),u=l.getHighWaterMark;var d=r(646).q,c=d.ERR_INVALID_ARG_TYPE,h=d.ERR_METHOD_NOT_IMPLEMENTED,p=d.ERR_MULTIPLE_CALLBACK,b=d.ERR_STREAM_CANNOT_PIPE,y=d.ERR_STREAM_DESTROYED,g=d.ERR_STREAM_NULL_VALUES,_=d.ERR_STREAM_WRITE_AFTER_END,v=d.ERR_UNKNOWN_ENCODING;var m=f.errorOrDestroy;r(782)(Writable,a);function nop(){}function WritableState(e,t,i){n=n||r(403);e=e||{};if(typeof i!==\"boolean\")i=t instanceof n;this.objectMode=!!e.objectMode;if(i)this.objectMode=this.objectMode||!!e.writableObjectMode;this.highWaterMark=u(this,e,\"writableHighWaterMark\",i);this.finalCalled=false;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;this.destroyed=false;var a=e.decodeStrings===false;this.decodeStrings=!a;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(e){onwrite(t,e)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var e=this.bufferedRequest;var t=[];while(e){t.push(e);e=e.next}return t};(function(){try{Object.defineProperty(WritableState.prototype,\"buffer\",{get:i.deprecate((function writableStateBufferGetter(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer \"+\"instead.\",\"DEP0003\")})}catch(e){}})();var w;if(typeof Symbol===\"function\"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]===\"function\"){w=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(e){if(w.call(this,e))return true;if(this!==Writable)return false;return e&&e._writableState instanceof WritableState}})}else{w=function realHasInstance(e){return e instanceof this}}function Writable(e){n=n||r(403);var t=this instanceof n;if(!t&&!w.call(Writable,this))return new Writable(e);this._writableState=new WritableState(e,this,t);this.writable=true;if(e){if(typeof e.write===\"function\")this._write=e.write;if(typeof e.writev===\"function\")this._writev=e.writev;if(typeof e.destroy===\"function\")this._destroy=e.destroy;if(typeof e.final===\"function\")this._final=e.final}a.call(this)}Writable.prototype.pipe=function(){m(this,new b)};function writeAfterEnd(e,t){var r=new _;m(e,r);process.nextTick(t,r)}function validChunk(e,t,r,n){var i;if(r===null){i=new g}else if(typeof r!==\"string\"&&!t.objectMode){i=new c(\"chunk\",[\"string\",\"Buffer\"],r)}if(i){m(e,i);process.nextTick(n,i);return false}return true}Writable.prototype.write=function(e,t,r){var n=this._writableState;var i=false;var a=!n.objectMode&&_isUint8Array(e);if(a&&!o.isBuffer(e)){e=_uint8ArrayToBuffer(e)}if(typeof t===\"function\"){r=t;t=null}if(a)t=\"buffer\";else if(!t)t=n.defaultEncoding;if(typeof r!==\"function\")r=nop;if(n.ending)writeAfterEnd(this,r);else if(a||validChunk(this,n,e,r)){n.pendingcb++;i=writeOrBuffer(this,n,a,e,t,r)}return i};Writable.prototype.cork=function(){this._writableState.corked++};Writable.prototype.uncork=function(){var e=this._writableState;if(e.corked){e.corked--;if(!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest)clearBuffer(this,e)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(e){if(typeof e===\"string\")e=e.toLowerCase();if(!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new v(e);this._writableState.defaultEncoding=e;return this};Object.defineProperty(Writable.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});function decodeChunk(e,t,r){if(!e.objectMode&&e.decodeStrings!==false&&typeof t===\"string\"){t=o.from(t,r)}return t}Object.defineProperty(Writable.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});function writeOrBuffer(e,t,r,n,i,a){if(!r){var o=decodeChunk(t,n,i);if(n!==o){r=true;i=\"buffer\";n=o}}var s=t.objectMode?1:n.length;t.length+=s;var f=t.length<t.highWaterMark;if(!f)t.needDrain=true;if(t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:a,next:null};if(l){l.next=t.lastBufferedRequest}else{t.bufferedRequest=t.lastBufferedRequest}t.bufferedRequestCount+=1}else{doWrite(e,t,false,s,n,i,a)}return f}function doWrite(e,t,r,n,i,a,o){t.writelen=n;t.writecb=o;t.writing=true;t.sync=true;if(t.destroyed)t.onwrite(new y(\"write\"));else if(r)e._writev(i,t.onwrite);else e._write(i,a,t.onwrite);t.sync=false}function onwriteError(e,t,r,n,i){--t.pendingcb;if(r){process.nextTick(i,n);process.nextTick(finishMaybe,e,t);e._writableState.errorEmitted=true;m(e,n)}else{i(n);e._writableState.errorEmitted=true;m(e,n);finishMaybe(e,t)}}function onwriteStateUpdate(e){e.writing=false;e.writecb=null;e.length-=e.writelen;e.writelen=0}function onwrite(e,t){var r=e._writableState;var n=r.sync;var i=r.writecb;if(typeof i!==\"function\")throw new p;onwriteStateUpdate(r);if(t)onwriteError(e,r,n,t,i);else{var a=needFinish(r)||e.destroyed;if(!a&&!r.corked&&!r.bufferProcessing&&r.bufferedRequest){clearBuffer(e,r)}if(n){process.nextTick(afterWrite,e,r,a,i)}else{afterWrite(e,r,a,i)}}}function afterWrite(e,t,r,n){if(!r)onwriteDrain(e,t);t.pendingcb--;n();finishMaybe(e,t)}function onwriteDrain(e,t){if(t.length===0&&t.needDrain){t.needDrain=false;e.emit(\"drain\")}}function clearBuffer(e,t){t.bufferProcessing=true;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var n=t.bufferedRequestCount;var i=new Array(n);var a=t.corkedRequestsFree;a.entry=r;var o=0;var s=true;while(r){i[o]=r;if(!r.isBuf)s=false;r=r.next;o+=1}i.allBuffers=s;doWrite(e,t,true,t.length,i,\"\",a.finish);t.pendingcb++;t.lastBufferedRequest=null;if(a.next){t.corkedRequestsFree=a.next;a.next=null}else{t.corkedRequestsFree=new CorkedRequest(t)}t.bufferedRequestCount=0}else{while(r){var f=r.chunk;var l=r.encoding;var u=r.callback;var d=t.objectMode?1:f.length;doWrite(e,t,false,d,f,l,u);r=r.next;t.bufferedRequestCount--;if(t.writing){break}}if(r===null)t.lastBufferedRequest=null}t.bufferedRequest=r;t.bufferProcessing=false}Writable.prototype._write=function(e,t,r){r(new h(\"_write()\"))};Writable.prototype._writev=null;Writable.prototype.end=function(e,t,r){var n=this._writableState;if(typeof e===\"function\"){r=e;e=null;t=null}else if(typeof t===\"function\"){r=t;t=null}if(e!==null&&e!==undefined)this.write(e,t);if(n.corked){n.corked=1;this.uncork()}if(!n.ending)endWritable(this,n,r);return this};Object.defineProperty(Writable.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function needFinish(e){return e.ending&&e.length===0&&e.bufferedRequest===null&&!e.finished&&!e.writing}function callFinal(e,t){e._final((function(r){t.pendingcb--;if(r){m(e,r)}t.prefinished=true;e.emit(\"prefinish\");finishMaybe(e,t)}))}function prefinish(e,t){if(!t.prefinished&&!t.finalCalled){if(typeof e._final===\"function\"&&!t.destroyed){t.pendingcb++;t.finalCalled=true;process.nextTick(callFinal,e,t)}else{t.prefinished=true;e.emit(\"prefinish\")}}}function finishMaybe(e,t){var r=needFinish(t);if(r){prefinish(e,t);if(t.pendingcb===0){t.finished=true;e.emit(\"finish\");if(t.autoDestroy){var n=e._readableState;if(!n||n.autoDestroy&&n.endEmitted){e.destroy()}}}}return r}function endWritable(e,t,r){t.ending=true;finishMaybe(e,t);if(r){if(t.finished)process.nextTick(r);else e.once(\"finish\",r)}t.ended=true;e.writable=false}function onCorkedFinish(e,t,r){var n=e.entry;e.entry=null;while(n){var i=n.callback;t.pendingcb--;i(r);n=n.next}t.corkedRequestsFree.next=e}Object.defineProperty(Writable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._writableState===undefined){return false}return this._writableState.destroyed},set:function set(e){if(!this._writableState){return}this._writableState.destroyed=e}});Writable.prototype.destroy=f.destroy;Writable.prototype._undestroy=f.undestroy;Writable.prototype._destroy=function(e,t){t(e)}},871:function(e,t,r){\"use strict\";var n;function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var i=r(698);var a=Symbol(\"lastResolve\");var o=Symbol(\"lastReject\");var s=Symbol(\"error\");var f=Symbol(\"ended\");var l=Symbol(\"lastPromise\");var u=Symbol(\"handlePromise\");var d=Symbol(\"stream\");function createIterResult(e,t){return{value:e,done:t}}function readAndResolve(e){var t=e[a];if(t!==null){var r=e[d].read();if(r!==null){e[l]=null;e[a]=null;e[o]=null;t(createIterResult(r,false))}}}function onReadable(e){process.nextTick(readAndResolve,e)}function wrapForNext(e,t){return function(r,n){e.then((function(){if(t[f]){r(createIterResult(undefined,true));return}t[u](r,n)}),n)}}var c=Object.getPrototypeOf((function(){}));var h=Object.setPrototypeOf((n={get stream(){return this[d]},next:function next(){var e=this;var t=this[s];if(t!==null){return Promise.reject(t)}if(this[f]){return Promise.resolve(createIterResult(undefined,true))}if(this[d].destroyed){return new Promise((function(t,r){process.nextTick((function(){if(e[s]){r(e[s])}else{t(createIterResult(undefined,true))}}))}))}var r=this[l];var n;if(r){n=new Promise(wrapForNext(r,this))}else{var i=this[d].read();if(i!==null){return Promise.resolve(createIterResult(i,false))}n=new Promise(this[u])}this[l]=n;return n}},_defineProperty(n,Symbol.asyncIterator,(function(){return this})),_defineProperty(n,\"return\",(function _return(){var e=this;return new Promise((function(t,r){e[d].destroy(null,(function(e){if(e){r(e);return}t(createIterResult(undefined,true))}))}))})),n),c);var p=function createReadableStreamAsyncIterator(e){var t;var r=Object.create(h,(t={},_defineProperty(t,d,{value:e,writable:true}),_defineProperty(t,a,{value:null,writable:true}),_defineProperty(t,o,{value:null,writable:true}),_defineProperty(t,s,{value:null,writable:true}),_defineProperty(t,f,{value:e._readableState.endEmitted,writable:true}),_defineProperty(t,u,{value:function value(e,t){var n=r[d].read();if(n){r[l]=null;r[a]=null;r[o]=null;e(createIterResult(n,false))}else{r[a]=e;r[o]=t}},writable:true}),t));r[l]=null;i(e,(function(e){if(e&&e.code!==\"ERR_STREAM_PREMATURE_CLOSE\"){var t=r[o];if(t!==null){r[l]=null;r[a]=null;r[o]=null;t(e)}r[s]=e;return}var n=r[a];if(n!==null){r[l]=null;r[a]=null;r[o]=null;n(createIterResult(undefined,true))}r[f]=true}));e.on(\"readable\",onReadable.bind(null,r));return r};e.exports=p},379:function(e,t,r){\"use strict\";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t)n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||false;n.configurable=true;if(\"value\"in n)n.writable=true;Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}var n=r(300),i=n.Buffer;var a=r(837),o=a.inspect;var s=o&&o.custom||\"inspect\";function copyBuffer(e,t,r){i.prototype.copy.call(e,t,r)}e.exports=function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0}_createClass(BufferList,[{key:\"push\",value:function push(e){var t={data:e,next:null};if(this.length>0)this.tail.next=t;else this.head=t;this.tail=t;++this.length}},{key:\"unshift\",value:function unshift(e){var t={data:e,next:this.head};if(this.length===0)this.tail=t;this.head=t;++this.length}},{key:\"shift\",value:function shift(){if(this.length===0)return;var e=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return e}},{key:\"clear\",value:function clear(){this.head=this.tail=null;this.length=0}},{key:\"join\",value:function join(e){if(this.length===0)return\"\";var t=this.head;var r=\"\"+t.data;while(t=t.next){r+=e+t.data}return r}},{key:\"concat\",value:function concat(e){if(this.length===0)return i.alloc(0);var t=i.allocUnsafe(e>>>0);var r=this.head;var n=0;while(r){copyBuffer(r.data,t,n);n+=r.data.length;r=r.next}return t}},{key:\"consume\",value:function consume(e,t){var r;if(e<this.head.data.length){r=this.head.data.slice(0,e);this.head.data=this.head.data.slice(e)}else if(e===this.head.data.length){r=this.shift()}else{r=t?this._getString(e):this._getBuffer(e)}return r}},{key:\"first\",value:function first(){return this.head.data}},{key:\"_getString\",value:function _getString(e){var t=this.head;var r=1;var n=t.data;e-=n.length;while(t=t.next){var i=t.data;var a=e>i.length?i.length:e;if(a===i.length)n+=i;else n+=i.slice(0,e);e-=a;if(e===0){if(a===i.length){++r;if(t.next)this.head=t.next;else this.head=this.tail=null}else{this.head=t;t.data=i.slice(a)}break}++r}this.length-=r;return n}},{key:\"_getBuffer\",value:function _getBuffer(e){var t=i.allocUnsafe(e);var r=this.head;var n=1;r.data.copy(t);e-=r.data.length;while(r=r.next){var a=r.data;var o=e>a.length?a.length:e;a.copy(t,t.length-e,0,o);e-=o;if(e===0){if(o===a.length){++n;if(r.next)this.head=r.next;else this.head=this.tail=null}else{this.head=r;r.data=a.slice(o)}break}++n}this.length-=n;return t}},{key:s,value:function value(e,t){return o(this,_objectSpread({},t,{depth:0,customInspect:false}))}}]);return BufferList}()},25:function(e){\"use strict\";function destroy(e,t){var r=this;var n=this._readableState&&this._readableState.destroyed;var i=this._writableState&&this._writableState.destroyed;if(n||i){if(t){t(e)}else if(e){if(!this._writableState){process.nextTick(emitErrorNT,this,e)}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,e)}}return this}if(this._readableState){this._readableState.destroyed=true}if(this._writableState){this._writableState.destroyed=true}this._destroy(e||null,(function(e){if(!t&&e){if(!r._writableState){process.nextTick(emitErrorAndCloseNT,r,e)}else if(!r._writableState.errorEmitted){r._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,r,e)}else{process.nextTick(emitCloseNT,r)}}else if(t){process.nextTick(emitCloseNT,r);t(e)}else{process.nextTick(emitCloseNT,r)}}));return this}function emitErrorAndCloseNT(e,t){emitErrorNT(e,t);emitCloseNT(e)}function emitCloseNT(e){if(e._writableState&&!e._writableState.emitClose)return;if(e._readableState&&!e._readableState.emitClose)return;e.emit(\"close\")}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false}}function emitErrorNT(e,t){e.emit(\"error\",t)}function errorOrDestroy(e,t){var r=e._readableState;var n=e._writableState;if(r&&r.autoDestroy||n&&n.autoDestroy)e.destroy(t);else e.emit(\"error\",t)}e.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy}},698:function(e,t,r){\"use strict\";var n=r(646).q.ERR_STREAM_PREMATURE_CLOSE;function once(e){var t=false;return function(){if(t)return;t=true;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++){n[i]=arguments[i]}e.apply(this,n)}}function noop(){}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function eos(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=once(r||noop);var i=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var o=function onlegacyfinish(){if(!e.writable)f()};var s=e._writableState&&e._writableState.finished;var f=function onfinish(){a=false;s=true;if(!i)r.call(e)};var l=e._readableState&&e._readableState.endEmitted;var u=function onend(){i=false;l=true;if(!a)r.call(e)};var d=function onerror(t){r.call(e,t)};var c=function onclose(){var t;if(i&&!l){if(!e._readableState||!e._readableState.ended)t=new n;return r.call(e,t)}if(a&&!s){if(!e._writableState||!e._writableState.ended)t=new n;return r.call(e,t)}};var h=function onrequest(){e.req.on(\"finish\",f)};if(isRequest(e)){e.on(\"complete\",f);e.on(\"abort\",c);if(e.req)h();else e.on(\"request\",h)}else if(a&&!e._writableState){e.on(\"end\",o);e.on(\"close\",o)}e.on(\"end\",u);e.on(\"finish\",f);if(t.error!==false)e.on(\"error\",d);e.on(\"close\",c);return function(){e.removeListener(\"complete\",f);e.removeListener(\"abort\",c);e.removeListener(\"request\",h);if(e.req)e.req.removeListener(\"finish\",f);e.removeListener(\"end\",o);e.removeListener(\"close\",o);e.removeListener(\"finish\",f);e.removeListener(\"end\",u);e.removeListener(\"error\",d);e.removeListener(\"close\",c)}}e.exports=eos},727:function(e,t,r){\"use strict\";function asyncGeneratorStep(e,t,r,n,i,a,o){try{var s=e[a](o);var f=s.value}catch(e){r(e);return}if(s.done){t(f)}else{Promise.resolve(f).then(n,i)}}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,i){var a=e.apply(t,r);function _next(e){asyncGeneratorStep(a,n,i,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(a,n,i,_next,_throw,\"throw\",e)}_next(undefined)}))}}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t)n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var n=r(646).q.ERR_INVALID_ARG_TYPE;function from(e,t,r){var i;if(t&&typeof t.next===\"function\"){i=t}else if(t&&t[Symbol.asyncIterator])i=t[Symbol.asyncIterator]();else if(t&&t[Symbol.iterator])i=t[Symbol.iterator]();else throw new n(\"iterable\",[\"Iterable\"],t);var a=new e(_objectSpread({objectMode:true},r));var o=false;a._read=function(){if(!o){o=true;next()}};function next(){return _next2.apply(this,arguments)}function _next2(){_next2=_asyncToGenerator((function*(){try{var e=yield i.next(),t=e.value,r=e.done;if(r){a.push(null)}else if(a.push(yield t)){next()}else{o=false}}catch(e){a.destroy(e)}}));return _next2.apply(this,arguments)}return a}e.exports=from},442:function(e,t,r){\"use strict\";var n;function once(e){var t=false;return function(){if(t)return;t=true;e.apply(void 0,arguments)}}var i=r(646).q,a=i.ERR_MISSING_ARGS,o=i.ERR_STREAM_DESTROYED;function noop(e){if(e)throw e}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function destroyer(e,t,i,a){a=once(a);var s=false;e.on(\"close\",(function(){s=true}));if(n===undefined)n=r(698);n(e,{readable:t,writable:i},(function(e){if(e)return a(e);s=true;a()}));var f=false;return function(t){if(s)return;if(f)return;f=true;if(isRequest(e))return e.abort();if(typeof e.destroy===\"function\")return e.destroy();a(t||new o(\"pipe\"))}}function call(e){e()}function pipe(e,t){return e.pipe(t)}function popCallback(e){if(!e.length)return noop;if(typeof e[e.length-1]!==\"function\")return noop;return e.pop()}function pipeline(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}var n=popCallback(t);if(Array.isArray(t[0]))t=t[0];if(t.length<2){throw new a(\"streams\")}var i;var o=t.map((function(e,r){var a=r<t.length-1;var s=r>0;return destroyer(e,a,s,(function(e){if(!i)i=e;if(e)o.forEach(call);if(a)return;o.forEach(call);n(i)}))}));return t.reduce(pipe)}e.exports=pipeline},776:function(e,t,r){\"use strict\";var n=r(646).q.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(e,t,r){return e.highWaterMark!=null?e.highWaterMark:t?e[r]:null}function getHighWaterMark(e,t,r,i){var a=highWaterMarkFrom(t,i,r);if(a!=null){if(!(isFinite(a)&&Math.floor(a)===a)||a<0){var o=i?r:\"highWaterMark\";throw new n(o,a)}return Math.floor(a)}return e.objectMode?16:16*1024}e.exports={getHighWaterMark:getHighWaterMark}},678:function(e,t,r){e.exports=r(781)},726:function(e,t,r){var n=r(781);if(process.env.READABLE_STREAM===\"disable\"&&n){e.exports=n.Readable;Object.assign(e.exports,n);e.exports.Stream=n}else{t=e.exports=r(709);t.Stream=n||t;t.Readable=t;t.Writable=r(337);t.Duplex=r(403);t.Transform=r(170);t.PassThrough=r(889);t.finished=r(698);t.pipeline=r(442)}},55:function(e,t,r){var n=r(300);var i=n.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow){e.exports=n}else{copyProps(n,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return i(e,t,r)}SafeBuffer.prototype=Object.create(i.prototype);copyProps(i,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return i(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var n=i(e);if(t!==undefined){if(typeof r===\"string\"){n.fill(t,r)}else{n.fill(t)}}else{n.fill(0)}return n};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n.SlowBuffer(e)}},813:function(e,t,r){var n=r(450);var i=r(254);var a=r(911);var o=r(523);var s=r(310);var f=t;f.request=function(e,t){if(typeof e===\"string\")e=s.parse(e);else e=a(e);var r=__webpack_require__.g.location.protocol.search(/^https?:$/)===-1?\"http:\":\"\";var i=e.protocol||r;var o=e.hostname||e.host;var f=e.port;var l=e.path||\"/\";if(o&&o.indexOf(\":\")!==-1)o=\"[\"+o+\"]\";e.url=(o?i+\"//\"+o:\"\")+(f?\":\"+f:\"\")+l;e.method=(e.method||\"GET\").toUpperCase();e.headers=e.headers||{};var u=new n(e);if(t)u.on(\"response\",t);return u};f.get=function get(e,t){var r=f.request(e,t);r.end();return r};f.ClientRequest=n;f.IncomingMessage=i.IncomingMessage;f.Agent=function(){};f.Agent.defaultMaxSockets=4;f.globalAgent=new f.Agent;f.STATUS_CODES=o;f.METHODS=[\"CHECKOUT\",\"CONNECT\",\"COPY\",\"DELETE\",\"GET\",\"HEAD\",\"LOCK\",\"M-SEARCH\",\"MERGE\",\"MKACTIVITY\",\"MKCOL\",\"MOVE\",\"NOTIFY\",\"OPTIONS\",\"PATCH\",\"POST\",\"PROPFIND\",\"PROPPATCH\",\"PURGE\",\"PUT\",\"REPORT\",\"SEARCH\",\"SUBSCRIBE\",\"TRACE\",\"UNLOCK\",\"UNSUBSCRIBE\"]},301:function(e,t){t.fetch=isFunction(__webpack_require__.g.fetch)&&isFunction(__webpack_require__.g.ReadableStream);t.writableStream=isFunction(__webpack_require__.g.WritableStream);t.abortController=isFunction(__webpack_require__.g.AbortController);var r;function getXHR(){if(r!==undefined)return r;if(__webpack_require__.g.XMLHttpRequest){r=new __webpack_require__.g.XMLHttpRequest;try{r.open(\"GET\",__webpack_require__.g.XDomainRequest?\"/\":\"https://example.com\")}catch(e){r=null}}else{r=null}return r}function checkTypeSupport(e){var t=getXHR();if(!t)return false;try{t.responseType=e;return t.responseType===e}catch(e){}return false}t.arraybuffer=t.fetch||checkTypeSupport(\"arraybuffer\");t.msstream=!t.fetch&&checkTypeSupport(\"ms-stream\");t.mozchunkedarraybuffer=!t.fetch&&checkTypeSupport(\"moz-chunked-arraybuffer\");t.overrideMimeType=t.fetch||(getXHR()?isFunction(getXHR().overrideMimeType):false);function isFunction(e){return typeof e===\"function\"}r=null},450:function(e,t,r){var n=r(301);var i=r(782);var a=r(254);var o=r(726);var s=a.IncomingMessage;var f=a.readyStates;function decideMode(e,t){if(n.fetch&&t){return\"fetch\"}else if(n.mozchunkedarraybuffer){return\"moz-chunked-arraybuffer\"}else if(n.msstream){return\"ms-stream\"}else if(n.arraybuffer&&e){return\"arraybuffer\"}else{return\"text\"}}var l=e.exports=function(e){var t=this;o.Writable.call(t);t._opts=e;t._body=[];t._headers={};if(e.auth)t.setHeader(\"Authorization\",\"Basic \"+Buffer.from(e.auth).toString(\"base64\"));Object.keys(e.headers).forEach((function(r){t.setHeader(r,e.headers[r])}));var r;var i=true;if(e.mode===\"disable-fetch\"||\"requestTimeout\"in e&&!n.abortController){i=false;r=true}else if(e.mode===\"prefer-streaming\"){r=false}else if(e.mode===\"allow-wrong-content-type\"){r=!n.overrideMimeType}else if(!e.mode||e.mode===\"default\"||e.mode===\"prefer-fast\"){r=true}else{throw new Error(\"Invalid value for opts.mode\")}t._mode=decideMode(r,i);t._fetchTimer=null;t.on(\"finish\",(function(){t._onFinish()}))};i(l,o.Writable);l.prototype.setHeader=function(e,t){var r=this;var n=e.toLowerCase();if(u.indexOf(n)!==-1)return;r._headers[n]={name:e,value:t}};l.prototype.getHeader=function(e){var t=this._headers[e.toLowerCase()];if(t)return t.value;return null};l.prototype.removeHeader=function(e){var t=this;delete t._headers[e.toLowerCase()]};l.prototype._onFinish=function(){var e=this;if(e._destroyed)return;var t=e._opts;var r=e._headers;var i=null;if(t.method!==\"GET\"&&t.method!==\"HEAD\"){i=new Blob(e._body,{type:(r[\"content-type\"]||{}).value||\"\"})}var a=[];Object.keys(r).forEach((function(e){var t=r[e].name;var n=r[e].value;if(Array.isArray(n)){n.forEach((function(e){a.push([t,e])}))}else{a.push([t,n])}}));if(e._mode===\"fetch\"){var o=null;if(n.abortController){var s=new AbortController;o=s.signal;e._fetchAbortController=s;if(\"requestTimeout\"in t&&t.requestTimeout!==0){e._fetchTimer=__webpack_require__.g.setTimeout((function(){e.emit(\"requestTimeout\");if(e._fetchAbortController)e._fetchAbortController.abort()}),t.requestTimeout)}}__webpack_require__.g.fetch(e._opts.url,{method:e._opts.method,headers:a,body:i||undefined,mode:\"cors\",credentials:t.withCredentials?\"include\":\"same-origin\",signal:o}).then((function(t){e._fetchResponse=t;e._connect()}),(function(t){__webpack_require__.g.clearTimeout(e._fetchTimer);if(!e._destroyed)e.emit(\"error\",t)}))}else{var l=e._xhr=new __webpack_require__.g.XMLHttpRequest;try{l.open(e._opts.method,e._opts.url,true)}catch(t){process.nextTick((function(){e.emit(\"error\",t)}));return}if(\"responseType\"in l)l.responseType=e._mode;if(\"withCredentials\"in l)l.withCredentials=!!t.withCredentials;if(e._mode===\"text\"&&\"overrideMimeType\"in l)l.overrideMimeType(\"text/plain; charset=x-user-defined\");if(\"requestTimeout\"in t){l.timeout=t.requestTimeout;l.ontimeout=function(){e.emit(\"requestTimeout\")}}a.forEach((function(e){l.setRequestHeader(e[0],e[1])}));e._response=null;l.onreadystatechange=function(){switch(l.readyState){case f.LOADING:case f.DONE:e._onXHRProgress();break}};if(e._mode===\"moz-chunked-arraybuffer\"){l.onprogress=function(){e._onXHRProgress()}}l.onerror=function(){if(e._destroyed)return;e.emit(\"error\",new Error(\"XHR error\"))};try{l.send(i)}catch(t){process.nextTick((function(){e.emit(\"error\",t)}));return}}};function statusValid(e){try{var t=e.status;return t!==null&&t!==0}catch(e){return false}}l.prototype._onXHRProgress=function(){var e=this;if(!statusValid(e._xhr)||e._destroyed)return;if(!e._response)e._connect();e._response._onXHRProgress()};l.prototype._connect=function(){var e=this;if(e._destroyed)return;e._response=new s(e._xhr,e._fetchResponse,e._mode,e._fetchTimer);e._response.on(\"error\",(function(t){e.emit(\"error\",t)}));e.emit(\"response\",e._response)};l.prototype._write=function(e,t,r){var n=this;n._body.push(e);r()};l.prototype.abort=l.prototype.destroy=function(){var e=this;e._destroyed=true;__webpack_require__.g.clearTimeout(e._fetchTimer);if(e._response)e._response._destroyed=true;if(e._xhr)e._xhr.abort();else if(e._fetchAbortController)e._fetchAbortController.abort()};l.prototype.end=function(e,t,r){var n=this;if(typeof e===\"function\"){r=e;e=undefined}o.Writable.prototype.end.call(n,e,t,r)};l.prototype.flushHeaders=function(){};l.prototype.setTimeout=function(){};l.prototype.setNoDelay=function(){};l.prototype.setSocketKeepAlive=function(){};var u=[\"accept-charset\",\"accept-encoding\",\"access-control-request-headers\",\"access-control-request-method\",\"connection\",\"content-length\",\"cookie\",\"cookie2\",\"date\",\"dnt\",\"expect\",\"host\",\"keep-alive\",\"origin\",\"referer\",\"te\",\"trailer\",\"transfer-encoding\",\"upgrade\",\"via\"]},254:function(e,t,r){var n=r(301);var i=r(782);var a=r(726);var o=t.readyStates={UNSENT:0,OPENED:1,HEADERS_RECEIVED:2,LOADING:3,DONE:4};var s=t.IncomingMessage=function(e,t,r,i){var o=this;a.Readable.call(o);o._mode=r;o.headers={};o.rawHeaders=[];o.trailers={};o.rawTrailers=[];o.on(\"end\",(function(){process.nextTick((function(){o.emit(\"close\")}))}));if(r===\"fetch\"){o._fetchResponse=t;o.url=t.url;o.statusCode=t.status;o.statusMessage=t.statusText;t.headers.forEach((function(e,t){o.headers[t.toLowerCase()]=e;o.rawHeaders.push(t,e)}));if(n.writableStream){var s=new WritableStream({write:function(e){return new Promise((function(t,r){if(o._destroyed){r()}else if(o.push(Buffer.from(e))){t()}else{o._resumeFetch=t}}))},close:function(){__webpack_require__.g.clearTimeout(i);if(!o._destroyed)o.push(null)},abort:function(e){if(!o._destroyed)o.emit(\"error\",e)}});try{t.body.pipeTo(s).catch((function(e){__webpack_require__.g.clearTimeout(i);if(!o._destroyed)o.emit(\"error\",e)}));return}catch(e){}}var f=t.body.getReader();function read(){f.read().then((function(e){if(o._destroyed)return;if(e.done){__webpack_require__.g.clearTimeout(i);o.push(null);return}o.push(Buffer.from(e.value));read()})).catch((function(e){__webpack_require__.g.clearTimeout(i);if(!o._destroyed)o.emit(\"error\",e)}))}read()}else{o._xhr=e;o._pos=0;o.url=e.responseURL;o.statusCode=e.status;o.statusMessage=e.statusText;var l=e.getAllResponseHeaders().split(/\\r?\\n/);l.forEach((function(e){var t=e.match(/^([^:]+):\\s*(.*)/);if(t){var r=t[1].toLowerCase();if(r===\"set-cookie\"){if(o.headers[r]===undefined){o.headers[r]=[]}o.headers[r].push(t[2])}else if(o.headers[r]!==undefined){o.headers[r]+=\", \"+t[2]}else{o.headers[r]=t[2]}o.rawHeaders.push(t[1],t[2])}}));o._charset=\"x-user-defined\";if(!n.overrideMimeType){var u=o.rawHeaders[\"mime-type\"];if(u){var d=u.match(/;\\s*charset=([^;])(;|$)/);if(d){o._charset=d[1].toLowerCase()}}if(!o._charset)o._charset=\"utf-8\"}}};i(s,a.Readable);s.prototype._read=function(){var e=this;var t=e._resumeFetch;if(t){e._resumeFetch=null;t()}};s.prototype._onXHRProgress=function(){var e=this;var t=e._xhr;var r=null;switch(e._mode){case\"text\":r=t.responseText;if(r.length>e._pos){var n=r.substr(e._pos);if(e._charset===\"x-user-defined\"){var i=Buffer.alloc(n.length);for(var a=0;a<n.length;a++)i[a]=n.charCodeAt(a)&255;e.push(i)}else{e.push(n,e._charset)}e._pos=r.length}break;case\"arraybuffer\":if(t.readyState!==o.DONE||!t.response)break;r=t.response;e.push(Buffer.from(new Uint8Array(r)));break;case\"moz-chunked-arraybuffer\":r=t.response;if(t.readyState!==o.LOADING||!r)break;e.push(Buffer.from(new Uint8Array(r)));break;case\"ms-stream\":r=t.response;if(t.readyState!==o.LOADING)break;var s=new __webpack_require__.g.MSStreamReader;s.onprogress=function(){if(s.result.byteLength>e._pos){e.push(Buffer.from(new Uint8Array(s.result.slice(e._pos))));e._pos=s.result.byteLength}};s.onload=function(){e.push(null)};s.readAsArrayBuffer(r);break}if(e._xhr.readyState===o.DONE&&e._mode!==\"ms-stream\"){e.push(null)}}},704:function(e,t,r){\"use strict\";var n=r(55).Buffer;var i=n.isEncoding||function(e){e=\"\"+e;switch(e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return true;default:return false}};function _normalizeEncoding(e){if(!e)return\"utf8\";var t;while(true){switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase();t=true}}}function normalizeEncoding(e){var t=_normalizeEncoding(e);if(typeof t!==\"string\"&&(n.isEncoding===i||!i(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}t.s=StringDecoder;function StringDecoder(e){this.encoding=normalizeEncoding(e);var t;switch(this.encoding){case\"utf16le\":this.text=utf16Text;this.end=utf16End;t=4;break;case\"utf8\":this.fillLast=utf8FillLast;t=4;break;case\"base64\":this.text=base64Text;this.end=base64End;t=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastNeed=0;this.lastTotal=0;this.lastChar=n.allocUnsafe(t)}StringDecoder.prototype.write=function(e){if(e.length===0)return\"\";var t;var r;if(this.lastNeed){t=this.fillLast(e);if(t===undefined)return\"\";r=this.lastNeed;this.lastNeed=0}else{r=0}if(r<e.length)return t?t+this.text(e,r):this.text(e,r);return t||\"\"};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(e){if(this.lastNeed<=e.length){e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length);this.lastNeed-=e.length};function utf8CheckByte(e){if(e<=127)return 0;else if(e>>5===6)return 2;else if(e>>4===14)return 3;else if(e>>3===30)return 4;return e>>6===2?-1:-2}function utf8CheckIncomplete(e,t,r){var n=t.length-1;if(n<r)return 0;var i=utf8CheckByte(t[n]);if(i>=0){if(i>0)e.lastNeed=i-1;return i}if(--n<r||i===-2)return 0;i=utf8CheckByte(t[n]);if(i>=0){if(i>0)e.lastNeed=i-2;return i}if(--n<r||i===-2)return 0;i=utf8CheckByte(t[n]);if(i>=0){if(i>0){if(i===2)i=0;else e.lastNeed=i-3}return i}return 0}function utf8CheckExtraBytes(e,t,r){if((t[0]&192)!==128){e.lastNeed=0;return\"�\"}if(e.lastNeed>1&&t.length>1){if((t[1]&192)!==128){e.lastNeed=1;return\"�\"}if(e.lastNeed>2&&t.length>2){if((t[2]&192)!==128){e.lastNeed=2;return\"�\"}}}}function utf8FillLast(e){var t=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,e,t);if(r!==undefined)return r;if(this.lastNeed<=e.length){e.copy(this.lastChar,t,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,t,0,e.length);this.lastNeed-=e.length}function utf8Text(e,t){var r=utf8CheckIncomplete(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);e.copy(this.lastChar,0,n);return e.toString(\"utf8\",t,n)}function utf8End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+\"�\";return t}function utf16Text(e,t){if((e.length-t)%2===0){var r=e.toString(\"utf16le\",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1];return r.slice(0,-1)}}return r}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=e[e.length-1];return e.toString(\"utf16le\",t,e.length-1)}function utf16End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function base64Text(e,t){var r=(e.length-t)%3;if(r===0)return e.toString(\"base64\",t);this.lastNeed=3-r;this.lastTotal=3;if(r===1){this.lastChar[0]=e[e.length-1]}else{this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1]}return e.toString(\"base64\",t,e.length-r)}function base64End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+this.lastChar.toString(\"base64\",0,3-this.lastNeed);return t}function simpleWrite(e){return e.toString(this.encoding)}function simpleEnd(e){return e&&e.length?this.write(e):\"\"}},769:function(e){e.exports=deprecate;function deprecate(e,t){if(config(\"noDeprecation\")){return e}var r=false;function deprecated(){if(!r){if(config(\"throwDeprecation\")){throw new Error(t)}else if(config(\"traceDeprecation\")){console.trace(t)}else{console.warn(t)}r=true}return e.apply(this,arguments)}return deprecated}function config(e){try{if(!__webpack_require__.g.localStorage)return false}catch(e){return false}var t=__webpack_require__.g.localStorage[e];if(null==t)return false;return String(t).toLowerCase()===\"true\"}},911:function(e){e.exports=extend;var t=Object.prototype.hasOwnProperty;function extend(){var e={};for(var r=0;r<arguments.length;r++){var n=arguments[r];for(var i in n){if(t.call(n,i)){e[i]=n[i]}}}return e}},300:function(e){\"use strict\";e.exports=__webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")},361:function(e){\"use strict\";e.exports=__webpack_require__(/*! events */ \"./node_modules/events/events.js\")},781:function(e){\"use strict\";e.exports=__webpack_require__(/*! stream */ \"./node_modules/next/dist/compiled/stream-browserify/index.js\")},310:function(e){\"use strict\";e.exports=__webpack_require__(/*! url */ \"./node_modules/next/dist/compiled/native-url/index.js\")},837:function(e){\"use strict\";e.exports=__webpack_require__(/*! util */ \"./node_modules/util/util.js\")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var a=true;try{e[r](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(813);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/stream-http/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/vm-browserify/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/vm-browserify/index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var __webpack_modules__={950:function(__unused_webpack_module,exports){var indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);else for(var r=0;r<e.length;r++){if(e[r]===t)return r}return-1};var Object_keys=function(e){if(Object.keys)return Object.keys(e);else{var t=[];for(var r in e)t.push(r);return t}};var forEach=function(e,t){if(e.forEach)return e.forEach(t);else for(var r=0;r<e.length;r++){t(e[r],r,e)}};var defineProp=function(){try{Object.defineProperty({},\"_\",{});return function(e,t,r){Object.defineProperty(e,t,{writable:true,enumerable:false,configurable:true,value:r})}}catch(e){return function(e,t,r){e[t]=r}}}();var globals=[\"Array\",\"Boolean\",\"Date\",\"Error\",\"EvalError\",\"Function\",\"Infinity\",\"JSON\",\"Math\",\"NaN\",\"Number\",\"Object\",\"RangeError\",\"ReferenceError\",\"RegExp\",\"String\",\"SyntaxError\",\"TypeError\",\"URIError\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"undefined\",\"unescape\"];function Context(){}Context.prototype={};var Script=exports.Script=function NodeScript(e){if(!(this instanceof Script))return new Script(e);this.code=e};Script.prototype.runInContext=function(e){if(!(e instanceof Context)){throw new TypeError(\"needs a 'context' argument.\")}var t=document.createElement(\"iframe\");if(!t.style)t.style={};t.style.display=\"none\";document.body.appendChild(t);var r=t.contentWindow;var n=r.eval,o=r.execScript;if(!n&&o){o.call(r,\"null\");n=r.eval}forEach(Object_keys(e),(function(t){r[t]=e[t]}));forEach(globals,(function(t){if(e[t]){r[t]=e[t]}}));var c=Object_keys(r);var i=n.call(r,this.code);forEach(Object_keys(r),(function(t){if(t in e||indexOf(c,t)===-1){e[t]=r[t]}}));forEach(globals,(function(t){if(!(t in e)){defineProp(e,t,r[t])}}));document.body.removeChild(t);return i};Script.prototype.runInThisContext=function(){return eval(this.code)};Script.prototype.runInNewContext=function(e){var t=Script.createContext(e);var r=this.runInContext(t);if(e){forEach(Object_keys(t),(function(r){e[r]=t[r]}))}return r};forEach(Object_keys(Script.prototype),(function(e){exports[e]=Script[e]=function(t){var r=Script(t);return r[e].apply(r,[].slice.call(arguments,1))}}));exports.isContext=function(e){return e instanceof Context};exports.createScript=function(e){return exports.Script(e)};exports.createContext=Script.createContext=function(e){var t=new Context;if(typeof e===\"object\"){forEach(Object_keys(e),(function(r){t[r]=e[r]}))}return t}}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var __nested_webpack_exports__={};__webpack_modules__[950](0,__nested_webpack_exports__);module.exports=__nested_webpack_exports__})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3ZtLWJyb3dzZXJpZnkvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLFlBQVkseUJBQXlCLDhDQUE4QywwQkFBMEIsaUNBQWlDLGlCQUFpQixXQUFXLEtBQUsscUJBQXFCLFVBQVUsNEJBQTRCLHFDQUFxQyxLQUFLLFNBQVMseUJBQXlCLFdBQVcsMEJBQTBCLGlDQUFpQyxpQkFBaUIsV0FBVyxLQUFLLGNBQWMsMEJBQTBCLElBQUksd0JBQXdCLE9BQU8sRUFBRSx1QkFBdUIsMkJBQTJCLHlEQUF5RCxHQUFHLFNBQVMsdUJBQXVCLFNBQVMsR0FBRyxnV0FBZ1csb0JBQW9CLHFCQUFxQixpREFBaUQsa0RBQWtELGFBQWEsMENBQTBDLDRCQUE0QixtREFBbUQsdUNBQXVDLHVCQUF1Qix1QkFBdUIsNkJBQTZCLHNCQUFzQiw0QkFBNEIsVUFBVSxpQkFBaUIsU0FBUyxvQ0FBb0MsVUFBVSxHQUFHLDZCQUE2QixTQUFTLFdBQVcsR0FBRyxxQkFBcUIsMEJBQTBCLG9DQUFvQyw4QkFBOEIsV0FBVyxHQUFHLDZCQUE2QixjQUFjLHNCQUFzQixHQUFHLDZCQUE2QixVQUFVLDZDQUE2Qyx3QkFBd0IsNkNBQTZDLDhCQUE4QiwyQkFBMkIsTUFBTSxvQ0FBb0MsVUFBVSxHQUFHLFVBQVUsbURBQW1ELGlDQUFpQyxnQkFBZ0IsaURBQWlELEdBQUcsOEJBQThCLDZCQUE2QixpQ0FBaUMsMEJBQTBCLHVEQUF1RCxrQkFBa0Isd0JBQXdCLG9DQUFvQyxVQUFVLEdBQUcsWUFBWSxtRUFBbUUsU0FBUyxLQUFLLElBQUksMEJBQW1CLElBQUksMkJBQTJCLDBCQUFtQixFQUFFLGVBQWUsMEJBQW1CLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC92bS1icm93c2VyaWZ5L2luZGV4LmpzPzUwMWYiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7dmFyIF9fd2VicGFja19tb2R1bGVzX189ezk1MDpmdW5jdGlvbihfX3VudXNlZF93ZWJwYWNrX21vZHVsZSxleHBvcnRzKXt2YXIgaW5kZXhPZj1mdW5jdGlvbihlLHQpe2lmKGUuaW5kZXhPZilyZXR1cm4gZS5pbmRleE9mKHQpO2Vsc2UgZm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe2lmKGVbcl09PT10KXJldHVybiByfXJldHVybi0xfTt2YXIgT2JqZWN0X2tleXM9ZnVuY3Rpb24oZSl7aWYoT2JqZWN0LmtleXMpcmV0dXJuIE9iamVjdC5rZXlzKGUpO2Vsc2V7dmFyIHQ9W107Zm9yKHZhciByIGluIGUpdC5wdXNoKHIpO3JldHVybiB0fX07dmFyIGZvckVhY2g9ZnVuY3Rpb24oZSx0KXtpZihlLmZvckVhY2gpcmV0dXJuIGUuZm9yRWFjaCh0KTtlbHNlIGZvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt0KGVbcl0scixlKX19O3ZhciBkZWZpbmVQcm9wPWZ1bmN0aW9uKCl7dHJ5e09iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSxcIl9cIix7fSk7cmV0dXJuIGZ1bmN0aW9uKGUsdCxyKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt3cml0YWJsZTp0cnVlLGVudW1lcmFibGU6ZmFsc2UsY29uZmlndXJhYmxlOnRydWUsdmFsdWU6cn0pfX1jYXRjaChlKXtyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe2VbdF09cn19fSgpO3ZhciBnbG9iYWxzPVtcIkFycmF5XCIsXCJCb29sZWFuXCIsXCJEYXRlXCIsXCJFcnJvclwiLFwiRXZhbEVycm9yXCIsXCJGdW5jdGlvblwiLFwiSW5maW5pdHlcIixcIkpTT05cIixcIk1hdGhcIixcIk5hTlwiLFwiTnVtYmVyXCIsXCJPYmplY3RcIixcIlJhbmdlRXJyb3JcIixcIlJlZmVyZW5jZUVycm9yXCIsXCJSZWdFeHBcIixcIlN0cmluZ1wiLFwiU3ludGF4RXJyb3JcIixcIlR5cGVFcnJvclwiLFwiVVJJRXJyb3JcIixcImRlY29kZVVSSVwiLFwiZGVjb2RlVVJJQ29tcG9uZW50XCIsXCJlbmNvZGVVUklcIixcImVuY29kZVVSSUNvbXBvbmVudFwiLFwiZXNjYXBlXCIsXCJldmFsXCIsXCJpc0Zpbml0ZVwiLFwiaXNOYU5cIixcInBhcnNlRmxvYXRcIixcInBhcnNlSW50XCIsXCJ1bmRlZmluZWRcIixcInVuZXNjYXBlXCJdO2Z1bmN0aW9uIENvbnRleHQoKXt9Q29udGV4dC5wcm90b3R5cGU9e307dmFyIFNjcmlwdD1leHBvcnRzLlNjcmlwdD1mdW5jdGlvbiBOb2RlU2NyaXB0KGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFNjcmlwdCkpcmV0dXJuIG5ldyBTY3JpcHQoZSk7dGhpcy5jb2RlPWV9O1NjcmlwdC5wcm90b3R5cGUucnVuSW5Db250ZXh0PWZ1bmN0aW9uKGUpe2lmKCEoZSBpbnN0YW5jZW9mIENvbnRleHQpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwibmVlZHMgYSAnY29udGV4dCcgYXJndW1lbnQuXCIpfXZhciB0PWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7aWYoIXQuc3R5bGUpdC5zdHlsZT17fTt0LnN0eWxlLmRpc3BsYXk9XCJub25lXCI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0KTt2YXIgcj10LmNvbnRlbnRXaW5kb3c7dmFyIG49ci5ldmFsLG89ci5leGVjU2NyaXB0O2lmKCFuJiZvKXtvLmNhbGwocixcIm51bGxcIik7bj1yLmV2YWx9Zm9yRWFjaChPYmplY3Rfa2V5cyhlKSwoZnVuY3Rpb24odCl7clt0XT1lW3RdfSkpO2ZvckVhY2goZ2xvYmFscywoZnVuY3Rpb24odCl7aWYoZVt0XSl7clt0XT1lW3RdfX0pKTt2YXIgYz1PYmplY3Rfa2V5cyhyKTt2YXIgaT1uLmNhbGwocix0aGlzLmNvZGUpO2ZvckVhY2goT2JqZWN0X2tleXMociksKGZ1bmN0aW9uKHQpe2lmKHQgaW4gZXx8aW5kZXhPZihjLHQpPT09LTEpe2VbdF09clt0XX19KSk7Zm9yRWFjaChnbG9iYWxzLChmdW5jdGlvbih0KXtpZighKHQgaW4gZSkpe2RlZmluZVByb3AoZSx0LHJbdF0pfX0pKTtkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKHQpO3JldHVybiBpfTtTY3JpcHQucHJvdG90eXBlLnJ1bkluVGhpc0NvbnRleHQ9ZnVuY3Rpb24oKXtyZXR1cm4gZXZhbCh0aGlzLmNvZGUpfTtTY3JpcHQucHJvdG90eXBlLnJ1bkluTmV3Q29udGV4dD1mdW5jdGlvbihlKXt2YXIgdD1TY3JpcHQuY3JlYXRlQ29udGV4dChlKTt2YXIgcj10aGlzLnJ1bkluQ29udGV4dCh0KTtpZihlKXtmb3JFYWNoKE9iamVjdF9rZXlzKHQpLChmdW5jdGlvbihyKXtlW3JdPXRbcl19KSl9cmV0dXJuIHJ9O2ZvckVhY2goT2JqZWN0X2tleXMoU2NyaXB0LnByb3RvdHlwZSksKGZ1bmN0aW9uKGUpe2V4cG9ydHNbZV09U2NyaXB0W2VdPWZ1bmN0aW9uKHQpe3ZhciByPVNjcmlwdCh0KTtyZXR1cm4gcltlXS5hcHBseShyLFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKX19KSk7ZXhwb3J0cy5pc0NvbnRleHQ9ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBDb250ZXh0fTtleHBvcnRzLmNyZWF0ZVNjcmlwdD1mdW5jdGlvbihlKXtyZXR1cm4gZXhwb3J0cy5TY3JpcHQoZSl9O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1TY3JpcHQuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihlKXt2YXIgdD1uZXcgQ29udGV4dDtpZih0eXBlb2YgZT09PVwib2JqZWN0XCIpe2ZvckVhY2goT2JqZWN0X2tleXMoZSksKGZ1bmN0aW9uKHIpe3Rbcl09ZVtyXX0pKX1yZXR1cm4gdH19fTtpZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIF9fd2VicGFja19leHBvcnRzX189e307X193ZWJwYWNrX21vZHVsZXNfX1s5NTBdKDAsX193ZWJwYWNrX2V4cG9ydHNfXyk7bW9kdWxlLmV4cG9ydHM9X193ZWJwYWNrX2V4cG9ydHNfX30pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/vm-browserify/index.js\n"));

/***/ }),

/***/ "./node_modules/node-fetch/browser.js":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports[\"default\"] = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbm9kZS1mZXRjaC9icm93c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEMsc0NBQXNDO0FBQ3RDLHNDQUFzQztBQUN0QztBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDLGtCQUFlO0FBQ2hCOztBQUVBLGVBQWU7QUFDZixlQUFlO0FBQ2YsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWZldGNoL2Jyb3dzZXIuanM/OWU3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gcmVmOiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1nbG9iYWxcbnZhciBnZXRHbG9iYWwgPSBmdW5jdGlvbiAoKSB7XG5cdC8vIHRoZSBvbmx5IHJlbGlhYmxlIG1lYW5zIHRvIGdldCB0aGUgZ2xvYmFsIG9iamVjdCBpc1xuXHQvLyBgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKWBcblx0Ly8gSG93ZXZlciwgdGhpcyBjYXVzZXMgQ1NQIHZpb2xhdGlvbnMgaW4gQ2hyb21lIGFwcHMuXG5cdGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIHNlbGY7IH1cblx0aWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiB3aW5kb3c7IH1cblx0aWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiBnbG9iYWw7IH1cblx0dGhyb3cgbmV3IEVycm9yKCd1bmFibGUgdG8gbG9jYXRlIGdsb2JhbCBvYmplY3QnKTtcbn1cblxudmFyIGdsb2JhbCA9IGdldEdsb2JhbCgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBnbG9iYWwuZmV0Y2g7XG5cbi8vIE5lZWRlZCBmb3IgVHlwZVNjcmlwdCBhbmQgV2VicGFjay5cbmlmIChnbG9iYWwuZmV0Y2gpIHtcblx0ZXhwb3J0cy5kZWZhdWx0ID0gZ2xvYmFsLmZldGNoLmJpbmQoZ2xvYmFsKTtcbn1cblxuZXhwb3J0cy5IZWFkZXJzID0gZ2xvYmFsLkhlYWRlcnM7XG5leHBvcnRzLlJlcXVlc3QgPSBnbG9iYWwuUmVxdWVzdDtcbmV4cG9ydHMuUmVzcG9uc2UgPSBnbG9iYWwuUmVzcG9uc2U7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/node-fetch/browser.js\n"));

/***/ }),

/***/ "./node_modules/randombytes/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/randombytes/browser.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/process/browser.js\");\n\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"./node_modules/safe-buffer/index.js\").Buffer)\nvar crypto = __webpack_require__.g.crypto || __webpack_require__.g.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmFuZG9tYnl0ZXMvYnJvd3Nlci5qcyIsIm1hcHBpbmdzIjoiO0FBQVk7O0FBRVo7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSxzRkFBNkI7QUFDMUMsYUFBYSxxQkFBTSxXQUFXLHFCQUFNOztBQUVwQztBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBLG1CQUFtQjtBQUNuQiw0QkFBNEI7QUFDNUI7QUFDQSw4QkFBOEIsa0JBQWtCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsT0FBTztBQUNsQjtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yYW5kb21ieXRlcy9icm93c2VyLmpzPzdiOGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbi8vIGxpbWl0IG9mIENyeXB0by5nZXRSYW5kb21WYWx1ZXMoKVxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0NyeXB0by9nZXRSYW5kb21WYWx1ZXNcbnZhciBNQVhfQllURVMgPSA2NTUzNlxuXG4vLyBOb2RlIHN1cHBvcnRzIHJlcXVlc3RpbmcgdXAgdG8gdGhpcyBudW1iZXIgb2YgYnl0ZXNcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ub2RlanMvbm9kZS9ibG9iL21hc3Rlci9saWIvaW50ZXJuYWwvY3J5cHRvL3JhbmRvbS5qcyNMNDhcbnZhciBNQVhfVUlOVDMyID0gNDI5NDk2NzI5NVxuXG5mdW5jdGlvbiBvbGRCcm93c2VyICgpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdTZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBicm93c2VyLlxcblVzZSBDaHJvbWUsIEZpcmVmb3ggb3IgSW50ZXJuZXQgRXhwbG9yZXIgMTEnKVxufVxuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXJcbnZhciBjcnlwdG8gPSBnbG9iYWwuY3J5cHRvIHx8IGdsb2JhbC5tc0NyeXB0b1xuXG5pZiAoY3J5cHRvICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByYW5kb21CeXRlc1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBvbGRCcm93c2VyXG59XG5cbmZ1bmN0aW9uIHJhbmRvbUJ5dGVzIChzaXplLCBjYikge1xuICAvLyBwaGFudG9tanMgbmVlZHMgdG8gdGhyb3dcbiAgaWYgKHNpemUgPiBNQVhfVUlOVDMyKSB0aHJvdyBuZXcgUmFuZ2VFcnJvcigncmVxdWVzdGVkIHRvbyBtYW55IHJhbmRvbSBieXRlcycpXG5cbiAgdmFyIGJ5dGVzID0gQnVmZmVyLmFsbG9jVW5zYWZlKHNpemUpXG5cbiAgaWYgKHNpemUgPiAwKSB7ICAvLyBnZXRSYW5kb21WYWx1ZXMgZmFpbHMgb24gSUUgaWYgc2l6ZSA9PSAwXG4gICAgaWYgKHNpemUgPiBNQVhfQllURVMpIHsgLy8gdGhpcyBpcyB0aGUgbWF4IGJ5dGVzIGNyeXB0by5nZXRSYW5kb21WYWx1ZXNcbiAgICAgIC8vIGNhbiBkbyBhdCBvbmNlIHNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvd2luZG93LmNyeXB0by5nZXRSYW5kb21WYWx1ZXNcbiAgICAgIGZvciAodmFyIGdlbmVyYXRlZCA9IDA7IGdlbmVyYXRlZCA8IHNpemU7IGdlbmVyYXRlZCArPSBNQVhfQllURVMpIHtcbiAgICAgICAgLy8gYnVmZmVyLnNsaWNlIGF1dG9tYXRpY2FsbHkgY2hlY2tzIGlmIHRoZSBlbmQgaXMgcGFzdCB0aGUgZW5kIG9mXG4gICAgICAgIC8vIHRoZSBidWZmZXIgc28gd2UgZG9uJ3QgaGF2ZSB0byBoZXJlXG4gICAgICAgIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYnl0ZXMuc2xpY2UoZ2VuZXJhdGVkLCBnZW5lcmF0ZWQgKyBNQVhfQllURVMpKVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGJ5dGVzKVxuICAgIH1cbiAgfVxuXG4gIGlmICh0eXBlb2YgY2IgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICBjYihudWxsLCBieXRlcylcbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIGJ5dGVzXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/randombytes/browser.js\n"));

/***/ }),

/***/ "./node_modules/secp256k1/elliptic.js":
/*!********************************************!*\
  !*** ./node_modules/secp256k1/elliptic.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./lib */ \"./node_modules/secp256k1/lib/index.js\")(__webpack_require__(/*! ./lib/elliptic */ \"./node_modules/secp256k1/lib/elliptic.js\"))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2VjcDI1NmsxL2VsbGlwdGljLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQixtQkFBTyxDQUFDLG9EQUFPLEVBQUUsbUJBQU8sQ0FBQyxnRUFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NlY3AyNTZrMS9lbGxpcHRpYy5qcz80NGE5Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWInKShyZXF1aXJlKCcuL2xpYi9lbGxpcHRpYycpKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/secp256k1/elliptic.js\n"));

/***/ }),

/***/ "./node_modules/secp256k1/lib/elliptic.js":
/*!************************************************!*\
  !*** ./node_modules/secp256k1/lib/elliptic.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const EC = (__webpack_require__(/*! elliptic */ \"./node_modules/elliptic/lib/elliptic.js\").ec)\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/secp256k1/lib/elliptic.js\n"));

/***/ }),

/***/ "./node_modules/secp256k1/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/secp256k1/lib/index.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/secp256k1/lib/index.js\n"));

/***/ }),

/***/ "./node_modules/setprototypeof/index.js":
/*!**********************************************!*\
  !*** ./node_modules/setprototypeof/index.js ***!
  \**********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/* eslint no-proto: 0 */\nmodule.exports = Object.setPrototypeOf || ({ __proto__: [] } instanceof Array ? setProtoOf : mixinProperties)\n\nfunction setProtoOf (obj, proto) {\n  obj.__proto__ = proto\n  return obj\n}\n\nfunction mixinProperties (obj, proto) {\n  for (var prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      obj[prop] = proto[prop]\n    }\n  }\n  return obj\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc2V0cHJvdG90eXBlb2YvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQVk7QUFDWjtBQUNBLDZDQUE2QyxnQkFBZ0I7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NldHByb3RvdHlwZW9mL2luZGV4LmpzP2NjM2IiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG4vKiBlc2xpbnQgbm8tcHJvdG86IDAgKi9cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ID8gc2V0UHJvdG9PZiA6IG1peGluUHJvcGVydGllcylcblxuZnVuY3Rpb24gc2V0UHJvdG9PZiAob2JqLCBwcm90bykge1xuICBvYmouX19wcm90b19fID0gcHJvdG9cbiAgcmV0dXJuIG9ialxufVxuXG5mdW5jdGlvbiBtaXhpblByb3BlcnRpZXMgKG9iaiwgcHJvdG8pIHtcbiAgZm9yICh2YXIgcHJvcCBpbiBwcm90bykge1xuICAgIGlmICghb2JqLmhhc093blByb3BlcnR5KHByb3ApKSB7XG4gICAgICBvYmpbcHJvcF0gPSBwcm90b1twcm9wXVxuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/setprototypeof/index.js\n"));

/***/ }),

/***/ "./node_modules/statuses/index.js":
/*!****************************************!*\
  !*** ./node_modules/statuses/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = __webpack_require__(/*! ./codes.json */ \"./node_modules/statuses/codes.json\")\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = status\n\n// status code to message map\nstatus.STATUS_CODES = codes\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes)\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n}\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n}\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n}\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = []\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code]\n    var status = Number(code)\n\n    // Populate properties\n    statuses[status] = message\n    statuses[message] = status\n    statuses[message.toLowerCase()] = status\n\n    // Add to array\n    arr.push(status)\n  })\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()]\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RhdHVzZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVZOztBQUVaO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFlBQVksbUJBQU8sQ0FBQyx3REFBYzs7QUFFbEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUIsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdGF0dXNlcy9pbmRleC5qcz8wNmNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogc3RhdHVzZXNcbiAqIENvcHlyaWdodChjKSAyMDE0IEpvbmF0aGFuIE9uZ1xuICogQ29weXJpZ2h0KGMpIDIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbid1c2Ugc3RyaWN0J1xuXG4vKipcbiAqIE1vZHVsZSBkZXBlbmRlbmNpZXMuXG4gKiBAcHJpdmF0ZVxuICovXG5cbnZhciBjb2RlcyA9IHJlcXVpcmUoJy4vY29kZXMuanNvbicpXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBzdGF0dXNcblxuLy8gc3RhdHVzIGNvZGUgdG8gbWVzc2FnZSBtYXBcbnN0YXR1cy5TVEFUVVNfQ09ERVMgPSBjb2Rlc1xuXG4vLyBhcnJheSBvZiBzdGF0dXMgY29kZXNcbnN0YXR1cy5jb2RlcyA9IHBvcHVsYXRlU3RhdHVzZXNNYXAoc3RhdHVzLCBjb2RlcylcblxuLy8gc3RhdHVzIGNvZGVzIGZvciByZWRpcmVjdHNcbnN0YXR1cy5yZWRpcmVjdCA9IHtcbiAgMzAwOiB0cnVlLFxuICAzMDE6IHRydWUsXG4gIDMwMjogdHJ1ZSxcbiAgMzAzOiB0cnVlLFxuICAzMDU6IHRydWUsXG4gIDMwNzogdHJ1ZSxcbiAgMzA4OiB0cnVlXG59XG5cbi8vIHN0YXR1cyBjb2RlcyBmb3IgZW1wdHkgYm9kaWVzXG5zdGF0dXMuZW1wdHkgPSB7XG4gIDIwNDogdHJ1ZSxcbiAgMjA1OiB0cnVlLFxuICAzMDQ6IHRydWVcbn1cblxuLy8gc3RhdHVzIGNvZGVzIGZvciB3aGVuIHlvdSBzaG91bGQgcmV0cnkgdGhlIHJlcXVlc3RcbnN0YXR1cy5yZXRyeSA9IHtcbiAgNTAyOiB0cnVlLFxuICA1MDM6IHRydWUsXG4gIDUwNDogdHJ1ZVxufVxuXG4vKipcbiAqIFBvcHVsYXRlIHRoZSBzdGF0dXNlcyBtYXAgZm9yIGdpdmVuIGNvZGVzLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwb3B1bGF0ZVN0YXR1c2VzTWFwIChzdGF0dXNlcywgY29kZXMpIHtcbiAgdmFyIGFyciA9IFtdXG5cbiAgT2JqZWN0LmtleXMoY29kZXMpLmZvckVhY2goZnVuY3Rpb24gZm9yRWFjaENvZGUgKGNvZGUpIHtcbiAgICB2YXIgbWVzc2FnZSA9IGNvZGVzW2NvZGVdXG4gICAgdmFyIHN0YXR1cyA9IE51bWJlcihjb2RlKVxuXG4gICAgLy8gUG9wdWxhdGUgcHJvcGVydGllc1xuICAgIHN0YXR1c2VzW3N0YXR1c10gPSBtZXNzYWdlXG4gICAgc3RhdHVzZXNbbWVzc2FnZV0gPSBzdGF0dXNcbiAgICBzdGF0dXNlc1ttZXNzYWdlLnRvTG93ZXJDYXNlKCldID0gc3RhdHVzXG5cbiAgICAvLyBBZGQgdG8gYXJyYXlcbiAgICBhcnIucHVzaChzdGF0dXMpXG4gIH0pXG5cbiAgcmV0dXJuIGFyclxufVxuXG4vKipcbiAqIEdldCB0aGUgc3RhdHVzIGNvZGUuXG4gKlxuICogR2l2ZW4gYSBudW1iZXIsIHRoaXMgd2lsbCB0aHJvdyBpZiBpdCBpcyBub3QgYSBrbm93biBzdGF0dXNcbiAqIGNvZGUsIG90aGVyd2lzZSB0aGUgY29kZSB3aWxsIGJlIHJldHVybmVkLiBHaXZlbiBhIHN0cmluZyxcbiAqIHRoZSBzdHJpbmcgd2lsbCBiZSBwYXJzZWQgZm9yIGEgbnVtYmVyIGFuZCByZXR1cm4gdGhlIGNvZGVcbiAqIGlmIHZhbGlkLCBvdGhlcndpc2Ugd2lsbCBsb29rdXAgdGhlIGNvZGUgYXNzdW1pbmcgdGhpcyBpc1xuICogdGhlIHN0YXR1cyBtZXNzYWdlLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gY29kZVxuICogQHJldHVybnMge251bWJlcn1cbiAqIEBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBzdGF0dXMgKGNvZGUpIHtcbiAgaWYgKHR5cGVvZiBjb2RlID09PSAnbnVtYmVyJykge1xuICAgIGlmICghc3RhdHVzW2NvZGVdKSB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgc3RhdHVzIGNvZGU6ICcgKyBjb2RlKVxuICAgIHJldHVybiBjb2RlXG4gIH1cblxuICBpZiAodHlwZW9mIGNvZGUgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignY29kZSBtdXN0IGJlIGEgbnVtYmVyIG9yIHN0cmluZycpXG4gIH1cblxuICAvLyAnNDAzJ1xuICB2YXIgbiA9IHBhcnNlSW50KGNvZGUsIDEwKVxuICBpZiAoIWlzTmFOKG4pKSB7XG4gICAgaWYgKCFzdGF0dXNbbl0pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgY29kZTogJyArIG4pXG4gICAgcmV0dXJuIG5cbiAgfVxuXG4gIG4gPSBzdGF0dXNbY29kZS50b0xvd2VyQ2FzZSgpXVxuICBpZiAoIW4pIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBzdGF0dXMgbWVzc2FnZTogXCInICsgY29kZSArICdcIicpXG4gIHJldHVybiBuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/statuses/index.js\n"));

/***/ }),

/***/ "./node_modules/toidentifier/index.js":
/*!********************************************!*\
  !*** ./node_modules/toidentifier/index.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*!\n * toidentifier\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = toIdentifier\n\n/**\n * Trasform the given string into a JavaScript identifier\n *\n * @param {string} str\n * @returns {string}\n * @public\n */\n\nfunction toIdentifier (str) {\n  return str\n    .split(' ')\n    .map(function (token) {\n      return token.slice(0, 1).toUpperCase() + token.slice(1)\n    })\n    .join('')\n    .replace(/[^ _0-9a-z]/gi, '')\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdG9pZGVudGlmaWVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWE7QUFDYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90b2lkZW50aWZpZXIvaW5kZXguanM/MDJlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIHRvaWRlbnRpZmllclxuICogQ29weXJpZ2h0KGMpIDIwMTYgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovXG5cbi8qKlxuICogTW9kdWxlIGV4cG9ydHMuXG4gKiBAcHVibGljXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSB0b0lkZW50aWZpZXJcblxuLyoqXG4gKiBUcmFzZm9ybSB0aGUgZ2l2ZW4gc3RyaW5nIGludG8gYSBKYXZhU2NyaXB0IGlkZW50aWZpZXJcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICogQHB1YmxpY1xuICovXG5cbmZ1bmN0aW9uIHRvSWRlbnRpZmllciAoc3RyKSB7XG4gIHJldHVybiBzdHJcbiAgICAuc3BsaXQoJyAnKVxuICAgIC5tYXAoZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgICByZXR1cm4gdG9rZW4uc2xpY2UoMCwgMSkudG9VcHBlckNhc2UoKSArIHRva2VuLnNsaWNlKDEpXG4gICAgfSlcbiAgICAuam9pbignJylcbiAgICAucmVwbGFjZSgvW14gXzAtOWEtel0vZ2ksICcnKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/toidentifier/index.js\n"));

/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsb0JBQW9CLHNCQUFzQjtBQUMxQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMveHRlbmQvaW1tdXRhYmxlLmpzP2EwNTgiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBleHRlbmRcblxudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuZnVuY3Rpb24gZXh0ZW5kKCkge1xuICAgIHZhciB0YXJnZXQgPSB7fVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXVxuXG4gICAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXRcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/xtend/immutable.js\n"));

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \***************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@near-js/accounts/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \*****************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/@near-js/keystores-browser/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \**************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \*********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@near-js/wallet-account/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/error_messages.json":
/*!*********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/error_messages.json ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"GasLimitExceeded":"Exceeded the maximum amount of gas allowed to burn per contract","MethodEmptyName":"Method name is empty","WasmerCompileError":"Wasmer compilation error: {{msg}}","GuestPanic":"Smart contract panicked: {{panic_msg}}","Memory":"Error creating Wasm memory","GasExceeded":"Exceeded the prepaid gas","MethodUTF8Error":"Method name is not valid UTF8 string","BadUTF16":"String encoding is bad UTF-16 sequence","WasmTrap":"WebAssembly trap: {{msg}}","GasInstrumentation":"Gas instrumentation failed or contract has denied instructions.","InvalidPromiseIndex":"{{promise_idx}} does not correspond to existing promises","InvalidPromiseResultIndex":"Accessed invalid promise result index: {{result_idx}}","Deserialization":"Error happened while deserializing the module","MethodNotFound":"Contract method is not found","InvalidRegisterId":"Accessed invalid register id: {{register_id}}","InvalidReceiptIndex":"VM Logic returned an invalid receipt index: {{receipt_index}}","EmptyMethodName":"Method name is empty in contract call","CannotReturnJointPromise":"Returning joint promise is currently prohibited","StackHeightInstrumentation":"Stack instrumentation failed","CodeDoesNotExist":"Cannot find contract code for account {{account_id}}","MethodInvalidSignature":"Invalid method signature","IntegerOverflow":"Integer overflow happened during contract execution","MemoryAccessViolation":"MemoryAccessViolation","InvalidIteratorIndex":"Iterator index {{iterator_index}} does not exist","IteratorWasInvalidated":"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie","InvalidAccountId":"VM Logic returned an invalid account id","Serialization":"Error happened while serializing the module","CannotAppendActionToJointPromise":"Actions can only be appended to non-joint promise.","InternalMemoryDeclared":"Internal memory declaration has been found in the module","Instantiate":"Error happened during instantiation","ProhibitedInView":"{{method_name}} is not allowed in view calls","InvalidMethodName":"VM Logic returned an invalid method name","BadUTF8":"String encoding is bad UTF-8 sequence","BalanceExceeded":"Exceeded the account balance","LinkError":"Wasm contract link error: {{msg}}","InvalidPublicKey":"VM Logic provided an invalid public key","ActorNoPermission":"Actor {{actor_id}} doesn\'t have permission to account {{account_id}} to complete the action","LackBalanceForState":"The account {{account_id}} wouldn\'t have enough balance to cover storage, required to have {{amount}} yoctoNEAR more","ReceiverMismatch":"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.","CostOverflow":"Transaction gas or balance cost is too high","InvalidSignature":"Transaction is not signed with the given public key","AccessKeyNotFound":"Signer \\"{{account_id}}\\" doesn\'t have access key with the given public_key {{public_key}}","NotEnoughBalance":"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}","NotEnoughAllowance":"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}","Expired":"Transaction has expired","DeleteAccountStaking":"Account {{account_id}} is staking and can not be deleted","SignerDoesNotExist":"Signer {{signer_id}} does not exist","TriesToStake":"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}","AddKeyAlreadyExists":"The public key {{public_key}} is already used for an existing access key","InvalidSigner":"Invalid signer account ID {{signer_id}} according to requirements","CreateAccountNotAllowed":"The new account_id {{account_id}} can\'t be created by {{predecessor_id}}","RequiresFullAccess":"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key","TriesToUnstake":"Account {{account_id}} is not yet staked, but tried to unstake","InvalidNonce":"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}","AccountAlreadyExists":"Can\'t create a new account {{account_id}}, because it already exists","InvalidChain":"Transaction parent block hash doesn\'t belong to the current chain","AccountDoesNotExist":"Can\'t complete the action because account {{account_id}} doesn\'t exist","AccessKeyDoesNotExist":"Can\'t complete the action because access key {{public_key}} doesn\'t exist","MethodNameMismatch":"Transaction method name {{method_name}} isn\'t allowed by the access key","DeleteAccountHasRent":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent","DeleteAccountHasEnoughBalance":"Account {{account_id}} can\'t be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it\'s storage","InvalidReceiver":"Invalid receiver account ID {{receiver_id}} according to requirements","DeleteKeyDoesNotExist":"Account {{account_id}} tries to remove an access key that doesn\'t exist","Timeout":"Timeout exceeded","Closed":"Connection closed","ShardCongested":"Shard {{shard_id}} rejected the transaction due to congestion level {{congestion_level}}, try again later","ShardStuck":"Shard {{shard_id}} rejected the transaction because it missed {{missed_chunks}} chunks and needs to recover before accepting new transactions, try again later"}');

/***/ }),

/***/ "./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json":
/*!***********************************************************************************************!*\
  !*** ./node_modules/near-api-js/node_modules/@near-js/utils/lib/errors/rpc_error_schema.json ***!
  \***********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"schema":{"AccessKeyNotFound":{"name":"AccessKeyNotFound","subtypes":[],"props":{"account_id":"","public_key":""}},"AccountAlreadyExists":{"name":"AccountAlreadyExists","subtypes":[],"props":{"account_id":""}},"AccountDoesNotExist":{"name":"AccountDoesNotExist","subtypes":[],"props":{"account_id":""}},"ActionError":{"name":"ActionError","subtypes":["AccountAlreadyExists","AccountDoesNotExist","CreateAccountOnlyByRegistrar","CreateAccountNotAllowed","ActorNoPermission","DeleteKeyDoesNotExist","AddKeyAlreadyExists","DeleteAccountStaking","LackBalanceForState","TriesToUnstake","TriesToStake","InsufficientStake","FunctionCallError","NewReceiptValidationError","OnlyImplicitAccountCreationAllowed","DeleteAccountWithLargeState","DelegateActionInvalidSignature","DelegateActionSenderDoesNotMatchTxReceiver","DelegateActionExpired","DelegateActionAccessKeyError","DelegateActionInvalidNonce","DelegateActionNonceTooLarge"],"props":{"index":""}},"ActionsValidationError":{"name":"ActionsValidationError","subtypes":["DeleteActionMustBeFinal","TotalPrepaidGasExceeded","TotalNumberOfActionsExceeded","AddKeyMethodNamesNumberOfBytesExceeded","AddKeyMethodNameLengthExceeded","IntegerOverflow","InvalidAccountId","ContractSizeExceeded","FunctionCallMethodNameLengthExceeded","FunctionCallArgumentsLengthExceeded","UnsuitableStakingKey","FunctionCallZeroAttachedGas","DelegateActionMustBeOnlyOne","UnsupportedProtocolFeature"],"props":{}},"ActorNoPermission":{"name":"ActorNoPermission","subtypes":[],"props":{"account_id":"","actor_id":""}},"AddKeyAlreadyExists":{"name":"AddKeyAlreadyExists","subtypes":[],"props":{"account_id":"","public_key":""}},"AddKeyMethodNameLengthExceeded":{"name":"AddKeyMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"AddKeyMethodNamesNumberOfBytesExceeded":{"name":"AddKeyMethodNamesNumberOfBytesExceeded","subtypes":[],"props":{"limit":"","total_number_of_bytes":""}},"AltBn128InvalidInput":{"name":"AltBn128InvalidInput","subtypes":[],"props":{"msg":""}},"BadUTF16":{"name":"BadUTF16","subtypes":[],"props":{}},"BadUTF8":{"name":"BadUTF8","subtypes":[],"props":{}},"BalanceExceeded":{"name":"BalanceExceeded","subtypes":[],"props":{}},"BalanceMismatchError":{"name":"BalanceMismatchError","subtypes":[],"props":{"final_accounts_balance":"","final_postponed_receipts_balance":"","forwarded_buffered_receipts_balance":"","incoming_receipts_balance":"","incoming_validator_rewards":"","initial_accounts_balance":"","initial_postponed_receipts_balance":"","new_buffered_receipts_balance":"","new_delayed_receipts_balance":"","other_burnt_amount":"","outgoing_receipts_balance":"","processed_delayed_receipts_balance":"","slashed_burnt_amount":"","tx_burnt_amount":""}},"CallIndirectOOB":{"name":"CallIndirectOOB","subtypes":[],"props":{}},"CannotAppendActionToJointPromise":{"name":"CannotAppendActionToJointPromise","subtypes":[],"props":{}},"CannotReturnJointPromise":{"name":"CannotReturnJointPromise","subtypes":[],"props":{}},"CodeDoesNotExist":{"name":"CodeDoesNotExist","subtypes":[],"props":{"account_id":""}},"CompilationError":{"name":"CompilationError","subtypes":["CodeDoesNotExist","PrepareError","WasmerCompileError"],"props":{}},"ContractSizeExceeded":{"name":"ContractSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"CostOverflow":{"name":"CostOverflow","subtypes":[],"props":{}},"CreateAccountNotAllowed":{"name":"CreateAccountNotAllowed","subtypes":[],"props":{"account_id":"","predecessor_id":""}},"CreateAccountOnlyByRegistrar":{"name":"CreateAccountOnlyByRegistrar","subtypes":[],"props":{"account_id":"","predecessor_id":"","registrar_account_id":""}},"DelegateActionExpired":{"name":"DelegateActionExpired","subtypes":[],"props":{}},"DelegateActionInvalidNonce":{"name":"DelegateActionInvalidNonce","subtypes":[],"props":{"ak_nonce":"","delegate_nonce":""}},"DelegateActionInvalidSignature":{"name":"DelegateActionInvalidSignature","subtypes":[],"props":{}},"DelegateActionMustBeOnlyOne":{"name":"DelegateActionMustBeOnlyOne","subtypes":[],"props":{}},"DelegateActionNonceTooLarge":{"name":"DelegateActionNonceTooLarge","subtypes":[],"props":{"delegate_nonce":"","upper_bound":""}},"DelegateActionSenderDoesNotMatchTxReceiver":{"name":"DelegateActionSenderDoesNotMatchTxReceiver","subtypes":[],"props":{"receiver_id":"","sender_id":""}},"DeleteAccountStaking":{"name":"DeleteAccountStaking","subtypes":[],"props":{"account_id":""}},"DeleteAccountWithLargeState":{"name":"DeleteAccountWithLargeState","subtypes":[],"props":{"account_id":""}},"DeleteActionMustBeFinal":{"name":"DeleteActionMustBeFinal","subtypes":[],"props":{}},"DeleteKeyDoesNotExist":{"name":"DeleteKeyDoesNotExist","subtypes":[],"props":{"account_id":"","public_key":""}},"DepositWithFunctionCall":{"name":"DepositWithFunctionCall","subtypes":[],"props":{}},"Deprecated":{"name":"Deprecated","subtypes":[],"props":{"method_name":""}},"Deserialization":{"name":"Deserialization","subtypes":[],"props":{}},"ECRecoverError":{"name":"ECRecoverError","subtypes":[],"props":{"msg":""}},"Ed25519VerifyInvalidInput":{"name":"Ed25519VerifyInvalidInput","subtypes":[],"props":{"msg":""}},"EmptyMethodName":{"name":"EmptyMethodName","subtypes":[],"props":{}},"Expired":{"name":"Expired","subtypes":[],"props":{}},"FunctionCallArgumentsLengthExceeded":{"name":"FunctionCallArgumentsLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallMethodNameLengthExceeded":{"name":"FunctionCallMethodNameLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"FunctionCallZeroAttachedGas":{"name":"FunctionCallZeroAttachedGas","subtypes":[],"props":{}},"GasExceeded":{"name":"GasExceeded","subtypes":[],"props":{}},"GasInstrumentation":{"name":"GasInstrumentation","subtypes":[],"props":{}},"GasLimitExceeded":{"name":"GasLimitExceeded","subtypes":[],"props":{}},"GenericTrap":{"name":"GenericTrap","subtypes":[],"props":{}},"GuestPanic":{"name":"GuestPanic","subtypes":[],"props":{"panic_msg":""}},"HostError":{"name":"HostError","subtypes":["BadUTF16","BadUTF8","GasExceeded","GasLimitExceeded","BalanceExceeded","EmptyMethodName","GuestPanic","IntegerOverflow","InvalidPromiseIndex","CannotAppendActionToJointPromise","CannotReturnJointPromise","InvalidPromiseResultIndex","InvalidRegisterId","IteratorWasInvalidated","MemoryAccessViolation","InvalidReceiptIndex","InvalidIteratorIndex","InvalidAccountId","InvalidMethodName","InvalidPublicKey","ProhibitedInView","NumberOfLogsExceeded","KeyLengthExceeded","ValueLengthExceeded","TotalLogLengthExceeded","NumberPromisesExceeded","NumberInputDataDependenciesExceeded","ReturnedValueLengthExceeded","ContractSizeExceeded","Deprecated","ECRecoverError","AltBn128InvalidInput","Ed25519VerifyInvalidInput"],"props":{}},"IllegalArithmetic":{"name":"IllegalArithmetic","subtypes":[],"props":{}},"IncorrectCallIndirectSignature":{"name":"IncorrectCallIndirectSignature","subtypes":[],"props":{}},"IndirectCallToNull":{"name":"IndirectCallToNull","subtypes":[],"props":{}},"Instantiate":{"name":"Instantiate","subtypes":[],"props":{}},"InsufficientStake":{"name":"InsufficientStake","subtypes":[],"props":{"account_id":"","minimum_stake":"","stake":""}},"IntegerOverflow":{"name":"IntegerOverflow","subtypes":[],"props":{}},"InternalMemoryDeclared":{"name":"InternalMemoryDeclared","subtypes":[],"props":{}},"InvalidAccessKeyError":{"name":"InvalidAccessKeyError","subtypes":["AccessKeyNotFound","ReceiverMismatch","MethodNameMismatch","RequiresFullAccess","NotEnoughAllowance","DepositWithFunctionCall"],"props":{}},"InvalidAccountId":{"name":"InvalidAccountId","subtypes":[],"props":{}},"InvalidChain":{"name":"InvalidChain","subtypes":[],"props":{}},"InvalidDataReceiverId":{"name":"InvalidDataReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidIteratorIndex":{"name":"InvalidIteratorIndex","subtypes":[],"props":{"iterator_index":""}},"InvalidMethodName":{"name":"InvalidMethodName","subtypes":[],"props":{}},"InvalidNonce":{"name":"InvalidNonce","subtypes":[],"props":{"ak_nonce":"","tx_nonce":""}},"InvalidPredecessorId":{"name":"InvalidPredecessorId","subtypes":[],"props":{"account_id":""}},"InvalidPromiseIndex":{"name":"InvalidPromiseIndex","subtypes":[],"props":{"promise_idx":""}},"InvalidPromiseResultIndex":{"name":"InvalidPromiseResultIndex","subtypes":[],"props":{"result_idx":""}},"InvalidPublicKey":{"name":"InvalidPublicKey","subtypes":[],"props":{}},"InvalidReceiptIndex":{"name":"InvalidReceiptIndex","subtypes":[],"props":{"receipt_index":""}},"InvalidReceiverId":{"name":"InvalidReceiverId","subtypes":[],"props":{"account_id":""}},"InvalidRegisterId":{"name":"InvalidRegisterId","subtypes":[],"props":{"register_id":""}},"InvalidSignature":{"name":"InvalidSignature","subtypes":[],"props":{}},"InvalidSignerId":{"name":"InvalidSignerId","subtypes":[],"props":{"account_id":""}},"InvalidTxError":{"name":"InvalidTxError","subtypes":["InvalidAccessKeyError","InvalidSignerId","SignerDoesNotExist","InvalidNonce","NonceTooLarge","InvalidReceiverId","InvalidSignature","NotEnoughBalance","LackBalanceForState","CostOverflow","InvalidChain","Expired","ActionsValidation","TransactionSizeExceeded","StorageError","ShardCongested","ShardStuck"],"props":{}},"IteratorWasInvalidated":{"name":"IteratorWasInvalidated","subtypes":[],"props":{"iterator_index":""}},"KeyLengthExceeded":{"name":"KeyLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"LackBalanceForState":{"name":"LackBalanceForState","subtypes":[],"props":{"account_id":"","amount":""}},"Memory":{"name":"Memory","subtypes":[],"props":{}},"MemoryAccessViolation":{"name":"MemoryAccessViolation","subtypes":[],"props":{}},"MemoryOutOfBounds":{"name":"MemoryOutOfBounds","subtypes":[],"props":{}},"MethodEmptyName":{"name":"MethodEmptyName","subtypes":[],"props":{}},"MethodInvalidSignature":{"name":"MethodInvalidSignature","subtypes":[],"props":{}},"MethodNameMismatch":{"name":"MethodNameMismatch","subtypes":[],"props":{"method_name":""}},"MethodNotFound":{"name":"MethodNotFound","subtypes":[],"props":{}},"MethodResolveError":{"name":"MethodResolveError","subtypes":["MethodEmptyName","MethodNotFound","MethodInvalidSignature"],"props":{}},"MisalignedAtomicAccess":{"name":"MisalignedAtomicAccess","subtypes":[],"props":{}},"NonceTooLarge":{"name":"NonceTooLarge","subtypes":[],"props":{"tx_nonce":"","upper_bound":""}},"NotEnoughAllowance":{"name":"NotEnoughAllowance","subtypes":[],"props":{"account_id":"","allowance":"","cost":"","public_key":""}},"NotEnoughBalance":{"name":"NotEnoughBalance","subtypes":[],"props":{"balance":"","cost":"","signer_id":""}},"NumberInputDataDependenciesExceeded":{"name":"NumberInputDataDependenciesExceeded","subtypes":[],"props":{"limit":"","number_of_input_data_dependencies":""}},"NumberOfLogsExceeded":{"name":"NumberOfLogsExceeded","subtypes":[],"props":{"limit":""}},"NumberPromisesExceeded":{"name":"NumberPromisesExceeded","subtypes":[],"props":{"limit":"","number_of_promises":""}},"OnlyImplicitAccountCreationAllowed":{"name":"OnlyImplicitAccountCreationAllowed","subtypes":[],"props":{"account_id":""}},"PrepareError":{"name":"PrepareError","subtypes":["Serialization","Deserialization","InternalMemoryDeclared","GasInstrumentation","StackHeightInstrumentation","Instantiate","Memory","TooManyFunctions","TooManyLocals"],"props":{}},"ProhibitedInView":{"name":"ProhibitedInView","subtypes":[],"props":{"method_name":""}},"ReceiptSizeExceeded":{"name":"ReceiptSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"ReceiptValidationError":{"name":"ReceiptValidationError","subtypes":["InvalidPredecessorId","InvalidReceiverId","InvalidSignerId","InvalidDataReceiverId","ReturnedValueLengthExceeded","NumberInputDataDependenciesExceeded","ActionsValidation","ReceiptSizeExceeded"],"props":{}},"ReceiverMismatch":{"name":"ReceiverMismatch","subtypes":[],"props":{"ak_receiver":"","tx_receiver":""}},"RequiresFullAccess":{"name":"RequiresFullAccess","subtypes":[],"props":{}},"ReturnedValueLengthExceeded":{"name":"ReturnedValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"Serialization":{"name":"Serialization","subtypes":[],"props":{}},"ShardCongested":{"name":"ShardCongested","subtypes":[],"props":{"congestion_level":"","shard_id":""}},"ShardStuck":{"name":"ShardStuck","subtypes":[],"props":{"missed_chunks":"","shard_id":""}},"SignerDoesNotExist":{"name":"SignerDoesNotExist","subtypes":[],"props":{"signer_id":""}},"StackHeightInstrumentation":{"name":"StackHeightInstrumentation","subtypes":[],"props":{}},"StackOverflow":{"name":"StackOverflow","subtypes":[],"props":{}},"TooManyFunctions":{"name":"TooManyFunctions","subtypes":[],"props":{}},"TooManyLocals":{"name":"TooManyLocals","subtypes":[],"props":{}},"TotalLogLengthExceeded":{"name":"TotalLogLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"TotalNumberOfActionsExceeded":{"name":"TotalNumberOfActionsExceeded","subtypes":[],"props":{"limit":"","total_number_of_actions":""}},"TotalPrepaidGasExceeded":{"name":"TotalPrepaidGasExceeded","subtypes":[],"props":{"limit":"","total_prepaid_gas":""}},"TransactionSizeExceeded":{"name":"TransactionSizeExceeded","subtypes":[],"props":{"limit":"","size":""}},"TriesToStake":{"name":"TriesToStake","subtypes":[],"props":{"account_id":"","balance":"","locked":"","stake":""}},"TriesToUnstake":{"name":"TriesToUnstake","subtypes":[],"props":{"account_id":""}},"TxExecutionError":{"name":"TxExecutionError","subtypes":["ActionError","InvalidTxError"],"props":{}},"Unreachable":{"name":"Unreachable","subtypes":[],"props":{}},"UnsuitableStakingKey":{"name":"UnsuitableStakingKey","subtypes":[],"props":{"public_key":""}},"UnsupportedProtocolFeature":{"name":"UnsupportedProtocolFeature","subtypes":[],"props":{"protocol_feature":"","version":""}},"ValueLengthExceeded":{"name":"ValueLengthExceeded","subtypes":[],"props":{"length":"","limit":""}},"WasmTrap":{"name":"WasmTrap","subtypes":["Unreachable","IncorrectCallIndirectSignature","MemoryOutOfBounds","CallIndirectOOB","IllegalArithmetic","MisalignedAtomicAccess","IndirectCallToNull","StackOverflow","GenericTrap"],"props":{}},"WasmerCompileError":{"name":"WasmerCompileError","subtypes":[],"props":{"msg":""}},"Closed":{"name":"Closed","subtypes":[],"props":{}},"ServerError":{"name":"ServerError","subtypes":["TxExecutionError","Timeout","Closed"],"props":{}},"Timeout":{"name":"Timeout","subtypes":[],"props":{}}}}');

/***/ }),

/***/ "./node_modules/statuses/codes.json":
/*!******************************************!*\
  !*** ./node_modules/statuses/codes.json ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = /*#__PURE__*/JSON.parse('{"100":"Continue","101":"Switching Protocols","102":"Processing","103":"Early Hints","200":"OK","201":"Created","202":"Accepted","203":"Non-Authoritative Information","204":"No Content","205":"Reset Content","206":"Partial Content","207":"Multi-Status","208":"Already Reported","226":"IM Used","300":"Multiple Choices","301":"Moved Permanently","302":"Found","303":"See Other","304":"Not Modified","305":"Use Proxy","306":"(Unused)","307":"Temporary Redirect","308":"Permanent Redirect","400":"Bad Request","401":"Unauthorized","402":"Payment Required","403":"Forbidden","404":"Not Found","405":"Method Not Allowed","406":"Not Acceptable","407":"Proxy Authentication Required","408":"Request Timeout","409":"Conflict","410":"Gone","411":"Length Required","412":"Precondition Failed","413":"Payload Too Large","414":"URI Too Long","415":"Unsupported Media Type","416":"Range Not Satisfiable","417":"Expectation Failed","418":"I\'m a teapot","421":"Misdirected Request","422":"Unprocessable Entity","423":"Locked","424":"Failed Dependency","425":"Unordered Collection","426":"Upgrade Required","428":"Precondition Required","429":"Too Many Requests","431":"Request Header Fields Too Large","451":"Unavailable For Legal Reasons","500":"Internal Server Error","501":"Not Implemented","502":"Bad Gateway","503":"Service Unavailable","504":"Gateway Timeout","505":"HTTP Version Not Supported","506":"Variant Also Negotiates","507":"Insufficient Storage","508":"Loop Detected","509":"Bandwidth Limit Exceeded","510":"Not Extended","511":"Network Authentication Required"}');

/***/ })

});